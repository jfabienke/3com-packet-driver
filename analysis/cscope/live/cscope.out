cscope 15 $HOME/Development/3com-packet-driver/analysis/cscope/live -q 0000006101 0000949535
	@/Users/jvindahl/Development/3com-packet-driver/include/3c509b.h

38 #i‚de‡
_3C509B_H_


39 
	#_3C509B_H_


	)

41 
	~<°döt.h
>

48 
outb
(
uöt16_t
 
p‹t
, 
uöt8_t
 
vÆue
);

49 
outw
(
uöt16_t
 
p‹t
, uöt16_à
vÆue
);

50 
uöt8_t
 
öb
(
uöt16_t
 
p‹t
);

51 
uöt16_t
 
öw
(uöt16_à
p‹t
);

55 
	m_3C509B_SUCCESS
 = 0,

56 
	m_3C509B_ERR_NO_CARD
,

57 
	m_3C509B_ERR_INIT_FAIL
,

58 
	m_3C509B_ERR_TX_TIMEOUT
,

59 
	m_3C509B_ERR_TX_ABORTED
,

60 
	m_3C509B_ERR_TX_UNDERRUN
,

61 
	m_3C509B_ERR_TX_JABBER
,

62 
	m_3C509B_ERR_RX_OVERRUN
,

63 
	m_3C509B_ERR_RX_CRC
,

64 
	m_3C509B_ERR_RX_FRAMING
,

65 
	m_3C509B_ERR_RX_LENGTH
,

66 
	m_3C509B_ERR_RX_OVERSIZE
,

67 
	m_3C509B_ERR_INVALID_PACKET
,

68 
	m_3C509B_ERR_RX_INCOMPLETE
,

69 
	m_3C509B_ERR_ADAPTER_FAILURE
,

70 
	m_3C509B_ERR_STATS_FULL
,

71 
	m_3C509B_ERR_OTHER


72 } 
	t_3c509b_îr‹_t
;

76 
	#_3C509B_MANUFACTURER_ID
 0x6D50

77 
	#_3C509B_PRODUCT_ID_509B
 0x5090

78 
	#_3C509B_PRODUCT_ID_MASK
 0xF0FF

79 
	#_3C509B_MAX_MTU
 1514

80 
	#_3C509B_MIN_PACKET_SIZE
 60

81 
	#_3C509B_BUFFER_SIZE
 0x2000

82 
	#_3C509B_IO_EXTENT
 16

83 
	#_3C509B_ID_PORT
 0x110

84 
	#_3C509B_RESIDENT_MEMORY_SIZE
 0x1000

85 

	)

89 
	#_3C509B_INIT_DELAY_LOOPS
 0x100

93 

	)

94 
	#_3C509B_EEPROM_READ_DELAY
 2000

95 
	#_3C509B_TX_TIMEOUT_LOOPS
 0x1000

96 

	)

97 
	#_3C509B_PIT_COUNTER_PORT
 0x40

98 

	)

101 
	#_3C509B_WINDOW_0
 0

102 
	#_3C509B_WINDOW_1
 1

103 
	#_3C509B_WINDOW_2
 2

104 
	#_3C509B_WINDOW_4
 4

105 
	#_3C509B_WINDOW_6
 6

106 

	)

115 
	#_3C509B_COMMAND_REG
 0x0E

116 
	#_3C509B_STATUS_REG
 0x0E

117 

	)

123 
	#_3C509B_CMD_TOTAL_RESET
 (0 << 11)

124 
	#_3C509B_CMD_SELECT_WINDOW
 (1 << 11)

125 
	#_3C509B_CMD_START_COAX
 (2 << 11)

126 
	#_3C509B_CMD_RX_DISABLE
 (3 << 11)

127 
	#_3C509B_CMD_RX_ENABLE
 (4 << 11)

128 
	#_3C509B_CMD_RX_RESET
 (5 << 11)

129 
	#_3C509B_CMD_RX_DISCARD
 (8 << 11)

130 
	#_3C509B_CMD_TX_ENABLE
 (9 << 11)

131 
	#_3C509B_CMD_TX_DISABLE
 (10 << 11)

132 
	#_3C509B_CMD_TX_RESET
 (11 << 11)

133 
	#_3C509B_CMD_ACK_INTR
 (13 << 11)

134 
	#_3C509B_CMD_SET_INTR_ENB
 (14 << 11)

135 
	#_3C509B_CMD_SET_STATUS_ENB
 (15 << 11)

136 
	#_3C509B_CMD_SET_RX_FILTER
 (16 << 11)

137 
	#_3C509B_CMD_SET_TX_THRESHOLD
 (18 << 11)

138 
	#_3C509B_CMD_SET_TX_START
 (19 << 11)

139 
	#_3C509B_CMD_STATS_ENABLE
 (21 << 11)

140 
	#_3C509B_CMD_STATS_DISABLE
 (22 << 11)

141 
	#_3C509B_CMD_STOP_COAX
 (23 << 11)

142 
	#_3C509B_CMD_POWER_UP
 (27 << 11)

143 
	#_3C509B_CMD_POWER_DOWN
 (28 << 11)

144 
	#_3C509B_CMD_POWER_AUTO
 (29 << 11)

145 

	)

149 
	#_3C509B_STATUS_INT_LATCH
 0x0001

150 
	#_3C509B_STATUS_ADAPTER_FAILURE
 0x0002

151 
	#_3C509B_STATUS_TX_COMPLETE
 0x0004

152 
	#_3C509B_STATUS_TX_AVAILABLE
 0x0008

153 
	#_3C509B_STATUS_RX_COMPLETE
 0x0010

154 
	#_3C509B_STATUS_RX_EARLY
 0x0020

155 
	#_3C509B_STATUS_INT_REQ
 0x0040

156 
	#_3C509B_STATUS_STATS_FULL
 0x0080

157 
	#_3C509B_STATUS_CMD_BUSY
 0x1000

158 

	)

161 
	#_3C509B_W0_CONFIG_CTRL
 0x04

162 
	#_3C509B_W0_ADDR_CONFIG
 0x06

163 
	#_3C509B_W0_IRQ
 0x08

164 
	#_3C509B_EEPROM_CMD
 0x0A

165 
	#_3C509B_EEPROM_DATA
 0x0C

166 

	)

168 
	#_3C509B_EEPROM_READ
 0x80

169 
	#_3C509B_EEPROM_WRITE
 0x40

170 
	#_3C509B_EEPROM_ERASE
 0xC0

171 
	#_3C509B_EEPROM_EWENB
 0x30

172 
	#_3C509B_EEPROM_EWDIS
 0x00

173 

	)

176 
	#_3C509B_TX_FIFO
 0x00

177 
	#_3C509B_RX_FIFO
 0x00

178 
	#_3C509B_RX_STATUS
 0x08

179 
	#_3C509B_TX_STATUS
 0x0B

180 
	#_3C509B_TX_FREE
 0x0C

181 

	)

184 
	#_3C509B_RX_FILTER_STATION
 0x0001

185 
	#_3C509B_RX_FILTER_MULTICAST
 0x0002

186 
	#_3C509B_RX_FILTER_BROADCAST
 0x0004

187 
	#_3C509B_RX_FILTER_PROMISCUOUS
 0x0008

189 

	)

191 
	#_3C509B_IMASK_ADAPTER_FAILURE
 
_3C509B_STATUS_ADAPTER_FAILURE


	)

192 
	#_3C509B_IMASK_TX_COMPLETE
 
_3C509B_STATUS_TX_COMPLETE


	)

193 
	#_3C509B_IMASK_TX_AVAILABLE
 
_3C509B_STATUS_TX_AVAILABLE


	)

194 
	#_3C509B_IMASK_RX_COMPLETE
 
_3C509B_STATUS_RX_COMPLETE


	)

195 
	#_3C509B_IMASK_RX_EARLY
 
_3C509B_STATUS_RX_EARLY


	)

196 
	#_3C509B_IMASK_STATS_FULL
 
_3C509B_STATUS_STATS_FULL


	)

197 
	#_3C509B_IMASK_INT_LATCHED
 
_3C509B_STATUS_INT_LATCH


198 
	#_3C509B_IMASK_ALL
 0x00bf

199 

	)

201 
	#_3C509B_RXSTAT_INCOMPLETE
 0x8000

202 
	#_3C509B_RXSTAT_ERROR
 0x4000

203 
	#_3C509B_RXSTAT_LEN_MASK
 0x07FF

204 

	)

206 
	#_3C509B_RXERR_OVERRUN
 0x0000

207 
	#_3C509B_RXERR_OVERSIZE
 0x0800

208 
	#_3C509B_RXERR_DRIBBLE
 0x1000

209 
	#_3C509B_RXERR_RUNT
 0x1800

210 
	#_3C509B_RXERR_CRC
 0x2800

211 
	#_3C509B_RXERR_FRAMING
 0x2000

212 
	#_3C509B_RXERR_LENGTH
 0x1800

213 

	)

216 
	#_3C509B_TXSTAT_COMPLETE
 0x80

217 
	#_3C509B_TXSTAT_INTERRUPT
 0x40

218 
	#_3C509B_TXSTAT_JABBER
 0x20

219 
	#_3C509B_TXSTAT_UNDERRUN
 0x10

220 
	#_3C509B_TXSTAT_MAX_COLLISIONS
 0x08

221 
	#_3C509B_TXSTAT_STATUS_OVERFLOW
 0x04

222 
	#_3C509B_TXSTAT_RX_STATUS_OVERFLOW
 0x02

223 
	#_3C509B_TXSTAT_RX_OVERRUN
 0x01

224 

	)

226 
	#_3C509B_TXSTAT_ERROR_MASK
 0x3F

227 
	#_3C509B_TXSTAT_SERIOUS_ERROR_MASK
 0x3C

228 
	#_3C509B_TXSTAT_OVERFLOW_MASK
 0x06

229 

	)

237 
	#_3C509B_MEDIA_CTRL
 0x0A

238 
	#_3C509B_W4_NETDIAG
 0x06

239 

	)

242 
	#_3C509B_MEDIA_SQE_DISABLE
 0x8000

243 
	#_3C509B_MEDIA_COLLISION_DETECT
 0x2000

244 
	#_3C509B_MEDIA_COLLISION_SOURCE
 0x1000

245 
	#_3C509B_MEDIA_UTP_DISABLE
 0x0800

246 
	#_3C509B_MEDIA_JABBER_GUARD_DISABLE
 0x0400

247 
	#_3C509B_MEDIA_GUARD_TIMER_DISABLE
 0x0200

248 
	#_3C509B_MEDIA_LINK_BEAT_DISABLE
 0x0080

249 
	#_3C509B_MEDIA_JABBER_DISABLE
 0x0040

250 
	#_3C509B_MEDIA_XCVR_MASK
 0x003C

251 
	#_3C509B_MEDIA_XCVR_SHIFT
 2

252 

	)

254 
	#_3C509B_XCVR_AUTO
 (0x0 << 2)

255 
	#_3C509B_XCVR_10BASE_T
 (0x0 << 2)

256 
	#_3C509B_XCVR_AUI_EXT
 (0x1 << 2)

257 
	#_3C509B_XCVR_10BASE2
 (0x3 << 2)

258 
	#_3C509B_XCVR_INTERNAL
 (0x8 << 2)

259 

	)

262 
	#_3C509B_NETDIAG_ASIC_REVMASK
 0xF000

263 
	#_3C509B_NETDIAG_ASIC_REVSHIFT
 12

264 
	#_3C509B_NETDIAG_UPPER_BYTES_OK
 0x0800

265 
	#_3C509B_NETDIAG_STATS_ENABLED
 0x0400

266 
	#_3C509B_NETDIAG_RX_ENABLED
 0x0200

267 
	#_3C509B_NETDIAG_TX_ENABLED
 0x0100

268 
	#_3C509B_NETDIAG_EXTERNAL_LOOP
 0x0080

269 
	#_3C509B_NETDIAG_INTERNAL_LOOP
 0x0040

270 
	#_3C509B_NETDIAG_FIFO_LOOPBACK
 0x0020

271 
	#_3C509B_NETDIAG_MAC_LOOPBACK
 0x0010

272 
	#_3C509B_NETDIAG_ENDEC_LOOPBACK
 0x0008

274 

	)

278 
	#_3C509B_W6_CARRIER_LOST
 0x00

279 
	#_3C509B_W6_SQE_ERRORS
 0x01

280 
	#_3C509B_W6_MULTIPLE_COLLS
 0x02

281 
	#_3C509B_W6_SINGLE_COLLS
 0x03

282 
	#_3C509B_W6_LATE_COLLS
 0x04

283 
	#_3C509B_W6_RX_OVERRUNS
 0x05

284 
	#_3C509B_W6_GOOD_TX
 0x06

285 
	#_3C509B_W6_GOOD_RX
 0x07

286 
	#_3C509B_W6_TX_DEFERRALS
 0x08

287 
	#_3C509B_W6_RX_OCTETS_LO
 0x0A

288 
	#_3C509B_W6_TX_OCTETS_LO
 0x0C

289 

	)

292 
	#_3C509B_ID_GLOBAL_RESET
 0xC0

293 
	#_3C509B_SET_TAG_REGISTER
 0xD0

294 
	#_3C509B_TEST_TAG_REGISTER
 0xD8

295 
	#_3C509B_ACTIVATE_AND_SET_IO
 0xE0

296 
	#_3C509B_ACTIVATE_VULCAN
 0xFF

297 

	)

302 
	#_3C509B_EEPROM_STATION_ADDR_LO
 0x00

303 
	#_3C509B_EEPROM_STATION_ADDR_MID
 0x01

304 
	#_3C509B_EEPROM_STATION_ADDR_HI
 0x02

305 
	#_3C509B_EEPROM_PRODUCT_ID
 0x03

306 
	#_3C509B_EEPROM_MFG_DATE
 0x04

307 
	#_3C509B_EEPROM_MFG_DIVISION
 0x05

308 
	#_3C509B_EEPROM_MFG_PRODUCT
 0x06

309 
	#_3C509B_EEPROM_MFG_ID
 0x07

310 
	#_3C509B_EEPROM_ADDR_CONFIG
 0x08

311 
	#_3C509B_EEPROM_RESOURCE_CONFIG
 0x09

312 
	#_3C509B_EEPROM_OEM_NODE_ADDR_LO
 0x0A

313 
	#_3C509B_EEPROM_OEM_NODE_ADDR_MID
 0x0B

314 
	#_3C509B_EEPROM_OEM_NODE_ADDR_HI
 0x0C

315 
	#_3C509B_EEPROM_SW_CONFIG_INFO
 0x0D

316 
	#_3C509B_EEPROM_CHECKSUM
 0x0F

317 

	)

319 
	#_3C509B_CONFIG_XCVR_MASK
 0x4000

320 
	#_3C509B_CONFIG_XCVR_SHIFT
 14

321 
	#_3C509B_CONFIG_AUTO_SELECT
 0x0100

322 
	#_3C509B_CONFIG_FULL_DUPLEX
 0x0020

323 

	)

325 
	#_3C509B_EEPROM_XCVR_MASK
 0xC000

326 
	#_3C509B_EEPROM_XCVR_SHIFT
 14

327 
	#_3C509B_EEPROM_AUTO_SELECT
 0x0100

328 
	#_3C509B_EEPROM_FULL_DUPLEX
 0x0020

329 

	)

333 
	#_3C509B_EEPROM_BUSY_BIT
 0x8000

334 
	#_3C509B_EEPROM_CMD_PORT
 0x0A

335 
	#_3C509B_EEPROM_DATA_PORT
 0x0C

336 
	#_3C509B_EEPROM_DELAY_US
 162

337 
	#_3C509B_EEPROM_TIMEOUT_MS
 1

338 

	)

340 
	#_3C509B_ISA_IO_DELAY
(Ë
	`öb
(0x80)

	)

343 
	#_3C509B_DELAY_US
(
n
) { \

344 
uöt16_t
 
_lo›s
 = (
n
) / 3; \

345 
_lo›s
--Ë
	`_3C509B_ISA_IO_DELAY
(); \

346 }

	)

349 
	#_3C509B_ACK_INTERRUPT
(
ba£
, 
mask
) \

350 
	`outw
((
uöt16_t
)((
ba£
Ë+ 
_3C509B_COMMAND_REG
), (uöt16_t)(
_3C509B_CMD_ACK_INTR
 | (
mask
)))

	)

353 
	#_3C509B_SEND_EOI_MASTER
(Ë
	`outb
(0x20, 0x20)

354 
	#_3C509B_SEND_EOI_SLAVE
(Ë
	`outb
(0xA0, 0x20)

355 

	)

357 
	#_3C509B_TX_FIFO_PORT
 0x00

358 
	#_3C509B_RX_FIFO_PORT
 0x00

359 
	#_3C509B_TX_FREE_PORT
 0x0C

360 
	#_3C509B_RX_STATUS_PORT
 0x08

361 
	#_3C509B_TX_STATUS_PORT
 0x0B

362 

	)

364 
	#_3C509B_CMD_MASK
 0xF800

365 
	#_3C509B_CMD_PARAM_MASK
 0x07FF

366 
	#_3C509B_MAKE_CMD
(
cmd
, 
∑øm
Ë((cmdË| (’¨amË& 
_3C509B_CMD_PARAM_MASK
))

	)

369 
	#_3C509B_WINDOW_CMD_PORT
 0x0E

370 
	#_3C509B_SELECT_WINDOW_DIRECT
(
ba£
, 
w
) \

371 
	`outw
((
uöt16_t
)((
ba£
Ë+ 
_3C509B_WINDOW_CMD_PORT
), (uöt16_t)(0x0800 | (
w
)))

	)

374 
	#_3C509B_MIN_PACKET_SIZE
 14

375 
	#_3C509B_MAX_PACKET_SIZE
 1514

376 

	)

378 
	#_3C509B_FLAG_CONFIGURED
 0x01

379 
	#_3C509B_FLAG_ENABLED
 0x02

380 
	#_3C509B_FLAG_PROMISCUOUS
 0x04

381 
	#_3C509B_FLAG_FULL_DUPLEX
 0x08

382 

	)

387 
	#_3C509B_SELECT_WINDOW
(
io_ba£
, 
wö
) \

388 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_COMMAND_REG
), (uöt16_t)(
_3C509B_CMD_SELECT_WINDOW
 | (
wö
)))

	)

391 
	#_3C509B_SET_MEDIA_10BASE_T
(
io_ba£
) do { \

392 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 4); \

393 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_MEDIA_CTRL
), 
_3C509B_XCVR_10BASE_T
); \

394 } 0)

	)

396 
	#_3C509B_SET_MEDIA_BNC
(
io_ba£
) do { \

397 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 4); \

398 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_MEDIA_CTRL
), 
_3C509B_XCVR_10BASE2
); \

399 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_COMMAND_REG
), 
_3C509B_CMD_START_COAX
); \

400 } 0)

	)

402 
	#_3C509B_SET_MEDIA_AUI
(
io_ba£
) do { \

403 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 4); \

404 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_MEDIA_CTRL
), 
_3C509B_XCVR_AUI_EXT
); \

405 } 0)

	)

408 
	#_3C509B_READ_XCVR_TYPE_FROM_EEPROM
(
io_ba£
, 
addr
) ({ \

409 
uöt16_t
 
c⁄fig
; \

410 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 0); \

411 
	`outw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_EEPROM_CMD
), 
_3C509B_EEPROM_READ
 | (
addr
)); \

412 dÿ{ 
c⁄fig
 = 
	`öw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_EEPROM_DATA
)); } \

413 
c⁄fig
 & 
_3C509B_EEPROM_BUSY_BIT
); \

414 ((
c⁄fig
 & 
_3C509B_EEPROM_XCVR_MASK
Ë>> 
_3C509B_EEPROM_XCVR_SHIFT
); \

415 })

	)

417 
	#_3C509B_GET_CURRENT_XCVR_TYPE
(
io_ba£
) ({ \

418 
uöt16_t
 
medü_˘æ
; \

419 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 4); \

420 
medü_˘æ
 = 
	`öw
((
uöt16_t
)(
io_ba£
 + 
_3C509B_MEDIA_CTRL
)); \

421 ((
medü_˘æ
 & 
_3C509B_MEDIA_XCVR_MASK
Ë>> 
_3C509B_MEDIA_XCVR_SHIFT
); \

422 })

	)

433 
£nd_∑ckë_dúe˘_pio
(c⁄° * 
°ack_buf„r
, 
uöt16_t
 
Àngth
, uöt16_à
io_ba£
);

441 
dúe˘_pio_outsw
(c⁄° * 
§c_buf„r
, 
uöt16_t
 
d°_p‹t
, uöt16_à
w‹d_cou¡
);

452 
£nd_∑ckë_dúe˘_pio_wôh_hódî
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
de°_mac
,

453 
uöt16_t
 
ëhîty≥
, c⁄° * 
∑ylﬂd
, uöt16_à
∑ylﬂd_Àn
);

	@/Users/jvindahl/Development/3com-packet-driver/include/3c515.h

11 #i‚de‡
_3C515_H_


12 
	#_3C515_H_


	)

14 
	~<comm⁄.h
>

17 
dma_‰agmít
 
	tdma_‰agmít_t
;

21 
	#_3C515_TX_PRODUCT_ID
 0x5051

22 
	#_3C515_TX_PRODUCT_ID_MASK
 0xF0FF

23 
	#_3C515_TX_MAX_MTU
 1514

24 
	#_3C515_TX_MIN_PACKET_SIZE
 60

25 
	#_3C515_TX_IO_EXTENT
 32

26 
	#_3C515_TX_TX_RING_SIZE
 16

27 
	#_3C515_TX_RX_RING_SIZE
 16

28 

	)

31 
	#_3C515_TX_WINDOW_0
 0

32 
	#_3C515_TX_WINDOW_1
 1

33 
	#_3C515_TX_WINDOW_2
 2

34 
	#_3C515_TX_WINDOW_3
 3

35 
	#_3C515_TX_WINDOW_4
 4

36 
	#_3C515_TX_WINDOW_6
 6

37 
	#_3C515_TX_WINDOW_7
 7

38 

	)

41 
	#_3C515_TX_COMMAND_REG
 0x0E

42 
	#_3C515_TX_STATUS_REG
 0x0E

43 

	)

48 
	#_3C515_TX_CMD_TOTAL_RESET
 (0 << 11)

49 
	#_3C515_TX_CMD_SELECT_WINDOW
 (1 << 11)

50 
	#_3C515_TX_CMD_START_COAX
 (2 << 11)

51 
	#_3C515_TX_CMD_RX_ENABLE
 (4 << 11)

52 
	#_3C515_TX_CMD_RX_DISABLE
 (3 << 11)

53 
	#_3C515_TX_CMD_RX_RESET
 (5 << 11)

54 
	#_3C515_TX_CMD_UP_STALL
 (6 << 11)

55 
	#_3C515_TX_CMD_UP_UNSTALL
 ((6 << 11) + 1)

56 
	#_3C515_TX_CMD_DOWN_STALL
 ((6 << 11) + 2)

57 
	#_3C515_TX_CMD_DOWN_UNSTALL
 ((6 << 11) + 3)

58 
	#_3C515_TX_CMD_RX_DISCARD
 (8 << 11)

59 
	#_3C515_TX_CMD_TX_ENABLE
 (9 << 11)

60 
	#_3C515_TX_CMD_TX_DISABLE
 (10 << 11)

61 
	#_3C515_TX_CMD_TX_RESET
 (11 << 11)

62 
	#_3C515_TX_CMD_FAKE_INTR
 (12 << 11)

63 
	#_3C515_TX_CMD_ACK_INTR
 (13 << 11)

64 
	#_3C515_TX_CMD_SET_INTR_ENB
 (14 << 11)

65 
	#_3C515_TX_CMD_SET_STATUS_ENB
 (15 << 11)

66 
	#_3C515_TX_CMD_SET_RX_FILTER
 (16 << 11)

67 
	#_3C515_TX_CMD_SET_RX_THRESHOLD
 (17 << 11)

68 
	#_3C515_TX_CMD_SET_TX_THRESHOLD
 (18 << 11)

69 
	#_3C515_TX_CMD_SET_TX_START
 (19 << 11)

70 
	#_3C515_TX_CMD_START_DMA_UP
 (20 << 11)

71 
	#_3C515_TX_CMD_START_DMA_DOWN
 ((20 << 11) + 1)

72 
	#_3C515_TX_CMD_STATS_ENABLE
 (21 << 11)

73 
	#_3C515_TX_CMD_STATS_DISABLE
 (22 << 11)

74 
	#_3C515_TX_CMD_STOP_COAX
 (23 << 11)

75 

	)

79 
	#_3C515_TX_STATUS_INT_LATCH
 0x0001

80 
	#_3C515_TX_STATUS_ADAPTER_FAILURE
 0x0002

81 
	#_3C515_TX_STATUS_TX_COMPLETE
 0x0004

82 
	#_3C515_TX_STATUS_TX_AVAILABLE
 0x0008

83 
	#_3C515_TX_STATUS_RX_COMPLETE
 0x0010

84 
	#_3C515_TX_STATUS_RX_EARLY
 0x0020

85 
	#_3C515_TX_STATUS_INT_REQ
 0x0040

86 
	#_3C515_TX_STATUS_STATS_FULL
 0x0080

87 
	#_3C515_TX_STATUS_DMA_DONE
 (1 << 8)

88 
	#_3C515_TX_STATUS_DOWN_COMPLETE
 (1 << 9)

89 
	#_3C515_TX_STATUS_UP_COMPLETE
 (1 << 10)

90 
	#_3C515_TX_STATUS_DMA_IN_PROGRESS
 (1 << 11)

91 
	#_3C515_TX_STATUS_CMD_IN_PROGRESS
 (1 << 12)

92 

	)

95 
	#_3C515_TX_IMASK_ADAPTER_FAILURE
 
_3C515_TX_STATUS_ADAPTER_FAILURE


	)

96 
	#_3C515_TX_IMASK_TX_COMPLETE
 
_3C515_TX_STATUS_TX_COMPLETE


	)

97 
	#_3C515_TX_IMASK_TX_AVAILABLE
 
_3C515_TX_STATUS_TX_AVAILABLE


	)

98 
	#_3C515_TX_IMASK_RX_COMPLETE
 
_3C515_TX_STATUS_RX_COMPLETE


	)

99 
	#_3C515_TX_IMASK_RX_EARLY
 
_3C515_TX_STATUS_RX_EARLY


	)

100 
	#_3C515_TX_IMASK_STATS_FULL
 
_3C515_TX_STATUS_STATS_FULL


	)

101 
	#_3C515_TX_IMASK_DMA_DONE
 
_3C515_TX_STATUS_DMA_DONE


	)

102 
	#_3C515_TX_IMASK_DOWN_COMPLETE
 
_3C515_TX_STATUS_DOWN_COMPLETE


	)

103 
	#_3C515_TX_IMASK_UP_COMPLETE
 
_3C515_TX_STATUS_UP_COMPLETE


	)

107 
	#_3C515_TX_RX_FILTER_STATION
 1

108 
	#_3C515_TX_RX_FILTER_MULTICAST
 2

109 
	#_3C515_TX_RX_FILTER_BROADCAST
 4

110 
	#_3C515_TX_RX_FILTER_PROM
 8

111 

	)

114 
	#_3C515_TX_W0_IRQ
 0x08

115 
	#_3C515_TX_W0_EEPROM_CMD
 0x200A

116 
	#_3C515_TX_W0_EEPROM_DATA
 0x200C

117 

	)

119 
	#_3C515_TX_EEPROM_READ
 0x80

120 
	#_3C515_TX_EEPROM_WRITE
 0x40

121 
	#_3C515_TX_EEPROM_ERASE
 0xC0

122 
	#_3C515_TX_EEPROM_EWENB
 0x30

123 
	#_3C515_TX_EEPROM_EWDIS
 0x00

124 

	)

126 
	#_3C515_TX_EEPROM_READ_DELAY
 162

127 

	)

129 
	eì¥om_off£t
 {

130 
	mPhysAddr01
 = 0,

131 
	mPhysAddr23
 = 1,

132 
	mPhysAddr45
 = 2,

133 
	mModñID
 = 3,

134 
	mEthîLök3ID
 = 7

138 
	excvr_ty≥s
 {

139 
	mXCVR_10ba£T
 = 0,

140 
	mXCVR_AUI
 = 1,

141 
	mXCVR_10ba£TO∆y
 = 2,

142 
	mXCVR_10ba£2
 = 3,

143 
	mXCVR_100ba£Tx
 = 4,

144 
	mXCVR_100ba£Fx
 = 5,

145 
	mXCVR_MII
 = 6,

146 
	mXCVR_DeÁu…
 = 8

150 
	#MAX_INTERRUPT_WORK
 32

151 
	#WAIT_TX_AVAIL
 200

152 
	#RX_COPYBREAK
 200

153 

	)

157 
	#_3C515_TX_DMA_UP_LIST_PTR
 0x38

158 
	#_3C515_TX_DMA_DOWN_LIST_PTR
 0x24

159 
	#_3C515_TX_DMA_UP_PKT_STATUS
 0x30

160 
	#_3C515_TX_DMA_DOWN_PKT_STATUS
 0x20

161 

	)

163 
	#_3C515_TX_CMD_DOWN_STALL
 0x5000

164 
	#_3C515_TX_CMD_DOWN_UNSTALL
 0x5002

165 
	#_3C515_TX_CMD_UP_STALL
 0x5100

166 
	#_3C515_TX_CMD_UP_UNSTALL
 0x5102

167 

	)

170 
	#_3C515_TX_PKT_STATUS
 0x400

171 
	#_3C515_TX_DOWN_LIST_PTR
 0x404

172 
	#_3C515_TX_FRAG_ADDR
 0x408

173 
	#_3C515_TX_FRAG_LEN
 0x40C

174 
	#_3C515_TX_TX_FREE_THRESHOLD
 0x40F

175 
	#_3C515_TX_UP_PKT_STATUS
 0x410

176 
	#_3C515_TX_UP_LIST_PTR
 0x418

177 

	)

179 
	#_3C515_TX_DMA_DOWN_PKT_STATUS
 0x20

180 

	)

182 
	#_3C515_TX_W7_UP_LIST_PTR
 0x418

183 
	#_3C515_TX_W7_DOWN_LIST_PTR
 0x404

184 
	#_3C515_TX_W7_DMA_CTRL
 0x400

185 
	#_3C515_TX_W7_UP_POLL
 0x41C

186 
	#_3C515_TX_W7_DOWN_POLL
 0x408

187 

	)

190 
uöt32_t
 
	m√xt
;

191 
uöt32_t
 
	m°©us
;

192 
uöt32_t
 
	maddr
;

193 
uöt32_t
 
	mÀngth
;

194 } 
	tdma_des¸ùt‹_t
;

197 
	#_3C515_TX_DMA_DESC_COMPLETE
 0x00008000

198 
	#_3C515_TX_DMA_DESC_ERROR
 0x00004000

199 
	#_3C515_TX_DMA_DESC_LAST
 0x00002000

200 
	#_3C515_TX_DMA_DESC_FIRST
 0x00001000

201 
	#_3C515_TX_DMA_DESC_DN_COMPLETE
 0x00010000

202 
	#_3C515_TX_DMA_DESC_UP_COMPLETE
 0x00020000

203 

	)

205 
	#_3C515_TX_ISA_IO_DELAY
(Ë
	`ouç
(0x80, 0)

206 
	#_3C515_TX_EEPROM_DELAY_US
 162

207 
	#_3C515_TX_RESET_DELAY_MS
 10

208 

	)

210 
	#_3C515_TX_ISA_DMA_MAX_ADDR
 0xFFFFFF

211 
	#_3C515_TX_ISA_DMA_BOUNDARY
 0x10000

212 
	#_3C515_TX_EEPROM_DELAY_US
 200

213 
	#_3C515_TX_RESET_DELAY_MS
 10

214 

	)

216 
	#_3C515_TX_PHYS_TO_SEGMENT
(
addr
Ë((
uöt16_t
)(◊ddrË>> 4))

	)

217 
	#_3C515_TX_PHYS_TO_OFFSET
(
addr
Ë((
uöt16_t
)(◊ddrË& 0x0F))

	)

218 
	#_3C515_TX_MAKE_PHYSICAL
(
£g
, 
off
Ë(((
uöt32_t
)(£gË<< 4Ë+ (
uöt16_t
)(off))

	)

221 
	#_3C515_TX_FLAG_BUS_MASTER
 0x01

222 
	#_3C515_TX_FLAG_100MBPS
 0x02

223 
	#_3C515_TX_FLAG_FULL_DUPLEX
 0x04

224 
	#_3C515_TX_FLAG_MII_XCVR
 0x08

225 
	#_3C515_TX_FLAG_AUTO_NEG
 0x10

226 

	)

229 
	#_3C515_TX_TX_FIFO
 0x10

230 
	#_3C515_TX_RX_FIFO
 0x10

231 
	#_3C515_TX_RX_STATUS
 0x18

232 
	#_3C515_TX_TX_STATUS
 0x1B

233 
	#_3C515_TX_TX_FREE
 0x1C

234 
	#_3C515_TX_RX_ERRORS
 0x14

235 
	#_3C515_TX_W1_TIMER
 0x1A

236 

	)

238 
	#_3C515_TX_RXSTAT_INCOMPLETE
 0x8000

239 
	#_3C515_TX_RXSTAT_ERROR
 0x4000

240 
	#_3C515_TX_RXSTAT_LEN_MASK
 0x1FFF

241 

	)

243 
	#_3C515_TX_RXERR_OVERRUN
 0x01

	)

244 
	#_3C515_TX_RXERR_LENGTH
 0x02

	)

245 
	#_3C515_TX_RXERR_FRAME
 0x04

	)

246 
	#_3C515_TX_RXERR_CRC
 0x08

	)

247 
	#_3C515_TX_RXERR_DRIBBLE
 0x10

	)

250 
	#_3C515_TX_TXSTAT_COMPLETE
 0x01

251 
	#_3C515_TX_TXSTAT_DEFERRED
 0x02

252 
	#_3C515_TX_TXSTAT_ABORTED
 0x04

253 
	#_3C515_TX_TXSTAT_SCOLL
 0x08

254 
	#_3C515_TX_TXSTAT_MCOLL
 0x10

255 
	#_3C515_TX_TXSTAT_UNDERRUN
 0x20

256 
	#_3C515_TX_TXSTAT_JABBER
 0x40

257 
	#_3C515_TX_TXSTAT_MAXCOLL
 0x80

258 

	)

265 
	#_3C515_TX_W3_CONFIG
 0x00

266 
	#_3C515_TX_W3_MAC_CTRL
 0x06

267 
	#_3C515_TX_W3_OPTIONS
 0x08

268 

	)

270 
	#_3C515_TX_RAM_SIZE
 0x00000007

271 
	#_3C515_TX_RAM_WIDTH
 0x00000008

272 
	#_3C515_TX_RAM_SPEED
 0x00000030

273 
	#_3C515_TX_ROM_SIZE
 0x000000C0

274 
	#_3C515_TX_RAM_SPLIT_SHIFT
 16

275 
	#_3C515_TX_RAM_SPLIT
 (3 << 
_3C515_TX_RAM_SPLIT_SHIFT
)

276 
	#_3C515_TX_XCVR_SHIFT
 20

277 
	#_3C515_TX_XCVR
 (7 << 
_3C515_TX_XCVR_SHIFT
)

278 
	#_3C515_TX_AUTOSELECT
 0x1000000

279 

	)

281 
	#_3C515_TX_FULL_DUPLEX_BIT
 0x20

282 

	)

285 
	#_3C515_TX_W4_NETDIAG
 0x06

286 
	#_3C515_TX_W4_MEDIA
 0x0A

287 
	#_3C515_TX_W4_MII_READ
 0x0800

288 
	#_3C515_TX_W4_MII_WRITE
 0x0A00

289 

	)

291 
	#_3C515_TX_MEDIA_SQE
 0x0008

292 
	#_3C515_TX_MEDIA_10TP
 0x00C0

293 
	#_3C515_TX_MEDIA_LNK
 0x0080

294 
	#_3C515_TX_MEDIA_LNKBEAT
 0x0800

295 

	)

298 
	#_3C515_TX_W6_TX_CARR_ERRS
 0x00

299 
	#_3C515_TX_W6_TX_HRTBT_ERRS
 0x01

300 
	#_3C515_TX_W6_TX_MULT_COLLS
 0x02

301 
	#_3C515_TX_W6_TX_TOT_COLLS
 0x03

302 
	#_3C515_TX_W6_TX_WIN_ERRS
 0x04

303 
	#_3C515_TX_W6_RX_FIFO_ERRS
 0x05

304 
	#_3C515_TX_W6_TX_PACKETS
 0x06

305 
	#_3C515_TX_W6_RX_PACKETS
 0x07

306 
	#_3C515_TX_W6_TX_DEFERRALS
 0x08

307 
	#_3C515_TX_W6_BADSSD
 0x0C

308 

	)

311 
	#_3C515_TX_W7_MASTER_ADDR
 0x00

312 
	#_3C515_TX_W7_MASTER_LEN
 0x06

313 
	#_3C515_TX_W7_MASTER_STATUS
 0x0C

314 

	)

316 
	#_3C515_TX_PKT_STATUS
 0x400

317 
	#_3C515_TX_DOWN_LIST_PTR
 0x404

318 
	#_3C515_TX_UP_LIST_PTR
 0x418

319 
	#_3C515_TX_FRAG_ADDR
 0x408

320 
	#_3C515_TX_FRAG_LEN
 0x40C

321 
	#_3C515_TX_TX_FREE_THRESH
 0x40F

322 
	#_3C515_TX_UP_PKT_STATUS
 0x410

323 

	)

327 
uöt32_t
 
	m√xt
;

328 
öt32_t
 
	m°©us
;

329 
uöt32_t
 
	maddr
;

330 
öt32_t
 
	mÀngth
;

331 } 
	t_3c515_tx_rx_desc_t
;

334 
uöt32_t
 
	m√xt
;

335 
öt32_t
 
	m°©us
;

336 
uöt32_t
 
	maddr
;

337 
öt32_t
 
	mÀngth
;

338 } 
	t_3c515_tx_tx_desc_t
;

343 
	#_3C515_TX_RX_DESC_COMPLETE
 0x80000000

344 
	#_3C515_TX_RX_DESC_ERROR
 0x40000000

345 
	#_3C515_TX_RX_DESC_LEN_MASK
 0x00001FFF

346 

	)

348 
	#RxDCom∂ëe
 0x00008000

349 
	#RxDEº‹
 0x00004000

350 

	)

352 
	#_3C515_TX_TX_DESC_COMPLETE
 0x80000000

353 
	#_3C515_TX_TX_DESC_ERROR
 0x40000000

354 
	#_3C515_TX_TX_DESC_LEN_MASK
 0x00001FFF

355 
	#_3C515_TX_TX_INTR_BIT
 0x20000000

356 

	)

360 
	#_3C515_TX_SELECT_WINDOW
(
io_ba£
, 
wö
) \

361 
	`outw
(
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SELECT_WINDOW
 | (
wö
))

	)

369 
uöt8_t
 
	mmedü_ty≥
;

370 
uöt8_t
 
	mdu∂ex_mode
;

371 
uöt8_t
 
	må™s˚ivî_ty≥
;

372 
uöt16_t
 
	mlök_•ìd
;

373 
uöt8_t
 
	mlök_a˘ive
;

374 
uöt8_t
 
	mauto_√gŸüti⁄
;

375 
uöt16_t
 
	madvîti£d_modes
;

376 } 
	tmedü_c⁄fig_t
;

383 
uöt16_t
 
	mio_ba£
;

384 
uöt8_t
 
	múq
;

387 
_3c515_tx_tx_desc_t
 *
	mtx_desc_rög
;

388 
_3c515_tx_rx_desc_t
 *
	mrx_desc_rög
;

389 
uöt32_t
 
	mtx_ödex
;

390 
uöt32_t
 
	mrx_ödex
;

391 
uöt8_t
 *
	mbuf„rs
;

394 
ì¥om_c⁄fig_t
 
	mì¥om_c⁄fig
;

395 
medü_c⁄fig_t
 
	mmedü_c⁄fig
;

398 
uöt8_t
 
	mh¨dw¨e_ªady
;

399 
uöt8_t
 
	mdrivî_a˘ive
;

400 
uöt32_t
 
	mœ°_c⁄fig_vÆid©i⁄
;

401 
uöt32_t
 
	mœ°_°©s_upd©e
;

402 
uöt32_t
 
	mœ°_lök_check
;

405 
uöt32_t
 
	mtx_∑ckës
;

406 
uöt32_t
 
	mrx_∑ckës
;

407 
uöt32_t
 
	mtx_byãs
;

408 
uöt32_t
 
	mrx_byãs
;

409 
uöt32_t
 
	mtx_îr‹s
;

410 
uöt32_t
 
	mrx_îr‹s
;

411 
uöt32_t
 
	mlök_ch™ges
;

412 
uöt32_t
 
	mc⁄fig_îr‹s
;

415 
uöt16_t
 
	möãºu±_mask
;

416 
uöt8_t
 
	mfuŒ_du∂ex_íabÀd
;

417 
uöt8_t
 
	mdma_íabÀd
;

418 
uöt8_t
 
	m°©s_íabÀd
;

419 
uöt8_t
 
	mlök_m⁄ô‹ög_íabÀd
;

422 *
	mîr‹_c⁄ãxt
;

423 } 
	tnic_c⁄ãxt_t
;

437 
com∂ëe_3c515_öôüliz©i⁄
(
nic_c⁄ãxt_t
 *
˘x
);

445 
_3c515_íh™˚d_öô
(
uöt16_t
 
io_ba£
, 
uöt8_t
 
úq
, uöt8_à
nic_ödex
);

450 
_3c515_íh™˚d_˛ónup
();

462 
_3c515_íh™˚d_£nd_∑ckë_sg
(c⁄° 
uöt8_t
 *
∑ckë_d©a
, 
uöt16_t
 
∑ckë_Àn
,

463 
dma_‰agmít_t
 *
‰agmíts
, 
uöt16_t
 
‰ag_cou¡
);

474 
_3c515_íh™˚d_¸óã_‰agmíts
(c⁄° 
uöt8_t
 *
∑ckë_d©a
, 
uöt16_t
 
∑ckë_Àn
,

475 
dma_‰agmít_t
 *
‰agmíts
, 
uöt16_t
 
max_‰agmíts
,

476 
uöt16_t
 
‰agmít_size
);

482 
_3c515_íh™˚d_ã°_sˇâî_g©hî
();

489 
≥riodic_c⁄figuøti⁄_vÆid©i⁄
(
nic_c⁄ãxt_t
 *
˘x
);

495 
nic_c⁄ãxt_t
 *
gë_3c515_c⁄ãxt
();

504 
gë_h¨dw¨e_c⁄fig_öfo
(
nic_c⁄ãxt_t
 *
˘x
, *
buf„r
, 
size_t
 
buf„r_size
);

513 
ªad_™d_∑r£_ì¥om
(
nic_c⁄ãxt_t
 *
˘x
);

521 
c⁄figuª_medü_ty≥
(
nic_c⁄ãxt_t
 *
˘x
, 
medü_c⁄fig_t
 *
medü
);

528 
c⁄figuª_fuŒ_du∂ex
(
nic_c⁄ãxt_t
 *
˘x
);

535 
£tup_öãºu±_mask
(
nic_c⁄ãxt_t
 *
˘x
);

542 
c⁄figuª_bus_ma°î_dma
(
nic_c⁄ãxt_t
 *
˘x
);

549 
íabÀ_h¨dw¨e_°©i°ics
(
nic_c⁄ãxt_t
 *
˘x
);

556 
£tup_lök_m⁄ô‹ög
(
nic_c⁄ãxt_t
 *
˘x
);

563 
vÆid©e_h¨dw¨e_c⁄figuøti⁄
(
nic_c⁄ãxt_t
 *
˘x
);

570 
ª£t_nic_h¨dw¨e
(
nic_c⁄ãxt_t
 *
˘x
);

575 
	#DUPLEX_HALF
 0

	)

576 
	#DUPLEX_FULL
 1

	)

577 
	#DUPLEX_AUTO
 2

	)

580 
	#SPEED_10MBPS
 10

	)

581 
	#SPEED_100MBPS
 100

	)

582 
	#SPEED_AUTO
 0

	)

585 
	#RESET_TIMEOUT_MS
 1000

	)

586 
	#CONFIG_STABILIZATION_MS
 100

	)

587 
	#LINK_CHECK_INTERVAL_MS
 500

	)

588 
	#STATS_UPDATE_INTERVAL_MS
 1000

	)

589 
	#CONFIG_VALIDATION_INTERVAL_MS
 5000

	)

	@/Users/jvindahl/Development/3com-packet-driver/include/config.h

11 #i‚de‡
_CONFIG_H_


12 
	#_CONFIG_H_


	)

14 #ifde‡
__˝lu•lus


19 
	~"comm⁄.h
"

22 
busma°î_ã°_ªsu…s
 
	tbusma°î_ã°_ªsu…s_t
;

23 
nic_c⁄ãxt
 
	tnic_c⁄ãxt_t
;

26 
	#CONFIG_SUCCESS
 0

	)

27 
	#CONFIG_ERR_INVALID_PARAM
 -1

	)

28 
	#CONFIG_ERR_INVALID_VALUE
 -2

	)

29 
	#CONFIG_ERR_MEMORY
 -3

	)

30 
	#CONFIG_ERR_IO_CONFLICT
 -4

	)

31 
	#CONFIG_ERR_IRQ_CONFLICT
 -5

	)

32 
	#CONFIG_ERR_CPU_REQUIRED
 -6

	)

33 
	#CONFIG_ERR_ROUTE_SYNTAX
 -7

	)

34 
	#CONFIG_ERR_TOO_MANY_ROUTES
 -8

	)

35 
	#CONFIG_ERR_INVALID_SPEED
 -9

	)

36 
	#CONFIG_ERR_INVALID_IO_RANGE
 -10

	)

37 
	#CONFIG_ERR_INVALID_IRQ_RANGE
 -11

	)

41 
SPEED_AUTO
 = 0,

42 
SPEED_10
 = 10,

43 
SPEED_100
 = 100

44 } 
	t√tw‹k_•ìd_t
;

48 
BUSMASTER_OFF
 = 0,

49 
BUSMASTER_ON
 = 1,

50 
BUSMASTER_AUTO
 = 2

51 } 
	tbusma°î_mode_t
;

55 
uöt32_t
 
√tw‹k
;

56 
uöt32_t
 
√tmask
;

57 
uöt8_t
 
nic_id
;

58 
boﬁ
 
a˘ive
;

59 } 
	trouã_íåy_t
;

61 
	#MAX_ROUTES
 16

	)

66 
debug_Àvñ
;

67 
u£_xms
;

68 
íabÀ_routög
;

69 
íabÀ_°©ic_routög
;

70 
buf„r_cou¡
;

71 
buf„r_size
;

72 
uöt8_t
 
öãºu±_ve˘‹
;

73 
uöt16_t
 
io_ba£
;

74 
uöt8_t
 
úq
;

75 
íabÀ_°©s
;

76 
¥omiscuous_mode
;

77 
íabÀ_loggög
;

78 
ã°_mode
;

83 
uöt16_t
 
ovîride_buf„r_size
;

84 
uöt8_t
 
ovîride_tx_rög_cou¡
;

85 
uöt8_t
 
ovîride_rx_rög_cou¡
;

86 
uöt8_t
 
f‹˚_pio_mode
;

87 
uöt8_t
 
f‹˚_möimÆ_buf„rs
;

88 
uöt8_t
 
f‹˚_›timÆ_buf„rs
;

91 
uöt16_t
 
io1_ba£
;

92 
uöt16_t
 
io2_ba£
;

93 
uöt8_t
 
úq1
;

94 
uöt8_t
 
úq2
;

95 
√tw‹k_•ìd_t
 
•ìd
;

96 
busma°î_mode_t
 
busma°î
;

97 
boﬁ
 
log_íabÀd
;

98 
rouã_íåy_t
 
rouãs
[
MAX_ROUTES
];

99 
uöt8_t
 
rouã_cou¡
;

102 
uöt8_t
 
mac_addªss
[
ETH_ALEN
];

103 
boﬁ
 
u£_cu°om_mac
;

104 
uöt16_t
 
mtu
;

105 
uöt8_t
 
ª˚ive_mode
;

106 
uöt16_t
 
tx_timeout
;

107 
uöt16_t
 
rx_buf„r_cou¡
;

108 
uöt16_t
 
tx_buf„r_cou¡
;

109 
uöt8_t
 
tx_thªshﬁd
;

110 
uöt8_t
 
rx_thªshﬁd
;

111 
boﬁ
 
auto_dëe˘
;

112 
boﬁ
 
lﬂd_bÆ™cög
;

113 
boﬁ
 
∑ckë_routög
;

114 
boﬁ
 
°©i°ics_íabÀd
;

115 
uöt8_t
 
log_Àvñ
;

116 
uöt16_t
 
ªsidít_size
;

117 
boﬁ
 
ö°Æl_t§
;

118 
boﬁ
 
íabÀ_mu…iˇ°
;

119 
boﬁ
 
íabÀ_brﬂdˇ°
;

120 
boﬁ
 
íabÀ_fuŒ_du∂ex
;

121 
boﬁ
 
íabÀ_Êow_c⁄åﬁ
;

122 
boﬁ
 
íabÀ_checksums
;

123 
uöt16_t
 
lök_check_öãrvÆ
;

124 
uöt16_t
 
°©i°ics_öãrvÆ
;

125 
uöt16_t
 
w©chdog_timeout
;

126 
boﬁ
 
debug_íabÀd
;

127 
uöt32_t
 
debug_Êags
;

128 
debug_ouçut
[32];

129 
boﬁ
 
vîbo£_mode
;

130 
c⁄fig_fûe
[128];

131 
boﬁ
 
ßve_⁄_exô
;

132 
boﬁ
 
lﬂd_deÁu…s
;

133 } 
	tc⁄fig_t
;

136 
	#CONFIG_DEFAULT_MTU
 1514

	)

137 
	#CONFIG_DEFAULT_RX_BUFFERS
 16

	)

138 
	#CONFIG_DEFAULT_TX_BUFFERS
 8

	)

139 
	#CONFIG_DEFAULT_BUFFER_SIZE
 1600

	)

140 
	#CONFIG_DEFAULT_TX_TIMEOUT
 1000

	)

141 
	#CONFIG_DEFAULT_LOG_LEVEL
 
LOG_LEVEL_INFO


	)

142 
	#CONFIG_DEFAULT_TSR_SIZE
 64

	)

143 
	#CONFIG_DEFAULT_INTERRUPT
 0x60

	)

144 
	#CONFIG_DEFAULT_LINK_CHECK
 1000

	)

145 
	#CONFIG_DEFAULT_STATS_INTERVAL
 5000

	)

146 
	#CONFIG_DEFAULT_WATCHDOG
 10000

	)

149 
	#CONFIG_DEFAULT_IO1_BASE
 0x300

	)

150 
	#CONFIG_DEFAULT_IO2_BASE
 0x320

	)

151 
	#CONFIG_DEFAULT_IRQ1
 5

	)

152 
	#CONFIG_DEFAULT_IRQ2
 10

	)

153 
	#CONFIG_DEFAULT_SPEED
 
SPEED_AUTO


	)

154 
	#CONFIG_DEFAULT_BUSMASTER
 
BUSMASTER_AUTO


	)

155 
	#CONFIG_DEFAULT_LOG_ENABLED
 
åue


	)

158 
	#CONFIG_MIN_IO_BASE
 0x200

	)

159 
	#CONFIG_MAX_IO_BASE
 0x3F0

	)

160 
	#CONFIG_IO_RANGE_SIZE
 0x20

	)

163 
	#CONFIG_VALID_IRQS
 0x9EA8

	)

166 
boﬁ
 
c⁄fig_is_vÆid_io_addªss
(
uöt16_t
 
io_ba£
);

167 
boﬁ
 
c⁄fig_is_vÆid_úq_numbî
(
uöt8_t
 
úq
);

168 
boﬁ
 
c⁄fig_check_io_c⁄Êi˘
(
uöt16_t
 
io1
, uöt16_à
io2
);

169 
boﬁ
 
c⁄fig_check_úq_c⁄Êi˘
(
uöt8_t
 
úq1
, uöt8_à
úq2
);

170 
boﬁ
 
c⁄fig_˝u_suµ‹ts_busma°î
();

171 
c⁄fig_∑r£_rouã_íåy
(c⁄° * 
rouã_°r
, 
rouã_íåy_t
* 
rouã
);

172 
c⁄fig_vÆid©e_¸oss_∑ømëîs
(c⁄° 
c⁄fig_t
* 
c⁄fig
);

175 
c⁄fig_≥rf‹m_busma°î_auto_ã°
(
c⁄fig_t
 *
c⁄fig
, 
nic_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
quick_mode
);

176 
≠∂y_busma°î_c⁄figuøti⁄
(
nic_c⁄ãxt_t
 *
˘x
,

177 c⁄° 
busma°î_ã°_ªsu…s_t
 *
ªsu…s
,

178 
c⁄fig_t
 *
c⁄fig
);

179 
gíî©e_busma°î_ã°_ªp‹t
(c⁄° 
busma°î_ã°_ªsu…s_t
 *
ªsu…s
,

180 *
buf„r
, 
size_t
 
buf„r_size
);

183 
c⁄fig_t
 
g_c⁄fig
;

184 
boﬁ
 
g_c⁄fig_lﬂded
;

187 
c⁄fig_∑r£_∑øms
(c⁄° *
∑øms
, 
c⁄fig_t
 *
c⁄fig
);

188 
c⁄fig_vÆid©e
(c⁄° 
c⁄fig_t
 *
c⁄fig
);

189 
c⁄fig_gë_deÁu…s
(
c⁄fig_t
 *
c⁄fig
);

190 
c⁄fig_¥öt
(c⁄° 
c⁄fig_t
 *
c⁄fig
, 
Àvñ
);

193 
c⁄fig_öô
();

194 
c⁄fig_˛ónup
();

195 
c⁄fig_£t_deÁu…s
(
c⁄fig_t
 *
c⁄fig
);

196 
c⁄fig_lﬂd_fûe
(c⁄° *
fûíame
, 
c⁄fig_t
 *
c⁄fig
);

197 
c⁄fig_ßve_fûe
(c⁄° *
fûíame
, c⁄° 
c⁄fig_t
 *
c⁄fig
);

198 
c⁄fig_∑r£_comm™d_löe
(
¨gc
, *
¨gv
[], 
c⁄fig_t
 *
c⁄fig
);

199 
c⁄fig_∑r£_∑ømëî
(c⁄° *
∑øm
, c⁄° *
vÆue
, 
c⁄fig_t
 *
c⁄fig
);

200 
c⁄fig_¥öt_ußge
(c⁄° *
¥ogøm_«me
);

201 
c⁄fig_¥öt_hñp
();

202 
c⁄fig_£t_°rög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
, c⁄° *
vÆue
);

203 
c⁄fig_£t_öt
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
, 
vÆue
);

204 
c⁄fig_£t_boﬁ
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
, 
boﬁ
 
vÆue
);

205 c⁄° * 
c⁄fig_gë_°rög
(c⁄° 
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
);

206 
c⁄fig_gë_öt
(c⁄° 
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
);

207 
boﬁ
 
c⁄fig_gë_boﬁ
(c⁄° 
c⁄fig_t
 *
c⁄fig
, c⁄° *
«me
);

208 
c⁄fig_dëe˘_h¨dw¨e
(
c⁄fig_t
 *
c⁄fig
);

209 
c⁄fig_vÆid©e_h¨dw¨e
(c⁄° 
c⁄fig_t
 *
c⁄fig
);

210 
c⁄fig_≠∂y_h¨dw¨e_£âögs
(c⁄° 
c⁄fig_t
 *
c⁄fig
);

211 
boﬁ
 
c⁄fig_is_vÆid_io_ba£
(
uöt16_t
 
io_ba£
);

212 
boﬁ
 
c⁄fig_is_vÆid_úq
(
uöt8_t
 
úq
);

213 
boﬁ
 
c⁄fig_is_vÆid_mac
(c⁄° 
uöt8_t
 *
mac
);

214 
c⁄fig_∑r£_mac_addªss
(c⁄° *
mac_°r
, 
uöt8_t
 *
mac
);

215 
c⁄fig_f‹m©_mac_addªss
(c⁄° 
uöt8_t
 *
mac
, *
mac_°r
, 
size_t
 
size
);

216 
c⁄fig_¥öt_cuºít
();

217 
c⁄fig_¥öt_deÁu…s
();

219 #ifde‡
__˝lu•lus


	@/Users/jvindahl/Development/3com-packet-driver/include/hardware.h

11 #i‚de‡
_HARDWARE_H_


12 
	#_HARDWARE_H_


	)

14 #ifde‡
__˝lu•lus


19 
	~"comm⁄.h
"

20 
	~"îr‹_h™dlög.h
"

23 
nic_öfo
;

24 
nic_›s
;

28 
NIC_TYPE_UNKNOWN
 = 0,

29 
NIC_TYPE_3C509B
,

30 
NIC_TYPE_3C515_TX


31 } 
	tnic_ty≥_t
;

34 
	#NIC_STATUS_PRESENT
 
	`BIT
(0Ë

	)

35 
	#NIC_STATUS_INITIALIZED
 
	`BIT
(1Ë

	)

36 
	#NIC_STATUS_ACTIVE
 
	`BIT
(2Ë

	)

37 
	#NIC_STATUS_ERROR
 
	`BIT
(3Ë

	)

38 
	#NIC_STATUS_LINK_UP
 
	`BIT
(4Ë

	)

39 
	#NIC_STATUS_FULL_DUPLEX
 
	`BIT
(5Ë

	)

40 
	#NIC_STATUS_100MBPS
 
	`BIT
(6Ë

	)

41 
	#NIC_STATUS_PROMISCUOUS
 
	`BIT
(7Ë

	)

44 
	#HW_CAP_DMA
 
	`BIT
(0Ë

	)

45 
	#HW_CAP_BUS_MASTER
 
	`BIT
(1Ë

	)

46 
	#HW_CAP_MULTICAST
 
	`BIT
(2Ë

	)

47 
	#HW_CAP_PROMISCUOUS
 
	`BIT
(3Ë

	)

48 
	#HW_CAP_FULL_DUPLEX
 
	`BIT
(4Ë

	)

49 
	#HW_CAP_AUTO_SPEED
 
	`BIT
(5Ë

	)

50 
	#HW_CAP_WAKE_ON_LAN
 
	`BIT
(6Ë

	)

51 
	#HW_CAP_CHECKSUM_OFFLOAD
 
	`BIT
(7Ë

	)

70 
	snic_›s
 {

72 (*
öô
)(
nic_öfo
 *
nic
);

73 (*
˛ónup
)(
nic_öfo
 *
nic
);

74 (*
ª£t
)(
nic_öfo
 *
nic
);

75 (*
£lf_ã°
)(
nic_öfo
 *
nic
);

78 (*
£nd_∑ckë
)(
nic_öfo
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àn
);

79 (*
ª˚ive_∑ckë
)(
nic_öfo
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àn
);

80 (*
check_tx_com∂ëe
)(
nic_öfo
 *
nic
);

81 (*
check_rx_avaûabÀ
)(
nic_öfo
 *
nic
);

84 (*
h™dÀ_öãºu±
)(
nic_öfo
 *
nic
);

85 (*
check_öãºu±
)(
nic_öfo
 *
nic
);

86 (*
íabÀ_öãºu±s
)(
nic_öfo
 *
nic
);

87 (*
dißbÀ_öãºu±s
)(
nic_öfo
 *
nic
);

90 (*
£t_mac_addªss
)(
nic_öfo
 *
nic
, c⁄° 
uöt8_t
 *
mac
);

91 (*
gë_mac_addªss
)(
nic_öfo
 *
nic
, 
uöt8_t
 *
mac
);

92 (*
£t_¥omiscuous
)(
nic_öfo
 *
nic
, 
boﬁ
 
íabÀ
);

93 (*
£t_mu…iˇ°
)(
nic_öfo
 *
nic
, c⁄° 
uöt8_t
 *
addrs
, 
cou¡
);

94 (*
£t_ª˚ive_mode
)(
nic_öfo
 *
nic
, 
uöt8_t
 
mode
);

97 (*
gë_lök_°©us
)(
nic_öfo
 *
nic
);

98 (*
gë_°©i°ics
)(
nic_öfo
 *
nic
, *
°©s
);

99 (*
˛ór_°©i°ics
)(
nic_öfo
 *
nic
);

102 (*
su•íd
)(
nic_öfo
 *
nic
);

103 (*
ªsume
)(
nic_öfo
 *
nic
);

104 (*
£t_powî_°©e
)(
nic_öfo
 *
nic
, 
°©e
);

107 (*
£t_•ìd_du∂ex
)(
nic_öfo
 *
nic
, 
•ìd
, 
boﬁ
 
fuŒ_du∂ex
);

108 (*
gë_•ìd_du∂ex
)(
nic_öfo
 *
nic
, *
•ìd
, 
boﬁ
 *
fuŒ_du∂ex
);

109 (*
£t_Êow_c⁄åﬁ
)(
nic_öfo
 *
nic
, 
boﬁ
 
íabÀ
);

112 (*
h™dÀ_îr‹
)(
nic_öfo
 *
nic
, 
uöt32_t
 
îr‹_°©us
);

113 (*
ªcovî_‰om_îr‹
)(
nic_öfo
 *
nic
, 
uöt8_t
 
îr‹_ty≥
);

114 (*
vÆid©e_ªcovîy
)(
nic_öfo
 *
nic
);

115 } 
	tnic_›s_t
;

118 
	snic_öfo
 {

120 
nic_ty≥_t
 
ty≥
;

121 
nic_›s_t
 *
›s
;

122 
uöt8_t
 
ödex
;

123 
uöt32_t
 
°©us
;

124 
uöt32_t
 
ˇ∑bûôõs
;

127 
uöt16_t
 
io_ba£
;

128 
uöt16_t
 
io_ønge
;

129 
uöt32_t
 
mem_ba£
;

130 
uöt32_t
 
mem_size
;

131 
uöt8_t
 
úq
;

132 
uöt8_t
 
dma_ch™√l
;

135 
uöt8_t
 
mac
[
ETH_ALEN
];

136 
uöt8_t
 
≥rm_mac
[
ETH_ALEN
];

137 
uöt16_t
 
mtu
;

138 
uöt8_t
 
ª˚ive_mode
;

141 
uöt16_t
 
tx_timeout
;

142 
uöt16_t
 
rx_buf„r_size
;

143 
uöt16_t
 
tx_buf„r_size
;

144 
uöt8_t
 
tx_fifo_thªshﬁd
;

145 
uöt8_t
 
rx_fifo_thªshﬁd
;

148 *
¥iv©e_d©a
;

149 
uöt32_t
 
¥iv©e_d©a_size
;

150 
uöt8_t
 
cuºít_wödow
;

153 
uöt32_t
 
tx_∑ckës
;

154 
uöt32_t
 
rx_∑ckës
;

155 
uöt32_t
 
tx_byãs
;

156 
uöt32_t
 
rx_byãs
;

157 
uöt32_t
 
tx_îr‹s
;

158 
uöt32_t
 
rx_îr‹s
;

159 
uöt32_t
 
tx_dr›≥d
;

160 
uöt32_t
 
rx_dr›≥d
;

161 
uöt32_t
 
öãºu±s
;

164 
boﬁ
 
lök_up
;

165 
•ìd
;

166 
boﬁ
 
fuŒ_du∂ex
;

167 
boﬁ
 
aut⁄eg
;

170 
uöt32_t
 
œ°_îr‹
;

171 
uöt32_t
 
îr‹_cou¡
;

174 
nic_c⁄ãxt_t
 *
îr‹_c⁄ãxt
;

177 
uöt8_t
 
mu…iˇ°_cou¡
;

178 
uöt8_t
 
mu…iˇ°_li°
[16][
ETH_ALEN
];

179 } 
	tnic_öfo_t
;

182 
pci_devi˚_öfo
;

183 
iß_devi˚_öfo
;

186 
nic_öfo_t
 
g_nics
[
MAX_NICS
];

187 
g_num_nics
;

188 
boﬁ
 
g_h¨dw¨e_öôülized
;

191 
h¨dw¨e_öô
();

192 
h¨dw¨e_˛ónup
();

193 
h¨dw¨e_dëe˘_Æl
();

194 
h¨dw¨e_íumî©e_nics
(
nic_öfo_t
 *
nics
, 
max_nics
);

197 
nic_öfo_t
* 
h¨dw¨e_gë_nic
(
ödex
);

198 
h¨dw¨e_gë_nic_cou¡
();

199 
nic_öfo_t
* 
h¨dw¨e_föd_nic_by_ty≥
(
nic_ty≥_t
 
ty≥
);

200 
nic_öfo_t
* 
h¨dw¨e_föd_nic_by_mac
(c⁄° 
uöt8_t
 *
mac
);

203 
h¨dw¨e_öô_nic
(
nic_öfo_t
 *
nic
);

204 
h¨dw¨e_˛ónup_nic
(
nic_öfo_t
 *
nic
);

205 
h¨dw¨e_ª£t_nic
(
nic_öfo_t
 *
nic
);

206 
h¨dw¨e_ã°_nic
(
nic_öfo_t
 *
nic
);

209 
h¨dw¨e_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àn
);

210 
h¨dw¨e_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àn
);

211 
h¨dw¨e_check_tx_com∂ëe
(
nic_öfo_t
 *
nic
);

212 
h¨dw¨e_check_rx_avaûabÀ
(
nic_öfo_t
 *
nic
);

215 
h¨dw¨e_öãºu±_h™dÀr
();

216 
h¨dw¨e_h™dÀ_nic_öãºu±
(
nic_öfo_t
 *
nic
);

217 
h¨dw¨e_check_öãºu±_sour˚
();

218 
h¨dw¨e_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

219 
h¨dw¨e_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

222 
h¨dw¨e_£t_mac_addªss
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
mac
);

223 
h¨dw¨e_gë_mac_addªss
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
mac
);

224 
h¨dw¨e_£t_¥omiscuous_mode
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ
);

225 
h¨dw¨e_£t_mu…iˇ°_li°
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
addrs
, 
cou¡
);

226 
h¨dw¨e_£t_ª˚ive_mode
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
mode
);

229 
h¨dw¨e_gë_lök_°©us
(
nic_öfo_t
 *
nic
);

230 
h¨dw¨e_gë_nic_°©i°ics
(
nic_öfo_t
 *
nic
, *
°©s
);

231 
h¨dw¨e_˛ór_nic_°©i°ics
(
nic_öfo_t
 *
nic
);

232 
h¨dw¨e_¥öt_nic_öfo
(c⁄° 
nic_öfo_t
 *
nic
);

233 
h¨dw¨e_dump_ªgi°îs
(c⁄° 
nic_öfo_t
 *
nic
);

236 
nic_›s_t
* 
gë_3c509b_›s
();

237 
nic_›s_t
* 
gë_3c515_›s
();

238 
nic_›s_t
* 
gë_nic_›s
(
nic_ty≥_t
 
ty≥
);

241 c⁄° * 
nic_ty≥_to_°rög
(
nic_ty≥_t
 
ty≥
);

242 c⁄° * 
nic_°©us_to_°rög
(
uöt32_t
 
°©us
);

243 
boﬁ
 
h¨dw¨e_is_nic_¥e£¡
(
ödex
);

244 
boﬁ
 
h¨dw¨e_is_nic_a˘ive
(
ödex
);

247 
h¨dw¨e_su•íd_nic
(
nic_öfo_t
 *
nic
);

248 
h¨dw¨e_ªsume_nic
(
nic_öfo_t
 *
nic
);

249 
h¨dw¨e_£t_powî_°©e
(
nic_öfo_t
 *
nic
, 
°©e
);

252 
h¨dw¨e_£t_•ìd_du∂ex
(
nic_öfo_t
 *
nic
, 
•ìd
, 
boﬁ
 
fuŒ_du∂ex
);

253 
h¨dw¨e_gë_•ìd_du∂ex
(
nic_öfo_t
 *
nic
, *
•ìd
, 
boﬁ
 *
fuŒ_du∂ex
);

254 
h¨dw¨e_£t_Êow_c⁄åﬁ
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ
);

257 
h¨dw¨e_ã°_c⁄cuºít_›î©i⁄s
(
uöt32_t
 
ã°_duøti⁄_ms
);

258 
h¨dw¨e_ã°_lﬂd_bÆ™cög
(
uöt32_t
 
num_∑ckës
);

259 
h¨dw¨e_ã°_Áûovî
(
¥im¨y_nic
);

260 
h¨dw¨e_ã°_ªsour˚_c⁄ã¡i⁄
(
uöt32_t
 
num_ôî©i⁄s
);

261 
h¨dw¨e_ã°_mu…i_nic_≥rf‹m™˚
(
uöt32_t
 
ã°_duøti⁄_ms
);

262 
h¨dw¨e_run_mu…i_nic_ã°s
();

265 
h¨dw¨e_öô_îr‹_h™dlög
();

266 
h¨dw¨e_˛ónup_îr‹_h™dlög
();

267 
h¨dw¨e_¸óã_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
);

268 
h¨dw¨e_de°roy_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
);

271 
h¨dw¨e_h™dÀ_rx_îr‹
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
rx_°©us
);

272 
h¨dw¨e_h™dÀ_tx_îr‹
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
tx_°©us
);

273 
h¨dw¨e_h™dÀ_ad≠ãr_îr‹
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
Áûuª_ty≥
);

274 
h¨dw¨e_©ãm±_ªcovîy
(
nic_öfo_t
 *
nic
);

277 
h¨dw¨e_¥öt_îr‹_°©i°ics
(
nic_öfo_t
 *
nic
);

278 
h¨dw¨e_¥öt_globÆ_îr‹_summ¨y
();

279 
h¨dw¨e_gë_sy°em_hó…h_°©us
();

280 
h¨dw¨e_exp‹t_îr‹_log
(*
buf„r
, 
size_t
 
buf„r_size
);

283 
h¨dw¨e_c⁄figuª_îr‹_thªshﬁds
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
max_îr‹_øã
,

284 
uöt32_t
 
max_c⁄£cutive
, uöt32_à
ªcovîy_timeout
);

289 
h¨dw¨e_£nd_∑ckë_buf„ªd
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
);

290 
h¨dw¨e_ª˚ive_∑ckë_buf„ªd
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
uöt16_t
 *
Àngth
);

293 
h¨dw¨e_gë_nic_buf„r_°©s
(
nic_ödex
, 
buf„r_poﬁ_°©s_t
* 
°©s
);

294 
h¨dw¨e_ªbÆ™˚_buf„r_ªsour˚s
();

297 
h¨dw¨e_¥öt_com¥ehísive_°©s
();

298 
h¨dw¨e_m⁄ô‹_™d_maöèö
();

301 
	#MAX_NICS
 8

	)

302 
	#NIC_RESET_TIMEOUT
 1000

	)

303 
	#NIC_INIT_TIMEOUT
 5000

	)

304 
	#LINK_CHECK_INTERVAL
 1000

	)

307 
	#Sñe˘Wödow
 0x0800

	)

308 
	#AckI¡r
 0x6800

	)

309 
	#RxDisˇrd
 0x4000

	)

310 
	#TxCom∂ëe
 0x0004

	)

311 
	#RxCom∂ëe
 0x0010

	)

314 
	#EL3_CMD
 0x0E

	)

315 
	#EL3_STATUS
 0x0E

	)

318 
	#EL3WINDOW
(
nic
, 
wö
) do { \

319 
	`outw
(
Sñe˘Wödow
 | (
wö
), (
nic
)->
io_ba£
 + 
EL3_CMD
); \

320 (
nic
)->
cuºít_wödow
 = (
wö
); \

321 } 0)

	)

324 
is_mˇ_sy°em
();

325 
is_eiß_sy°em
();

326 
is_vlb_sy°em
();

327 
gë_ps2_modñ
();

330 
nic_dëe˘_mˇ_3c523
();

331 
nic_dëe˘_mˇ_3c529
();

332 
nic_dëe˘_eiß_3c592
();

333 
nic_dëe˘_eiß_3c597
();

334 
nic_dëe˘_eiß_3c509b
();

335 
nic_dëe˘_vlb
();

337 #ifde‡
__˝lu•lus


342 
uöt32_t
 
h¨dw¨e_gë_œ°_îr‹_time
(
uöt8_t
 
nic_ödex
);

	@/Users/jvindahl/Development/3com-packet-driver/include/packet_api.h

14 #i‚de‡
_PACKET_API_H_


15 
	#_PACKET_API_H_


	)

17 #ifde‡
__˝lu•lus


22 
	~"comm⁄.h
"

25 
	#PACKET_DRIVER_VERSION
 0x0100

	)

26 
	#PACKET_DRIVER_CLASS
 1

	)

27 
	#PACKET_DRIVER_TYPE
 1

	)

30 
	#PACKET_DRIVER_INFO
 1

	)

31 
	#PACKET_ACCESS_TYPE
 2

	)

32 
	#PACKET_RELEASE_TYPE
 3

	)

33 
	#PACKET_SEND_PKT
 4

	)

34 
	#PACKET_TERMINATE
 5

	)

35 
	#PACKET_GET_ADDRESS
 6

	)

36 
	#PACKET_RESET_INTERFACE
 7

	)

37 
	#PACKET_GET_PARAMETERS
 8

	)

38 
	#PACKET_AS_SEND_PKT
 9

	)

39 
	#PACKET_SET_RCV_MODE
 10

	)

40 
	#PACKET_GET_RCV_MODE
 11

	)

41 
	#PACKET_SET_MULTICAST
 12

	)

42 
	#PACKET_GET_MULTICAST
 13

	)

43 
	#PACKET_GET_STATISTICS
 14

	)

44 
	#PACKET_SET_ADDRESS
 15

	)

47 
	#PACKET_NO_ERROR
 0

	)

48 
	#PACKET_BAD_HANDLE
 1

	)

49 
	#PACKET_NO_CLASS
 2

	)

50 
	#PACKET_NO_TYPE
 3

	)

51 
	#PACKET_NO_NUMBER
 4

	)

52 
	#PACKET_BAD_TYPE
 5

	)

53 
	#PACKET_NO_MULTICAST
 6

	)

54 
	#PACKET_CANT_TERMINATE
 7

	)

55 
	#PACKET_BAD_MODE
 8

	)

56 
	#PACKET_NO_SPACE
 9

	)

57 
	#PACKET_TYPE_INUSE
 10

	)

58 
	#PACKET_BAD_COMMAND
 11

	)

59 
	#PACKET_CANT_SEND
 12

	)

60 
	#PACKET_CANT_SET
 13

	)

61 
	#PACKET_BAD_ADDRESS
 14

	)

62 
	#PACKET_CANT_RESET
 15

	)

64 \
n
#deföê
	#RCV_MODE_OFF
 0

	)

65 
	#RCV_MODE_DIRECT
 1

	)

66 
	#RCV_MODE_BROADCAST
 2

	)

67 
	#RCV_MODE_MULTICAST
 3

	)

68 
	#RCV_MODE_PROMISCUOUS
 4

	)

69 
	#RCV_MODE_ALL_MULTICAST
 5

	)

72 
	#PACKET_TYPE_IP
 0x0800

	)

73 
	#PACKET_TYPE_ARP
 0x0806

	)

74 
	#PACKET_TYPE_RARP
 0x8035

	)

75 
	#PACKET_TYPE_IPX
 0x8137

	)

76 
	#PACKET_TYPE_ALL
 0xFFFF

	)

79 
	#MAX_HANDLES
 16

	)

80 
	#INVALID_HANDLE
 0xFFFF

	)

84 
uöt8_t
 
vîsi⁄
;

85 
uöt8_t
 
˛ass
;

86 
uöt16_t
 
ty≥
;

87 
uöt8_t
 
numbî
;

88 
uöt8_t
 
basic
;

89 
uöt16_t
 
exãnded
;

90 
«me
[15];

91 } 
	tPACKED
 
	tdrivî_öfo_t
;

95 
uöt8_t
 
Àngth
;

96 
uöt8_t
 
addr_Àn
;

97 
uöt8_t
 
hódî_Àn
;

98 
uöt16_t
 
ªcv_bufs
;

99 
uöt16_t
 
ªcv_buf_Àn
;

100 
uöt16_t
 
£nd_bufs
;

101 
uöt16_t
 
£nd_buf_Àn
;

102 } 
	tPACKED
 
	töãrÁ˚_∑øms_t
;

106 
uöt32_t
 
∑ckës_ö
;

107 
uöt32_t
 
∑ckës_out
;

108 
uöt32_t
 
byãs_ö
;

109 
uöt32_t
 
byãs_out
;

110 
uöt32_t
 
îr‹s_ö
;

111 
uöt32_t
 
îr‹s_out
;

112 
uöt32_t
 
∑ckës_dr›≥d
;

113 } 
	tPACKED
 
	t°©i°ics_t
;

116 
	s∑ckë_h™dÀ
 {

117 
uöt16_t
 
h™dÀ
;

118 
uöt16_t
 
∑ckë_ty≥
;

119 
uöt8_t
 
ªcv_mode
;

120 (*
ª˚ivî
)();

121 
boﬁ
 
ö_u£
;

122 
∑ckë_h™dÀ
* 
√xt
;

123 } 
	t∑ckë_h™dÀ_t
;

127 
uöt8_t
 
addr_Àn
;

128 
uöt8_t
 
addr_cou¡
;

129 
uöt8_t
 
addªs£s
[16][
ETH_ALEN
];

130 } 
	tPACKED
 
	tmu…iˇ°_li°_t
;

133 
∑ckë_h™dÀ_t
 
g_∑ckë_h™dÀs
[
MAX_HANDLES
];

134 
°©i°ics_t
 
g_∑ckë_°©s
;

135 
uöt8_t
 
g_cuºít_ªcv_mode
;

136 
mu…iˇ°_li°_t
 
g_mu…iˇ°_li°
;

141 
∑ckë_drivî_öfo
(
drivî_öfo_t
* 
öfo
);

142 
∑ckë_ac˚ss_ty≥
(
uöt16_t
 
if_˛ass
, uöt16_à
if_ty≥
,

143 
uöt16_t
 
if_numbî
, uöt16_à
∑ckë_ty≥
,

144 (*
ª˚ivî
)(), 
uöt16_t
* 
h™dÀ
);

145 
∑ckë_ªÀa£_ty≥
(
uöt16_t
 
h™dÀ
);

146 
∑ckë_£nd_pkt
(c⁄° 
uöt8_t
* 
∑ckë
, 
uöt16_t
 
Àngth
);

147 
∑ckë_ãrmö©e
();

148 
∑ckë_gë_addªss
(
uöt16_t
 
if_numbî
, 
uöt8_t
* 
addªss
, uöt16_t* 
Àngth
);

149 
∑ckë_ª£t_öãrÁ˚
(
uöt16_t
 
if_numbî
);

150 
∑ckë_gë_∑ømëîs
(
uöt16_t
 
if_numbî
, 
öãrÁ˚_∑øms_t
* 
∑øms
);

153 
∑ckë_as_£nd_pkt
(
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
* 
∑ckë
, uöt16_à
Àngth
);

154 
∑ckë_£t_rcv_mode
(
uöt16_t
 
if_numbî
, 
uöt8_t
 
mode
);

155 
∑ckë_gë_rcv_mode
(
uöt16_t
 
if_numbî
, 
uöt8_t
* 
mode
);

156 
∑ckë_£t_mu…iˇ°_li°
(
uöt16_t
 
if_numbî
, c⁄° 
mu…iˇ°_li°_t
* 
li°
);

157 
∑ckë_gë_mu…iˇ°_li°
(
uöt16_t
 
if_numbî
, 
mu…iˇ°_li°_t
* 
li°
);

158 
∑ckë_gë_°©i°ics
(
uöt16_t
 
if_numbî
, 
°©i°ics_t
* 
°©s
);

159 
∑ckë_£t_addªss
(
uöt16_t
 
if_numbî
, c⁄° 
uöt8_t
* 
addªss
, uöt16_à
Àngth
);

162 
uöt16_t
 
Æloˇã_h™dÀ
();

163 
ªÀa£_h™dÀ
(
uöt16_t
 
h™dÀ
);

164 
∑ckë_h™dÀ_t
* 
gë_h™dÀ_öfo
(
uöt16_t
 
h™dÀ
);

165 
boﬁ
 
is_vÆid_h™dÀ
(
uöt16_t
 
h™dÀ
);

168 
∑ckë_ª˚ive_h™dÀr
(
uöt8_t
* 
∑ckë
, 
uöt16_t
 
Àngth
, uöt16_à
∑ckë_ty≥
);

169 
ˇŒ_ª˚ivîs
(
uöt8_t
* 
∑ckë
, 
uöt16_t
 
Àngth
, uöt16_à
∑ckë_ty≥
);

170 
boﬁ
 
should_ª˚ive_∑ckë
(
uöt16_t
 
∑ckë_ty≥
, c⁄° 
uöt8_t
* 
de°_addr
);

173 
upd©e_°©i°ics
(
boﬁ
 
is_ª˚ive
, 
uöt16_t
 
Àngth
, boﬁ 
îr‹
);

174 
ª£t_°©i°ics
();

177 
uöt16_t
 
exåa˘_∑ckë_ty≥
(c⁄° 
uöt8_t
* 
∑ckë
);

178 
boﬁ
 
is_brﬂdˇ°_addªss
(c⁄° 
uöt8_t
* 
addªss
);

179 
boﬁ
 
is_mu…iˇ°_addªss
(c⁄° 
uöt8_t
* 
addªss
);

180 
boﬁ
 
is_our_addªss
(c⁄° 
uöt8_t
* 
addªss
);

181 
boﬁ
 
is_ö_mu…iˇ°_li°
(c⁄° 
uöt8_t
* 
addªss
);

184 
∑ckë_drivî_öãºu±
();

185 
£tup_∑ckë_öãºu±
(
uöt8_t
 
ve˘‹
);

186 
ªmove_∑ckë_öãºu±
();

189 
boﬁ
 
vÆid©e_öãrÁ˚_numbî
(
uöt16_t
 
if_numbî
);

190 
boﬁ
 
vÆid©e_∑ckë_ty≥
(
uöt16_t
 
∑ckë_ty≥
);

191 
boﬁ
 
vÆid©e_ª˚ive_mode
(
uöt8_t
 
mode
);

192 
boﬁ
 
vÆid©e_addªss_Àngth
(
uöt16_t
 
Àngth
);

195 c⁄° * 
∑ckë_îr‹_°rög
(
îr‹_code
);

196 
£t_∑ckë_îr‹
(
îr‹_code
);

197 
gë_œ°_∑ckë_îr‹
();

199 #ifde‡
__˝lu•lus


	@/Users/jvindahl/Development/3com-packet-driver/src/asm/hardware.asm

1 ; @
fûe
 
	gh¨dw¨e
.
	gasm


2 ; @
brõf
 
	gLow
-
Àvñ
 
h¨dw¨e
 
öãø˘i⁄
 
	groutöes
 - 
Enh™˚d
 
	gGroup
 6A/6B 
	gIm∂emíèti⁄


4 ; 3C
om
 
Packë
 
	gDrivî
 - 
Suµ‹t
 3C515-
TX
 
	g™d
 3C509B 
	gNICs


5 ; 
Enh™˚d
 
h¨dw¨e
 
dëe˘i⁄
 
™d
 
IRQ
 
m™agemít
 
	gGroups
 6A & 6B

7 ; 
This
 
fûe
 
is
 
∑π
 
of
 
	gthe
 3C
om
 
Packë
 
Drivî
 
	g¥oje˘
.

10 .
MODEL
 
	gSMALL


13 ; 
In˛ude
 
as£mbly
 
öãrÁ˚
 
deföôi⁄s


14 
	gö˛ude
 "asm_interfaces.inc"

15 
	gö˛ude
 "lfsr_table.inc"

17 ; 
	gI
/
O
 
p‹t
 
c⁄°™ts


18 
ISA_MIN_IO
 
	gEQU
 100
	gh
 ; 
Möimum
 
ISA
 
	gI
/
O
 
addªss


19 
ISA_MAX_IO
 
	gEQU
 3FF
	gh
 ; 
Maximum
 
ISA
 
	gI
/
O
 
addªss


20 
EISA_MIN_IO
 
	gEQU
 1000
	gh
 ; 
Möimum
 
EISA
 
	gI
/
O
 
addªss


21 
EISA_MAX_IO
 
	gEQU
 9FFF
	gh
 ; 
Maximum
 
EISA
 
	gI
/
O
 
	gaddªss


23 ; 
	gComm⁄
 3C
om
 
	$ªgi°îs
 (
ªœtive
 
to
 
ba£
)

24 
REG_COMMAND
 
EQU
 0E
h
 ; 
Comm™d
 

25 
REG_STATUS
 
EQU
 0E
h
 ; 
Sètus
 

26 
REG_WINDOW
 
EQU
 0E
h
 ; 
Wödow
 
£À˘
 

27 
REG_DATA
 
EQU
 00
h
 ; 
D©a
 (
wödow
 
dïídít
)

28 
REG_INT_STATUS
 
EQU
 0E
h
 ; 
I¡îru±
 
°©us


29 
REG_ID_PORT
 
EQU
 100
h
 ; 
ID
 
p‹t
 3C509B

31 ; 3C509B 
•ecific
 
c⁄°™ts


32 
C509B_EEPROM_READ
 
EQU
 0080
h
 ; 
EEPROM
 
ªad
 
comm™d


33 
C509B_ACTIVATE
 
EQU
 0FF
h
 ; 
A˘iv©i⁄
 
£quí˚
 
vÆue


34 
C509B_ID_SEQUENCE
 
EQU
 6FFF
h
 ; 
ID
 
£quí˚
 
isﬁ©i⁄


36 ; 3C515-
TX
 
•ecific
 
	$c⁄°™ts
 (
ISA
 
wôh
 
bus
 
ma°îög
)

37 
C515_ISA_MIN_IO
 
EQU
 100
h
 ; 
Möimum
 
ISA
 
I
/
O
 3C515

38 
C515_ISA_MAX_IO
 
EQU
 3E0
h
 ; 
Maximum
 
ISA
 
I
/
O
 3C515

39 
C515_ISA_STEP
 
EQU
 20
h
 ; 
ISA
 
sˇn
 
°ï
 
size


40 
C515_DMA_CTRL
 
EQU
 400
h
 ; 
ISA
 
DMA
 
c⁄åﬁ
 
off£t


41 
C515_BUS_MASTER
 
EQU
 01
h
 ; 
Bus
 
ma°î
 
íabÀ
 
Êag


43 ; 
H¨dw¨e
 
°©e
 
c⁄°™ts


44 
HW_STATE_UNKNOWN
 
EQU
 0 ; 
H¨dw¨e
 
°©e
 
unknown


45 
HW_STATE_DETECTED
 
EQU
 1 ; 
H¨dw¨e
 
dëe˘ed


46 
HW_STATE_CONFIGURED
 
EQU
 2 ; 
H¨dw¨e
 
c⁄figuªd


47 
HW_STATE_ACTIVE
 
EQU
 3 ; 
H¨dw¨e
 
a˘ive


48 
HW_STATE_ERROR
 
EQU
 0FF
h
 ; 
H¨dw¨e
 
îr‹


50 ; 
Maximum
 
h¨dw¨e
 
ö°™˚s


51 
MAX_HW_INSTANCES
 
EQU
 2 ; 
Suµ‹t
 
up
 
to
 2 
NICs


53 ; 
Enh™˚d
 
d©a
 
£gmít
 
Groups
 6A & 6B

54 
_DATA
 
SEGMENT


55 
ASSUME
 
DS
:
_DATA


57 ; 
Enh™˚d
 
h¨dw¨e
 
dëe˘i⁄
 
°©e
 
usög
 
°ru˘uªd
 
≠¥ﬂch


58 
hw_ö°™˚_èbÀ
 
HW_INSTANCE
 
MAX_HW_INSTANCES
 
	`dup
(<>)

59 
hw_ö°™˚_cou¡
 
db
 0 ; 
Numbî
 
of
 
dëe˘ed
 
ö°™˚s


61 ; 
Legacy
 
com∑tibûôy
 
	$fõlds
 (
maöèöed
 
exi°ög
 
code
)

62 
hw_ö°™˚s
 
db
 
MAX_HW_INSTANCES
 
	$dup
(
HW_STATE_UNDETECTED
)

63 
hw_io_ba£s
 
dw
 
MAX_HW_INSTANCES
 
	$dup
(0)

64 
hw_úq_löes
 
db
 
MAX_HW_INSTANCES
 
	$dup
(0)

65 
hw_ty≥s
 
db
 
MAX_HW_INSTANCES
 
	`dup
(0Ë; 0=
unknown
, 1=3C509B, 2=3C515

66 
hw_mac_addªs£s
 
db
 
MAX_HW_INSTANCES
*6 
	`dup
(0Ë; 
MAC
 
addªs£s


68 ; 
Addôi⁄Æ
 
èbÀs
 
íh™˚d
 
im∂emíèti⁄


69 
hw_ioba£_èbÀ
 
dw
 
MAX_HW_INSTANCES
 
	`dup
(0Ë; 
I
/
O
 
ba£
 
addªs£s


70 
hw_ty≥_èbÀ
 
db
 
MAX_HW_INSTANCES
 
	`dup
(0Ë; 
NIC
 
	$ty≥s
 (1=3C509B, 2=3C515)

71 
hw_Êags_èbÀ
 
db
 
MAX_HW_INSTANCES
 
	`dup
(0Ë; 
H¨dw¨e
 
Êags


72 
cuºít_ö°™˚
 
db
 0 ; 
Cuºít
 
a˘ive
 
ö°™˚


73 
cuºít_ioba£
 
dw
 0 ; 
Cuºít
 
NIC
 
I
/
O
 
ba£


74 
cuºít_úq
 
db
 0 ; 
Cuºít
 
NIC
 
IRQ


76 ; 
Enh™˚d
 
I
/
O
 
›î©i⁄
 
°©i°ics


77 
io_ªad_cou¡
 
dd
 0 ; 
TŸÆ
 
I
/
O
 
ªads


78 
io_wrôe_cou¡
 
dd
 0 ; 
TŸÆ
 
I
/
O
 
wrôes


79 
io_îr‹_cou¡
 
dw
 0 ; 
I
/
O
 
îr‹
 
cou¡


80 
io_timeout_cou¡
 
dw
 0 ; 
I
/
O
 
timeout
 
cou¡


81 
io_ªåy_cou¡
 
dw
 0 ; 
I
/
O
 
ªåy
 
cou¡


83 ; 
Sy°em
 
°©e
 
m™agemít


84 
h¨dw¨e_öôülized
 
db
 0 ; 
H¨dw¨e
 
subsy°em
 
öôülized


85 
cuºít_ö°™˚
 
db
 0 ; 
Cuºíéy
 
£À˘ed
 
h¨dw¨e
 
ö°™˚


86 
œ°_îr‹_code
 
db
 0 ; 
La°
 
îr‹
 
code
 
ícou¡îed


87 
debug_Êags
 
db
 0 ; 
Debug
 
c⁄åﬁ
 
Êags


89 ; 
Timög
 
™d
 
synchr⁄iz©i⁄


90 
time°amp_œ°_dëe˘
 
dd
 0 ; 
La°
 
dëe˘i⁄
 
time°amp


91 
time°amp_œ°_c⁄fig
 
dd
 0 ; 
La°
 
c⁄figuøti⁄
 
time°amp


93 
_DATA
 
ENDS


95 ; 
Code
 
£gmít


96 
_TEXT
 
SEGMENT


97 
ASSUME
 
CS
:
_TEXT
, 
DS
:
_DATA


99 ; 
Enh™˚d
 
fun˘i⁄
 
exp‹ts
 
Groups
 6A & 6B

100 
PUBLIC
 
h¨dw¨e_öô_asm


101 
PUBLIC
 
h¨dw¨e_dëe˘_Æl


102 
PUBLIC
 
h¨dw¨e_c⁄figuª_3c509b


103 
PUBLIC
 
h¨dw¨e_c⁄figuª_3c515


104 
PUBLIC
 
h¨dw¨e_ªad_∑ckë


105 
PUBLIC
 
h¨dw¨e_£nd_∑ckë_asm


106 
PUBLIC
 
h¨dw¨e_gë_addªss


107 
PUBLIC
 
h¨dw¨e_h™dÀ_3c509b_úq


108 
PUBLIC
 
h¨dw¨e_h™dÀ_3c515_úq


109 
PUBLIC
 
io_ªad_byã


110 
PUBLIC
 
io_wrôe_byã


111 
PUBLIC
 
io_ªad_w‹d


112 
PUBLIC
 
io_wrôe_w‹d


113 
PUBLIC
 
dëe˘_3c509b


114 
PUBLIC
 
öô_3c509b


116 ; 
Enh™˚d
 
Group
 6A/6B 
öãrÁ˚
 
fun˘i⁄s


117 
PUBLIC
 
h¨dw¨e_dëe˘_™d_c⁄figuª


118 
PUBLIC
 
h¨dw¨e_gë_devi˚_öfo


119 
PUBLIC
 
h¨dw¨e_£t_devi˚_°©e


120 
PUBLIC
 
h¨dw¨e_h™dÀ_öãºu±


121 
PUBLIC
 
h¨dw¨e_vÆid©e_c⁄figuøti⁄


122 
PUBLIC
 
dëe˘_3c509b_devi˚


123 
PUBLIC
 
dëe˘_3c515_devi˚


124 
PUBLIC
 
c⁄figuª_3c509b_devi˚


125 
PUBLIC
 
c⁄figuª_3c515_devi˚


126 
PUBLIC
 
£tup_3c509b_úq


127 
PUBLIC
 
£tup_3c515_úq


128 
PUBLIC
 
ª£t_3c509b_devi˚


129 
PUBLIC
 
ª£t_3c515_devi˚


130 
PUBLIC
 
ªad_3c509b_ì¥om


131 
PUBLIC
 
ªad_3c515_ì¥om
\
n
\n; 3C515-
TX
 
HAL
 
vèbÀ
 
fun˘i⁄
 
exp‹ts
\
nPUBLIC
 
asm_3c515_dëe˘_h¨dw¨e
\nPUBLIC 
asm_3c515_öô_h¨dw¨e
\nPUBLIC 
asm_3c515_ª£t_h¨dw¨e
\nPUBLIC 
asm_3c515_c⁄figuª_medü
\nPUBLIC 
asm_3c515_£t_°©i⁄_addªss
\nPUBLIC 
asm_3c515_íabÀ_öãºu±s
\nPUBLIC 
asm_3c515_°¨t_å™s˚ivî
\nPUBLIC 
asm_3c515_°›_å™s˚ivî
\nPUBLIC 
asm_3c515_gë_lök_°©us
\nPUBLIC 
asm_3c515_gë_°©i°ics
\nPUBLIC 
asm_3c515_£t_mu…iˇ°
\nPUBLIC 
asm_3c515_£t_¥omiscuous


133 ; 
Exã∫Æ
 
ª„ªn˚s


134 
EXTRN
 
gë_˝u_„©uªs
:
PROC
 ; 
From
 
˝u_dëe˘
.
asm


137 ; 
h¨dw¨e_öô_asm
 - 
Inôülize
 
h¨dw¨e
 
subsy°em


139 ; 
I≈ut
: 
N⁄e


140 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


141 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


143 
h¨dw¨e_öô_asm
 
PROC


144 
push
 
bp


145 
mov
 
bp
, 
•


146 
push
 
bx


147 
push
 
cx


148 
push
 
dx


149 
push
 
si


151 ; 
Inôülize
 
h¨dw¨e
 
dëe˘i⁄
 
°ru˘uªs
, 
˛ór
 
°©i°ics
, 
™d
 
dëe˘
 
Æl
 
avaûabÀ
 hardware

153 ; 
CÀ¨
 
h¨dw¨e
 
°©e


154 
mov
 
cx
, 
MAX_HW_INSTANCES


155 
mov
 
si
, 
OFFSET
 
hw_ö°™˚s


156 
mov
 
Æ
, 
HW_STATE_UNKNOWN


157 .
˛ór_°©e_lo›
:

158 
mov
 [
si
], 
Æ


159 
öc
 
si


160 
lo›
 .
˛ór_°©e_lo›


162 ; 
CÀ¨
 
I
/
O
 
°©i°ics


163 
mov
 
dw‹d
 
±r
 [
io_ªad_cou¡
], 0

164 
mov
 
dw‹d
 
±r
 [
io_wrôe_cou¡
], 0

165 
mov
 
w‹d
 
±r
 [
io_îr‹_cou¡
], 0

167 ; 
Dëe˘
 
Æl
 
h¨dw¨e


168 
ˇŒ
 
h¨dw¨e_dëe˘_Æl


169 
cmp
 
ax
, 0

170 
j√
 .
dëe˘i⁄_Áûed


172 ; 
Suc˚ss


173 
mov
 
ax
, 0

174 
jmp
 .
exô


176 .
dëe˘i⁄_Áûed
:

177 ; 
Log
 
dëe˘i⁄
 
Áûuª


178 
push
 
ax


179 
push
 
dx


180 
mov
 
ax
, 
ERROR_NOT_FOUND


181 
ˇŒ
 
log_h¨dw¨e_îr‹


182 
p›
 
dx


183 
p›
 
ax


184 
mov
 
ax
, 1

185 
jmp
 .
exô


187 .
exô
:

188 
p›
 
si


189 
p›
 
dx


190 
p›
 
cx


191 
p›
 
bx


192 
p›
 
bp


193 
ªt


194 
h¨dw¨e_öô_asm
 
ENDP


197 ; 
h¨dw¨e_dëe˘_Æl
 - 
Dëe˘
 
Æl
 
suµ‹ãd
 
h¨dw¨e


199 ; 
I≈ut
: 
N⁄e


200 ; 
Ouçut
: 
AX
 = 
numbî
 
of
 
devi˚s
 
dëe˘ed


201 ; 
U£s
: 
AŒ
 
ªgi°îs


203 
h¨dw¨e_dëe˘_Æl
 
PROC


204 
push
 
bp


205 
mov
 
bp
, 
•


206 
push
 
bx


207 
push
 
cx


208 
push
 
dx


209 
push
 
si


210 
push
 
di


212 ; 
Com¥ehísive
 
h¨dw¨e
 
dëe˘i⁄
 - 
sˇn
 
ISA
 
™d
 
EISA
 
bu£s
 3C509Bánd 3C515-
TX
 
ˇrds


214 
mov
 
bx
, 0 ; 
Devi˚
 
cou¡î


216 ; 
Try
 
to
 
dëe˘
 3C509B (
ISA
 
bus
)

217 
ˇŒ
 
dëe˘_3c509b


218 
cmp
 
ax
, 0

219 
je
 .
no_3c509b


221 ; 
Found
 3C509B - 
°‹e
 
ö
 
fú°
 
¶Ÿ


222 
mov
 
byã
 
±r
 [
hw_ö°™˚s
], 
HW_STATE_DETECTED


223 
mov
 
byã
 
±r
 [
hw_ty≥s
], 1 ; 
Ty≥
 1 = 3C509B

224 
mov
 [
hw_io_ba£s
], 
ax
 ; 
St‹e
 
I
/
O
 
ba£


225 
öc
 
bx


227 .
no_3c509b
:

228 ; 
Try
 
to
 
dëe˘
 3C515-
	$TX
 (
ISA
 
bus
 
wôh
 bu†
ma°îög
)

229 
ˇŒ
 
dëe˘_3c515


230 
cmp
 
ax
, 0

231 
je
 .
no_3c515


233 ; 
Found
 3C515 - 
°‹e
 
ö
 
£c⁄d
 
	$¶Ÿ
 (
avaûabÀ
)

234 
cmp
 
bx
, 
MAX_HW_INSTANCES


235 
j´
 .
no_m‹e_¶Ÿs


237 
mov
 
si
, 
OFFSET
 
hw_ö°™˚s


238 
add
 
si
, 
bx


239 
mov
 
byã
 
±r
 [
si
], 
HW_STATE_DETECTED


240 
mov
 
si
, 
OFFSET
 
hw_ty≥s


241 
add
 
si
, 
bx


242 
mov
 
byã
 
±r
 [
si
], 2 ; 
Ty≥
 2 = 3C515

243 
mov
 
si
, 
OFFSET
 
hw_io_ba£s


244 
shl
 
bx
, 1 ; 
C⁄vît
 
to
 
w‹d
 
off£t


245 
add
 
si
, 
bx


246 
mov
 [
si
], 
ax
 ; 
St‹e
 
I
/
O
 
ba£


247 
shr
 
bx
, 1 ; 
Re°‹e
 
byã
 
off£t


248 
öc
 
bx


250 .
no_m‹e_¶Ÿs
:

251 .
no_3c515
:

252 ; 
Check
 
unsuµ‹ãd
 
bus
 
NICs
 
™d
 
w¨n
 
u£r


253 
push
 
bx
 ; 
Save
 
devi˚
 
cou¡


255 ; 
Check
 
EISA
 
	$NICs
 (
°ub
)

256 
ˇŒ
 
nic_dëe˘_eiß_3c592


257 
mov
 
cx
, 
ax


258 
ˇŒ
 
nic_dëe˘_eiß_3c597


259 
‹
 
ax
, 
cx


260 
jz
 .
check_mˇ


261 
push
 
OFFSET
 
msg_eiß_nŸ_suµ‹ãd


262 
ˇŒ
 
log_w¨nög


263 
add
 
•
, 2

265 .
check_mˇ
:

266 ; 
Check
 
this
 
is
 
™
 
MCA
 
sy°em


267 
ˇŒ
 
is_mˇ_sy°em


268 
‹
 
ax
,áx

269 
jz
 .
check_vlb
 ; 
NŸ
 
MCA
, 
skù
 MCA 
checks


271 ; 
It
'sán MCA system - check for MCA NICs

272 
ˇŒ
 
nic_dëe˘_mˇ_3c523


273 
mov
 
cx
, 
ax


274 
ˇŒ
 
nic_dëe˘_mˇ_3c529


275 
‹
 
ax
, 
cx


276 
jz
 .
mˇ_no_nics
 ; 
No
 
MCA
 
NICs
 
found


278 ; 
MCA
 
NICs
 
found
 - 
w¨n
 
u£r


279 
push
 
OFFSET
 
msg_mˇ_nŸ_suµ‹ãd


280 
ˇŒ
 
log_w¨nög


281 
add
 
•
, 2

283 .
mˇ_no_nics
:

284 ; 
AŒ
 
MCA
 
sy°ems
 
¨e
 
puª
 MCA - 
no
 
ISA
 
¶Ÿs
 
avaûabÀ


285 
push
 
OFFSET
 
msg_puª_mˇ_îr‹1


286 
ˇŒ
 
log_îr‹


287 
add
 
•
, 2

288 
push
 
OFFSET
 
msg_puª_mˇ_îr‹2


289 
ˇŒ
 
log_îr‹


290 
add
 
•
, 2

291 
push
 
OFFSET
 
msg_puª_mˇ_îr‹3


292 
ˇŒ
 
log_îr‹


293 
add
 
•
, 2

295 ; 
Së
 
devi˚
 
cou¡
 
to
 0 
™d
 
exô
 
óæy


296 
p›
 
bx
 ; 
Re°‹e
 
ßved
 
devi˚
 
cou¡


297 
x‹
 
ax
,áx ; 
Rëu∫
 0 
devi˚s


298 
jmp
 .
óæy_exô


300 .
check_vlb
:

301 ; 
Check
 
VLB
 
	$NICs
 (
°ub
)

302 
ˇŒ
 
nic_dëe˘_vlb


303 
‹
 
ax
,áx

304 
jz
 .
d⁄e_checkög


305 ; 
VLB
 
Æªady
 
logs
 
ôs
 
own
 
mesßge


307 .
d⁄e_checkög
:

308 
p›
 
bx
 ; 
Re°‹e
 
devi˚
 
cou¡


310 ; 
Rëu∫
 
numbî
 
of
 
devi˚s
 
dëe˘ed


311 
mov
 
ax
, 
bx


313 .
óæy_exô
:

314 
p›
 
di


315 
p›
 
si


316 
p›
 
dx


317 
p›
 
cx


318 
p›
 
bx


319 
p›
 
bp


320 
ªt


321 
h¨dw¨e_dëe˘_Æl
 
ENDP


324 ; 
dëe˘_3c509b
 - 
Dëe˘
 3C509B 
ISA
 
ˇrd
 
usög
 
¥›î
 
LFSR
 
ID
 
£quí˚


326 ; 
I≈ut
: 
N⁄e


327 ; 
Ouçut
: 
AX
 = 
I
/
O
 
ba£
 
addªss
 
found
, 0 
nŸ
 found

328 ; 
U£s
: 
AŒ
 
ªgi°îs


330 
dëe˘_3c509b
 
PROC


331 
push
 
bp


332 
mov
 
bp
, 
•


333 
push
 
bx


334 
push
 
cx


335 
push
 
dx


336 
push
 
si


337 
push
 
di


339 ; 
Pîf‹m
 3C509B 
ID
 
£quí˚
 
usög
 
LFSR
 
èbÀ


340 ; 
This
 
is
 
the
 
°™d¨d
 3C
om
 
isﬁ©i⁄
 
¥Ÿocﬁ


342 ; 
Re£t
 
Æl
 
ˇrds
 
to
 
known
 
°©e


343 
mov
 
dx
, 0110
h
 ; 
Sènd¨d
 
ID
 
p‹t


344 
mov
 
Æ
, 0C0
h
 ; 
GlobÆ
 
ª£t
 
comm™d


345 
out
 
dx
, 
Æ


347 ; 
SmÆl
 
dñay
 
a·î
 
ª£t


348 
mov
 
cx
, 1000

349 .
ª£t_dñay
:

350 
lo›
 .
ª£t_dñay


352 ; 
Síd
 
ID
 
£quí˚
 
to
 
isﬁ©e
 
ˇrds


353 ; 
U£
 
LFSR
 
£quí˚
: 255 
byãs
 
°¨tög
 
wôh
 0xFF

354 
mov
 
Æ
, 0 ; 
Sèπ
 
wôh
 0x00

355 
out
 
dx
, 
Æ


356 
mov
 
Æ
, 0 ; 
Sec⁄d
 0x00

357 
out
 
dx
, 
Æ


359 ; 
Síd
 255-
byã
 
LFSR
 
£quí˚


360 
mov
 
si
, 
OFFSET
 
lf§_èbÀ


361 
mov
 
cx
, 
LFSR_TABLE_SIZE
 ; 255 
byãs


363 .
id_£quí˚_lo›
:

364 
lodsb
 ; 
Lﬂd
 
byã
 
‰om
 
LFSR
 
èbÀ


365 
out
 
dx
, 
Æ
 ; 
Síd
 
to
 
ID
 
p‹t


366 
lo›
 .
id_£quí˚_lo›


368 ; 
Re£t
 
èg
 
fú°
 
ˇrd
 
dëe˘i⁄


369 
mov
 
Æ
, 0D0
h
 ; 
Së
 
èg
 
comm™d


370 
out
 
dx
, 
Æ


372 ; 
Ród
 
EEPROM
 
addªss
 7 
to
 
check
 3C
om
 
sig«tuª


373 
mov
 
Æ
, 87
h
 ; 
Ród
 
EEPROM
 
loˇti⁄
 7

374 
out
 
dx
, 
Æ


376 ; 
Waô
 
EEPROM
 
	`ªady
 (15Œº
s
 
möimum
 
‰om
 
Löux
 
drivî
)

377 
mov
 
cx
, 50 ; 
Aµroxim©ñy
 15Œº
s
 
©
 
typiˇl
 
CPU
 
•ìds


378 .
ì¥om_waô1
:

379 
n›


380 
lo›
 .
ì¥om_waô1


382 ; 
Ród
 
the
 
d©a
 
bô
 
by
 
	$bô
 (3C509B 
¥Ÿocﬁ
)

383 
mov
 
cx
, 16 ; 16 
bôs


384 
mov
 
bx
, 0 ; 
Accumuœt‹


386 .
ªad_ì¥om_lo›
:

387 
shl
 
bx
, 1 ; 
Shi·
 
accumuœt‹
 
À·


388 
ö
 
Æ
, 
dx
 ; 
Ród
 
‰om
 
ID
 
p‹t


389 
™d
 
Æ
, 01
h
 ; 
Mask
 
to
 
gë
 
LSB


390 
‹
 
bl
, 
Æ
 ; 
OR
 
öto
 
accumuœt‹


391 
lo›
 .
ªad_ì¥om_lo›


393 ; 
Check
 3C
om
 
¥odu˘
 
	$ID
 (0x6D50)

394 
cmp
 
bx
, 6D50
h


395 
j√
 .
nŸ_found


397 ; 
Found
 3C
om
 
ˇrd
 - 
ªad
 
I
/
O
 
ba£
 
c⁄figuøti⁄


398 
mov
 
Æ
, 88
h
 ; 
Ród
 
EEPROM
 
loˇti⁄
 8 (
I
/
O
 
c⁄fig
)

399 
out
 
dx
, 
Æ


401 ; 
Waô
 
EEPROM
 
ªady


402 
mov
 
cx
, 50

403 .
ì¥om_waô2
:

404 
n›


405 
lo›
 .
ì¥om_waô2


407 ; 
Ród
 
I
/
O
 
ba£
 
c⁄figuøti⁄


408 
mov
 
cx
, 16

409 
mov
 
bx
, 0

411 .
ªad_ioba£_lo›
:

412 
shl
 
bx
, 1

413 
ö
 
Æ
, 
dx


414 
™d
 
Æ
, 01
h


415 
‹
 
bl
, 
Æ


416 
lo›
 .
ªad_ioba£_lo›


418 ; 
CÆcuœã
 
I
/
O
 
ba£
 
addªss


419 ; 
BŸtom
 5 
bôs
 
give
 
the
 
ba£
, 
t›
 bô†givê
öãrÁ˚
 
ty≥


420 
™d
 
bx
, 001F
h
 ; 
Mask
 
to
 
gë
 
ba£
 
addªss
 
bôs


421 
shl
 
bx
, 4 ; 
Mu…ùly
 
by
 16

422 
add
 
bx
, 0200
h
 ; 
Add
 
ba£
 
off£t


424 ; 
A˘iv©e
 
the
 
ˇrd
 
©
 
this
 
I
/
O
 
addªss


425 
mov
 
Æ
, 
bl
 ; 
Low
 
byã
 
of
 
I
/
O
 
ba£


426 
shr
 
Æ
, 4 ; 
Shi·
 
to
 
gë
 
addªss
 
code


427 
‹
 
Æ
, 0E0
h
 ; 
Add
 
a˘iv©e
 
comm™d


428 
out
 
dx
, 
Æ


430 ; 
SmÆl
 
dñay
 
a·î
 
a˘iv©i⁄


431 
mov
 
cx
, 2000

432 .
a˘iv©e_dñay
:

433 
lo›
 .
a˘iv©e_dñay


435 ; 
Vîify
 
the
 
ˇrd
 
ª•⁄ds
 
©
 
ˇlcuœãd
 
addªss


436 
mov
 
dx
, 
bx
 ; 
U£
 
ˇlcuœãd
 
I
/
O
 
ba£


437 
add
 
dx
, 0E
h
 ; 
Comm™d
/
Sètus
 

439 ; 
Sñe˘
 
wödow
 0 
idítifiˇti⁄


440 
mov
 
ax
, (1 
shl
 11Ë
‹
 0 ; 
Sñe˘
 
wödow
 0 
comm™d


441 
out
 
dx
, 
ax


443 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


444 
mov
 
cx
, 100

445 .
wödow_dñay
:

446 
lo›
 .
wödow_dñay


448 ; 
Ród
 
‰om
 
the
 
ˇrd
 
to
 
vîify
 
¥e£n˚


449 
ö
 
ax
, 
dx


450 ; 
If
 
we
 
gë
 
Æl
 1
s
, 
ˇrd
 
is
 
nŸ
 
thîe


451 
cmp
 
ax
, 0FFFF
h


452 
je
 .
nŸ_found


454 ; 
Suc˚ss
 -  
I
/
O
 
ba£
 
addªss


455 
mov
 
ax
, 
bx


456 
jmp
 .
exô


458 .
nŸ_found
:

459 
mov
 
ax
, 0 ; 
Rëu∫
 0 
nŸ
 
found


461 .
exô
:

462 
p›
 
di


463 
p›
 
si


464 
p›
 
dx


465 
p›
 
cx


466 
p›
 
bx


467 
p›
 
bp


468 
ªt


469 
dëe˘_3c509b
 
ENDP


472 ; 
öô_3c509b
 - 
Inôülize
 
dëe˘ed
 3C509B 
ˇrd


474 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss
, 
AL
 = 
NIC
 
ödex


475 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


476 ; 
U£s
: 
AŒ
 
ªgi°îs


478 
öô_3c509b
 
PROC


479 
push
 
bp


480 
mov
 
bp
, 
•


481 
push
 
bx


482 
push
 
cx


483 
push
 
dx


484 
push
 
si


485 
push
 
di


487 ; 
St‹e
 
NIC
 
ödex
 
œãr
 
u£


488 
mov
 
bl
, 
Æ


490 ; 
Pîf‹m
 
tŸÆ
 
ª£t
 
fú°


491 
mov
 
ax
, (0 
shl
 11Ë; 
TŸÆ
 
Re£t
 
comm™d


492 
add
 
dx
, 0E
h
 ; 
Comm™d
 
off£t


493 
out
 
dx
, 
ax


494 
sub
 
dx
, 0E
h
 ; 
Re°‹e
 
ba£
 
addªss


496 ; 
Waô
 
ª£t
 
to
 
	$com∂ëe
 (
möimum
 1
ms
)

497 
mov
 
cx
, 10000

498 .
ª£t_waô
:

499 
n›


500 
lo›
 .
ª£t_waô


502 ; 
Sñe˘
 
wödow
 0 
c⁄figuøti⁄


503 
add
 
dx
, 0E
h
 ; 
Comm™d
 

504 
mov
 
ax
, (1 
shl
 11Ë
‹
 0 ; 
Sñe˘
 
Wödow
 0

505 
out
 
dx
, 
ax


506 
sub
 
dx
, 0E
h


508 ; 
Ród
 
™d
 
°‹e
 
MAC
 
addªss
 
‰om
 
EEPROM


509 
mov
 
si
, 0 ; 
EEPROM
 
addªss
 
cou¡î


510 
mov
 
di
, 
OFFSET
 
hw_mac_addªs£s


511 
mov
 
ah
, 0

512 
mov
 
Æ
, 
bl
 ; 
NIC
 
ödex


513 
mov
 
˛
, 6 ; 6 
byãs
 
≥r
 
MAC
 
addªss


514 
mul
 
˛


515 
add
 
di
, 
ax
 ; 
Poöt
 
to
 
this
 
NIC
's MAC storage

517 ; 
Ród
 
MAC
 
	$addªss
 (3 
w‹ds
 = 6 
byãs
)

518 
mov
 
cx
, 3 ; 
Ród
 3 
EEPROM
 
w‹ds


520 .
ªad_mac_lo›
:

521 ; 
Së
 
EEPROM
 
addªss
 
ªad


522 
push
 
dx


523 
add
 
dx
, 0A
h
 ; 
EEPROM
 
comm™d
 

524 
mov
 
ax
, 0080
h
 ; 
Ród
 
comm™d


525 
‹
 
ax
, 
si
 ; 
Add
 
EEPROM
 
addªss


526 
out
 
dx
, 
ax


528 ; 
Waô
 
EEPROM
 
	`ªady
 (15Œº
s
 
möimum
)

529 
push
 
cx


530 
mov
 
cx
, 50

531 .
mac_ì¥om_waô
:

532 
n›


533 
lo›
 .
mac_ì¥om_waô


534 
p›
 
cx


536 ; 
Ród
 
EEPROM
 
d©a


537 
add
 
dx
, 2 ; 
EEPROM
 
d©a
 (0C
h
)

538 
ö
 
ax
, 
dx


539 
p›
 
dx


541 ; 
St‹e
 
MAC
 
	$byãs
 (3C
om
 
°‹es
 
byãs
 
sw≠≥d
)

542 
mov
 [
di
], 
ah
 ; 
St‹e
 
high
 
byã
 
fú°


543 
öc
 
di


544 
mov
 [
di
], 
Æ
 ; 
St‹e
 
low
 
byã


545 
öc
 
di


547 
öc
 
si
 ; 
Next
 
EEPROM
 
addªss


548 
lo›
 .
ªad_mac_lo›


550 ; 
Sñe˘
 
wödow
 2 
to
 
£t
 
°©i⁄
 
addªss


551 
add
 
dx
, 0E
h
 ; 
Comm™d
 

552 
mov
 
ax
, (1 
shl
 11Ë
‹
 2 ; 
Sñe˘
 
Wödow
 2

553 
out
 
dx
, 
ax


555 ; 
Wrôe
 
MAC
 
addªss
 
to
 
°©i⁄
áddªs†
ªgi°îs


556 
mov
 
si
, 
OFFSET
 
hw_mac_addªs£s


557 
mov
 
ah
, 0

558 
mov
 
Æ
, 
bl
 ; 
NIC
 
ödex


559 
mov
 
˛
, 6

560 
mul
 
˛


561 
add
 
si
, 
ax
 ; 
Poöt
 
to
 
this
 
NIC
's MAC

563 
mov
 
cx
, 6 ; 6 
byãs
 
to
 
wrôe


564 
mov
 
di
, 0 ; 
Regi°î
 
off£t


566 .
wrôe_mac_lo›
:

567 
mov
 
Æ
, [
si
] ; 
Lﬂd
 
MAC
 
byã


568 
push
 
dx


569 
add
 
dx
, 
di
 ; 
Add
 
off£t


570 
out
 
dx
, 
Æ
 ; 
Wrôe
 
to
 
°©i⁄
 
addªss
 

571 
p›
 
dx


572 
öc
 
si
 ; 
Next
 
MAC
 
byã


573 
öc
 
di
 ; 
Next
 

574 
lo›
 .
wrôe_mac_lo›


576 ; 
Sñe˘
 
wödow
 1 
n‹mÆ
 
›î©i⁄


577 
add
 
dx
, 0E
h
 ; 
Comm™d
 

578 
mov
 
ax
, (1 
shl
 11Ë
‹
 1 ; 
Sñe˘
 
Wödow
 1

579 
out
 
dx
, 
ax


581 ; 
Së
 
ª˚ive
 
	`fûãr
 (
°©i⁄
 + 
brﬂdˇ°
)

582 
mov
 
ax
, (16 
shl
 11Ë
‹
 0005
h
 ; 
SëRxFûãr
: 
Sèti⁄
 + 
Brﬂdˇ°


583 
out
 
dx
, 
ax


585 ; 
E«bÀ
 
ª˚ivî


586 
mov
 
ax
, (4 
shl
 11Ë; 
RxE«bÀ
 
comm™d


587 
out
 
dx
, 
ax


589 ; 
E«bÀ
 
å™smôãr


590 
mov
 
ax
, (9 
shl
 11Ë; 
TxE«bÀ
 
comm™d


591 
out
 
dx
, 
ax


593 ; 
Suc˚ss


594 
mov
 
ax
, 0

596 
p›
 
di


597 
p›
 
si


598 
p›
 
dx


599 
p›
 
cx


600 
p›
 
bx


601 
p›
 
bp


602 
ªt


603 
öô_3c509b
 
ENDP


606 ; 
dëe˘_3c515
 - 
Dëe˘
 3C515-
TX
 
ISA
 
ˇrd
 
wôh
 
bus
 
sˇn
 0x100-0x3E0 
°ï
 0x20

608 ; 
I≈ut
: 
N⁄e


609 ; 
Ouçut
: 
AX
 = 
I
/
O
 
ba£
 
addªss
 
found
, 0 
nŸ
 found

610 ; 
U£s
: 
AŒ
 
ªgi°îs


612 
dëe˘_3c515
 
PROC


613 
push
 
bp


614 
mov
 
bp
, 
•


615 
push
 
bx


616 
push
 
cx


617 
push
 
dx


618 
push
 
si


620 ; 
Sˇn
 
ISA
 
bus
 
‰om
 0x100 
to
 0x3E0 
ö
 
°ïs
 
of
 0x20

621 ; 3C515 
is
 
™
 
ISA
 
ˇrd
, 
NOT
 
PCI
!

622 
mov
 
dx
, 
C515_ISA_MIN_IO
 ; 
Sèπ
 
©
 0x100

623 
mov
 
cx
, ((
C515_ISA_MAX_IO
 - 
C515_ISA_MIN_IO
Ë/ 
C515_ISA_STEP
) + 1

625 .
sˇn_lo›
:

626 ; 
Try
 
cuºít
 
I
/
O
 
addªss


627 
ˇŒ
 
¥obe_3c515_©_addªss


628 
cmp
 
ax
, 0

629 
j√
 .
found


631 ; 
Move
 
to
 
√xt
 
	$addªss
 (
°ï
 0x20)

632 
add
 
dx
, 20
h


633 
lo›
 .
sˇn_lo›


635 ; 
NŸ
 
found


636 
mov
 
ax
, 0

637 
jmp
 .
exô


639 .
found
:

640 ; 
Rëu∫
 
the
 
I
/
O
 
ba£
 
whîe
 
ˇrd
 
was
 
found


641 
mov
 
ax
, 
dx


643 .
exô
:

644 
p›
 
si


645 
p›
 
dx


646 
p›
 
cx


647 
p›
 
bx


648 
p›
 
bp


649 
ªt


650 
dëe˘_3c515
 
ENDP


653 ; 
¥obe_3c515_©_addªss
 - 
Probe
 3C515 
©
 
•ecific
 
addªss


655 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss
 
to
 
¥obe


656 ; 
Ouçut
: 
AX
 = 1 
found
, 0 
nŸ
 found

657 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI


659 
¥obe_3c515_©_addªss
 
PROC


660 
push
 
bp


661 
mov
 
bp
, 
•


662 
push
 
bx


663 
push
 
cx


664 
push
 
si


665 
push
 
dx


667 ; 
Sñe˘
 
wödow
 0 
EEPROM
 
ac˚ss


668 
push
 
dx


669 
add
 
dx
, 0E
h
 ; 
Comm™d
 

670 
mov
 
ax
, (1 << 11Ë| 0 ; 
Sñe˘
 
wödow
 0

671 
out
 
dx
, 
ax


672 
p›
 
dx


674 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


675 
mov
 
cx
, 100

676 .
dñay1
:

677 
n›


678 
lo›
 .
dñay1


680 ; 
Try
 
to
 
ªad
 
EEPROM
Åÿ
idítify
 3C515-
TX


681 ; 3C515 
u£s
 
dif„ª¡
 
EEPROM
 
ac˚ss
 
©
 
ba£
+0x0A 
ö
 
Wödow
 0

682 
push
 
dx


683 
add
 
dx
, 0A
h
 ; 
EEPROM
 
comm™d
 (
ISA
 
off£t
)

684 
mov
 
ax
, 80
h
 | 3 ; 
Ród
 
comm™d
 
ModñID
 
loˇti⁄


685 
out
 
dx
, 
ax


686 
p›
 
dx


688 ; 
Waô
 162Œº
s
 
	$EEPROM
 (
‰om
 
Löux
 
drivî
 
™Æysis
)

689 
mov
 
cx
, 162

690 .
ì¥om_dñay
:

691 
ˇŒ
 
dñay_1us
 ; 1 
mi¸o£c⁄d
 
dñay


692 
lo›
 .
ì¥om_dñay


694 ; 
Ród
 
EEPROM
 
d©a


695 
push
 
dx


696 
add
 
dx
, 0C
h
 ; 
EEPROM
 
d©a
 (
ISA
 
off£t
)

697 
ö
 
ax
, 
dx


698 
p›
 
dx


700 ; 
Check
 3C515-
TX
 
¥odu˘
 
	$ID
 (0x5051 
wôh
 
ªvisi⁄
 
mask
)

701 
™d
 
ax
, 0F0FF
h
 ; 
Mask
 
off
 
ªvisi⁄
 
nibbÀ


702 
cmp
 
ax
, 5051
h
 ; 3C515-
TX
 
¥odu˘
 
ID


703 
je
 .
found_3c515


705 ; 
NŸ
 
found


706 
mov
 
ax
, 0

707 
jmp
 .
exô


709 .
found_3c515
:

710 ; 
Vîify
 
ô
'sÑeallyá 3C515 by checking 3Com ID

711 
push
 
dx


712 
add
 
dx
, 200A
h
 ; 
EEPROM
 
comm™d
 

713 
mov
 
ax
, 80
h
 | 7 ; 
Ród
 
EthîLök3ID
 
loˇti⁄


714 
out
 
dx
, 
ax


715 
p›
 
dx


717 ; 
Waô
 
EEPROM


718 
mov
 
cx
, 162

719 .
ì¥om_dñay2
:

720 
ˇŒ
 
dñay_1us


721 
lo›
 .
ì¥om_dñay2


723 ; 
Ród
 3C
om
 
ID


724 
push
 
dx


725 
add
 
dx
, 200C
h
 ; 
EEPROM
 
d©a
 

726 
ö
 
ax
, 
dx


727 
p›
 
dx


729 
cmp
 
ax
, 6D50
h
 ; 3C
om
 
m™uÁ˘uªr
 
ID


730 
j√
 .
nŸ_3com


732 ; 
Found
 
vÆid
 3C515-
TX


733 
mov
 
ax
, 1

734 
jmp
 .
exô


736 .
nŸ_3com
:

737 
mov
 
ax
, 0

739 .
exô
:

740 
p›
 
dx


741 
p›
 
si


742 
p›
 
cx


743 
p›
 
bx


744 
p›
 
bp


745 
ªt


746 
¥obe_3c515_©_addªss
 
ENDP


749 ; 
dñay_1us
 - 1 
mi¸o£c⁄d
 
dñay


751 ; 
I≈ut
: 
N⁄e


752 ; 
Ouçut
: 
N⁄e


753 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

755 
dñay_1us
 
PROC


756 
push
 
cx


757 ; 
Aµroxim©e
 1Œº
s
 
	`dñay
 (
CPU
-
dïídít
, 
rough
 
e°im©e
)

758 
mov
 
cx
, 3 ; 
Adju°
 
CPU
 
•ìd


759 .
dñay_lo›
:

760 
n›


761 
lo›
 .
dñay_lo›


762 
p›
 
cx


763 
ªt


764 
dñay_1us
 
ENDP


767 ; 
h¨dw¨e_c⁄figuª_3c509b
 - 
C⁄figuª
 3C509B 
h¨dw¨e


769 ; 
I≈ut
: 
AL
 = 
ö°™˚
 
ödex
, 
DX
 = 
I
/
O
 
ba£
 
addªss


770 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


771 ; 
U£s
: 
AŒ
 
ªgi°îs


773 
h¨dw¨e_c⁄figuª_3c509b
 
PROC


774 
push
 
bp


775 
mov
 
bp
, 
•


776 
push
 
bx


777 
push
 
cx


778 
push
 
dx


779 
push
 
si


781 ; 
Com∂ëe
 3C509B 
c⁄figuøti⁄
 
£quí˚


782 ; 
Save
 
ö°™˚
 
™d
 
I
/
O
 
ba£


783 
push
 
ax
 ; 
Save
 
ö°™˚
 
ödex


784 
mov
 
si
, 
dx
 ; 
SI
 = 
I
/
O
 
ba£


786 ; 
Sãp
 1: 
Re£t
 
the
 
ad≠ãr


787 
mov
 
dx
, 
si


788 
add
 
dx
, 
REG_COMMAND


789 
mov
 
ax
, 0000
h
 ; 
GlobÆ
 
ª£t
 
comm™d


790 
out
 
dx
, 
ax


792 ; 
Waô
 
ª£t
 
to
 
	`com∂ëe
 (~1
ms
)

793 
mov
 
cx
, 300

794 .
ª£t_waô
:

795 
ö
 
Æ
, 80
h
 ; 
I
/
O
 
	`dñay
 (~3.3u
s
)

796 
lo›
 .
ª£t_waô


798 ; 
Sãp
 2: 
Sñe˘
 
Wödow
 0 
EEPROM
 
ac˚ss


799 
mov
 
dx
, 
si


800 
add
 
dx
, 
REG_WINDOW


801 
mov
 
ax
, 0800
h
 ; 
CMD_SELECT_WINDOW
 | 0

802 
out
 
dx
, 
ax


804 ; 
Sãp
 3: 
Ród
 
MAC
 
addªss
 
‰om
 
EEPROM


805 
p›
 
ax
 ; 
Re°‹e
 
ö°™˚
 
ödex


806 
push
 
ax


807 
ˇŒ
 
ªad_mac_‰om_ì¥om_3c509b


809 ; 
Sãp
 4: 
Sñe˘
 
Wödow
 2 
to
 
£t
 
°©i⁄
 
addªss


810 
mov
 
dx
, 
si


811 
add
 
dx
, 
REG_WINDOW


812 
mov
 
ax
, 0802
h
 ; 
CMD_SELECT_WINDOW
 | 2

813 
out
 
dx
, 
ax


815 ; 
Wrôe
 
MAC
 
addªss
 
to
 
°©i⁄
áddªs†
ªgi°îs


816 
p›
 
ax
 ; 
Gë
 
ö°™˚
 
ödex


817 
push
 
ax


818 
mov
 
bl
, 
Æ


819 
x‹
 
bh
, bh

820 
shl
 
bx
, 1 ; 
W‹d
 
off£t


821 
shl
 
bx
, 1 ; 
x4


822 
shl
 
bx
, 1 ; 
x8
 6-
byã
 
MAC


823 
mov
 
di
, 
OFFSET
 
hw_mac_addªs£s


824 
add
 
di
, 
bx


826 ; 
Wrôe
 6 
byãs
 
of
 
MAC
 
to
 
Wödow
 2, 
ªgi°îs
 0-5

827 
mov
 
cx
, 3 ; 3 
w‹ds


828 
mov
 
dx
, 
si
 ; 
Ba£
 
addªss


829 .
wrôe_mac
:

830 
mov
 
ax
, [
di
]

831 
out
 
dx
, 
ax


832 
add
 
dx
, 2

833 
add
 
di
, 2

834 
lo›
 .
wrôe_mac


836 ; 
Sãp
 5: 
C⁄figuª
 
medü
 
ty≥
 
ö
 
Wödow
 3

837 
mov
 
dx
, 
si


838 
add
 
dx
, 
REG_WINDOW


839 
mov
 
ax
, 0803
h
 ; 
CMD_SELECT_WINDOW
 | 3

840 
out
 
dx
, 
ax


842 ; 
C⁄figuª
 
öã∫Æ
 
c⁄fig
 (
off£t
 0)

843 
mov
 
dx
, 
si


844 
ö
 
ax
, 
dx


845 
‹
 
ax
, 0030
h
 ; 
E«bÀ
 10Ba
£T


846 
out
 
dx
, 
ax


848 ; 
C⁄figuª
 
MAC
 
	$c⁄åﬁ
 (
off£t
 6)

849 
mov
 
dx
, 
si


850 
add
 
dx
, 6

851 
ö
 
ax
, 
dx


852 
™d
 
ax
, 0FF8F
h
 ; 
CÀ¨
 
medü
 
bôs


853 
‹
 
ax
, 0000
h
 ; 10Ba
	$£T
 (
bôs
 6:4 = 000)

854 
out
 
dx
, 
ax


856 ; 
Sãp
 6: 
Sñe˘
 
å™s˚ivî


857 
mov
 
dx
, 
si


858 
add
 
dx
, 
REG_COMMAND


859 
mov
 
ax
, 3000
h
 ; 
CMD_SELECT_XCVR
 | 10Ba
£T


860 
out
 
dx
, 
ax


862 ; 
Sãp
 7: 
Sñe˘
 
Wödow
 1 
›î©i⁄


863 
mov
 
ax
, 0801
h
 ; 
CMD_SELECT_WINDOW
 | 1

864 
out
 
dx
, 
ax


866 ; 
Sãp
 8: 
Së
 
RX
 
	`fûãr
 (
°©i⁄
 + 
brﬂdˇ°
)

867 
mov
 
ax
, 0800
h
 | 05h ; 
SET_RX_FILTER
 | 
Sèti⁄
+
Brﬂdˇ°


868 
out
 
dx
, 
ax


870 ; 
Sãp
 9: 
Së
 
RX
 
óæy
 
thªshﬁd


871 
mov
 
ax
, 1000
h
 | 40h ; 
SET_RX_EARLY
 | 64 
byãs


872 
out
 
dx
, 
ax


874 ; 
Sãp
 10: 
Së
 
TX
 
avaûabÀ
 
thªshﬁd


875 
mov
 
ax
, 9800
h
 | 40h ; 
SET_TX_AVAIL
 | 64 
byãs


876 
out
 
dx
, 
ax


878 ; 
Sãp
 11: 
E«bÀ
 
ª˚ivî


879 
mov
 
ax
, 2000
h
 ; 
RX_ENABLE


880 
out
 
dx
, 
ax


882 ; 
Sãp
 12: 
E«bÀ
 
å™smôãr


883 
mov
 
ax
, 4800
h
 ; 
TX_ENABLE


884 
out
 
dx
, 
ax


886 ; 
Sãp
 13: 
Së
 
öãºu±
 
mask


887 
mov
 
ax
, 7000
h
 | 00FFh ; 
SET_INTR_MASK
 | 
AŒ
 
öãºu±s


888 
out
 
dx
, 
ax


890 ; 
Sãp
 14: 
CÀ¨
 
™y
 
≥ndög
 
öãºu±s


891 
mov
 
ax
, 6800
h
 | 00FFh ; 
ACK_INTR
 | 
AŒ


892 
out
 
dx
, 
ax


894 ; 
VÆid©e
 
ö°™˚
 
ödex


895 
p›
 
ax
 ; 
Re°‹e
 
ö°™˚


896 
cmp
 
Æ
, 
MAX_HW_INSTANCES


897 
j´
 .
övÆid_ö°™˚


899 ; 
M¨k
 
as
 
c⁄figuªd


900 
mov
 
bl
, 
Æ


901 
mov
 
bh
, 0

902 
mov
 
si
, 
OFFSET
 
hw_ö°™˚s


903 
add
 
si
, 
bx


904 
mov
 
byã
 
±r
 [
si
], 
HW_STATE_CONFIGURED


906 ; 
Suc˚ss


907 
mov
 
ax
, 0

908 
jmp
 .
exô


910 .
övÆid_ö°™˚
:

911 
mov
 
ax
, 1

912 
jmp
 .
exô


914 .
exô
:

915 
p›
 
si


916 
p›
 
dx


917 
p›
 
cx


918 
p›
 
bx


919 
p›
 
bp


920 
ªt


921 
h¨dw¨e_c⁄figuª_3c509b
 
ENDP


924 ; 
öô_3c515
 - 
Inôülize
 3C515-
TX
 
wôh
 
DMA
 
£tup
 
™d
 
bus
 
ma°îög


926 ; 
I≈ut
: 
AL
 = 
ö°™˚
 
ödex
, 
DX
 = 
I
/
O
 
ba£
 
addªss


927 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


928 ; 
U£s
: 
AŒ
 
ªgi°îs


930 
öô_3c515
 
PROC


931 
push
 
bp


932 
mov
 
bp
, 
•


933 
push
 
bx


934 
push
 
cx


935 
push
 
dx


936 
push
 
si


937 
push
 
di


939 ; 
VÆid©e
 
ö°™˚
 
ödex


940 
cmp
 
Æ
, 
MAX_HW_INSTANCES


941 
j´
 .
övÆid_ö°™˚


943 ; 
Save
 
∑ømëîs


944 
mov
 
bl
, 
Æ
 ; 
Save
 
ö°™˚
 
ödex


945 
mov
 
si
, 
dx
 ; 
Save
 
I
/
O
 
ba£


947 ; 
TŸÆ
 
ª£t
 
fú°


948 
add
 
dx
, 0E
h
 ; 
Comm™d
 

949 
mov
 
ax
, 0 ; 
TŸÆ
 
ª£t
 
comm™d


950 
out
 
dx
, 
ax


952 ; 
Waô
 
ª£t
 
to
 
com∂ëe


953 
mov
 
cx
, 1000

954 .
ª£t_waô
:

955 
ˇŒ
 
dñay_1ms


956 
lo›
 .
ª£t_waô


958 
mov
 
dx
, 
si
 ; 
Re°‹e
 
I
/
O
 
ba£


960 ; 
Sñe˘
 
wödow
 0 
to
 
ªad
 
EEPROM
 
™d
 
gë
 
MAC
 
addªss


961 
add
 
dx
, 0E
h


962 
mov
 
ax
, (1 << 11Ë| 0 ; 
Sñe˘
 
wödow
 0

963 
out
 
dx
, 
ax


964 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


966 ; 
Ród
 
MAC
 
addªss
 
‰om
 
EEPROM


967 
ˇŒ
 
ªad_3c515_mac_addªss


969 ; 
Sñe˘
 
wödow
 2 
to
 
£t
 
MAC
 
addªss


970 
add
 
dx
, 0E
h


971 
mov
 
ax
, (1 << 11Ë| 2 ; 
Sñe˘
 
wödow
 2

972 
out
 
dx
, 
ax


973 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


975 ; 
Wrôe
 
MAC
 
addªss
 
to
 
°©i⁄
áddªs†
	`ªgi°îs
 (0-5)

976 ; 
C›y
 
MAC
 
‰om
 
EEPROM
 
to
 
°©i⁄
 
addªss
 
ªgi°îs


977 
push
 
si


978 
push
 
di


979 
push
 
cx


981 ; 
Gë
 
ö°™˚
 
MAC
 
addªss
 
poöãr


982 
mov
 
bl
, 
Æ
 ; 
In°™˚
 
ödex


983 
x‹
 
bh
, bh

984 
shl
 
bx
, 1

985 
shl
 
bx
, 1

986 
add
 
bx
, bx ; 
x6
 
MAC
 
size


987 
mov
 
si
, 
OFFSET
 
hw_mac_addªs£s


988 
add
 
si
, 
bx


990 ; 
Sñe˘
 
Wödow
 2 
°©i⁄
 
addªss


991 
add
 
dx
, 0E
h


992 
mov
 
ax
, (1 << 11Ë| 2 ; 
Sñe˘
 
Wödow
 2

993 
out
 
dx
, 
ax


994 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


996 ; 
Wrôe
 
MAC
 
to
 
ªgi°îs
 0-5

997 
mov
 
cx
, 3 ; 3 
w‹ds


998 
x‹
 
di
, dò; 
Sèπ
 
©
 0

999 .
c›y_mac
:

1000 
mov
 
ax
, [
si
]

1001 
out
 
dx
, 
ax


1002 
add
 
dx
, 2

1003 
add
 
si
, 2

1004 
lo›
 .
c›y_mac


1006 
p›
 
cx


1007 
p›
 
di


1008 
p›
 
si


1010 ; 
Sñe˘
 
wödow
 3 
c⁄figuøti⁄


1011 
add
 
dx
, 0E
h


1012 
mov
 
ax
, (1 << 11Ë| 3 ; 
Sñe˘
 
wödow
 3

1013 
out
 
dx
, 
ax


1014 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1016 ; 
C⁄figuª
 
medü
 
	`ty≥
 (auto-
£À˘
 10/100)

1017 
add
 
dx
, 8 ; 
O±i⁄s
 

1018 
ö
 
ax
, 
dx


1019 
‹
 
ax
, 1000000
h
 ; 
E«bÀ
áuto-
£À˘


1020 
out
 
dx
, 
ax


1021 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1023 ; 
Sñe˘
 
wödow
 7 
bus
 
ma°î
 
DMA
 
£tup


1024 
add
 
dx
, 0E
h


1025 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

1026 
out
 
dx
, 
ax


1027 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1029 ; 
Inôülize
 
DMA
 
des¸ùt‹
 
poöãrs


1030 
add
 
dx
, 404
h
 ; 
Down
 
li°
 
	$poöãr
 (
TX
)

1031 
x‹
 
ax
,áx ; 
NULL
 
öôüŒy


1032 
out
 
dx
, 
ax
 ; 
Low
 
w‹d


1033 
add
 
dx
, 2

1034 
out
 
dx
, 
ax
 ; 
High
 
w‹d


1036 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1037 
add
 
dx
, 418
h
 ; 
Up
 
li°
 
	$poöãr
 (
RX
)

1038 
x‹
 
ax
,áx ; 
NULL
 
öôüŒy


1039 
out
 
dx
, 
ax
 ; 
Low
 
w‹d


1040 
add
 
dx
, 2

1041 
out
 
dx
, 
ax
 ; 
High
 
w‹d


1043 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1045 ; 
Sñe˘
 
wödow
 1 
n‹mÆ
 
›î©i⁄


1046 
add
 
dx
, 0E
h


1047 
mov
 
ax
, (1 << 11Ë| 1 ; 
Sñe˘
 
wödow
 1

1048 
out
 
dx
, 
ax


1049 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1051 ; 
Së
 
up
 
öãºu±
 
	$mask
 (
íabÀ
 
DMA
 
öãºu±s
)

1052 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1053 
mov
 
ax
, (14 << 11Ë| 07FF
h
 ; 
Së
 
öãºu±
 
íabÀ
 
wôh
 
DMA
 
bôs


1054 
out
 
dx
, 
ax


1055 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1057 ; 
E«bÀ
 
ª˚ivî


1058 
add
 
dx
, 0E
h


1059 
mov
 
ax
, (4 << 11Ë; 
RX
 
E«bÀ
 
comm™d


1060 
out
 
dx
, 
ax


1061 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1063 ; 
E«bÀ
 
å™smôãr


1064 
add
 
dx
, 0E
h


1065 
mov
 
ax
, (9 << 11Ë; 
TX
 
E«bÀ
 
comm™d


1066 
out
 
dx
, 
ax


1067 
mov
 
dx
, 
si
 ; 
Re°‹e
 
ba£


1069 ; 
Së
 
RX
 
fûãr
 
to
 
ª˚ive
 
uniˇ°
 + 
brﬂdˇ°


1070 
add
 
dx
, 0E
h


1071 
mov
 
ax
, (16 << 11Ë| 5 ; 
Së
 
RX
 
fûãr
: 
°©i⁄
 + 
brﬂdˇ°


1072 
out
 
dx
, 
ax


1074 ; 
M¨k
 
as
 
c⁄figuªd


1075 
mov
 
bh
, 0

1076 
mov
 
si
, 
OFFSET
 
hw_ö°™˚s


1077 
add
 
si
, 
bx


1078 
mov
 
byã
 
±r
 [
si
], 
HW_STATE_CONFIGURED


1080 ; 
Suc˚ss


1081 
mov
 
ax
, 0

1082 
jmp
 .
exô


1084 .
övÆid_ö°™˚
:

1085 
mov
 
ax
, 1

1086 
jmp
 .
exô


1088 .
exô
:

1089 
p›
 
di


1090 
p›
 
si


1091 
p›
 
dx


1092 
p›
 
cx


1093 
p›
 
bx


1094 
p›
 
bp


1095 
ªt


1096 
öô_3c515
 
ENDP


1099 ; 
ªad_3c515_mac_addªss
 - 
Ród
 
MAC
 
addªss
 
‰om
 3C515 
EEPROM


1101 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


1102 ; 
Ouçut
: 
	`N⁄e
 (
MAC
 
°‹ed
 
öã∫Æly
)

1103 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


1105 
ªad_3c515_mac_addªss
 
PROC


1106 
push
 
bp


1107 
mov
 
bp
, 
•


1108 
push
 
bx


1109 
push
 
cx


1110 
push
 
si


1111 
push
 
di


1113 ; 
Ród
 
MAC
 
addªss
 
‰om
 
EEPROM
 
loˇti⁄s
 0, 1, 2

1114 
mov
 
bx
, 0 ; 
EEPROM
 
addªss
 
cou¡î


1115 
mov
 
di
, 
OFFSET
 
hw_mac_addªs£s
 ; 
De°ö©i⁄
 
buf„r


1117 .
ªad_mac_lo›
:

1118 ; 
Së
 
EEPROM
 
addªss


1119 
push
 
dx


1120 
add
 
dx
, 200A
h
 ; 
EEPROM
 
comm™d
 

1121 
mov
 
ax
, 80
h
 ; 
Ród
 
comm™d


1122 
‹
 
ax
, 
bx
 ; 
OR
 
wôh
 
addªss


1123 
out
 
dx
, 
ax


1124 
p›
 
dx


1126 ; 
Waô
 162Œº
s
 
EEPROM


1127 
mov
 
cx
, 162

1128 .
mac_ì¥om_dñay
:

1129 
ˇŒ
 
dñay_1us


1130 
lo›
 .
mac_ì¥om_dñay


1132 ; 
Ród
 
EEPROM
 
	`d©a
 (16-
bô
 
w‹d
)

1133 
push
 
dx


1134 
add
 
dx
, 0C
h
 ; 
EEPROM
 
d©a
 (
ISA
)

1135 
ö
 
ax
, 
dx


1136 
p›
 
dx


1138 ; 
St‹e
 
MAC
 
	$byãs
 (
lôée
 
ídün
)

1139 
mov
 [
di
], 
Æ
 ; 
Low
 
byã


1140 
öc
 
di


1141 
mov
 [
di
], 
ah
 ; 
High
 
byã


1142 
öc
 
di


1144 
öc
 
bx
 ; 
Next
 
EEPROM
 
addªss


1145 
cmp
 
bx
, 3 ; 
Ród
 3 
	$w‹ds
 (6 
byãs
)

1146 
jl
 .
ªad_mac_lo›


1148 
p›
 
di


1149 
p›
 
si


1150 
p›
 
cx


1151 
p›
 
bx


1152 
p›
 
bp


1153 
ªt


1154 
ªad_3c515_mac_addªss
 
ENDP


1157 ; 
h¨dw¨e_ªad_∑ckë
 - 
Ród
 
∑ckë
 
‰om
 
h¨dw¨e


1159 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex


1160 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


1161 ; 
U£s
: 
AŒ
 
ªgi°îs


1163 
h¨dw¨e_ªad_∑ckë
 
PROC


1164 
push
 
bp


1165 
mov
 
bp
, 
•


1166 
push
 
bx


1167 
push
 
cx


1168 
push
 
dx


1169 
push
 
si


1170 
push
 
di


1172 ; 
VÆid©e
 
NIC
 
ödex
, 
ªad
 
∑ckë
 
‰om
 
≠¥›rüã
 
h¨dw¨e
, 
™d
 
h™dÀ
 
dif„ª¡
 NIC 
ty≥s


1174 ; 
VÆid©e
 
NIC
 
ödex


1175 
cmp
 
Æ
, 
MAX_HW_INSTANCES


1176 
j´
 .
övÆid_nic


1178 ; 
Check
 
NIC
 
ty≥
 
™d
 
di•©ch
 
to
 
≠¥›rüã
 
h™dÀr


1179 
mov
 
bl
, 
Æ


1180 
mov
 
bh
, 0

1181 
mov
 
si
, 
OFFSET
 
hw_ty≥s


1182 
add
 
si
, 
bx


1183 
mov
 
˛
, [
si
]

1185 
cmp
 
˛
, 1

1186 
je
 .
ªad_3c509b


1187 
cmp
 
˛
, 2

1188 
je
 .
ªad_3c515


1189 
jmp
 .
unknown_ty≥


1191 .
ªad_3c509b
:

1192 ; 
Ród
 
∑ckë
 
‰om
 3C509B 
usög
 
PIO


1193 
push
 
es


1194 
push
 
di


1195 
push
 
si


1196 
push
 
cx


1197 
push
 
bx


1199 ; 
Gë
 
I
/
O
 
ba£
 
this
 
ö°™˚


1200 
mov
 
bl
, 
Æ


1201 
x‹
 
bh
, bh

1202 
shl
 
bx
, 1 ; 
W‹d
 
off£t


1203 
mov
 
si
, 
OFFSET
 
hw_ioba£_èbÀ


1204 
mov
 
dx
, [
si
+
bx
] ; 
DX
 = 
I
/
O
 
ba£


1205 
mov
 
si
, 
dx
 ; 
Save
 
ö
 
SI


1207 ; 
Sñe˘
 
Wödow
 1 
RX
 
›î©i⁄s


1208 
add
 
dx
, 
REG_WINDOW


1209 
mov
 
ax
, 0801
h
 ; 
CMD_SELECT_WINDOW
 | 1

1210 
out
 
dx
, 
ax


1212 ; 
Check
 
RX
 
°©us


1213 
mov
 
dx
, 
si


1214 
add
 
dx
, 08
h
 ; 
RX_STATUS
 

1215 
ö
 
ax
, 
dx


1216 
ã°
 
ax
, 8000
h
 ; 
RX_COMPLETE
 
bô


1217 
jz
 .
no_∑ckë_3c509b


1219 ; 
Gë
 
∑ckë
 
Àngth


1220 
™d
 
ax
, 07FF
h
 ; 
Exåa˘
 
	$Àngth
 (11 
bôs
)

1221 
mov
 
cx
, 
ax
 ; 
CX
 = 
∑ckë
 
Àngth


1223 ; 
VÆid©e
 
∑ckë
 
Àngth


1224 
cmp
 
cx
, 1514

1225 
ja
 .
bad_∑ckë_3c509b


1226 
cmp
 
cx
, 14

1227 
jb
 .
bad_∑ckë_3c509b


1229 ; 
ES
:
DI
 
poöts
 
to
 
ª˚ive
 
	`buf„r
 (
∑s£d
 
ö
 
BP
+8)

1230 
Às
 
di
, [
bp
+8]

1232 ; 
Save
 
∑ckë
 
Àngth


1233 
push
 
cx


1235 ; 
Ród
 
∑ckë
 
‰om
 
RX
 
FIFO


1236 
mov
 
dx
, 
si
 ; 
I
/
O
 
ba£


1237 
add
 
dx
, 00
h
 ; 
RX_FIFO
 

1239 ; 
O±imize
 
w‹d
 
ªads


1240 
shr
 
cx
, 1 ; 
C⁄vît
 
to
 
w‹d
 
cou¡


1241 
jz
 .
ªad_œ°_byã_3c509b


1243 .
ªad_lo›_3c509b
:

1244 
ö
 
ax
, 
dx
 ; 
Ród
 
w‹d
 
‰om
 
FIFO


1245 
°osw
 ; 
St‹e
 
to
 
ES
:
DI


1246 
lo›
 .
ªad_lo›_3c509b


1248 .
ªad_œ°_byã_3c509b
:

1249 
p›
 
cx
 ; 
Re°‹e
 
∑ckë
 
Àngth


1250 
ã°
 
cx
, 1 ; 
Check
 
odd
 
byã


1251 
jz
 .
ªad_d⁄e_3c509b


1252 
ö
 
Æ
, 
dx
 ; 
Ród
 
sögÀ
 
byã


1253 
°osb


1255 .
ªad_d⁄e_3c509b
:

1256 ; 
Disˇrd
 
∑ckë
 
‰om
 
	`FIFO
 (
ªquúed
!)

1257 
mov
 
dx
, 
si


1258 
add
 
dx
, 
REG_COMMAND


1259 
mov
 
ax
, 4000
h
 ; 
CMD_RX_DISCARD


1260 
out
 
dx
, 
ax


1262 ; 
Waô
 
disˇrd
 
to
 
com∂ëe


1263 
mov
 
cx
, 100

1264 .
waô_disˇrd_3c509b
:

1265 
mov
 
dx
, 
si


1266 
add
 
dx
, 08
h
 ; 
RX_STATUS


1267 
ö
 
ax
, 
dx


1268 
ã°
 
ax
, 1000
h
 ; 
RX_EARLY
 
bô


1269 
jz
 .
disˇrd_d⁄e_3c509b


1270 
push
 
cx


1271 
mov
 
cx
, 3

1272 .
dñay_3c509b
:

1273 
ö
 
Æ
, 80
h
 ; 
I
/
O
 
dñay


1274 
lo›
 .
dñay_3c509b


1275 
p›
 
cx


1276 
lo›
 .
waô_disˇrd_3c509b


1278 .
disˇrd_d⁄e_3c509b
:

1279 
mov
 
ax
, 
cx
 ; 
Rëu∫
 
∑ckë
 
Àngth


1280 
jmp
 .
˛ónup_rx_3c509b


1282 .
bad_∑ckë_3c509b
:

1283 ; 
Disˇrd
 
bad
 
∑ckë


1284 
mov
 
dx
, 
si


1285 
add
 
dx
, 
REG_COMMAND


1286 
mov
 
ax
, 4000
h
 ; 
CMD_RX_DISCARD


1287 
out
 
dx
, 
ax


1289 .
no_∑ckë_3c509b
:

1290 
x‹
 
ax
,áx ; 
No
 
∑ckë
/
îr‹


1292 .
˛ónup_rx_3c509b
:

1293 
p›
 
bx


1294 
p›
 
cx


1295 
p›
 
si


1296 
p›
 
di


1297 
p›
 
es


1298 
jmp
 .
exô


1300 .
ªad_3c515
:

1301 ; 
Ród
 
∑ckë
 
‰om
 3C515-
	$TX
 (
DMA
 
‹
 
PIO
 
mode
)

1302 
push
 
es


1303 
push
 
di


1304 
push
 
si


1305 
push
 
cx


1306 
push
 
bx


1308 ; 
Gë
 
I
/
O
 
ba£
 
™d
 
check
 
DMA
 
mode


1309 
mov
 
bl
, 
Æ


1310 
x‹
 
bh
, bh

1311 
shl
 
bx
, 1

1312 
mov
 
si
, 
OFFSET
 
hw_ioba£_èbÀ


1313 
mov
 
dx
, [
si
+
bx
]

1314 
mov
 
si
, 
dx


1316 ; 
Check
 
bus
 
ma°î
 
DMA
 
is
 
íabÀd


1317 
mov
 
di
, 
OFFSET
 
hw_Êags_èbÀ


1318 
mov
 
bl
, [
di
+
bx
]

1319 
ã°
 
bl
, 01
h
 ; 
FLAG_BUS_MASTER


1320 
jz
 .
u£_pio_3c515


1322 ; 
DMA
 
mode
 - 
Sñe˘
 
Wödow
 7

1323 
add
 
dx
, 
REG_WINDOW


1324 
mov
 
ax
, 0807
h
 ; 
CMD_SELECT_WINDOW
 | 7

1325 
out
 
dx
, 
ax


1327 ; 
Check
 
	$UP
 (
RX
Ë
li°
 
°©us


1328 
mov
 
dx
, 
si


1329 
add
 
dx
, 38
h
 ; 
UP_PKT_STATUS


1330 
ö
 
ax
, 
dx


1331 
ö
 
dx
, dx ; 
Ród
 
high
 
w‹d


1332 
ã°
 
ax
, 8000
h
 ; 
Com∂ëe
 
bô


1333 
jz
 .
no_dma_∑ckë_3c515


1335 ; 
Exåa˘
 
∑ckë
 
Àngth


1336 
™d
 
ax
, 1FFF
h
 ; 13-
bô
 
Àngth


1337 
mov
 
cx
, 
ax


1339 ; 
Gë
 
∑ckë
 
‰om
 
DMA
 
buf„r


1340 ; (
Im∂emíèti⁄
 
dïíds
 
⁄
 
DMA
 
buf„r
 
m™agemít
)

1342 ; 
AcknowÀdge
 
DMA
 
com∂ëi⁄


1343 
mov
 
dx
, 
si


1344 
add
 
dx
, 
REG_COMMAND


1345 
mov
 
ax
, 6800
h
 | 0200h ; 
ACK_INTR
 | 
UP_COMPLETE


1346 
out
 
dx
, 
ax


1348 
mov
 
ax
, 
cx
 ; 
Rëu∫
 
Àngth


1349 
jmp
 .
˛ónup_rx_3c515


1351 .
u£_pio_3c515
:

1352 ; 
PIO
 
mode
 - 
simû¨
 
to
 3C509B

1353 
add
 
dx
, 
REG_WINDOW


1354 
mov
 
ax
, 0801
h


1355 
out
 
dx
, 
ax


1357 
mov
 
dx
, 
si


1358 
add
 
dx
, 18
h
 ; 
RX_STATUS
 3C515

1359 
ö
 
ax
, 
dx


1360 
ã°
 
ax
, 8000
h


1361 
jz
 .
no_∑ckë_3c515


1363 
™d
 
ax
, 1FFF
h
 ; 13-
bô
 
Àngth
 3C515

1364 
mov
 
cx
, 
ax


1366 
cmp
 
cx
, 1514

1367 
ja
 .
bad_∑ckë_3c515


1368 
cmp
 
cx
, 14

1369 
jb
 .
bad_∑ckë_3c515


1371 
Às
 
di
, [
bp
+8]

1372 
push
 
cx


1374 
mov
 
dx
, 
si


1375 
add
 
dx
, 10
h
 ; 
RX_FIFO
 3C515

1376 
shr
 
cx
, 1

1377 
jz
 .
ªad_œ°_3c515


1379 .
ªad_lo›_3c515
:

1380 
ö
 
ax
, 
dx


1381 
°osw


1382 
lo›
 .
ªad_lo›_3c515


1384 .
ªad_œ°_3c515
:

1385 
p›
 
cx


1386 
ã°
 
cx
, 1

1387 
jz
 .
ªad_d⁄e_3c515


1388 
ö
 
Æ
, 
dx


1389 
°osb


1391 .
ªad_d⁄e_3c515
:

1392 
mov
 
dx
, 
si


1393 
add
 
dx
, 
REG_COMMAND


1394 
mov
 
ax
, 4000
h


1395 
out
 
dx
, 
ax


1397 
mov
 
ax
, 
cx


1398 
jmp
 .
˛ónup_rx_3c515


1400 .
bad_∑ckë_3c515
:

1401 
mov
 
dx
, 
si


1402 
add
 
dx
, 
REG_COMMAND


1403 
mov
 
ax
, 4000
h


1404 
out
 
dx
, 
ax


1406 .
no_∑ckë_3c515
:

1407 .
no_dma_∑ckë_3c515
:

1408 
x‹
 
ax
,áx

1410 .
˛ónup_rx_3c515
:

1411 
p›
 
bx


1412 
p›
 
cx


1413 
p›
 
si


1414 
p›
 
di


1415 
p›
 
es


1416 
jmp
 .
exô


1418 .
övÆid_nic
:

1419 
mov
 
ax
, 1

1420 
jmp
 .
exô


1422 .
unknown_ty≥
:

1423 
mov
 
ax
, 2

1424 
jmp
 .
exô


1426 .
exô
:

1427 
p›
 
di


1428 
p›
 
si


1429 
p›
 
dx


1430 
p›
 
cx


1431 
p›
 
bx


1432 
p›
 
bp


1433 
ªt


1434 
h¨dw¨e_ªad_∑ckë
 
ENDP


1437 ; 
h¨dw¨e_£nd_∑ckë_asm
 - 
Síd
 
∑ckë
 
vü
 
h¨dw¨e


1439 ; 
I≈ut
: 
DS
:
SI
 = 
∑ckë
 
d©a
, 
CX
 =Öackë 
Àngth


1440 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


1441 ; 
U£s
: 
AŒ
 
ªgi°îs


1443 
h¨dw¨e_£nd_∑ckë_asm
 
PROC


1444 
push
 
bp


1445 
mov
 
bp
, 
•


1446 
push
 
bx


1447 
push
 
cx


1448 
push
 
dx


1449 
push
 
si


1450 
push
 
di


1452 ; 
Com∂ëe
 
∑ckë
 
å™smissi⁄
 
im∂emíèti⁄


1454 ; 
Basic
 
∑ckë
 
vÆid©i⁄


1455 
cmp
 
cx
, 60 ; 
Möimum
 
Ethî√t
 
‰ame


1456 
jb
 .
övÆid_∑ckë


1457 
cmp
 
cx
, 1514 ; 
Maximum
 
Ethî√t
 
‰ame


1458 
ja
 .
övÆid_∑ckë


1460 ; 
Gë
 
cuºít
 
NIC
 
ö°™˚
 
™d
 
vÆid©e


1461 
mov
 
Æ
, [
cuºít_ö°™˚
]

1462 
cmp
 
Æ
, 
MAX_HW_INSTANCES


1463 
j´
 .
no_a˘ive_nic


1465 ; 
Gë
 
NIC
 
ty≥
 
™d
 
I
/
O
 
ba£


1466 
mov
 
bl
, 
Æ


1467 
x‹
 
bh
, bh

1468 
mov
 
di
, 
OFFSET
 
hw_ty≥_èbÀ


1469 
mov
 
˛
, [
di
+
bx
] ; 
CL
 = 
NIC
 
ty≥


1471 
shl
 
bx
, 1 ; 
W‹d
 
off£t


1472 
mov
 
di
, 
OFFSET
 
hw_ioba£_èbÀ


1473 
mov
 
dx
, [
di
+
bx
] ; 
DX
 = 
I
/
O
 
ba£


1474 
ã°
 
dx
, dx

1475 
jz
 .
no_a˘ive_nic


1477 ; 
Bønch
 
ba£d
 
⁄
 
NIC
 
ty≥


1478 
cmp
 
˛
, 1 ; 3C509B

1479 
je
 .
tx_3c509b


1480 
cmp
 
˛
, 2 ; 3C515

1481 
je
 .
tx_3c515


1482 
jmp
 .
no_a˘ive_nic


1484 .
tx_3c509b
:

1485 ; 
Tønsmô
 
∑ckë
 
⁄
 3C509B

1486 
push
 
si


1487 
push
 
cx


1488 
push
 
bx


1490 
mov
 
bx
, 
dx
 ; 
Save
 
I
/
O
 
ba£


1492 ; 
Sñe˘
 
Wödow
 1 
TX


1493 
add
 
dx
, 
REG_WINDOW


1494 
mov
 
ax
, 0801
h
 ; 
CMD_SELECT_WINDOW
 | 1

1495 
out
 
dx
, 
ax


1496 
mov
 
dx
, 
bx
 ; 
Re°‹e
 
ba£


1498 ; 
Check
 
TX
 
•a˚
 
avaûabÀ


1499 
add
 
dx
, 0C
h
 ; 
TX_FREE
 

1500 
ö
 
ax
, 
dx


1501 
cmp
 
ax
, 
cx
 ; 
Com∑ª
 
wôh
 
∑ckë
 
Àngth


1502 
jb
 .
tx_busy


1504 ; 
Së
 
TX
 
∑ckë
 
Àngth


1505 
mov
 
dx
, 
bx


1506 
add
 
dx
, 
REG_COMMAND


1507 
mov
 
ax
, 9000
h
 ; 
CMD_TX_SET_LEN


1508 
‹
 
ax
, 
cx
 ; 
In˛ude
 
Àngth


1509 
out
 
dx
, 
ax


1511 ; 
Check
 
TX
 
°Æl


1512 
mov
 
dx
, 
bx


1513 
add
 
dx
, 0B
h
 ; 
TX_STATUS


1514 
ö
 
Æ
, 
dx


1515 
ã°
 
Æ
, 04
h
 ; 
STALL
 
bô


1516 
jz
 .
no_°Æl_3c509b


1518 ; 
CÀ¨
 
°Æl


1519 
mov
 
dx
, 
bx


1520 
add
 
dx
, 
REG_COMMAND


1521 
mov
 
ax
, 5800
h
 ; 
CMD_TX_RESET


1522 
out
 
dx
, 
ax


1524 ; 
Re
-
íabÀ
 
TX


1525 
mov
 
ax
, 4800
h
 ; 
CMD_TX_ENABLE


1526 
out
 
dx
, 
ax


1528 .
no_°Æl_3c509b
:

1529 ; 
Wrôe
 
∑ckë
 
to
 
TX
 
FIFO


1530 
mov
 
dx
, 
bx


1531 
add
 
dx
, 00
h
 ; 
TX_FIFO


1533 
push
 
cx


1534 
shr
 
cx
, 1 ; 
W‹d
 
cou¡


1535 
jz
 .
tx_œ°_byã_3c509b


1537 .
tx_lo›_3c509b
:

1538 
lodsw
 ; 
Lﬂd
 
‰om
 
DS
:
SI


1539 
out
 
dx
, 
ax
 ; 
Wrôe
 
to
 
FIFO


1540 
lo›
 .
tx_lo›_3c509b


1542 .
tx_œ°_byã_3c509b
:

1543 
p›
 
cx


1544 
ã°
 
cx
, 1

1545 
jz
 .
tx_°¨t_3c509b


1546 
lodsb


1547 
out
 
dx
, 
Æ


1549 .
tx_°¨t_3c509b
:

1550 ; 
Sèπ
 
å™smissi⁄


1551 
mov
 
dx
, 
bx


1552 
add
 
dx
, 
REG_COMMAND


1553 
mov
 
ax
, 4800
h
 ; 
CMD_TX_START


1554 
out
 
dx
, 
ax


1556 
x‹
 
ax
,áx ; 
Suc˚ss


1557 
p›
 
bx


1558 
p›
 
cx


1559 
p›
 
si


1560 
jmp
 .
exô


1562 .
tx_3c515
:

1563 ; 
Tønsmô
 
∑ckë
 
⁄
 3C515-
TX


1564 
push
 
si


1565 
push
 
cx


1566 
push
 
bx


1568 
mov
 
bx
, 
dx
 ; 
Save
 
ba£


1570 ; 
Check
 
usög
 
DMA


1571 
push
 
bx


1572 
shr
 
bx
, 1

1573 
mov
 
di
, 
OFFSET
 
hw_Êags_èbÀ


1574 
mov
 
Æ
, [
di
+
bx
]

1575 
p›
 
bx


1576 
ã°
 
Æ
, 01
h
 ; 
FLAG_BUS_MASTER


1577 
jz
 .
tx_pio_3c515


1579 ; 
DMA
 
	`å™smissi⁄
 (
sim∂ifõd
)

1580 ; 
Would
 
√ed
 
¥›î
 
des¸ùt‹
 
£tup


1581 
jmp
 .
tx_busy


1583 .
tx_pio_3c515
:

1584 ; 
PIO
 
mode
 - 
simû¨
 
to
 3C509B

1585 
add
 
dx
, 
REG_WINDOW


1586 
mov
 
ax
, 0801
h


1587 
out
 
dx
, 
ax


1588 
mov
 
dx
, 
bx


1590 
add
 
dx
, 1C
h
 ; 
TX_FREE
 3C515

1591 
ö
 
ax
, 
dx


1592 
cmp
 
ax
, 
cx


1593 
jb
 .
tx_busy


1595 
mov
 
dx
, 
bx


1596 
add
 
dx
, 
REG_COMMAND


1597 
mov
 
ax
, 9000
h


1598 
‹
 
ax
, 
cx


1599 
out
 
dx
, 
ax


1601 
mov
 
dx
, 
bx


1602 
add
 
dx
, 10
h
 ; 
TX_FIFO
 3C515

1604 
push
 
cx


1605 
shr
 
cx
, 1

1606 
jz
 .
tx_œ°_3c515


1608 .
tx_lo›_3c515
:

1609 
lodsw


1610 
out
 
dx
, 
ax


1611 
lo›
 .
tx_lo›_3c515


1613 .
tx_œ°_3c515
:

1614 
p›
 
cx


1615 
ã°
 
cx
, 1

1616 
jz
 .
tx_°¨t_3c515


1617 
lodsb


1618 
out
 
dx
, 
Æ


1620 .
tx_°¨t_3c515
:

1621 
mov
 
dx
, 
bx


1622 
add
 
dx
, 
REG_COMMAND


1623 
mov
 
ax
, 4800
h


1624 
out
 
dx
, 
ax


1626 
x‹
 
ax
,áx

1627 
p›
 
bx


1628 
p›
 
cx


1629 
p›
 
si


1630 
jmp
 .
exô


1632 .
tx_busy
:

1633 
mov
 
ax
, 
ERROR_BUSY


1634 
jmp
 .
exô


1635 ; 
Suc˚ss


1636 
mov
 
ax
, 0

1637 
jmp
 .
exô


1639 .
övÆid_∑ckë
:

1640 
mov
 
ax
, 1

1641 
jmp
 .
exô


1643 .
no_a˘ive_nic
:

1644 
mov
 
ax
, 2

1645 
jmp
 .
exô


1647 .
exô
:

1648 
p›
 
di


1649 
p›
 
si


1650 
p›
 
dx


1651 
p›
 
cx


1652 
p›
 
bx


1653 
p›
 
bp


1654 
ªt


1655 
h¨dw¨e_£nd_∑ckë_asm
 
ENDP


1658 ; 
h¨dw¨e_gë_addªss
 - 
Gë
 
MAC
 
addªss
 
‰om
 
h¨dw¨e


1660 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex
, 
ES
:
DI
 = 
	`buf„r
 (6 
byãs
)

1661 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


1662 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI
, 
DI


1664 
h¨dw¨e_gë_addªss
 
PROC


1665 
push
 
bp


1666 
mov
 
bp
, 
•


1667 
push
 
bx


1668 
push
 
cx


1669 
push
 
si


1671 ; 
Ród
 
MAC
 
addªss
 
‰om
 
h¨dw¨e
 
EEPROM


1673 ; 
VÆid©e
 
NIC
 
ödex


1674 
cmp
 
Æ
, 
MAX_HW_INSTANCES


1675 
j´
 .
övÆid_nic


1677 
push
 
ax
 ; 
Save
 
ö°™˚


1679 ; 
Gë
 
NIC
 
ty≥
 
™d
 
I
/
O
 
ba£


1680 
mov
 
bl
, 
Æ


1681 
x‹
 
bh
, bh

1682 
mov
 
si
, 
OFFSET
 
hw_ty≥_èbÀ


1683 
mov
 
˛
, [
si
+
bx
] ; 
CL
 = 
NIC
 
ty≥


1685 
shl
 
bx
, 1 ; 
W‹d
 
off£t


1686 
mov
 
si
, 
OFFSET
 
hw_ioba£_èbÀ


1687 
mov
 
dx
, [
si
+
bx
] ; 
DX
 = 
I
/
O
 
ba£


1689 ; 
Bønch
 
ba£d
 
⁄
 
NIC
 
ty≥


1690 
cmp
 
˛
, 1 ; 3C509B

1691 
je
 .
ªad_mac_3c509b


1692 
cmp
 
˛
, 2 ; 3C515

1693 
je
 .
ªad_mac_3c515


1695 ; 
U£
 
ˇched
 
MAC
 
ty≥
 
unknown


1696 
jmp
 .
u£_ˇched_mac


1698 .
ªad_mac_3c509b
:

1699 ; 
Sñe˘
 
Wödow
 0 
EEPROM


1700 
add
 
dx
, 
REG_WINDOW


1701 
mov
 
ax
, 0800
h
 ; 
CMD_SELECT_WINDOW
 | 0

1702 
out
 
dx
, 
ax


1703 
sub
 
dx
, 
REG_WINDOW
 ; 
Back
 
to
 
ba£


1705 ; 
Ród
 3 
w‹ds
 
of
 
MAC
 
‰om
 
EEPROM
 
addªs£s
 0-2

1706 
x‹
 
si
, sò; 
EEPROM
 
addªss


1707 
mov
 
cx
, 3 ; 3 
w‹ds


1709 .
ªad_ì¥om_3c509b
:

1710 
push
 
cx


1711 ; 
Síd
 
EEPROM
 
ªad
 
comm™d


1712 
mov
 
ax
, 
dx
 ; 
Save
 
ba£


1713 
add
 
dx
, 0A
h
 ; 
EEPROM
 
comm™d
 

1714 
mov
 
cx
, 80
h
 ; 
EEPROM_READ_CMD


1715 
‹
 
cx
, 
si
 ; 
Add
 
addªss


1716 
mov
 
ax
, 
cx


1717 
out
 
dx
, 
ax


1719 ; 
Waô
 
EEPROM
 
	$ªady
 (162u
s
 
typiˇl
)

1720 
mov
 
cx
, 50 ; 
Rëry
 
cou¡


1721 .
waô_ì¥om_3c509b
:

1722 
push
 
cx


1723 
mov
 
cx
, 6 ; ~20u
s
 
dñay


1724 .
dñay_ì¥om
:

1725 
ö
 
Æ
, 80
h
 ; 
I
/
O
 
dñay


1726 
lo›
 .
dñay_ì¥om


1727 
p›
 
cx


1729 
ö
 
ax
, 
dx
 ; 
Check
 
°©us


1730 
ã°
 
ah
, 80
h
 ; 
EEPROM_BUSY
 
bô


1731 
jz
 .
ì¥om_ªady_3c509b


1732 
lo›
 .
waô_ì¥om_3c509b


1734 ; 
Timeout
 - 
u£
 
ˇched


1735 
p›
 
cx


1736 
jmp
 .
u£_ˇched_mac


1738 .
ì¥om_ªady_3c509b
:

1739 ; 
Ród
 
d©a
 
w‹d


1740 
mov
 
ax
, 
dx


1741 
sub
 
ax
, 0A
h
 ; 
Back
 
to
 
ba£


1742 
mov
 
dx
, 
ax


1743 
add
 
dx
, 0C
h
 ; 
EEPROM
 
d©a
 

1744 
ö
 
ax
, 
dx


1746 ; 
St‹e
 
ö
 
	$buf„r
 (
c⁄vît
 
ídü¬ess
)

1747 
xchg
 
ah
, 
Æ


1748 
°osw
 ; 
St‹e
 
to
 
ES
:
DI


1750 
mov
 
dx
, 
ax
 ; 
Re°‹e
 
ba£


1751 
sub
 
dx
, 0C
h


1752 
öc
 
si
 ; 
Next
 
EEPROM
 
addªss


1753 
p›
 
cx


1754 
lo›
 .
ªad_ì¥om_3c509b


1756 
jmp
 .
mac_ªad_d⁄e


1758 .
ªad_mac_3c515
:

1759 ; 
Simû¨
 
¥o˚ss
 3C515

1760 
add
 
dx
, 
REG_WINDOW


1761 
mov
 
ax
, 0800
h


1762 
out
 
dx
, 
ax


1763 
sub
 
dx
, 
REG_WINDOW


1765 
mov
 
si
, 0A
h
 ; 
MAC
 
°¨ts
 
©
 0x0A 
ö
 3C515 
EEPROM


1766 
mov
 
cx
, 3

1768 .
ªad_ì¥om_3c515
:

1769 
push
 
cx


1770 
add
 
dx
, 0A
h


1771 
mov
 
ax
, 200
h
 ; 
EEPROM_READ_3C515


1772 
‹
 
ax
, 
si


1773 
out
 
dx
, 
ax


1775 
mov
 
cx
, 100

1776 .
waô_3c515
:

1777 
push
 
cx


1778 
mov
 
cx
, 10

1779 .
dñay_3c515
:

1780 
ö
 
Æ
, 80
h


1781 
lo›
 .
dñay_3c515


1782 
p›
 
cx


1784 
ö
 
ax
, 
dx


1785 
ã°
 
ah
, 80
h


1786 
jz
 .
ªady_3c515


1787 
lo›
 .
waô_3c515


1789 
p›
 
cx


1790 
jmp
 .
u£_ˇched_mac


1792 .
ªady_3c515
:

1793 
add
 
dx
, 2 ; 
D©a
 

1794 
ö
 
ax
, 
dx


1795 
xchg
 
ah
, 
Æ


1796 
°osw


1797 
sub
 
dx
, 2

1798 
sub
 
dx
, 0A
h


1799 
öc
 
si


1800 
p›
 
cx


1801 
lo›
 .
ªad_ì¥om_3c515


1803 
jmp
 .
mac_ªad_d⁄e


1805 .
u£_ˇched_mac
:

1806 ; 
FÆl
 
back
 
to
 
ˇched
 
MAC
 
addªss


1807 
p›
 
ax
 ; 
Re°‹e
 
ö°™˚


1808 
push
 
ax


1809 
mov
 
bl
, 
Æ


1810 
x‹
 
bh
, bh

1811 
mov
 
˛
, 6

1812 
mov
 
Æ
, 
bl


1813 
mul
 
˛
 ; 
AX
 = 
ödex
 * 6

1814 
mov
 
si
, 
OFFSET
 
hw_mac_addªs£s


1815 
add
 
si
, 
ax


1816 
mov
 
cx
, 6

1817 
ªp
 
movsb


1819 .
mac_ªad_d⁄e
:

1820 
p›
 
ax
 ; 
Re°‹e
 
ö°™˚


1822 ; 
Suc˚ss


1823 
mov
 
ax
, 0

1824 
jmp
 .
exô


1826 .
övÆid_nic
:

1827 
mov
 
ax
, 1

1828 
jmp
 .
exô


1830 .
exô
:

1831 
p›
 
si


1832 
p›
 
cx


1833 
p›
 
bx


1834 
p›
 
bp


1835 
ªt


1836 
h¨dw¨e_gë_addªss
 
ENDP


1839 ; 
ªad_mac_‰om_ì¥om_3c509b
 - 
Ród
 
MAC
 
addªss
 
‰om
 3C509B 
EEPROM


1841 ; 
I≈ut
: 
AL
 = 
ö°™˚
 
ödex
, 
SI
 = 
I
/
O
 
ba£
 
addªss


1842 ; 
Ouçut
: 
MAC
 
addªss
 
°‹ed
 
ö
 
hw_mac_addªs£s
 
ö°™˚


1843 ; 
U£s
: 
AŒ
 
ªgi°îs


1845 
ªad_mac_‰om_ì¥om_3c509b
 
PROC


1846 
push
 
bp


1847 
mov
 
bp
, 
•


1848 
push
 
bx


1849 
push
 
cx


1850 
push
 
dx


1851 
push
 
di


1852 
push
 
si


1854 ; 
CÆcuœã
 
MAC
 
°‹age
 
off£t


1855 
mov
 
bl
, 
Æ


1856 
x‹
 
bh
, bh

1857 
mov
 
˛
, 6

1858 
mov
 
Æ
, 
bl


1859 
mul
 
˛
 ; 
AX
 = 
ödex
 * 6

1860 
mov
 
di
, 
OFFSET
 
hw_mac_addªs£s


1861 
add
 
di
, 
ax
 ; 
DI
 = 
MAC
 
°‹age
 
loˇti⁄


1863 ; 
Sñe˘
 
Wödow
 0 
EEPROM
 
ac˚ss


1864 
mov
 
dx
, 
si


1865 
add
 
dx
, 
REG_WINDOW


1866 
mov
 
ax
, 0800
h
 ; 
CMD_SELECT_WINDOW
 | 0

1867 
out
 
dx
, 
ax


1869 ; 
Ród
 3 
w‹ds
 
of
 
MAC
 
addªss
 
‰om
 
EEPROM


1870 
x‹
 
bx
, bx ; 
EEPROM
 
addªss
 
cou¡î


1871 
mov
 
cx
, 3 ; 3 
w‹ds
 
to
 
ªad


1873 .
ªad_mac_lo›
:

1874 
push
 
cx


1876 ; 
Síd
 
EEPROM
 
ªad
 
comm™d


1877 
mov
 
dx
, 
si


1878 
add
 
dx
, 0A
h
 ; 
EEPROM
 
comm™d
 

1879 
mov
 
ax
, 80
h
 ; 
EEPROM_READ_CMD


1880 
‹
 
ax
, 
bx
 ; 
Add
 
	`addªss
 (0-2)

1881 
out
 
dx
, 
ax


1883 ; 
Waô
 
EEPROM
 
	$ªady
 (162u
s
 
typiˇl
, 1
ms
 
max
)

1884 
mov
 
cx
, 50 ; 
Rëry
 
cou¡


1885 .
waô_ì¥om
:

1886 
push
 
cx


1887 ; 
Dñay
 ~20u
s


1888 
mov
 
cx
, 6

1889 .
dñay_lo›
:

1890 
ö
 
Æ
, 80
h
 ; 
I
/
O
 
dñay


1891 
lo›
 .
dñay_lo›


1892 
p›
 
cx


1894 ; 
Check
 
EEPROM
 
busy
 
bô


1895 
ö
 
ax
, 
dx


1896 
ã°
 
ah
, 80
h
 ; 
EEPROM_BUSY
 
bô


1897 
jz
 .
ì¥om_ªady


1898 
lo›
 .
waô_ì¥om


1900 ; 
Timeout
 - 
u£
  
MAC


1901 
p›
 
cx


1902 
jmp
 .
u£_deÁu…_mac


1904 .
ì¥om_ªady
:

1905 ; 
Ród
 
the
 
d©a
 
w‹d


1906 
mov
 
dx
, 
si


1907 
add
 
dx
, 0C
h
 ; 
EEPROM
 
d©a
 

1908 
ö
 
ax
, 
dx


1910 ; 
St‹e
 
ö
 
MAC
 
	$buf„r
 (
c⁄vît
 
ídü¬ess
)

1911 
xchg
 
ah
, 
Æ


1912 
mov
 [
di
], 
ax


1913 
add
 
di
, 2

1914 
öc
 
bx
 ; 
Next
 
EEPROM
 
addªss


1915 
p›
 
cx


1916 
lo›
 .
ªad_mac_lo›


1918 
jmp
 .
mac_ªad_com∂ëe


1920 .
u£_deÁu…_mac
:

1921 ; 
Së
  
MAC
 
EEPROM
 
ªad
 
Áûs


1922 
mov
 
w‹d
 [
di
], 0201
h
 ; 00:01:02

1923 
mov
 
w‹d
 [
di
+2], 0403
h
 ; 03:04:05

1924 
mov
 
w‹d
 [
di
+4], 0605
h


1926 .
mac_ªad_com∂ëe
:

1927 
p›
 
si


1928 
p›
 
di


1929 
p›
 
dx


1930 
p›
 
cx


1931 
p›
 
bx


1932 
p›
 
bp


1933 
ªt


1934 
ªad_mac_‰om_ì¥om_3c509b
 
ENDP


1937 ; 
log_h¨dw¨e_îr‹
 - 
Log
 
h¨dw¨e
 
îr‹


1939 ; 
I≈ut
: 
AX
 = 
îr‹
 
code


1940 ; 
Ouçut
: 
N⁄e


1941 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

1943 
log_h¨dw¨e_îr‹
 
PROC


1944 
push
 
ax


1945 
push
 
bx


1946 
push
 
cx


1947 
push
 
dx


1949 ; 
In¸emít
 
îr‹
 
cou¡î


1950 
öc
 
w‹d
 
±r
 [
io_îr‹_cou¡
]

1952 ; 
Could
 
add
 
m‹e
 
s›hi°iˇãd
 
loggög
 
hîe


1953 ; 
F‹
 
now
, 
ju°
 
cou¡
 
îr‹s


1955 
p›
 
dx


1956 
p›
 
cx


1957 
p›
 
bx


1958 
p›
 
ax


1959 
ªt


1960 
log_h¨dw¨e_îr‹
 
ENDP


1963 ; 
h¨dw¨e_h™dÀ_3c509b_úq
 - 
H™dÀ
 3C509B 
öãºu±


1965 ; 
I≈ut
: 
N⁄e


1966 ; 
Ouçut
: 
AX
 = 0 
h™dÀd
, 
n⁄
-
zîo
 
•urious


1967 ; 
U£s
: 
AŒ
 
ªgi°îs


1969 
h¨dw¨e_h™dÀ_3c509b_úq
 
PROC


1970 
push
 
bp


1971 
mov
 
bp
, 
•


1972 
push
 
bx


1973 
push
 
cx


1974 
push
 
dx


1976 ; 
Com∂ëe
 3C509B 
öãºu±
 
h™dÀr


1977 
push
 
si


1978 
push
 
di


1979 
push
 
ds


1980 
push
 
es


1982 ; 
Së
 
up
 
d©a
 
£gmít


1983 
mov
 
ax
, 
cs


1984 
mov
 
ds
, 
ax


1986 ; 
Gë
 
I
/
O
 
ba£
 
cuºít
 
NIC


1987 
mov
 
si
, [
cuºít_ioba£
]

1988 
ã°
 
si
, si

1989 
jz
 .
nŸ_ours_3c509b


1991 ; 
Ród
 
öãºu±
 
°©us


1992 
mov
 
dx
, 
si


1993 
add
 
dx
, 
REG_INT_STATUS


1994 
ö
 
ax
, 
dx


1995 
mov
 
bx
, 
ax
 ; 
Save
 
°©us


1997 ; 
Check
 
our
 
öãºu±


1998 
ã°
 
ax
, 00FF
h


1999 
jz
 .
nŸ_ours_3c509b


2001 ; 
Pro˚ss
 
TX
 
com∂ëe


2002 
ã°
 
bx
, 0004
h
 ; 
TX_COMPLETE


2003 
jz
 .
check_rx_3c509b


2005 ; 
H™dÀ
 
TX
 
com∂ëi⁄


2006 
mov
 
dx
, 
si


2007 
add
 
dx
, 0B
h
 ; 
TX_STATUS


2008 
ö
 
Æ
, 
dx


2010 ; 
Check
 
îr‹s


2011 
ã°
 
Æ
, 0F8
h
 ; 
Eº‹
 
bôs


2012 
jz
 .
tx_ok_3c509b


2014 ; 
Re£t
 
TX
 
⁄
 
îr‹


2015 
mov
 
dx
, 
si


2016 
add
 
dx
, 
REG_COMMAND


2017 
mov
 
ax
, 5800
h
 ; 
CMD_TX_RESET


2018 
out
 
dx
, 
ax


2019 
mov
 
ax
, 4800
h
 ; 
CMD_TX_ENABLE


2020 
out
 
dx
, 
ax


2022 .
tx_ok_3c509b
:

2023 ; 
P›
 
TX
 
°©us


2024 
mov
 
dx
, 
si


2025 
add
 
dx
, 0B
h


2026 
x‹
 
Æ
,ál

2027 
out
 
dx
, 
Æ
 ; 
CÀ¨
 
°©us


2029 ; 
AcknowÀdge
 
TX
 
öãºu±


2030 
mov
 
dx
, 
si


2031 
add
 
dx
, 
REG_COMMAND


2032 
mov
 
ax
, 6800
h
 | 0004h ; 
ACK_INTR
 | 
TX_COMPLETE


2033 
out
 
dx
, 
ax


2035 .
check_rx_3c509b
:

2036 ; 
Pro˚ss
 
RX
 
com∂ëe


2037 
ã°
 
bx
, 0001
h
 ; 
RX_COMPLETE


2038 
jz
 .
check_îr‹s_3c509b


2040 ; 
Pro˚ss
 
ª˚ived
 
∑ckës


2041 
mov
 
Æ
, [
cuºít_ö°™˚
]

2042 
push
 
bp


2043 
mov
 
bp
, 
•


2044 
sub
 
•
, 8 ; 
S∑˚
 
buf„r
 
±r


2045 
Àa
 
di
, [
bp
-8]

2046 
mov
 [
bp
-8], 
di
 ; 
Buf„r
 
±r


2047 
mov
 [
bp
-6], 
ds


2048 
push
 
di


2049 
push
 
ds


2050 
ˇŒ
 
h¨dw¨e_ªad_∑ckë


2051 
add
 
•
, 8

2052 
mov
 
•
, 
bp


2053 
p›
 
bp


2055 ; 
AcknowÀdge
 
RX
 
öãºu±


2056 
mov
 
dx
, 
si


2057 
add
 
dx
, 
REG_COMMAND


2058 
mov
 
ax
, 6800
h
 | 0001h ; 
ACK_INTR
 | 
RX_COMPLETE


2059 
out
 
dx
, 
ax


2061 .
check_îr‹s_3c509b
:

2062 ; 
Check
 
ad≠ãr
 
Áûuª


2063 
ã°
 
bx
, 0080
h
 ; 
ADAPTER_FAIL


2064 
jz
 .
check_°©s_3c509b


2066 ; 
Re£t
 
ad≠ãr


2067 
mov
 
Æ
, [
cuºít_ö°™˚
]

2068 
mov
 
dx
, 
si


2069 
ˇŒ
 
h¨dw¨e_c⁄figuª_3c509b


2071 ; 
AcknowÀdge
 
Áûuª


2072 
mov
 
dx
, 
si


2073 
add
 
dx
, 
REG_COMMAND


2074 
mov
 
ax
, 6800
h
 | 0080h ; 
ACK_INTR
 | 
ADAPTER_FAIL


2075 
out
 
dx
, 
ax


2077 .
check_°©s_3c509b
:

2078 ; 
Upd©e
 
°©i°ics


2079 
ã°
 
bx
, 0008
h
 ; 
UPDATE_STATS


2080 
jz
 .
öt_d⁄e_3c509b


2082 ; 
Sñe˘
 
Wödow
 6 
°©s


2083 
mov
 
dx
, 
si


2084 
add
 
dx
, 
REG_WINDOW


2085 
mov
 
ax
, 0806
h
 ; 
CMD_SELECT_WINDOW
 | 6

2086 
out
 
dx
, 
ax


2088 ; 
Ród
 
°©i°ics
 
to
 
˛ór


2089 
mov
 
cx
, 10

2090 
mov
 
dx
, 
si


2091 .
ªad_°©s_3c509b
:

2092 
ö
 
Æ
, 
dx


2093 
öc
 
dx


2094 
lo›
 .
ªad_°©s_3c509b


2096 ; 
Back
 
to
 
Wödow
 1

2097 
mov
 
dx
, 
si


2098 
add
 
dx
, 
REG_WINDOW


2099 
mov
 
ax
, 0801
h
 ; 
CMD_SELECT_WINDOW
 | 1

2100 
out
 
dx
, 
ax


2102 ; 
AcknowÀdge
 
°©s


2103 
mov
 
dx
, 
si


2104 
add
 
dx
, 
REG_COMMAND


2105 
mov
 
ax
, 6800
h
 | 0008h ; 
ACK_INTR
 | 
UPDATE_STATS


2106 
out
 
dx
, 
ax


2108 .
öt_d⁄e_3c509b
:

2109 ; 
Síd
 
EOI
 
to
 
PIC


2110 
mov
 
Æ
, [
cuºít_úq
]

2111 
cmp
 
Æ
, 7

2112 
jbe
 .
ma°î_pic_3c509b


2113 
mov
 
Æ
, 20
h


2114 
out
 0A0
h
, 
Æ
 ; 
EOI
 
to
 
¶ave
 
PIC


2115 .
ma°î_pic_3c509b
:

2116 
mov
 
Æ
, 20
h


2117 
out
 20
h
, 
Æ
 ; 
EOI
 
to
 
ma°î
 
PIC


2119 
x‹
 
ax
,áx ; 
I¡îru±
 
h™dÀd


2120 
jmp
 .
exô_i§_3c509b


2122 .
nŸ_ours_3c509b
:

2123 
mov
 
ax
, 1 ; 
NŸ
 
our
 
öãºu±


2125 .
exô_i§_3c509b
:

2126 
p›
 
es


2127 
p›
 
ds


2128 
p›
 
di


2129 
p›
 
si


2131 
p›
 
dx


2132 
p›
 
cx


2133 
p›
 
bx


2134 
p›
 
bp


2135 
ªt


2136 
h¨dw¨e_h™dÀ_3c509b_úq
 
ENDP


2139 ; 
h¨dw¨e_h™dÀ_3c515_úq
 - 
H™dÀ
 3C515-
TX
 
öãºu±


2141 ; 
I≈ut
: 
N⁄e


2142 ; 
Ouçut
: 
AX
 = 0 
h™dÀd
, 
n⁄
-
zîo
 
•urious


2143 ; 
U£s
: 
AŒ
 
ªgi°îs


2145 
h¨dw¨e_h™dÀ_3c515_úq
 
PROC


2146 
push
 
bp


2147 
mov
 
bp
, 
•


2148 
push
 
bx


2149 
push
 
cx


2150 
push
 
dx


2152 ; 
Com∂ëe
 3C515-
TX
 
öãºu±
 
h™dÀr
 
wôh
 
DMA
 
suµ‹t


2153 
push
 
si


2154 
push
 
di


2155 
push
 
ds


2156 
push
 
es


2158 
mov
 
ax
, 
cs


2159 
mov
 
ds
, 
ax


2161 ; 
Gë
 
I
/
O
 
ba£


2162 
mov
 
si
, [
cuºít_ioba£
]

2163 
ã°
 
si
, si

2164 
jz
 .
nŸ_ours_3c515


2166 ; 
Ród
 
öãºu±
 
°©us


2167 
mov
 
dx
, 
si


2168 
add
 
dx
, 
REG_INT_STATUS


2169 
ö
 
ax
, 
dx


2170 
mov
 
bx
, 
ax


2172 
ã°
 
ax
, 00FF
h


2173 
jz
 .
nŸ_ours_3c515


2175 ; 
Check
 
DMA
 
	$öãºu±s
 (
highî
 
¥i‹ôy
)

2176 
ã°
 
bx
, 0200
h
 ; 
	$UP_COMPLETE
 (
RX
 
DMA
)

2177 
jz
 .
check_down_3c515


2179 ; 
H™dÀ
 
RX
 
DMA
 
com∂ëi⁄


2180 ; 
Sñe˘
 
Wödow
 7 
DMA


2181 
mov
 
dx
, 
si


2182 
add
 
dx
, 
REG_WINDOW


2183 
mov
 
ax
, 0807
h
 ; 
CMD_SELECT_WINDOW
 | 7

2184 
out
 
dx
, 
ax


2186 ; 
Pro˚ss
 
RX
 
DMA
 
des¸ùt‹s


2187 ; (
Im∂emíèti⁄
 
dïíds
 
⁄
 
DMA
 
buf„r
 
m™agemít
)

2189 ; 
AcknowÀdge
 
UP
 
com∂ëe


2190 
mov
 
dx
, 
si


2191 
add
 
dx
, 
REG_COMMAND


2192 
mov
 
ax
, 6800
h
 | 0200h ; 
ACK_INTR
 | 
UP_COMPLETE


2193 
out
 
dx
, 
ax


2195 .
check_down_3c515
:

2196 
ã°
 
bx
, 0400
h
 ; 
	$DOWN_COMPLETE
 (
TX
 
DMA
)

2197 
jz
 .
check_pio_3c515


2199 ; 
H™dÀ
 
TX
 
DMA
 
com∂ëi⁄


2200 ; 
Pro˚ss
 
TX
 
DMA
 
des¸ùt‹s


2202 ; 
AcknowÀdge
 
DOWN
 
com∂ëe


2203 
mov
 
dx
, 
si


2204 
add
 
dx
, 
REG_COMMAND


2205 
mov
 
ax
, 6800
h
 | 0400h ; 
ACK_INTR
 | 
DOWN_COMPLETE


2206 
out
 
dx
, 
ax


2208 .
check_pio_3c515
:

2209 ; 
Sènd¨d
 
TX
 
com∂ëe


2210 
ã°
 
bx
, 0004
h
 ; 
TX_COMPLETE


2211 
jz
 .
check_rx_3c515


2213 
mov
 
dx
, 
si


2214 
add
 
dx
, 1B
h
 ; 
TX_STATUS
 3C515

2215 
ö
 
Æ
, 
dx


2216 
out
 
dx
, 
Æ
 ; 
P›
 
°©us


2218 
mov
 
dx
, 
si


2219 
add
 
dx
, 
REG_COMMAND


2220 
mov
 
ax
, 6800
h
 | 0004h ; 
ACK_INTR
 | 
TX_COMPLETE


2221 
out
 
dx
, 
ax


2223 .
check_rx_3c515
:

2224 
ã°
 
bx
, 0001
h
 ; 
RX_COMPLETE


2225 
jz
 .
check_ho°_3c515


2227 ; 
Check
 
usög
 
DMA
 
‹
 
PIO


2228 
mov
 
di
, 
OFFSET
 
hw_Êags_èbÀ


2229 
mov
 
Æ
, [
cuºít_ö°™˚
]

2230 
x‹
 
ah
,áh

2231 
add
 
di
, 
ax


2232 
ã°
 
byã
 [
di
], 01
h
 ; 
FLAG_BUS_MASTER


2233 
jnz
 .
rx_dma_3c515


2235 ; 
PIO
 
mode
 
RX


2236 
mov
 
Æ
, [
cuºít_ö°™˚
]

2237 
push
 
bp


2238 
mov
 
bp
, 
•


2239 
sub
 
•
, 8

2240 
Àa
 
di
, [
bp
-8]

2241 
mov
 [
bp
-8], 
di


2242 
mov
 [
bp
-6], 
ds


2243 
push
 
di


2244 
push
 
ds


2245 
ˇŒ
 
h¨dw¨e_ªad_∑ckë


2246 
add
 
•
, 8

2247 
mov
 
•
, 
bp


2248 
p›
 
bp


2250 .
rx_dma_3c515
:

2251 ; 
AcknowÀdge
 
RX
 
öãºu±


2252 
mov
 
dx
, 
si


2253 
add
 
dx
, 
REG_COMMAND


2254 
mov
 
ax
, 6800
h
 | 0001h ; 
ACK_INTR
 | 
RX_COMPLETE


2255 
out
 
dx
, 
ax


2257 .
check_ho°_3c515
:

2258 ; 
Check
 
ho°
 
îr‹


2259 
ã°
 
bx
, 0002
h
 ; 
HOST_ERROR


2260 
jz
 .
öt_d⁄e_3c515


2262 ; 
Ród
 
PCI
 
°©us


2263 
mov
 
dx
, 
si


2264 
add
 
dx
, 20
h
 ; 
PCI_STATUS


2265 
ö
 
ax
, 
dx


2267 ; 
CÀ¨
 
îr‹s


2268 
out
 
dx
, 
ax


2270 ; 
Re£t
 
Áèl


2271 
ã°
 
ax
, 8000
h
 ; 
PCI_ERR_FATAL


2272 
jz
 .
ack_ho°_3c515


2274 
mov
 
Æ
, [
cuºít_ö°™˚
]

2275 
mov
 
dx
, 
si


2276 
ˇŒ
 
öô_3c515


2278 .
ack_ho°_3c515
:

2279 
mov
 
dx
, 
si


2280 
add
 
dx
, 
REG_COMMAND


2281 
mov
 
ax
, 6800
h
 | 0002h ; 
ACK_INTR
 | 
HOST_ERROR


2282 
out
 
dx
, 
ax


2284 .
öt_d⁄e_3c515
:

2285 ; 
Re°‹e
 
Wödow
 1

2286 
mov
 
dx
, 
si


2287 
add
 
dx
, 
REG_WINDOW


2288 
mov
 
ax
, 0801
h
 ; 
CMD_SELECT_WINDOW
 | 1

2289 
out
 
dx
, 
ax


2291 ; 
Síd
 
EOI


2292 
mov
 
Æ
, [
cuºít_úq
]

2293 
cmp
 
Æ
, 7

2294 
jbe
 .
ma°î_pic_3c515


2295 
mov
 
Æ
, 20
h


2296 
out
 0A0
h
, 
Æ


2297 .
ma°î_pic_3c515
:

2298 
mov
 
Æ
, 20
h


2299 
out
 20
h
, 
Æ


2301 
x‹
 
ax
,áx ; 
H™dÀd


2302 
jmp
 .
exô_i§_3c515


2304 .
nŸ_ours_3c515
:

2305 
mov
 
ax
, 1 ; 
NŸ
 
ours


2307 .
exô_i§_3c515
:

2308 
p›
 
es


2309 
p›
 
ds


2310 
p›
 
di


2311 
p›
 
si


2313 
p›
 
dx


2314 
p›
 
cx


2315 
p›
 
bx


2316 
p›
 
bp


2317 
ªt


2318 
h¨dw¨e_h™dÀ_3c515_úq
 
ENDP


2321 ; 
io_ªad_byã
 - 
Ród
 
byã
 
‰om
 
I
/
O
 
p‹t


2323 ; 
I≈ut
: 
DX
 = 
p‹t
 
addªss


2324 ; 
Ouçut
: 
AL
 = 
d©a
 
ªad


2325 ; 
U£s
: 
AL


2327 
io_ªad_byã
 
PROC


2328 
push
 
bp


2329 
mov
 
bp
, 
•


2331 ; 
Pîf‹m
 
I
/
O
 
ªad


2332 
ö
 
Æ
, 
dx


2334 ; 
Upd©e
 
°©i°ics


2335 
öc
 
dw‹d
 
±r
 [
io_ªad_cou¡
]

2337 
p›
 
bp


2338 
ªt


2339 
io_ªad_byã
 
ENDP


2342 ; 
io_wrôe_byã
 - 
Wrôe
 
byã
 
to
 
I
/
O
 
p‹t


2344 ; 
I≈ut
: 
DX
 = 
p‹t
 
addªss
, 
AL
 = 
d©a
 
to
 
wrôe


2345 ; 
Ouçut
: 
N⁄e


2346 ; 
U£s
: 
N⁄e


2348 
io_wrôe_byã
 
PROC


2349 
push
 
bp


2350 
mov
 
bp
, 
•


2352 ; 
Pîf‹m
 
I
/
O
 
wrôe


2353 
out
 
dx
, 
Æ


2355 ; 
Upd©e
 
°©i°ics


2356 
öc
 
dw‹d
 
±r
 [
io_wrôe_cou¡
]

2358 
p›
 
bp


2359 
ªt


2360 
io_wrôe_byã
 
ENDP


2363 ; 
io_ªad_w‹d
 - 
Ród
 
w‹d
 
‰om
 
I
/
O
 
p‹t


2365 ; 
I≈ut
: 
DX
 = 
p‹t
 
addªss


2366 ; 
Ouçut
: 
AX
 = 
d©a
 
ªad


2367 ; 
U£s
: 
AX


2369 
io_ªad_w‹d
 
PROC


2370 
push
 
bp


2371 
mov
 
bp
, 
•


2373 ; 
Pîf‹m
 
I
/
O
 
ªad


2374 
ö
 
ax
, 
dx


2376 ; 
Upd©e
 
°©i°ics


2377 
öc
 
dw‹d
 
±r
 [
io_ªad_cou¡
]

2379 
p›
 
bp


2380 
ªt


2381 
io_ªad_w‹d
 
ENDP


2384 ; 
io_wrôe_w‹d
 - 
Wrôe
 
w‹d
 
to
 
I
/
O
 
p‹t


2386 ; 
I≈ut
: 
DX
 = 
p‹t
 
addªss
, 
AX
 = 
d©a
 
to
 
wrôe


2387 ; 
Ouçut
: 
N⁄e


2388 ; 
U£s
: 
N⁄e


2390 
io_wrôe_w‹d
 
PROC


2391 
push
 
bp


2392 
mov
 
bp
, 
•


2394 ; 
Pîf‹m
 
I
/
O
 
wrôe


2395 
out
 
dx
, 
ax


2397 ; 
Upd©e
 
°©i°ics


2398 
öc
 
dw‹d
 
±r
 [
io_wrôe_cou¡
]

2400 
p›
 
bp


2401 
ªt


2402 
io_wrôe_w‹d
 
ENDP


2405 ; 
ENHANCED
 
GROUP
 6A/6B 
FUNCTIONS
 - 
DEVICE
-
SPECIFIC
 
IMPLEMENTATIONS


2409 ; 
c⁄figuª_3c509b_devi˚
 - 
Enh™˚d
 3C509B 
c⁄figuøti⁄
 
wôh
 
de„nsive
 
¥ogømmög


2411 ; 
I≈ut
: 
AL
 = 
devi˚
 
ödex


2412 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2413 ; 
U£s
: 
AŒ
 
ªgi°îs


2415 
c⁄figuª_3c509b_devi˚
 
PROC


2416 
push
 
bp


2417 
mov
 
bp
, 
•


2418 
push
 
bx


2419 
push
 
cx


2420 
push
 
dx


2421 
push
 
si


2423 ; 
VÆid©e
 
devi˚
 
ödex


2424 
VALIDATE_HW_INSTANCE
 
Æ
, 
MAX_HW_INSTANCES


2425 
jc
 .
övÆid_ödex


2427 ; 
Gë
 
devi˚
 
I
/
O
 
ba£
 
‰om
 
ö°™˚
 
èbÀ


2428 
mov
 
bl
, 
Æ


2429 
mov
 
bh
, 0

2430 
mov
 
si
, 
bx


2431 
shl
 
si
, 1 ; 
W‹d
 
off£t
 
I
/
O
 
ba£s


2432 
mov
 
dx
, [
hw_io_ba£s
 + 
si
]

2433 
ã°
 
dx
, dx

2434 
jz
 .
no_io_ba£


2436 ; 
Re£t
 
the
 
devi˚
 
fú°


2437 
HARDWARE_RESET
 
dx
, 
HW_TYPE_3C509B
, 1000

2438 
jc
 .
ª£t_Áûed


2440 ; 
C⁄figuª
 
devi˚
 
ªgi°îs
 
usög
 
wödow
 
£À˘i⁄


2441 
SELECT_3C509B_WINDOW
 
dx
, 0

2443 ; 
Ród
 
™d
 
vÆid©e
 
EEPROM


2444 
ˇŒ
 
ªad_3c509b_ì¥om


2445 
cmp
 
ax
, 
HW_SUCCESS


2446 
j√
 .
ì¥om_Áûed


2448 ; 
Sëup
 
IRQ
 
•ecifõd


2449 
mov
 
Æ
, [
hw_úq_löes
 + 
bx
]

2450 
cmp
 
Æ
, 0

2451 
je
 .
skù_úq_£tup


2452 
ˇŒ
 
£tup_3c509b_úq


2454 .
skù_úq_£tup
:

2455 ; 
M¨k
 
devi˚
 
as
 
c⁄figuªd


2456 
mov
 
Æ
, 
bl
 ; 
Re°‹e
 
devi˚
 
ödex


2457 
mov
 
ah
, 
HW_STATE_CONFIGURED


2458 
ˇŒ
 
h¨dw¨e_£t_devi˚_°©e


2460 
mov
 
ax
, 
HW_SUCCESS


2461 
jmp
 .
exô


2463 .
övÆid_ödex
:

2464 
mov
 
ax
, 
HW_ERROR_INVALID_PARAM


2465 
jmp
 .
exô


2467 .
no_io_ba£
:

2468 
mov
 
ax
, 
HW_ERROR_IO_ERROR


2469 
jmp
 .
exô


2471 .
ª£t_Áûed
:

2472 
mov
 
ax
, 
HW_ERROR_RESET_FAILED


2473 
jmp
 .
exô


2475 .
ì¥om_Áûed
:

2476 
mov
 
ax
, 
HW_ERROR_EEPROM_READ


2478 .
exô
:

2479 
p›
 
si


2480 
p›
 
dx


2481 
p›
 
cx


2482 
p›
 
bx


2483 
p›
 
bp


2484 
ªt


2485 
c⁄figuª_3c509b_devi˚
 
ENDP


2488 ; 
c⁄figuª_3c515_devi˚
 - 
Enh™˚d
 3C515-
TX
 
c⁄figuøti⁄


2490 ; 
I≈ut
: 
AL
 = 
devi˚
 
ödex


2491 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2492 ; 
U£s
: 
AŒ
 
ªgi°îs


2494 
c⁄figuª_3c515_devi˚
 
PROC


2495 
push
 
bp


2496 
mov
 
bp
, 
•


2497 
push
 
bx


2498 
push
 
cx


2499 
push
 
dx


2500 
push
 
si


2502 ; 
VÆid©e
 
devi˚
 
ödex


2503 
VALIDATE_HW_INSTANCE
 
Æ
, 
MAX_HW_INSTANCES


2504 
jc
 .
övÆid_ödex


2506 ; 
Gë
 
devi˚
 
I
/
O
 
ba£
 
‰om
 
ö°™˚
 
èbÀ


2507 
mov
 
bl
, 
Æ


2508 
mov
 
bh
, 0

2509 
mov
 
si
, 
bx


2510 
shl
 
si
, 1 ; 
W‹d
 
off£t
 
I
/
O
 
ba£s


2511 
mov
 
dx
, [
hw_io_ba£s
 + 
si
]

2512 
ã°
 
dx
, dx

2513 
jz
 .
no_io_ba£


2515 ; 
Re£t
 
the
 
devi˚
 
fú°


2516 
HARDWARE_RESET
 
dx
, 
HW_TYPE_3C515TX
, 1000

2517 
jc
 .
ª£t_Áûed


2519 ; 
C⁄figuª
 
devi˚
 
ªgi°îs


2520 
SELECT_3C515_WINDOW
 
dx
, 0

2522 ; 
Ród
 
™d
 
vÆid©e
 
EEPROM


2523 
ˇŒ
 
ªad_3c515_ì¥om


2524 
cmp
 
ax
, 
HW_SUCCESS


2525 
j√
 .
ì¥om_Áûed


2527 ; 
Sëup
 
DMA
 
suµ‹ãd


2528 
ˇŒ
 
c⁄figuª_3c515_dma


2530 ; 
Sëup
 
IRQ
 
•ecifõd


2531 
mov
 
Æ
, [
hw_úq_löes
 + 
bx
]

2532 
cmp
 
Æ
, 0

2533 
je
 .
skù_úq_£tup


2534 
ˇŒ
 
£tup_3c515_úq


2536 .
skù_úq_£tup
:

2537 ; 
M¨k
 
devi˚
 
as
 
c⁄figuªd


2538 
mov
 
Æ
, 
bl
 ; 
Re°‹e
 
devi˚
 
ödex


2539 
mov
 
ah
, 
HW_STATE_CONFIGURED


2540 
ˇŒ
 
h¨dw¨e_£t_devi˚_°©e


2542 
mov
 
ax
, 
HW_SUCCESS


2543 
jmp
 .
exô


2545 .
övÆid_ödex
:

2546 
mov
 
ax
, 
HW_ERROR_INVALID_PARAM


2547 
jmp
 .
exô


2549 .
no_io_ba£
:

2550 
mov
 
ax
, 
HW_ERROR_IO_ERROR


2551 
jmp
 .
exô


2553 .
ª£t_Áûed
:

2554 
mov
 
ax
, 
HW_ERROR_RESET_FAILED


2555 
jmp
 .
exô


2557 .
ì¥om_Áûed
:

2558 
mov
 
ax
, 
HW_ERROR_EEPROM_READ


2560 .
exô
:

2561 
p›
 
si


2562 
p›
 
dx


2563 
p›
 
cx


2564 
p›
 
bx


2565 
p›
 
bp


2566 
ªt


2567 
c⁄figuª_3c515_devi˚
 
ENDP


2570 ; 
ªad_3c509b_ì¥om
 - 
Ród
 3C509B 
EEPROM
 
wôh
 
de„nsive
 
¥ogømmög


2572 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


2573 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2574 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2576 
ªad_3c509b_ì¥om
 
PROC


2577 
push
 
bp


2578 
mov
 
bp
, 
•


2579 
push
 
bx


2580 
push
 
cx


2581 
push
 
dx


2583 ; 
Sñe˘
 
wödow
 0 
EEPROM
 
ac˚ss


2584 
SELECT_3C509B_WINDOW
 
dx
, 0

2586 ; 
Ród
 
EEPROM
 
wôh
 
timeout
 
¥Ÿe˘i⁄


2587 
mov
 
cx
, 16 ; 
Ród
 16 
w‹ds


2588 
mov
 
bx
, 0 ; 
Sèπög
 
addªss


2590 .
ì¥om_ªad_lo›
:

2591 ; 
Së
 
EEPROM
 
addªss


2592 
push
 
dx


2593 
add
 
dx
, 0A
h
 ; 
EEPROM
 
comm™d
 

2594 
mov
 
ax
, 80
h
 ; 
Ród
 
comm™d


2595 
‹
 
ax
, 
bx
 ; 
OR
 
wôh
 
addªss


2596 
out
 
dx
, 
ax


2597 
p›
 
dx


2599 ; 
Waô
 
EEPROM
 
ªady
 
wôh
 
timeout


2600 
WAIT_FOR_CONDITION
 
dx
+0A
h
, 8000h, 
TIMEOUT_MEDIUM


2601 
jc
 .
ì¥om_timeout


2603 ; 
Ród
 
EEPROM
 
d©a


2604 
push
 
dx


2605 
add
 
dx
, 0C
h
 ; 
EEPROM
 
d©a
 

2606 
ö
 
ax
, 
dx


2607 
p›
 
dx


2609 ; 
St‹e
 
	`d©a
 (
sim∂ifõd
 - 
would
 
°‹e
 
ö
 
MAC
 
addªss
 
¨øy
)

2610 ; 
F‹
 
now
 
ju°
 
vÆid©e
 
ô
'sÇot 0

2611 
ã°
 
ax
,áx

2612 
jz
 .
övÆid_ì¥om


2614 
öc
 
bx


2615 
dec
 
cx


2616 
jnz
 .
ì¥om_ªad_lo›


2618 
mov
 
ax
, 
HW_SUCCESS


2619 
jmp
 .
exô


2621 .
ì¥om_timeout
:

2622 
mov
 
ax
, 
HW_ERROR_TIMEOUT


2623 
jmp
 .
exô


2625 .
övÆid_ì¥om
:

2626 
mov
 
ax
, 
HW_ERROR_EEPROM_READ


2628 .
exô
:

2629 
p›
 
dx


2630 
p›
 
cx


2631 
p›
 
bx


2632 
p›
 
bp


2633 
ªt


2634 
ªad_3c509b_ì¥om
 
ENDP


2637 ; 
ªad_3c515_ì¥om
 - 
Ród
 3C515-
TX
 
EEPROM


2639 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


2640 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2641 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2643 
ªad_3c515_ì¥om
 
PROC


2644 
push
 
bp


2645 
mov
 
bp
, 
•


2646 
push
 
bx


2647 
push
 
cx


2648 
push
 
dx


2650 ; 
Sñe˘
 
wödow
 0 
EEPROM
 
ac˚ss


2651 
SELECT_3C515_WINDOW
 
dx
, 0

2653 ; 
Ród
 
EEPROM
 
wôh
 
timeout
 
	$¥Ÿe˘i⁄
 (
simû¨
 
to
 3C509B 
but
 
dif„ª¡
 
ªgi°îs
)

2654 
mov
 
cx
, 16 ; 
Ród
 16 
w‹ds


2655 
mov
 
bx
, 0 ; 
Sèπög
 
addªss


2657 .
ì¥om_ªad_lo›
:

2658 ; 
Së
 
EEPROM
 
addªss


2659 
push
 
dx


2660 
add
 
dx
, 200A
h
 ; 
EEPROM
 
comm™d
 3C515

2661 
mov
 
ax
, 80
h
 ; 
Ród
 
comm™d


2662 
‹
 
ax
, 
bx
 ; 
OR
 
wôh
 
addªss


2663 
out
 
dx
, 
ax


2664 
p›
 
dx


2666 ; 
Waô
 
EEPROM
 
ªady
 
wôh
 
timeout


2667 
WAIT_FOR_CONDITION
 
dx
+200A
h
, 8000h, 
TIMEOUT_MEDIUM


2668 
jc
 .
ì¥om_timeout


2670 ; 
Ród
 
EEPROM
 
d©a


2671 
push
 
dx


2672 
add
 
dx
, 200C
h
 ; 
EEPROM
 
d©a
 

2673 
ö
 
ax
, 
dx


2674 
p›
 
dx


2676 ; 
VÆid©e
 
d©a


2677 
ã°
 
ax
,áx

2678 
jz
 .
övÆid_ì¥om


2680 
öc
 
bx


2681 
dec
 
cx


2682 
jnz
 .
ì¥om_ªad_lo›


2684 
mov
 
ax
, 
HW_SUCCESS


2685 
jmp
 .
exô


2687 .
ì¥om_timeout
:

2688 
mov
 
ax
, 
HW_ERROR_TIMEOUT


2689 
jmp
 .
exô


2691 .
övÆid_ì¥om
:

2692 
mov
 
ax
, 
HW_ERROR_EEPROM_READ


2694 .
exô
:

2695 
p›
 
dx


2696 
p›
 
cx


2697 
p›
 
bx


2698 
p›
 
bp


2699 
ªt


2700 
ªad_3c515_ì¥om
 
ENDP


2703 ; 
£tup_3c509b_úq
 - 
Sëup
 3C509B 
IRQ
 
h™dÀr


2705 ; 
I≈ut
: 
AL
 = 
IRQ
 
numbî
, 
DX
 = 
I
/
O
 
ba£


2706 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2707 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2709 
£tup_3c509b_úq
 
PROC


2710 
push
 
bp


2711 
mov
 
bp
, 
•


2712 
push
 
bx


2713 
push
 
cx


2714 
push
 
dx


2716 ; 
VÆid©e
 
IRQ


2717 
VALIDATE_IRQ
 
Æ


2718 
jc
 .
övÆid_úq


2720 ; 
C⁄figuª
 
öãºu±
 
íabÀ
 
mask


2721 
SELECT_3C509B_WINDOW
 
dx
, 1

2723 
push
 
dx


2724 
add
 
dx
, 0E
h
 ; 
Comm™d
 

2725 
mov
 
ax
, (14 << 11Ë| 00BF
h
 ; 
Së
 
öãºu±
 
íabÀ
 
mask


2726 
out
 
dx
, 
ax


2727 
p›
 
dx


2729 
mov
 
ax
, 
HW_SUCCESS


2730 
jmp
 .
exô


2732 .
övÆid_úq
:

2733 
mov
 
ax
, 
HW_ERROR_IRQ_CONFLICT


2735 .
exô
:

2736 
p›
 
dx


2737 
p›
 
cx


2738 
p›
 
bx


2739 
p›
 
bp


2740 
ªt


2741 
£tup_3c509b_úq
 
ENDP


2744 ; 
£tup_3c515_úq
 - 
Sëup
 3C515-
TX
 
IRQ
 
h™dÀr


2746 ; 
I≈ut
: 
AL
 = 
IRQ
 
numbî
, 
DX
 = 
I
/
O
 
ba£


2747 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2748 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2750 
£tup_3c515_úq
 
PROC


2751 
push
 
bp


2752 
mov
 
bp
, 
•


2753 
push
 
bx


2754 
push
 
cx


2755 
push
 
dx


2757 ; 
VÆid©e
 
IRQ


2758 
VALIDATE_IRQ
 
Æ


2759 
jc
 .
övÆid_úq


2761 ; 
C⁄figuª
 
öãºu±
 
íabÀ
 
mask
 3C515-
TX


2762 
SELECT_3C515_WINDOW
 
dx
, 1

2764 
push
 
dx


2765 
add
 
dx
, 0E
h
 ; 
Comm™d
 

2766 
mov
 
ax
, (14 << 11Ë| 07FF
h
 ; 
Enh™˚d
 
öãºu±
 
mask
 
DMA


2767 
out
 
dx
, 
ax


2768 
p›
 
dx


2770 
mov
 
ax
, 
HW_SUCCESS


2771 
jmp
 .
exô


2773 .
övÆid_úq
:

2774 
mov
 
ax
, 
HW_ERROR_IRQ_CONFLICT


2776 .
exô
:

2777 
p›
 
dx


2778 
p›
 
cx


2779 
p›
 
bx


2780 
p›
 
bp


2781 
ªt


2782 
£tup_3c515_úq
 
ENDP


2785 ; 
c⁄figuª_3c515_dma
 - 
C⁄figuª
 3C515-
TX
 
DMA
 
£âögs


2787 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


2788 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2789 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2791 
c⁄figuª_3c515_dma
 
PROC


2792 
push
 
bp


2793 
mov
 
bp
, 
•


2794 
push
 
bx


2795 
push
 
cx


2796 
push
 
dx


2798 ; 
Sñe˘
 
wödow
 7 
DMA
 
c⁄åﬁ


2799 
SELECT_3C515_WINDOW
 
dx
, 7

2801 ; 
Inôülize
 
DMA
 
des¸ùt‹
 
poöãrs


2802 
push
 
dx


2803 
add
 
dx
, 404
h
 ; 
Down
 
li°
 
poöãr


2804 
x‹
 
ax
,áx ; 
NULL
 
poöãr
 
öôüŒy


2805 
out
 
dx
, 
ax


2806 
add
 
dx
, 2

2807 
out
 
dx
, 
ax
 ; 
High
 
w‹d


2809 
add
 
dx
, 14
h
 - 6 ; 
Up
 
li°
 
	`poöãr
 (418h - 404h = 14h)

2810 
out
 
dx
, 
ax


2811 
add
 
dx
, 2

2812 
out
 
dx
, 
ax
 ; 
High
 
w‹d


2813 
p›
 
dx


2815 
mov
 
ax
, 
HW_SUCCESS


2817 
p›
 
dx


2818 
p›
 
cx


2819 
p›
 
bx


2820 
p›
 
bp


2821 
ªt


2822 
c⁄figuª_3c515_dma
 
ENDP


2825 ; 
ª£t_3c509b_devi˚
 - 
Re£t
 3C509B 
devi˚


2827 ; 
I≈ut
: 
AL
 = 
devi˚
 
ödex


2828 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2829 ; 
U£s
: 
AX
, 
BX
, 
DX


2831 
ª£t_3c509b_devi˚
 
PROC


2832 
push
 
bp


2833 
mov
 
bp
, 
•


2834 
push
 
bx


2835 
push
 
dx


2837 ; 
Gë
 
I
/
O
 
ba£
 
devi˚


2838 
mov
 
bl
, 
Æ


2839 
mov
 
bh
, 0

2840 
shl
 
bx
, 1

2841 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
]

2843 ; 
Pîf‹m
 
h¨dw¨e
 
ª£t


2844 
HARDWARE_RESET
 
dx
, 
HW_TYPE_3C509B
, 1000

2845 
jc
 .
ª£t_Áûed


2847 
mov
 
ax
, 
HW_SUCCESS


2848 
jmp
 .
exô


2850 .
ª£t_Áûed
:

2851 
mov
 
ax
, 
HW_ERROR_RESET_FAILED


2853 .
exô
:

2854 
p›
 
dx


2855 
p›
 
bx


2856 
p›
 
bp


2857 
ªt


2858 
ª£t_3c509b_devi˚
 
ENDP


2861 ; 
ª£t_3c515_devi˚
 - 
Re£t
 3C515-
TX
 
devi˚


2863 ; 
I≈ut
: 
AL
 = 
devi˚
 
ödex


2864 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2865 ; 
U£s
: 
AX
, 
BX
, 
DX


2867 
ª£t_3c515_devi˚
 
PROC


2868 
push
 
bp


2869 
mov
 
bp
, 
•


2870 
push
 
bx


2871 
push
 
dx


2873 ; 
Gë
 
I
/
O
 
ba£
 
devi˚


2874 
mov
 
bl
, 
Æ


2875 
mov
 
bh
, 0

2876 
shl
 
bx
, 1

2877 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
]

2879 ; 
Pîf‹m
 
h¨dw¨e
 
ª£t


2880 
HARDWARE_RESET
 
dx
, 
HW_TYPE_3C515TX
, 1000

2881 
jc
 .
ª£t_Áûed


2883 
mov
 
ax
, 
HW_SUCCESS


2884 
jmp
 .
exô


2886 .
ª£t_Áûed
:

2887 
mov
 
ax
, 
HW_ERROR_RESET_FAILED


2889 .
exô
:

2890 
p›
 
dx


2891 
p›
 
bx


2892 
p›
 
bp


2893 
ªt


2894 
ª£t_3c515_devi˚
 
ENDP


2897 ; 
SYSTEM
-
LEVEL
 
FUNCTIONS


2901 ; 
h¨dw¨e_öô_sy°em
 - 
Inôülize
 
h¨dw¨e
 
subsy°em


2903 ; 
I≈ut
: 
N⁄e


2904 ; 
Ouçut
: 
AX
 = 
HW_SUCCESS
 
‹
 
îr‹
 
code


2905 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI


2907 
h¨dw¨e_öô_sy°em
 
PROC


2908 
push
 
bp


2909 
mov
 
bp
, 
•


2910 
push
 
bx


2911 
push
 
cx


2912 
push
 
si


2914 ; 
Check
 
Æªady
 
öôülized


2915 
cmp
 [
h¨dw¨e_öôülized
], 1

2916 
je
 .
Æªady_öôülized


2918 ; 
CÀ¨
 
h¨dw¨e
 
ö°™˚
 
èbÀ


2919 
mov
 
cx
, 
SIZE
 
HW_INSTANCE


2920 
mov
 
ax
, 
MAX_HW_INSTANCES


2921 
mul
 
cx


2922 
mov
 
cx
, 
ax
 ; 
TŸÆ
 
byãs
 
to
 
˛ór


2923 
mov
 
si
, 
OFFSET
 
hw_ö°™˚_èbÀ


2925 .
˛ór_lo›
:

2926 
mov
 
byã
 
±r
 [
si
], 0

2927 
öc
 
si


2928 
dec
 
cx


2929 
jnz
 .
˛ór_lo›


2931 ; 
Inôülize
 
cou¡îs


2932 
mov
 [
hw_ö°™˚_cou¡
], 0

2933 
mov
 [
œ°_îr‹_code
], 0

2935 ; 
CÀ¨
 
I
/
O
 
°©i°ics


2936 
mov
 
dw‹d
 
±r
 [
io_ªad_cou¡
], 0

2937 
mov
 
dw‹d
 
±r
 [
io_wrôe_cou¡
], 0

2938 
mov
 
w‹d
 
±r
 [
io_îr‹_cou¡
], 0

2939 
mov
 
w‹d
 
±r
 [
io_timeout_cou¡
], 0

2940 
mov
 
w‹d
 
±r
 [
io_ªåy_cou¡
], 0

2942 ; 
M¨k
 
as
 
öôülized


2943 
mov
 [
h¨dw¨e_öôülized
], 1

2945 .
Æªady_öôülized
:

2946 
mov
 
ax
, 
HW_SUCCESS


2948 
p›
 
si


2949 
p›
 
cx


2950 
p›
 
bx


2951 
p›
 
bp


2952 
ªt


2953 
h¨dw¨e_öô_sy°em
 
ENDP


2956 ; 
h¨dw¨e_dëe˘_Æl_devi˚s
 - 
Dëe˘
 
Æl
 
suµ‹ãd
 
h¨dw¨e
 
devi˚s


2958 ; 
I≈ut
: 
N⁄e


2959 ; 
Ouçut
: 
AX
 = 
numbî
 
of
 
devi˚s
 
dëe˘ed


2960 ; 
U£s
: 
AŒ
 
ªgi°îs


2962 
h¨dw¨e_dëe˘_Æl_devi˚s
 
PROC


2963 
push
 
bp


2964 
mov
 
bp
, 
•


2965 
push
 
bx


2966 
push
 
cx


2967 
push
 
dx


2968 
push
 
si


2969 
push
 
di


2971 
mov
 
bx
, 0 ; 
Devi˚
 
cou¡î


2973 ; 
Try
 
to
 
dëe˘
 3C509B 
devi˚s


2974 
ˇŒ
 
dëe˘_3c509b_devi˚


2975 
jc
 .
no_3c509b


2977 ; 
St‹e
 
dëe˘ed
 3C509B

2978 
mov
 
si
, 
OFFSET
 
hw_ö°™˚_èbÀ


2979 
mov
 
cx
, 
SIZE
 
HW_INSTANCE


2980 
mov
 
dx
, 
bx


2981 
mul
 
cx


2982 
add
 
si
, 
ax


2984 
mov
 [
si
 + 
HW_INSTANCE
.
ty≥
], 
HW_TYPE_3C509B


2985 
mov
 [
si
 + 
HW_INSTANCE
.
°©e
], 
HW_STATE_DETECTED


2986 
mov
 [
si
 + 
HW_INSTANCE
.
io_ba£
], 
ax
 ; 
From
 
dëe˘
 
fun˘i⁄


2988 ; 
Upd©e
 
Àgacy
 
¨øys
 
com∑tibûôy


2989 
mov
 [
hw_ty≥s
 + 
bx
], 
HW_TYPE_3C509B


2990 
mov
 [
hw_ö°™˚s
 + 
bx
], 
HW_STATE_DETECTED


2991 
push
 
bx


2992 
shl
 
bx
, 1

2993 
mov
 [
hw_io_ba£s
 + 
bx
], 
ax


2994 
p›
 
bx


2996 
öc
 
bx
 ; 
In¸emít
 
devi˚
 
cou¡


2998 .
no_3c509b
:

2999 ; 
Try
 
to
 
dëe˘
 3C515-
TX
 
devi˚s


3000 
ˇŒ
 
dëe˘_3c515_devi˚


3001 
jc
 .
no_3c515


3003 ; 
Check
 
we
 
have
 
room
 
™Ÿhî
 
devi˚


3004 
cmp
 
bx
, 
MAX_HW_INSTANCES


3005 
j´
 .
no_3c515


3007 ; 
St‹e
 
dëe˘ed
 3C515-
TX


3008 
push
 
ax
 ; 
Save
 
I
/
O
 
ba£


3009 
mov
 
si
, 
OFFSET
 
hw_ö°™˚_èbÀ


3010 
mov
 
cx
, 
SIZE
 
HW_INSTANCE


3011 
mov
 
ax
, 
bx


3012 
mul
 
cx


3013 
add
 
si
, 
ax


3014 
p›
 
ax
 ; 
Re°‹e
 
I
/
O
 
ba£


3016 
mov
 [
si
 + 
HW_INSTANCE
.
ty≥
], 
HW_TYPE_3C515TX


3017 
mov
 [
si
 + 
HW_INSTANCE
.
°©e
], 
HW_STATE_DETECTED


3018 
mov
 [
si
 + 
HW_INSTANCE
.
io_ba£
], 
ax


3020 ; 
Upd©e
 
Àgacy
 
¨øys


3021 
mov
 [
hw_ty≥s
 + 
bx
], 
HW_TYPE_3C515TX


3022 
mov
 [
hw_ö°™˚s
 + 
bx
], 
HW_STATE_DETECTED


3023 
push
 
bx


3024 
shl
 
bx
, 1

3025 
mov
 [
hw_io_ba£s
 + 
bx
], 
ax


3026 
p›
 
bx


3028 
öc
 
bx
 ; 
In¸emít
 
devi˚
 
cou¡


3030 .
no_3c515
:

3031 ; 
St‹e
 
föÆ
 
devi˚
 
cou¡


3032 
mov
 [
hw_ö°™˚_cou¡
], 
bl


3033 
mov
 
ax
, 
bx
 ; 
Rëu∫
 
devi˚
 
cou¡


3035 
p›
 
di


3036 
p›
 
si


3037 
p›
 
dx


3038 
p›
 
cx


3039 
p›
 
bx


3040 
p›
 
bp


3041 
ªt


3042 
h¨dw¨e_dëe˘_Æl_devi˚s
 
ENDP


3045 ; 
UTILITY
 
AND
 
SUPPORT
 
FUNCTIONS


3049 ; 
dñay_1ms
 - 1 
mûli£c⁄d
 
dñay


3051 ; 
I≈ut
: 
N⁄e


3052 ; 
Ouçut
: 
N⁄e


3053 ; 
U£s
: 
CX


3055 
dñay_1ms
 
PROC


3056 
push
 
cx


3058 ; 
Aµroxim©e
 1
ms
 
dñay
 
usög
 
	`lo›
 (
CPU
-
dïídít
)

3059 ; 
This
 
is
 
a
 
rough
 
≠¥oxim©i⁄
 
ﬁdî
 
CPUs


3060 
mov
 
cx
, 1000

3062 .
dñay_lo›
:

3063 
n›


3064 
lo›
 .
dñay_lo›


3066 
p›
 
cx


3067 
ªt


3068 
dñay_1ms
 
ENDP


3071 ; 
dñay_10ms
 - 10 
mûli£c⁄d
 
dñay


3073 ; 
I≈ut
: 
N⁄e


3074 ; 
Ouçut
: 
N⁄e


3075 ; 
U£s
: 
CX


3077 
dñay_10ms
 
PROC


3078 
push
 
cx


3080 
mov
 
cx
, 10

3082 .
dñay_lo›
:

3083 
ˇŒ
 
dñay_1ms


3084 
lo›
 .
dñay_lo›


3086 
p›
 
cx


3087 
ªt


3088 
dñay_10ms
 
ENDP


3091 ; 
PHASE
 3: 
ADVANCED
 
DMA
 
FUNCTIONS
 
FOR
 3C515-
TX


3092 ; 
Sub
-
Agít
 1: 
DMA
 
S≥cüli°
 - 
Low
-
Àvñ
 DMA 
›î©i⁄s


3096 ; 
dma_°Æl_ígöes
 - 
SèŒ
 
DMA
 
ígöes
 
timeout
 
ªcovîy


3098 ; 
I≈ut
: 
AL
 = 1 
to
 
°Æl
 
TX
, 0Åÿ
skù
 TX

3099 ; 
AH
 = 1 
to
 
°Æl
 
RX
, 0Åÿ
skù
 RX

3100 ; 
DX
 = 
I
/
O
 
ba£
 
addªss


3101 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3102 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3104 
PUBLIC
 
dma_°Æl_ígöes


3105 
dma_°Æl_ígöes
 
PROC


3106 
push
 
bp


3107 
mov
 
bp
, 
•


3108 
push
 
bx


3109 
push
 
cx


3110 
push
 
dx


3112 ; 
Save
 
°Æl
 
Êags


3113 
mov
 
bl
, 
Æ
 ; 
TX
 
°Æl
 
Êag


3114 
mov
 
bh
, 
ah
 ; 
RX
 
°Æl
 
Êag


3116 ; 
Gë
 
I
/
O
 
ba£
 
‰om
 
	$c⁄ãxt
 (
∑s£d
 
ö
 
DX
)

3117 
ã°
 
dx
, dx

3118 
jz
 .
no_io_ba£


3120 ; 
Sñe˘
 
wödow
 7 
DMA
 
c⁄åﬁ


3121 
push
 
dx


3122 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3123 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

3124 
out
 
dx
, 
ax


3125 
p›
 
dx


3127 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


3128 
mov
 
cx
, 100

3129 .
wödow_dñay
:

3130 
n›


3131 
lo›
 .
wödow_dñay


3133 ; 
SèŒ
 
TX
 
ígöe
 
ªque°ed


3134 
ã°
 
bl
, bl

3135 
jz
 .
skù_tx_°Æl


3137 
push
 
dx


3138 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3139 
mov
 
ax
, (6 << 11Ë+ 2 ; 
DownSèŒ
 
comm™d


3140 
out
 
dx
, 
ax


3141 
p›
 
dx


3143 ; 
Waô
 
TX
 
ígöe
 
to
 
°Æl


3144 
mov
 
cx
, 1000 ; 
Timeout
 
cou¡î


3145 .
tx_°Æl_waô
:

3146 
push
 
dx


3147 
add
 
dx
, 0E
h
 ; 
Sètus
 

3148 
ö
 
ax
, 
dx


3149 
p›
 
dx


3150 
ã°
 
ax
, 0800
h
 ; 
Check
 
DMA
 
ö
 
¥ogªss
 
bô


3151 
jz
 .
tx_°ÆÀd


3152 
dec
 
cx


3153 
jnz
 .
tx_°Æl_waô


3155 ; 
TX
 
°Æl
 
timeout


3156 
mov
 
ax
, -1

3157 
jmp
 .
exô


3159 .
tx_°ÆÀd
:

3160 .
skù_tx_°Æl
:

3161 ; 
SèŒ
 
RX
 
ígöe
 
ªque°ed


3162 
ã°
 
bh
, bh

3163 
jz
 .
skù_rx_°Æl


3165 
push
 
dx


3166 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3167 
mov
 
ax
, (6 << 11Ë+ 0 ; 
UpSèŒ
 
comm™d


3168 
out
 
dx
, 
ax


3169 
p›
 
dx


3171 ; 
Waô
 
RX
 
ígöe
 
to
 
°Æl


3172 
mov
 
cx
, 1000 ; 
Timeout
 
cou¡î


3173 .
rx_°Æl_waô
:

3174 
push
 
dx


3175 
add
 
dx
, 0E
h
 ; 
Sètus
 

3176 
ö
 
ax
, 
dx


3177 
p›
 
dx


3178 
ã°
 
ax
, 0800
h
 ; 
Check
 
DMA
 
ö
 
¥ogªss
 
bô


3179 
jz
 .
rx_°ÆÀd


3180 
dec
 
cx


3181 
jnz
 .
rx_°Æl_waô


3183 ; 
RX
 
°Æl
 
timeout


3184 
mov
 
ax
, -1

3185 
jmp
 .
exô


3187 .
rx_°ÆÀd
:

3188 .
skù_rx_°Æl
:

3189 ; 
Suc˚ss


3190 
mov
 
ax
, 0

3191 
jmp
 .
exô


3193 .
no_io_ba£
:

3194 
mov
 
ax
, -1

3196 .
exô
:

3197 
p›
 
dx


3198 
p›
 
cx


3199 
p›
 
bx


3200 
p›
 
bp


3201 
ªt


3202 
dma_°Æl_ígöes
 
ENDP


3205 ; 
dma_un°Æl_ígöes
 - 
Un°Æl
 
DMA
 
ígöes
 
a·î
 
ªcovîy


3207 ; 
I≈ut
: 
AL
 = 1 
to
 
un°Æl
 
TX
, 0Åÿ
skù
 TX

3208 ; 
AH
 = 1 
to
 
un°Æl
 
RX
, 0Åÿ
skù
 RX

3209 ; 
DX
 = 
I
/
O
 
ba£
 
addªss


3210 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3211 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3213 
PUBLIC
 
dma_un°Æl_ígöes


3214 
dma_un°Æl_ígöes
 
PROC


3215 
push
 
bp


3216 
mov
 
bp
, 
•


3217 
push
 
bx


3218 
push
 
cx


3219 
push
 
dx


3221 ; 
Save
 
un°Æl
 
Êags


3222 
mov
 
bl
, 
Æ
 ; 
TX
 
un°Æl
 
Êag


3223 
mov
 
bh
, 
ah
 ; 
RX
 
un°Æl
 
Êag


3225 ; 
Gë
 
I
/
O
 
ba£


3226 
ã°
 
dx
, dx

3227 
jz
 .
no_io_ba£


3229 ; 
Sñe˘
 
wödow
 7 
DMA
 
c⁄åﬁ


3230 
push
 
dx


3231 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3232 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

3233 
out
 
dx
, 
ax


3234 
p›
 
dx


3236 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


3237 
mov
 
cx
, 100

3238 .
wödow_dñay
:

3239 
n›


3240 
lo›
 .
wödow_dñay


3242 ; 
Un°Æl
 
TX
 
ígöe
 
ªque°ed


3243 
ã°
 
bl
, bl

3244 
jz
 .
skù_tx_un°Æl


3246 
push
 
dx


3247 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3248 
mov
 
ax
, (6 << 11Ë+ 3 ; 
DownUn°Æl
 
comm™d


3249 
out
 
dx
, 
ax


3250 
p›
 
dx


3252 .
skù_tx_un°Æl
:

3253 ; 
Un°Æl
 
RX
 
ígöe
 
ªque°ed


3254 
ã°
 
bh
, bh

3255 
jz
 .
skù_rx_un°Æl


3257 
push
 
dx


3258 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3259 
mov
 
ax
, (6 << 11Ë+ 1 ; 
UpUn°Æl
 
comm™d


3260 
out
 
dx
, 
ax


3261 
p›
 
dx


3263 .
skù_rx_un°Æl
:

3264 ; 
Suc˚ss


3265 
mov
 
ax
, 0

3266 
jmp
 .
exô


3268 .
no_io_ba£
:

3269 
mov
 
ax
, -1

3271 .
exô
:

3272 
p›
 
dx


3273 
p›
 
cx


3274 
p›
 
bx


3275 
p›
 
bp


3276 
ªt


3277 
dma_un°Æl_ígöes
 
ENDP


3280 ; 
dma_°¨t_å™s„r
 - 
Sèπ
 
DMA
 
å™s„r
 
ígöes


3282 ; 
I≈ut
: 
AL
 = 1 
to
 
°¨t
 
TX
, 0Åÿ
skù
 TX

3283 ; 
AH
 = 1 
to
 
°¨t
 
RX
, 0Åÿ
skù
 RX

3284 ; 
DX
 = 
I
/
O
 
ba£
 
addªss


3285 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3286 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3288 
PUBLIC
 
dma_°¨t_å™s„r


3289 
dma_°¨t_å™s„r
 
PROC


3290 
push
 
bp


3291 
mov
 
bp
, 
•


3292 
push
 
bx


3293 
push
 
cx


3294 
push
 
dx


3296 ; 
Save
 
°¨t
 
Êags


3297 
mov
 
bl
, 
Æ
 ; 
TX
 
°¨t
 
Êag


3298 
mov
 
bh
, 
ah
 ; 
RX
 
°¨t
 
Êag


3300 ; 
Gë
 
I
/
O
 
ba£


3301 
ã°
 
dx
, dx

3302 
jz
 .
no_io_ba£


3304 ; 
Sñe˘
 
wödow
 7 
DMA
 
c⁄åﬁ


3305 
push
 
dx


3306 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3307 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

3308 
out
 
dx
, 
ax


3309 
p›
 
dx


3311 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


3312 
mov
 
cx
, 100

3313 .
wödow_dñay
:

3314 
n›


3315 
lo›
 .
wödow_dñay


3317 ; 
Sèπ
 
TX
 
DMA
 
ªque°ed


3318 
ã°
 
bl
, bl

3319 
jz
 .
skù_tx_°¨t


3321 
push
 
dx


3322 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3323 
mov
 
ax
, (20 << 11Ë+ 1 ; 
SèπDMADown
 
comm™d


3324 
out
 
dx
, 
ax


3325 
p›
 
dx


3327 .
skù_tx_°¨t
:

3328 ; 
Sèπ
 
RX
 
DMA
 
ªque°ed


3329 
ã°
 
bh
, bh

3330 
jz
 .
skù_rx_°¨t


3332 
push
 
dx


3333 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3334 
mov
 
ax
, (20 << 11Ë+ 0 ; 
SèπDMAUp
 
comm™d


3335 
out
 
dx
, 
ax


3336 
p›
 
dx


3338 .
skù_rx_°¨t
:

3339 ; 
Suc˚ss


3340 
mov
 
ax
, 0

3341 
jmp
 .
exô


3343 .
no_io_ba£
:

3344 
mov
 
ax
, -1

3346 .
exô
:

3347 
p›
 
dx


3348 
p›
 
cx


3349 
p›
 
bx


3350 
p›
 
bp


3351 
ªt


3352 
dma_°¨t_å™s„r
 
ENDP


3355 ; 
dma_gë_ígöe_°©us
 - 
Gë
 
DMA
 
ígöe
 
°©us


3357 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


3358 ; 
ES
:
BX
 = 
poöãr
 
to
 
°©us
 
	`°ru˘uª
 (
tx_°©us
, 
rx_°©us
)

3359 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3360 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


3362 
PUBLIC
 
dma_gë_ígöe_°©us


3363 
dma_gë_ígöe_°©us
 
PROC


3364 
push
 
bp


3365 
mov
 
bp
, 
•


3366 
push
 
bx


3367 
push
 
cx


3368 
push
 
dx


3369 
push
 
si


3371 ; 
Gë
 
I
/
O
 
ba£


3372 
ã°
 
dx
, dx

3373 
jz
 .
no_io_ba£


3375 ; 
Save
 
°©us
 
poöãr


3376 
mov
 
si
, 
bx


3378 ; 
Sñe˘
 
wödow
 7 
DMA
 
°©us


3379 
push
 
dx


3380 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3381 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

3382 
out
 
dx
, 
ax


3383 
p›
 
dx


3385 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


3386 
mov
 
cx
, 100

3387 .
wödow_dñay
:

3388 
n›


3389 
lo›
 .
wödow_dñay


3391 ; 
Ród
 
DMA
 
°©us
 

3392 
push
 
dx


3393 
add
 
dx
, 0E
h
 ; 
Sètus
 

3394 
ö
 
ax
, 
dx


3395 
p›
 
dx


3397 ; 
Exåa˘
 
TX
 
	$°©us
 (
bôs
 
ªœãd
 
to
 
down
 
DMA
)

3398 
mov
 
bx
, 
ax


3399 
™d
 
bx
, 0200
h
 ; 
Down
 
com∂ëe
 
	$bô
 (
bô
 9)

3400 
mov
 [
es
:
si
], 
bx
 ; 
St‹e
 
TX
 
°©us


3402 ; 
Exåa˘
 
RX
 
	$°©us
 (
bôs
 
ªœãd
 
to
 
up
 
DMA
)

3403 
mov
 
bx
, 
ax


3404 
™d
 
bx
, 0400
h
 ; 
Up
 
com∂ëe
 
	$bô
 (
bô
 10)

3405 
mov
 [
es
:
si
+4], 
bx
 ; 
St‹e
 
RX
 
	`°©us
 (
off£t
 
by
 4 
byãs
)

3407 ; 
Suc˚ss


3408 
mov
 
ax
, 0

3409 
jmp
 .
exô


3411 .
no_io_ba£
:

3412 
mov
 
ax
, -1

3414 .
exô
:

3415 
p›
 
si


3416 
p›
 
dx


3417 
p›
 
cx


3418 
p›
 
bx


3419 
p›
 
bp


3420 
ªt


3421 
dma_gë_ígöe_°©us
 
ENDP


3424 ; 
dma_¥ï¨e_cohîít_buf„r
 - 
Pª∑ª
 
buf„r
 
ˇche
 
cohîícy


3426 ; 
I≈ut
: 
ES
:
BX
 = 
buf„r
 
addªss


3427 ; 
CX
 = 
buf„r
 
Àngth


3428 ; 
DL
 = 
	`dúe˘i⁄
 (0=
TX
, 1=
RX
)

3429 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3430 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3432 
PUBLIC
 
dma_¥ï¨e_cohîít_buf„r


3433 
dma_¥ï¨e_cohîít_buf„r
 
PROC


3434 
push
 
bp


3435 
mov
 
bp
, 
•


3436 
push
 
bx


3437 
push
 
cx


3438 
push
 
dx


3440 ; 
F‹
 
ISA
 
bus
 
ma°îög
, 
we
 
√ed
 
to
 
ísuª
 
ˇche
 
cohîícy


3441 ; 
This
 
is
 
a
 
sim∂ifõd
 
im∂emíèti⁄
 
DOS
 
ívú⁄mít


3443 ; 
Check
 
buf„r
 
addªss
 
is
 
vÆid


3444 
ã°
 
bx
, bx

3445 
jz
 .
övÆid_buf„r


3447 ; 
Check
 
buf„r
 
Àngth


3448 
ã°
 
cx
, cx

3449 
jz
 .
övÆid_buf„r


3451 ; 
Check
 
buf„r
 
is
 
ö
 
suôabÀ
 
mem‹y
 
ønge
 
ISA
 
DMA


3452 ; 
ISA
 
DMA
 
is
 
limôed
 
to
 24-
bô
 
	$addªssög
 (16
MB
)

3453 
mov
 
ax
, 
es


3454 
cmp
 
ax
, 0FFFF
h
 ; 
Check
 
£gmít
 
is
 
ªas⁄abÀ


3455 
ja
 .
övÆid_buf„r


3457 ; 
F‹
 
DOS
, 
we
 
¥im¨ûy
 
√ed
 
to
 
Êush
 
™y
 
CPU
 
ˇches


3458 ; 
This
 
is
 
CPU
-
dïídít
, 
but
 
mo°
 386/486 
sy°ems
 
√ed
 
WBINVD


3460 ; 
Check
 
we
'reÑunning on 386 orÜater (has cache)

3461 
ˇŒ
 
gë_˝u_„©uªs
 ; 
Gë
 
CPU
 
„©uªs


3462 
ã°
 
ax
, 0001
h
 ; 
Check
 
ˇche
 
¥e£¡


3463 
jz
 .
no_ˇche_Êush_√eded


3465 ; 
Flush
 
ˇche
 
DMA
 
	`ß„ty
 (386/486/
Pítium
)

3466 ; 
NŸe
: 
This
 
is
 
¥ivûeged
 
ö°ru˘i⁄
, 
may
 
Áu…
 
⁄
 
some
 
sy°ems


3467 
pushf


3468 
˛i
 ; 
DißbÀ
 
öãºu±s


3470 ; 
Issue
 
ˇche
 
	`Êush
 (
wrôe
-
back
 
™d
 
övÆid©e
)

3471 ; 
This
 
Êushes
 
Æl
 
ˇches
, 
which
 
is
 
ovîkûl
 
but
 
ß„


3472 .
byã
 0F
h
, 09h ; 
WBINVD
 
ö°ru˘i⁄


3474 
p›f
 ; 
Re°‹e
 
öãºu±s


3476 .
no_ˇche_Êush_√eded
:

3477 ; 
Suc˚ss


3478 
mov
 
ax
, 0

3479 
jmp
 .
exô


3481 .
övÆid_buf„r
:

3482 
mov
 
ax
, -1

3484 .
exô
:

3485 
p›
 
dx


3486 
p›
 
cx


3487 
p›
 
bx


3488 
p›
 
bp


3489 
ªt


3490 
dma_¥ï¨e_cohîít_buf„r
 
ENDP


3493 ; 
dma_com∂ëe_cohîít_buf„r
 - 
Com∂ëe
 
ˇche
 
cohîícy
 
a·î
 
DMA


3495 ; 
I≈ut
: 
ES
:
BX
 = 
buf„r
 
addªss


3496 ; 
CX
 = 
buf„r
 
Àngth


3497 ; 
DL
 = 
	`dúe˘i⁄
 (0=
TX
, 1=
RX
)

3498 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3499 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3501 
PUBLIC
 
dma_com∂ëe_cohîít_buf„r


3502 
dma_com∂ëe_cohîít_buf„r
 
PROC


3503 
push
 
bp


3504 
mov
 
bp
, 
•


3505 
push
 
bx


3506 
push
 
cx


3507 
push
 
dx


3509 ; 
Check
 
buf„r
 
addªss
 
is
 
vÆid


3510 
ã°
 
bx
, bx

3511 
jz
 .
övÆid_buf„r


3513 ; 
Check
 
buf„r
 
Àngth


3514 
ã°
 
cx
, cx

3515 
jz
 .
övÆid_buf„r


3517 ; 
F‹
 
RX
 
›î©i⁄s
, 
we
 
√ed
 
to
 
övÆid©e
 
ˇche
 
löes


3518 ; 
to
 
ísuª
 
CPU
 
£es
 
d©a
 
wrôãn
 
by
 
DMA


3519 
cmp
 
dl
, 1 ; 
Check
 
RX
 
›î©i⁄


3520 
j√
 .
tx_›î©i⁄


3522 ; 
RX
 
›î©i⁄
 - 
övÆid©e
 
ˇche
 
to
 
£e
 
DMA
 
d©a


3523 
ˇŒ
 
gë_˝u_„©uªs
 ; 
Gë
 
CPU
 
„©uªs


3524 
ã°
 
ax
, 0001
h
 ; 
Check
 
ˇche
 
¥e£¡


3525 
jz
 .
no_ˇche_övÆid©e_√eded


3527 
pushf


3528 
˛i
 ; 
DißbÀ
 
öãºu±s


3530 ; 
InvÆid©e
 
ˇche
 
	`löes
 (
RX
 
we
 
w™t
 
to
 
£e
 
DMA
 
d©a
)

3531 .
byã
 0F
h
, 08h ; 
INVD
 
ö°ru˘i⁄


3533 
p›f
 ; 
Re°‹e
 
öãºu±s


3534 
jmp
 .
ˇche_com∂ëe


3536 .
tx_›î©i⁄
:

3537 ; 
TX
 
›î©i⁄
 - 
no
 
•ecül
 
a˘i⁄
 
√eded
 
a·î
 
DMA


3538 
jmp
 .
ˇche_com∂ëe


3540 .
no_ˇche_övÆid©e_√eded
:

3541 .
ˇche_com∂ëe
:

3542 ; 
Suc˚ss


3543 
mov
 
ax
, 0

3544 
jmp
 .
exô


3546 .
övÆid_buf„r
:

3547 
mov
 
ax
, -1

3549 .
exô
:

3550 
p›
 
dx


3551 
p›
 
cx


3552 
p›
 
bx


3553 
p›
 
bp


3554 
ªt


3555 
dma_com∂ëe_cohîít_buf„r
 
ENDP


3558 ; 
£tup_adv™˚d_dma_des¸ùt‹s
 - 
Sëup
 
h¨dw¨e
 
des¸ùt‹
 
poöãrs


3560 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


3561 ; 
ES
:
BX
 = 
poöãr
 
to
 
TX
 
rög
 
physiˇl
 
addªss


3562 ; 
ES
:
SI
 = 
poöãr
 
to
 
RX
 
rög
 
physiˇl
 
addªss


3563 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
√g©ive
 
îr‹
 
code
 
⁄
 
Áûuª


3564 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


3566 
PUBLIC
 
£tup_adv™˚d_dma_des¸ùt‹s


3567 
£tup_adv™˚d_dma_des¸ùt‹s
 
PROC


3568 
push
 
bp


3569 
mov
 
bp
, 
•


3570 
push
 
bx


3571 
push
 
cx


3572 
push
 
dx


3573 
push
 
si


3574 
push
 
di


3576 ; 
Gë
 
I
/
O
 
ba£


3577 
ã°
 
dx
, dx

3578 
jz
 .
no_io_ba£


3580 ; 
Save
 
des¸ùt‹
 
addªs£s


3581 
mov
 
di
, 
si
 ; 
Save
 
RX
 
rög
 
addªss


3583 ; 
Sñe˘
 
wödow
 7 
des¸ùt‹
 
poöãr
 
£tup


3584 
push
 
dx


3585 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3586 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

3587 
out
 
dx
, 
ax


3588 
p›
 
dx


3590 ; 
SmÆl
 
dñay
 
wödow
 
£À˘i⁄


3591 
mov
 
cx
, 100

3592 .
wödow_dñay
:

3593 
n›


3594 
lo›
 .
wödow_dñay


3596 ; 
Së
 
TX
 
des¸ùt‹
 
li°
 
	$poöãr
 (
Down
 
Li°
 
Poöãr
)

3597 
push
 
dx


3598 
add
 
dx
, 404
h
 ; 
Down
 
li°
 
poöãr
 

3599 
mov
 
ax
, [
es
:
bx
] ; 
Gë
 
low
 
w‹d
 
of
 
TX
 
rög
 
addªss


3600 
out
 
dx
, 
ax


3601 
add
 
dx
, 2 ; 
High
 
w‹d
 

3602 
mov
 
ax
, [
es
:
bx
+2] ; 
Gë
 
high
 
w‹d
 
of
 
TX
 
rög
 
addªss


3603 
out
 
dx
, 
ax


3604 
p›
 
dx


3606 ; 
Së
 
RX
 
des¸ùt‹
 
li°
 
	$poöãr
 (
Up
 
Li°
 
Poöãr
)

3607 
push
 
dx


3608 
add
 
dx
, 418
h
 ; 
Up
 
li°
 
poöãr
 

3609 
mov
 
ax
, [
es
:
di
] ; 
Gë
 
low
 
w‹d
 
of
 
RX
 
rög
 
addªss


3610 
out
 
dx
, 
ax


3611 
add
 
dx
, 2 ; 
High
 
w‹d
 

3612 
mov
 
ax
, [
es
:
di
+2] ; 
Gë
 
high
 
w‹d
 
of
 
RX
 
rög
 
addªss


3613 
out
 
dx
, 
ax


3614 
p›
 
dx


3616 ; 
E«bÀ
 
bus
 
ma°îög
 
ö
 
the
 
NIC


3617 
push
 
dx


3618 
add
 
dx
, 0E
h
 ; 
Comm™d
 

3619 
mov
 
ax
, (14 << 11Ë| 07FF
h
 ; 
Së
 
öãºu±
 
íabÀ
 
wôh
 
Æl
 
DMA
 
bôs


3620 
out
 
dx
, 
ax


3621 
p›
 
dx


3623 ; 
Suc˚ss


3624 
mov
 
ax
, 0

3625 
jmp
 .
exô


3627 .
no_io_ba£
:

3628 
mov
 
ax
, -1

3630 .
exô
:

3631 
p›
 
di


3632 
p›
 
si


3633 
p›
 
dx


3634 
p›
 
cx


3635 
p›
 
bx


3636 
p›
 
bp


3637 
ªt


3638 
£tup_adv™˚d_dma_des¸ùt‹s
 
ENDP


3641 ; 
adv™˚d_dma_öãºu±_check
 - 
Check
 
adv™˚d
 
DMA
 
öãºu±s


3643 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


3644 ; 
Ouçut
: 
AX
 = 
öãºu±
 
°©us
 
mask


3645 ; 
BX
 = 
DMA
 
com∂ëi⁄
 
°©us


3646 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3648 
PUBLIC
 
adv™˚d_dma_öãºu±_check


3649 
adv™˚d_dma_öãºu±_check
 
PROC


3650 
push
 
bp


3651 
mov
 
bp
, 
•


3652 
push
 
cx


3653 
push
 
dx


3655 ; 
Inôülize
  
vÆues


3656 
mov
 
ax
, 0 ; 
I¡îru±
 
°©us


3657 
mov
 
bx
, 0 ; 
DMA
 
com∂ëi⁄
 
°©us


3659 ; 
Gë
 
I
/
O
 
ba£


3660 
ã°
 
dx
, dx

3661 
jz
 .
no_io_ba£


3663 ; 
Ród
 
öãºu±
 
°©us
 

3664 
push
 
dx


3665 
add
 
dx
, 0E
h
 ; 
Sètus
 

3666 
ö
 
ax
, 
dx
 ; 
Ród
 
°©us


3667 
p›
 
dx


3669 ; 
Check
 
DMA
-
ªœãd
 
öãºu±s


3670 
mov
 
bx
, 
ax
 ; 
Save
 
fuŒ
 
°©us


3672 ; 
Exåa˘
 
DMA
 
com∂ëi⁄
 
bôs


3673 
™d
 
bx
, 0700
h
 ; 
Mask
 
DMA
 
D⁄e
, 
Down
 
Com∂ëe
, 
Up
 Complete

3675 ; 
Check
 
•ecific
 
DMA
 
öãºu±
 
c⁄dôi⁄s


3676 
ã°
 
ax
, 0100
h
 ; 
DMA
 
	$D⁄e
 (
bô
 8)

3677 
jz
 .
no_dma_d⁄e


3678 
‹
 
bx
, 0001
h
 ; 
Së
 
DMA
 
d⁄e
 
Êag


3680 .
no_dma_d⁄e
:

3681 
ã°
 
ax
, 0200
h
 ; 
Down
 
	`Com∂ëe
 (
bô
 9 - 
TX
)

3682 
jz
 .
no_tx_com∂ëe


3683 
‹
 
bx
, 0002
h
 ; 
Së
 
TX
 
com∂ëe
 
Êag


3685 .
no_tx_com∂ëe
:

3686 
ã°
 
ax
, 0400
h
 ; 
Up
 
	`Com∂ëe
 (
bô
 10 - 
RX
)

3687 
jz
 .
no_rx_com∂ëe


3688 
‹
 
bx
, 0004
h
 ; 
Së
 
RX
 
com∂ëe
 
Êag


3690 .
no_rx_com∂ëe
:

3691 ; 
Rëu∫
 
öãºu±
 
°©us
 
ö
 
AX
, 
DMA
 sètu†ö 
BX


3692 
jmp
 .
exô


3694 .
no_io_ba£
:

3695 
mov
 
ax
, 0

3696 
mov
 
bx
, 0

3698 .
exô
:

3699 
p›
 
dx


3700 
p›
 
cx


3701 
p›
 
bp


3702 
ªt


3703 
adv™˚d_dma_öãºu±_check
 
ENDP


3706 ; 
HAL
 
BRIDGE
 
FUNCTIONS
 - 
C
 
to
 
As£mbly
 
I¡îÁ˚


3710 ; 
asm_3c509b_dëe˘_h¨dw¨e
 - 
HAL
 
bridge
 3C509B 
dëe˘i⁄


3712 ; 
I≈ut
: [
BP
+4] = 
nic_c⁄ãxt
 *
	`c⁄ãxt
 (
C
 
ˇŒög
 
c⁄víti⁄
)

3713 ; 
Ouçut
: 
AX
 = 
HAL_SUCCESS
 
‹
 
îr‹
 
code


3714 ; 
U£s
: 
Sènd¨d
 
C
 
ˇŒög
 
c⁄víti⁄


3716 
PUBLIC
 
asm_3c509b_dëe˘_h¨dw¨e


3717 
asm_3c509b_dëe˘_h¨dw¨e
 
PROC


3718 
push
 
bp


3719 
mov
 
bp
, 
•


3720 
push
 
bx


3721 
push
 
cx


3722 
push
 
dx


3723 
push
 
si


3725 ; 
CÆl
 
our
 
dëe˘
 
fun˘i⁄


3726 
ˇŒ
 
dëe˘_3c509b


3727 
cmp
 
ax
, 0

3728 
je
 .
nŸ_found


3730 ; 
Found
 - 
°‹e
 
I
/
O
 
ba£
 
ö
 
c⁄ãxt
 
°ru˘uª


3731 ; 
P›uœã
 
nic_c⁄ãxt
 
°ru˘uª


3732 
push
 
si


3733 
push
 
di


3734 
push
 
cx


3735 
push
 
bx


3737 ; 
ES
:
DI
 
should
 
poöt
 
to
 
nic_c⁄ãxt
 
°ru˘uª


3738 ; 
AL
 
c⁄èös
 
ö°™˚
 
ödex


3740 
x‹
 
ah
,áh

3741 
mov
 
si
, 
ax
 ; 
Save
 
ö°™˚
 
ödex


3743 ; 
St‹e
 
I
/
O
 
	`ba£
 (16-
bô
)

3744 
shl
 
si
, 1 ; 
W‹d
 
off£t


3745 
mov
 
bx
, 
OFFSET
 
hw_ioba£_èbÀ


3746 
mov
 
ax
, [
bx
+
si
]

3747 
°osw
 ; 
St‹e
 
ioba£


3749 ; 
St‹e
 
	`IRQ
 (8-
bô
)

3750 
shr
 
si
, 1 ; 
Back
 
to
 
byã
 
off£t


3751 
mov
 
bx
, 
OFFSET
 
hw_úq_löes


3752 
mov
 
Æ
, [
bx
+
si
]

3753 
°osb
 ; 
St‹e
 
úq


3755 ; 
St‹e
 
NIC
 
	`ty≥
 (8-
bô
)

3756 
mov
 
bx
, 
OFFSET
 
hw_ty≥s


3757 
mov
 
Æ
, [
bx
+
si
]

3758 
°osb
 ; 
St‹e
 
nic_ty≥


3760 ; 
St‹e
 
	`Êags
 (8-
bô
)

3761 
mov
 
bx
, 
OFFSET
 
hw_Êags_èbÀ


3762 
mov
 
Æ
, [
bx
+
si
]

3763 
°osb
 ; 
St‹e
 
Êags


3765 ; 
St‹e
 
cuºít
 
	`wödow
 (8-
bô
,  
to
 1)

3766 
mov
 
Æ
, 1

3767 
°osb
 ; 
St‹e
 
wödow


3769 ; 
St‹e
 
MAC
 
	$addªss
 (6 
byãs
)

3770 
mov
 
ax
, 
si


3771 
mov
 
˛
, 6

3772 
mul
 
˛
 ; 
AX
 = 
ödex
 * 6

3773 
mov
 
si
, 
OFFSET
 
hw_mac_addªs£s


3774 
add
 
si
, 
ax


3775 
mov
 
cx
, 6

3776 
ªp
 
movsb
 ; 
C›y
 
MAC
 
addªss


3778 ; 
Inôülize
 
°©i°ics
 
cou¡îs
 
to
 0

3779 
x‹
 
ax
,áx

3780 
°osw
 ; 
tx_‰ì
 = 0

3781 
°osw
 ; 
rx_°©us
 = 0

3782 
°osw
 ; 
tx_∑ckës
 
low
 = 0

3783 
°osw
 ; 
tx_∑ckës
 
high
 = 0

3784 
°osw
 ; 
rx_∑ckës
 
low
 = 0

3785 
°osw
 ; 
rx_∑ckës
 
high
 = 0

3786 
°osw
 ; 
tx_îr‹s
 
low
 = 0

3787 
°osw
 ; 
tx_îr‹s
 
high
 = 0

3788 
°osw
 ; 
rx_îr‹s
 
low
 = 0

3789 
°osw
 ; 
rx_îr‹s
 
high
 = 0

3791 
p›
 
bx


3792 
p›
 
cx


3793 
p›
 
di


3794 
p›
 
si


3795 
mov
 
bx
, 0 ; 
HAL_SUCCESS


3796 
jmp
 .
exô


3798 .
nŸ_found
:

3799 
mov
 
bx
, -2 ; 
HAL_ERROR_HARDWARE_FAILURE


3801 .
exô
:

3802 
mov
 
ax
, 
bx
 ; 
Rëu∫
 
vÆue
 
ö
 
AX


3803 
p›
 
si


3804 
p›
 
dx


3805 
p›
 
cx


3806 
p›
 
bx


3807 
p›
 
bp


3808 
ªt


3809 
asm_3c509b_dëe˘_h¨dw¨e
 
ENDP


3812 ; 
asm_3c509b_öô_h¨dw¨e
 - 
HAL
 
bridge
 3C509B 
öôüliz©i⁄


3814 ; 
I≈ut
: [
BP
+4] = 
nic_c⁄ãxt
 *
	`c⁄ãxt
 (
C
 
ˇŒög
 
c⁄víti⁄
)

3815 ; 
Ouçut
: 
AX
 = 
HAL_SUCCESS
 
‹
 
îr‹
 
code


3816 ; 
U£s
: 
Sènd¨d
 
C
 
ˇŒög
 
c⁄víti⁄


3818 
PUBLIC
 
asm_3c509b_öô_h¨dw¨e


3819 
asm_3c509b_öô_h¨dw¨e
 
PROC


3820 
push
 
bp


3821 
mov
 
bp
, 
•


3822 
push
 
bx


3823 
push
 
cx


3824 
push
 
dx


3825 
push
 
si


3827 ; 
Gë
 
c⁄ãxt
 
poöãr


3828 
mov
 
si
, [
bp
+4] ; 
nic_c⁄ãxt
 
poöãr


3829 ; 
Exåa˘
 
I
/
O
 
ba£
 
‰om
 
c⁄ãxt
 
°ru˘uª


3830 
push
 
si


3831 
push
 
ds


3833 ; 
DS
:
SI
 
poöts
 
to
 
c⁄ãxt
 
°ru˘uª


3834 
lds
 
si
, [
bp
+4] ; 
Lﬂd
 
c⁄ãxt
 
poöãr


3835 
lodsw
 ; 
Lﬂd
 
	$ioba£
 (
fú°
 
fõld
)

3836 
mov
 
dx
, 
ax
 ; 
DX
 = 
I
/
O
 
ba£


3838 
p›
 
ds


3839 
p›
 
si


3840 ; 
F‹
 
now
, 
u£
 
fú°
 
dëe˘ed
 
I
/
O
 
ba£


3841 
mov
 
dx
, [
hw_io_ba£s
] ; 
Gë
 
°‹ed
 
I
/
O
 
ba£


3842 
mov
 
Æ
, 0 ; 
NIC
 
ödex
 0

3844 ; 
CÆl
 
our
 
öô
 
fun˘i⁄


3845 
ˇŒ
 
öô_3c509b


3846 
cmp
 
ax
, 0

3847 
j√
 .
öô_Áûed


3849 
mov
 
bx
, 0 ; 
HAL_SUCCESS


3850 
jmp
 .
exô


3852 .
öô_Áûed
:

3853 
mov
 
bx
, -6 ; 
HAL_ERROR_INITIALIZATION


3855 .
exô
:

3856 
mov
 
ax
, 
bx
 ; 
Rëu∫
 
vÆue
 
ö
 
AX


3857 
p›
 
si


3858 
p›
 
dx


3859 
p›
 
cx


3860 
p›
 
bx


3861 
p›
 
bp


3862 
ªt


3863 
asm_3c509b_öô_h¨dw¨e
 
ENDP


3865 ; 
Addôi⁄Æ
 
HAL
 
bridge
 
fun˘i⁄
 
°ubs
 
com∂ëe
 
vèbÀ


3866 
PUBLIC
 
asm_3c509b_ª£t_h¨dw¨e


3867 
asm_3c509b_ª£t_h¨dw¨e
 
PROC


3868 
push
 
bp


3869 
mov
 
bp
, 
•


3870 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3871 
p›
 
bp


3872 
ªt


3873 
asm_3c509b_ª£t_h¨dw¨e
 
ENDP


3875 
PUBLIC
 
asm_3c509b_c⁄figuª_medü


3876 
asm_3c509b_c⁄figuª_medü
 
PROC


3877 
push
 
bp


3878 
mov
 
bp
, 
•


3879 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3880 
p›
 
bp


3881 
ªt


3882 
asm_3c509b_c⁄figuª_medü
 
ENDP


3884 
PUBLIC
 
asm_3c509b_£t_°©i⁄_addªss


3885 
asm_3c509b_£t_°©i⁄_addªss
 
PROC


3886 
push
 
bp


3887 
mov
 
bp
, 
•


3888 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3889 
p›
 
bp


3890 
ªt


3891 
asm_3c509b_£t_°©i⁄_addªss
 
ENDP


3893 
PUBLIC
 
asm_3c509b_íabÀ_öãºu±s


3894 
asm_3c509b_íabÀ_öãºu±s
 
PROC


3895 
push
 
bp


3896 
mov
 
bp
, 
•


3897 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3898 
p›
 
bp


3899 
ªt


3900 
asm_3c509b_íabÀ_öãºu±s
 
ENDP


3902 
PUBLIC
 
asm_3c509b_°¨t_å™s˚ivî


3903 
asm_3c509b_°¨t_å™s˚ivî
 
PROC


3904 
push
 
bp


3905 
mov
 
bp
, 
•


3906 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3907 
p›
 
bp


3908 
ªt


3909 
asm_3c509b_°¨t_å™s˚ivî
 
ENDP


3911 
PUBLIC
 
asm_3c509b_°›_å™s˚ivî


3912 
asm_3c509b_°›_å™s˚ivî
 
PROC


3913 
push
 
bp


3914 
mov
 
bp
, 
•


3915 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3916 
p›
 
bp


3917 
ªt


3918 
asm_3c509b_°›_å™s˚ivî
 
ENDP


3920 
PUBLIC
 
asm_3c509b_gë_lök_°©us


3921 
asm_3c509b_gë_lök_°©us
 
PROC


3922 
push
 
bp


3923 
mov
 
bp
, 
•


3924 
mov
 
ax
, 1 ; 
HAL_LINK_UP


3925 
p›
 
bp


3926 
ªt


3927 
asm_3c509b_gë_lök_°©us
 
ENDP


3929 
PUBLIC
 
asm_3c509b_gë_°©i°ics


3930 
asm_3c509b_gë_°©i°ics
 
PROC


3931 
push
 
bp


3932 
mov
 
bp
, 
•


3933 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3934 
p›
 
bp


3935 
ªt


3936 
asm_3c509b_gë_°©i°ics
 
ENDP


3938 
PUBLIC
 
asm_3c509b_£t_mu…iˇ°


3939 
asm_3c509b_£t_mu…iˇ°
 
PROC


3940 
push
 
bp


3941 
mov
 
bp
, 
•


3942 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3943 
p›
 
bp


3944 
ªt


3945 
asm_3c509b_£t_mu…iˇ°
 
ENDP


3947 
PUBLIC
 
asm_3c509b_£t_¥omiscuous


3948 
asm_3c509b_£t_¥omiscuous
 
PROC


3949 
push
 
bp


3950 
mov
 
bp
, 
•


3951 
mov
 
ax
, 0 ; 
HAL_SUCCESS


3952 
p›
 
bp


3953 
ªt


3954 
asm_3c509b_£t_¥omiscuous
 
ENDP


3956 ;=============================================================================\
n
; 3C515-
TX
 
HAL
 
VTABLE
 
IMPLEMENTATIONS
\n;=============================================================================\n\n;-----------------------------------------------------------------------------\n; 
asm_3c515_dëe˘_h¨dw¨e
 - 
Dëe˘
 3C515-TX 
h¨dw¨e
\n;\n; 
I≈ut
: 
ES
:
BX
 = 
poöãr
 
to
 
nic_c⁄ãxt
 
°ru˘uª
 \n; 
Ouçut
: 
AX
 = 
HAL_SUCCESS
 
‹
 
îr‹
 
code
\n; 
U£s
: 
AŒ
 
ªgi°îs
\n;-----------------------------------------------------------------------------\
«sm_3c515_dëe˘_h¨dw¨e
 
PROC
\¿
push
 
bp
\¿
mov
 bp, 
•
\¿push 
bx
\¿push 
cx
\¿push 
dx
\¿push 
si
\¿push 
di
\¿\¿; 
CÆl
 
our
 
exi°ög
 
dëe˘_3c515
 
fun˘i⁄
\¿
ˇŒ
 dëe˘_3c515\¿
cmp
 
ax
, 0\¿
je
 .
nŸ_found
\¿\¿; 
Found
 - 
°‹e
 
I
/
O
 
ba£
 
ö
 
c⁄ãxt
\¿mov [
es
:bx+4],áx ; 
St‹e
 I/O ba£ i¿
	`c⁄ãxt
 (
off£t
 4)\¿mováx, 0 ; HAL_SUCCESS\¿
jmp
 .
exô
\¿\n.nŸ_found:\¿mováx, -2 ; 
HAL_ERROR_HARDWARE_FAILURE
\¿\n.exô:\¿
p›
 di\¿p› si\¿p› dx\¿p› cx\¿p› bx\¿p› bp\¿
ªt
\«sm_3c515_dëe˘_h¨dw¨ê
ENDP
\n\n;-----------------------------------------------------------------------------\n; 
asm_3c515_öô_h¨dw¨e
 - 
Inôülize
 3C515-TX h¨dw¨e\n;\n; I≈ut: ES:BX =Öoöã∏tÿnic_c⁄ãxà°ru˘uª\n; Ouçut: AX = HAL_SUCCESS o∏îr‹ code\n; U£s: AŒÑegi°î†\n;-----------------------------------------------------------------------------\
«sm_3c515_öô_h¨dw¨e
 PROC\¿push bp\¿mov bp, sp\¿push bx\¿push cx\¿push dx\¿push si\¿\¿; 
Gë
 I/O ba£ 
‰om
 c⁄ãxt\¿mov dx, [es:bx+4] ; I/O ba£ from c⁄ãxt\¿mov 
Æ
, 1 ; 
In°™˚
 1 3C515\¿\¿; CÆ»ou∏
öô_3c515
 fun˘i⁄\¿ˇŒ inô_3c515\¿; 
Rëu∫s
 0 
suc˚ss
 
Æªady
\¿\¿p› si\¿p› dx\¿p› cx\¿p› bx\¿p› bp\¿ªt\«sm_3c515_öô_h¨dw¨êENDP\n\n;-----------------------------------------------------------------------------\n; 
asm_3c515_ª£t_h¨dw¨e
 - 
Re£t
 3C515-TX h¨dw¨e\n;\n; I≈ut: ES:BX =Öoöã∏tÿnic_c⁄ãxà°ru˘uª\n; Ouçut: AX = HAL_SUCCESS o∏îr‹ code\n; U£s: AX, BX, 
DX
\n;-----------------------------------------------------------------------------\
«sm_3c515_ª£t_h¨dw¨e
 PROC\¿push bp\¿mov bp, sp\¿push bx\¿push dx\¿\¿; Gë I/O ba£ from c⁄ãxt\¿mov dx, [es:bx+4] ; I/O ba£ from c⁄ãxt\¿\¿; 
TŸÆ
 
ª£t
 
comm™d
\¿
add
 dx, 0E
h
 ; 
Comm™d
 \¿mováx, 0 ; TŸÆÑe£t\¿
out
 dx,áx\¿\¿; 
Waô
 ª£t\¿mov cx, 1000\n.
ª£t_waô
:\¿ˇŒ 
dñay_1ms
\¿
lo›
 .ª£t_waô\¿\¿mováx, 0 ; HAL_SUCCESS\¿\¿p› dx\¿p› bx\¿p› bp\¿ªt\«sm_3c515_ª£t_h¨dw¨êENDP\n\n;-----------------------------------------------------------------------------\n; 
asm_3c515_c⁄figuª_medü
 - 
C⁄figuª
 
medü
 
ty≥
\n;\n; I≈ut: ES:BX =Öoöã∏tÿnic_c⁄ãxà°ru˘uª, 
CX
 = 
medü_ty≥
\n; Ouçut: AX = HAL_SUCCESS o∏îr‹ code\n; U£s: AX, BX, CX, DX\n;-----------------------------------------------------------------------------\
«sm_3c515_c⁄figuª_medü
 PROC\¿push bp\¿mov bp, sp\¿\¿; 
F‹
 
now
, 
ju°
  suc˚s†- medü 
is
áuto-
c⁄figuªd
 i¿
öô
\¿mováx, 0 ; HAL_SUCCESS\¿\¿p› bp\¿ªt\«sm_3c515_c⁄figuª_medü ENDP\n\n;-----------------------------------------------------------------------------\n; 
asm_3c515_£t_°©i⁄_addªss
 - 
Së
 
MAC
 
addªss
\n;\n; I≈ut: ES:BX =Öoöã∏tÿnic_c⁄ãxà°ru˘uª, ES:
SI
 = 
mac_addr
\n; Ouçut: AX = HAL_SUCCESS o∏îr‹ code\n; U£s: AX, BX, CX, DX, SI, 
DI
\n;-----------------------------------------------------------------------------\
«sm_3c515_£t_°©i⁄_addªss
 PROC\¿push bp\¿mov bp, sp\¿push bx\¿push cx\¿push dx\¿push si\¿push di\¿\¿; Gë I/O ba£ from c⁄ãxt\¿mov dx, [es:bx+4] ; I/O ba£ from c⁄ãxt\¿\¿; 
Sñe˘
 
wödow
 2 
°©i⁄
áddªss\¿add dx, 0Eh ; Comm™d \¿mováx, (1 << 11Ë| 2 ; Sñe˘ wödow 2\¿ouàdx,áx\¿\¿; 
Wrôe
 MACáddªs†tÿ°©i⁄áddªs†
	`ªgi°îs
 (0-5)\¿
sub
 dx, 0Eh ; 
Back
Åÿba£\¿mov cx, 6 ; 6 
byãs
\¿mov di, 0 ; 
Sèπ
 
©
 off£à0\¿\n.
mac_lo›
:\¿movál, [es:si] ; Gë MAC 
byã
\¿push dx\¿add dx, dò; 
Addªss
 off£t\¿ouàdx,á»; WrôêMAC byã\¿p› dx\¿
öc
 sò; 
Next
 MAC byã\¿ö¯dò; Nexà\¿lo› .mac_lo›\¿\¿; 
Rëu∫
Åÿwödow 1\¿add dx, 0Eh ; Comm™d \¿mováx, (1 << 11Ë| 1 ; Sñe˘ wödow 1\¿ouàdx,áx\¿\¿mováx, 0 ; HAL_SUCCESS\¿\¿p› di\¿p› si\¿p› dx\¿p› cx\¿p› bx\¿p› bp\¿ªt\«sm_3c515_£t_°©i⁄_addªs†ENDP\n\n;-----------------------------------------------------------------------------\n; 
Remaöög
 3C515 HAL 
vèbÀ
 
	`fun˘i⁄s
 (
°ubs
 now)\n;-----------------------------------------------------------------------------\n\
«sm_3c515_íabÀ_öãºu±s
 PROC\¿mováx, 0 ; HAL_SUCCESS\¿ªt\«sm_3c515_íabÀ_öãºu±†ENDP\n\
«sm_3c515_°¨t_å™s˚ivî
 PROC\¿mováx, 0 ; HAL_SUCCESS\¿ªt\«sm_3c515_°¨t_å™s˚ivî ENDP\n\
«sm_3c515_°›_å™s˚ivî
 PROC\¿mováx, 0 ; HAL_SUCCESS\¿ªt\«sm_3c515_°›_å™s˚ivî ENDP\n\
«sm_3c515_gë_lök_°©us
 PROC\¿mováx, 1 ; 
HAL_LINK_UP
\¿ªt\«sm_3c515_gë_lök_°©u†ENDP\n\
«sm_3c515_gë_°©i°ics
 PROC\¿mováx, 0 ; HAL_SUCCESS\¿ªt\«sm_3c515_gë_°©i°ic†ENDP\n\
«sm_3c515_£t_mu…iˇ°
 PROC\¿mováx, 0 ; HAL_SUCCESS\¿ªt\«sm_3c515_£t_mu…iˇ° ENDP\n\
«sm_3c515_£t_¥omiscuous
 PROC\n mováx, 0 ; HAL_SUCCESS\nÑet\nasm_3c515_set_promiscuous ENDP\n\n;=============================================================================

3957 ; 
ISA
 
ADDRESS
 
TRANSLATION
 
FOR
 3C515 
DMA


3961 ; 
iß_vút_to_phys
 - 
C⁄vît
 
DOS
 
ªÆ
 
mode
 
addªss
 
to
 
ISA
 
physiˇl
áddress

3963 ; 
I≈ut
: 
DS
:
SI
 = 
vútuÆ
 
	`addªss
 (
£gmít
:
off£t
)

3964 ; 
Ouçut
: 
DX
:
AX
 = 24-
bô
 
physiˇl
 
addªss
 
ISA
 
DMA


3965 ; 
U£s
: 
AX
, 
DX


3967 
PUBLIC
 
iß_vút_to_phys


3968 
iß_vút_to_phys
 
PROC


3969 
push
 
cx


3971 ; 
CÆcuœã
 
physiˇl
 
addªss
: (
£gmít
 << 4Ë+ 
off£t


3972 
mov
 
ax
, 
ds


3973 
x‹
 
dx
, dx

3974 
mov
 
cx
, 4

3976 ; 
Shi·
 
£gmít
 
À·
 
by
 4 
	`bôs
 (
mu…ùly
 by 16)

3977 .
shi·_lo›
:

3978 
shl
 
ax
, 1

3979 
r˛
 
dx
, 1

3980 
lo›
 .
shi·_lo›


3982 ; 
Add
 
off£t


3983 
add
 
ax
, 
si


3984 
adc
 
dx
, 0

3986 ; 
Ensuª
 
wôhö
 
ISA
 
DMA
 16
MB
 
	`limô
 (24-
bô
 
addªss
)

3987 
™d
 
dx
, 00FF
h
 ; 
Mask
 
to
 24 
bôs


3989 
p›
 
cx


3990 
ªt


3991 
iß_vút_to_phys
 
ENDP


3994 ; 
check_iß_dma_bound¨y
 - 
Check
 
buf„r
 
¸os£s
 64
KB
 
DMA
 
bound¨y


3996 ; 
I≈ut
: 
DX
:
AX
 = 
physiˇl
 
addªss
, 
CX
 = 
buf„r
 
size


3997 ; 
Ouçut
: 
CF
 
£t
 
bound¨y
 
¸os£d
, 
˛ór
 
OK


3998 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

4000 
PUBLIC
 
check_iß_dma_bound¨y


4001 
check_iß_dma_bound¨y
 
PROC


4002 
push
 
ax


4003 
push
 
bx


4004 
push
 
dx


4006 ; 
CÆcuœã
 
íd
 
addªss


4007 
mov
 
bx
, 
ax


4008 
add
 
bx
, 
cx


4009 
jnc
 .
no_ˇºy


4010 
öc
 
dx
 ; 
H™dÀ
 
ˇºy
 
to
 
high
 
w‹d


4012 .
no_ˇºy
:

4013 ; 
Check
 
high
 16 
bôs
 
	$ch™ged
 (
¸os£d
 64
KB
 
bound¨y
)

4014 
push
 
ax


4015 
x‹
 
ax
, 
bx
 ; 
XOR
 
°¨t
 
™d
 
íd
 
low
 
w‹ds


4016 
™d
 
ax
, 0F000
h
 ; 
Check
 
uµî
 
nibbÀ
 
ch™ged


4017 
p›
 
ax


4018 
jz
 .
ßme_64k


4020 ; 
Cros£d
 
bound¨y


4021 
°c
 ; 
Së
 
ˇºy
 
Êag


4022 
jmp
 .
exô


4024 .
ßme_64k
:

4025 
˛c
 ; 
CÀ¨
 
ˇºy
 
Êag


4027 .
exô
:

4028 
p›
 
dx


4029 
p›
 
bx


4030 
p›
 
ax


4031 
ªt


4032 
check_iß_dma_bound¨y
 
ENDP


4035 ; 
£tup_iß_dma_des¸ùt‹
 - 
Sëup
 
DMA
 
des¸ùt‹
 
ISA
 
bus
 
ma°î


4037 ; 
I≈ut
: 
ES
:
DI
 = 
des¸ùt‹
 
loˇti⁄


4038 ; 
DX
:
AX
 = 
physiˇl
 
addªss


4039 ; 
CX
 = 
Àngth


4040 ; 
BX
 = 
c⁄åﬁ
 
Êags


4041 ; 
Ouçut
: 
N⁄e


4042 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

4044 
PUBLIC
 
£tup_iß_dma_des¸ùt‹


4045 
£tup_iß_dma_des¸ùt‹
 
PROC


4046 
push
 
ax


4047 
push
 
dx


4049 ; 
St‹e
 
physiˇl
 
	`addªss
 (24-
bô
 
ISA
)

4050 
mov
 
w‹d
 
±r
 
es
:[
di
], 
ax
 ; 
Low
 16 
bôs


4051 
mov
 
byã
 
±r
 
es
:[
di
+2], 
dl
 ; 
Bôs
 16-23

4052 
mov
 
byã
 
±r
 
es
:[
di
+3], 0 ; 
Zîo
 
uµî
 byte

4054 ; 
St‹e
 
Àngth


4055 
mov
 
w‹d
 
±r
 
es
:[
di
+4], 
cx


4057 ; 
St‹e
 
c⁄åﬁ
 
Êags


4058 
mov
 
w‹d
 
±r
 
es
:[
di
+6], 
bx


4060 
p›
 
dx


4061 
p›
 
ax


4062 
ªt


4063 
£tup_iß_dma_des¸ùt‹
 
ENDP


4066 ; 
öô_3c515_bus_ma°î
 - 
Inôülize
 
ISA
 
bus
 
ma°îög
 3C515

4068 ; 
I≈ut
: 
DX
 = 
I
/
O
 
ba£
 
addªss


4069 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


4070 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


4072 
PUBLIC
 
öô_3c515_bus_ma°î


4073 
öô_3c515_bus_ma°î
 
PROC


4074 
push
 
bp


4075 
mov
 
bp
, 
•


4076 
push
 
bx


4077 
push
 
cx


4078 
push
 
si


4079 
push
 
di


4081 ; 
Sñe˘
 
wödow
 7 
bus
 
ma°î
 
c⁄åﬁ


4082 
add
 
dx
, 0E
h
 ; 
Comm™d
 

4083 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

4084 
out
 
dx
, 
ax


4086 ; 
Inôülize
 
DMA
 
c⁄åﬁ
 
ªgi°îs
 
©
 
ba£
+0x400

4087 
sub
 
dx
, 0E
h
 ; 
Back
 
to
 
ba£


4088 
add
 
dx
, 
C515_DMA_CTRL
 ; 
DMA
 
c⁄åﬁ
 
	`off£t
 (0x400)

4090 ; 
CÀ¨
 
DMA
 
li°s


4091 
x‹
 
ax
,áx

4092 
out
 
dx
, 
ax
 ; 
CÀ¨
 
TX
 
li°
 
poöãr


4093 
add
 
dx
, 4

4094 
out
 
dx
, 
ax
 ; 
CÀ¨
 
‰agmít
 
addªss


4095 
add
 
dx
, 4

4096 
out
 
dx
, 
ax
 ; 
CÀ¨
 
‰agmít
 
Àngth


4098 ; 
E«bÀ
 
bus
 
ma°îög


4099 
sub
 
dx
, 
C515_DMA_CTRL


4100 
add
 
dx
, 0E
h
 ; 
Comm™d
 

4101 
mov
 
ax
, 0x2000 ; 
BUS_MASTER_ENABLE


4102 
out
 
dx
, 
ax


4104 ; 
Suc˚ss


4105 
x‹
 
ax
,áx

4107 
p›
 
di


4108 
p›
 
si


4109 
p›
 
cx


4110 
p›
 
bx


4111 
p›
 
bp


4112 
ªt


4113 
öô_3c515_bus_ma°î
 
ENDP


4116 ; 
MCA
/
EISA
/
VLB
 
Dëe˘i⁄
 
Stubs


4118 ; 
PuΩo£
: 
Dëe˘
 
unsuµ‹ãd
 
bus
 
NICs
 
to
 
¥ovide
 
u£r
 
„edback


4120 ; 
The£
 
¨e
 
STUBS
 
ONLY
 - 
they
 
dëe˘
 
but
 dÿ
nŸ
 
suµ‹t
:

4121 ; - 
MCA
: 3C523, 3C529

4122 ; - 
EISA
: 3C592, 3C597

4123 ; - 
VLB
: 
V¨ious
 
ˇrds


4125 ; 
Sa„ty
: 
Ród
-
⁄ly
 
›î©i⁄s
, 
ª°‹es
 
Æl
 
sy°em
 
°©e


4126 ; 
Size
: ~1.4
KB
 
tŸÆ
 
Æl
 
°ubs


4127 ; 
Risk
: 
Low
 - 
ö˛udes
 
timeout
 
¥Ÿe˘i⁄


4131 ; 
is_mˇ_sy°em
 - 
Quick
 
MCA
 
sy°em
 
check


4133 ; 
I≈ut
: 
N⁄e


4134 ; 
Ouçut
: 
AX
 = 1 
MCA
 
sy°em
, 0 
nŸ


4135 ; 
U£s
: 
AX
, 
BX
, 
	`ES
 (
¥e£rves
 
Æl
)

4137 
PUBLIC
 
is_mˇ_sy°em


4138 
is_mˇ_sy°em
 
PROC


4139 
push
 
bx


4140 
push
 
cx


4141 
push
 
es


4143 ; 
U£
 
INT
 15
h
, 
AH
=
C0h
 
to
 
gë
 
sy°em
 
c⁄figuøti⁄


4144 
mov
 
ah
, 0C0
h
 ; 
Gë
 
Sy°em
 
C⁄figuøti⁄


4145 15
h


4146 
jc
 .
nŸ_mˇ
 ; 
C¨ry
 
£t
 = 
no
 
c⁄fig
 
öfo


4148 ; 
ES
:
BX
 
poöts
 
to
 
c⁄fig
 
èbÀ


4149 ; 
Fú°
 
byã
 
is
 
the
 
èbÀ
 
Àngth
 - 
mu°
 
check
 
bef‹e
 
ac˚ssög


4150 
mov
 
Æ
, 
es
:[
bx
] ; 
Gë
 
èbÀ
 
Àngth


4151 
cmp
 
Æ
, 6 ; 
Nìd
 
©
 
Àa°
 6 
byãs
 
to
 
ac˚ss
 
„©uª
 
byã
 1

4152 
jb
 .
nŸ_mˇ
 ; 
TabÀ
 
too
 , 
nŸ
 
ß„
 
to
 
check


4154 ; 
Check
 
„©uª
 
byã
 1 
©
 
off£t
 5

4155 
mov
 
Æ
, 
es
:[
bx
+5] ; 
Fótuª
 
byã
 1

4156 
ã°
 
Æ
, 02
h
 ; 
Bô
 1 = 
Mi¸oCh™√l


4157 
jz
 .
nŸ_mˇ


4159 ; 
MCA
 
sy°em
 
dëe˘ed


4160 
mov
 
ax
, 1

4161 
jmp
 .
exô


4163 .
nŸ_mˇ
:

4164 
x‹
 
ax
,áx ; 
NŸ
 
MCA


4166 .
exô
:

4167 
p›
 
es


4168 
p›
 
cx


4169 
p›
 
bx


4170 
ªt


4171 
is_mˇ_sy°em
 
ENDP


4174 ; 
gë_ps2_modñ
 - 
Gë
 
PS
/2 
modñ
 
numbî


4176 ; 
I≈ut
: 
N⁄e


4177 ; 
Ouçut
: 
AX
 = 
PS
/2 
modñ
 
	`numbî
 (0 
nŸ
 PS/2 
‹
 
unknown
)

4178 ; 
U£s
: 
AX
, 
BX
, 
ES


4180 
PUBLIC
 
gë_ps2_modñ


4181 
gë_ps2_modñ
 
PROC


4182 
push
 
bx


4183 
push
 
es


4185 ; 
Gë
 
sy°em
 
c⁄figuøti⁄


4186 
mov
 
ah
, 0C0
h


4187 15
h


4188 
jc
 .
unknown_modñ


4190 ; 
ES
:
BX
 
poöts
 
to
 
sy°em
 
c⁄figuøti⁄
 
èbÀ


4191 ; 
Byã
 
©
 
off£t
 2 
is
 
modñ
 
byã


4192 
mov
 
Æ
, 
es
:[
bx
+2] ; 
Modñ
 
byã


4193 
mov
 
ah
, 0 ; 
CÀ¨
 
high
 
byã


4195 ; 
Check
 
known
 
PS
/2 
MCA
 
modñs


4196 
cmp
 
Æ
, 50
h
 ; 
Modñ
 50

4197 
je
 .
vÆid_modñ


4198 
cmp
 
Æ
, 56
h
 ; 
Modñ
 56

4199 
je
 .
vÆid_modñ


4200 
cmp
 
Æ
, 57
h
 ; 
Modñ
 57

4201 
je
 .
vÆid_modñ


4202 
cmp
 
Æ
, 60
h
 ; 
Modñ
 60

4203 
je
 .
vÆid_modñ


4204 
cmp
 
Æ
, 70
h
 ; 
Modñ
 70

4205 
je
 .
vÆid_modñ


4206 
cmp
 
Æ
, 76
h
 ; 
Modñ
 76

4207 
je
 .
vÆid_modñ


4208 
cmp
 
Æ
, 77
h
 ; 
Modñ
 77

4209 
je
 .
vÆid_modñ


4210 
cmp
 
Æ
, 80
h
 ; 
Modñ
 80

4211 
je
 .
vÆid_modñ


4212 
cmp
 
Æ
, 85
h
 ; 
Modñ
 85

4213 
je
 .
vÆid_modñ


4214 
cmp
 
Æ
, 90
h
 ; 
Modñ
 90

4215 
je
 .
vÆid_modñ


4216 
cmp
 
Æ
, 95
h
 ; 
Modñ
 95

4217 
je
 .
vÆid_modñ


4219 ; 
Unknown
 
‹
 
n⁄
-
PS
/2 
modñ


4220 
jmp
 .
unknown_modñ


4222 .
vÆid_modñ
:

4223 ; 
Rëu∫
 
modñ
 
numbî
 
ö
 
AX


4224 
jmp
 .
exô


4226 .
unknown_modñ
:

4227 
x‹
 
ax
,áx ; 
Rëu∫
 0 
unknown


4229 .
exô
:

4230 
p›
 
es


4231 
p›
 
bx


4232 
ªt


4233 
gë_ps2_modñ
 
ENDP


4236 ; 
ß„_mˇ_p‹t_ªad
 - 
Sa„ly
 
ªad
 
MCA
 
POS
 
p‹t
 
wôh
 
timeout


4238 ; 
I≈ut
: 
N⁄e


4239 ; 
Ouçut
: 
CF
 = 0 
p‹t
 
exi°s
, CF = 1 
nŸ


4240 ; 
AL
 = 
p‹t
 
vÆue
 
exi°s


4241 ; 
U£s
: 
AX
, 
CX
, 
DX


4243 
ß„_mˇ_p‹t_ªad
 
PROC


4244 
push
 
cx


4245 
push
 
dx


4247 
mov
 
cx
, 3 ; 
Rëry
 
cou¡


4249 .
ªåy
:

4250 
mov
 
dx
, 96
h
 ; 
POS
 
c⁄åﬁ
 
p‹t


4252 ; 
Check
 
p‹t
 
ª•⁄ds


4253 
ö
 
Æ
, 
dx


4254 
cmp
 
Æ
, 0FF
h
 ; 
N⁄
-
exi°ít
 
p‹t
?

4255 
j√
 .
p‹t_exi°s


4257 
lo›
 .
ªåy


4259 ; 
P‹t
 
d€¢
'tÉxist

4260 
°c
 ; 
Së
 
ˇºy
 = 
îr‹


4261 
jmp
 .
exô


4263 .
p‹t_exi°s
:

4264 
˛c
 ; 
CÀ¨
 
ˇºy
 = 
suc˚ss


4266 .
exô
:

4267 
p›
 
dx


4268 
p›
 
cx


4269 
ªt


4270 
ß„_mˇ_p‹t_ªad
 
ENDP


4273 ; 
nic_dëe˘_mˇ_3c523
 - 
Stub
 
MCA
 3C523 
dëe˘i⁄


4275 ; 
PuΩo£
: 
Dëe˘
 
but
 
nŸ
 
suµ‹t
 
MCA
 
NICs
, 
öf‹m
 
u£r


4276 ; 
I≈ut
: 
N⁄e


4277 ; 
Ouçut
: 
AX
 = 1 
MCA
 
NIC
 
	`found
 (
but
 
unsuµ‹ãd
), 0 
nŸ


4278 ; 
U£s
: 
AŒ
 
ªgi°îs


4280 
PUBLIC
 
nic_dëe˘_mˇ_3c523


4281 
nic_dëe˘_mˇ_3c523
 
PROC


4282 
push
 
bx


4283 
push
 
cx


4284 
push
 
dx


4285 
push
 
si


4287 ; 
Save
 
‹igöÆ
 
POS
 
°©e


4288 
mov
 
dx
, 96
h


4289 
ö
 
Æ
, 
dx


4290 
push
 
ax
 ; 
Save
 
‹igöÆ
 
°©e


4292 ; 
Quick
 
check
 
this
 
is
 
eví
 
™
 
MCA
 
sy°em


4293 
ˇŒ
 
is_mˇ_sy°em


4294 
‹
 
ax
,áx

4295 
jz
 .
no_mˇ_nic
 ; 
NŸ
 
MCA
 
sy°em
, 
skù


4297 ; 
Sˇn
 
MCA
 
¶Ÿs
 3C523

4298 
x‹
 
cx
, cx ; 
Sèπ
 
wôh
 
¶Ÿ
 0

4299 .
sˇn_lo›
:

4300 
cmp
 
cx
, 8 ; 
VÆid©e
 
¶Ÿ
 
numbî


4301 
j´
 .
no_mˇ_nic
 ; 
Pªvít
 
ovîÊow


4303 
mov
 
dx
, 96
h


4304 
mov
 
Æ
, 
˛


4305 
™d
 
Æ
, 07
h
 ; 
Mask
 
to
 
vÆid
 
¶Ÿ
 
ønge


4306 
‹
 
Æ
, 08
h
 ; 
E«bÀ
 
POS
 
¶Ÿ


4307 
out
 
dx
, 
Æ


4309 ; 
SmÆl
 
dñay
 
POS
 
íabÀ


4310 
push
 
cx


4311 
mov
 
cx
, 10

4312 .
dñay1
:

4313 
n›


4314 
lo›
 .
dñay1


4315 
p›
 
cx


4317 ; 
Ród
 
ad≠ãr
 
ID


4318 
mov
 
dx
, 100
h


4319 
ö
 
Æ
, 
dx
 ; 
ID
 
low
 
byã


4320 
mov
 
ah
, 
Æ


4321 
öc
 
dx


4322 
ö
 
Æ
, 
dx
 ; 
ID
 
high
 
byã


4324 
cmp
 
ax
, 6042
h
 ; 3C523 
ad≠ãr
 
ID


4325 
je
 .
found_3c523


4327 ; 
DißbÀ
 
POS
 
™d
 
åy
 
√xt
 
¶Ÿ


4328 
push
 
cx


4329 
mov
 
dx
, 96
h


4330 
x‹
 
Æ
,ál

4331 
out
 
dx
, 
Æ


4333 ; 
SmÆl
 
dñay


4334 
mov
 
cx
, 10

4335 .
dñay2
:

4336 
n›


4337 
lo›
 .
dñay2


4338 
p›
 
cx


4340 
öc
 
cx


4341 
cmp
 
cx
, 8 ; 8 
¶Ÿs
 
max


4342 
jb
 .
sˇn_lo›


4344 .
no_mˇ_nic
:

4345 
x‹
 
ax
,áx ; 
No
 
MCA
 
NIC
 
found


4346 
jmp
 .
exô


4348 .
found_3c523
:

4349 ; 
DißbÀ
 
POS


4350 
mov
 
dx
, 96
h


4351 
x‹
 
Æ
,ál

4352 
out
 
dx
, 
Æ


4354 ; 
Log
 
dëe˘i⁄
 
mesßge


4355 
push
 
cx
 ; 
Save
 
¶Ÿ
 
numbî


4356 
push
 
OFFSET
 
msg_3c523_found


4357 
ˇŒ
 
log_w¨nög


4358 
add
 
•
, 4

4360 
mov
 
ax
, 1 ; 
Found
 
but
 
nŸ
 
suµ‹ãd


4362 .
exô
:

4363 ; 
Re°‹e
 
‹igöÆ
 
POS
 
°©e


4364 
p›
 
bx
 ; 
Gë
 
ßved
 
°©e


4365 
mov
 
dx
, 96
h


4366 
mov
 
Æ
, 
bl


4367 
out
 
dx
, 
Æ


4369 
p›
 
si


4370 
p›
 
dx


4371 
p›
 
cx


4372 
p›
 
bx


4373 
ªt


4375 
msg_3c523_found
 
db
 'MCA: 3C523 EtherLink/MC detected butÇot supported', 0

4376 
nic_dëe˘_mˇ_3c523
 
ENDP


4379 ; 
nic_dëe˘_mˇ_3c529
 - 
Stub
 
MCA
 3C529 
dëe˘i⁄


4381 ; 
PuΩo£
: 
Dëe˘
 
but
 
nŸ
 
suµ‹t
 
MCA
 3C529, 
öf‹m
 
u£r


4382 ; 
I≈ut
: 
N⁄e


4383 ; 
Ouçut
: 
AX
 = 1 
MCA
 
NIC
 
	`found
 (
but
 
unsuµ‹ãd
), 0 
nŸ


4384 ; 
U£s
: 
AŒ
 
ªgi°îs


4386 
PUBLIC
 
nic_dëe˘_mˇ_3c529


4387 
nic_dëe˘_mˇ_3c529
 
PROC


4388 
push
 
bx


4389 
push
 
cx


4390 
push
 
dx


4391 
push
 
si


4393 ; 
Save
 
‹igöÆ
 
POS
 
°©e


4394 
mov
 
dx
, 96
h


4395 
ö
 
Æ
, 
dx


4396 
push
 
ax
 ; 
Save
 
‹igöÆ
 
°©e


4398 ; 
Quick
 
check
 
this
 
is
 
eví
 
™
 
MCA
 
sy°em


4399 
ˇŒ
 
is_mˇ_sy°em


4400 
‹
 
ax
,áx

4401 
jz
 .
no_mˇ_nic
 ; 
NŸ
 
MCA
 
sy°em
, 
skù


4403 ; 
Sˇn
 
MCA
 
¶Ÿs
 3C529

4404 
x‹
 
cx
, cx ; 
Sèπ
 
wôh
 
¶Ÿ
 0

4405 .
sˇn_lo›
:

4406 
cmp
 
cx
, 8 ; 
VÆid©e
 
¶Ÿ
 
numbî


4407 
j´
 .
no_mˇ_nic
 ; 
Pªvít
 
ovîÊow


4409 
mov
 
dx
, 96
h


4410 
mov
 
Æ
, 
˛


4411 
™d
 
Æ
, 07
h
 ; 
Mask
 
to
 
vÆid
 
¶Ÿ
 
ønge


4412 
‹
 
Æ
, 08
h
 ; 
E«bÀ
 
POS
 
¶Ÿ


4413 
out
 
dx
, 
Æ


4415 ; 
SmÆl
 
dñay
 
POS
 
íabÀ


4416 
push
 
cx


4417 
mov
 
cx
, 10

4418 .
dñay1
:

4419 
n›


4420 
lo›
 .
dñay1


4421 
p›
 
cx


4423 ; 
Ród
 
ad≠ãr
 
ID


4424 
mov
 
dx
, 100
h


4425 
ö
 
Æ
, 
dx
 ; 
ID
 
low
 
byã


4426 
mov
 
ah
, 
Æ


4427 
öc
 
dx


4428 
ö
 
Æ
, 
dx
 ; 
ID
 
high
 
byã


4430 
cmp
 
ax
, 627C
h
 ; 3C529 
ad≠ãr
 
ID


4431 
je
 .
found_3c529


4433 ; 
DißbÀ
 
POS
 
™d
 
åy
 
√xt
 
¶Ÿ


4434 
push
 
cx


4435 
mov
 
dx
, 96
h


4436 
x‹
 
Æ
,ál

4437 
out
 
dx
, 
Æ


4439 ; 
SmÆl
 
dñay


4440 
mov
 
cx
, 10

4441 .
dñay2
:

4442 
n›


4443 
lo›
 .
dñay2


4444 
p›
 
cx


4446 
öc
 
cx


4447 
cmp
 
cx
, 8 ; 8 
¶Ÿs
 
max


4448 
jb
 .
sˇn_lo›


4450 .
no_mˇ_nic
:

4451 
x‹
 
ax
,áx ; 
No
 
MCA
 
NIC
 
found


4452 
jmp
 .
exô


4454 .
found_3c529
:

4455 ; 
DißbÀ
 
POS


4456 
mov
 
dx
, 96
h


4457 
x‹
 
Æ
,ál

4458 
out
 
dx
, 
Æ


4460 ; 
Log
 
dëe˘i⁄
 
mesßge


4461 
push
 
cx
 ; 
Save
 
¶Ÿ
 
numbî


4462 
push
 
OFFSET
 
msg_3c529_found


4463 
ˇŒ
 
log_w¨nög


4464 
add
 
•
, 4

4466 
mov
 
ax
, 1 ; 
Found
 
but
 
nŸ
 
suµ‹ãd


4468 .
exô
:

4469 ; 
Re°‹e
 
‹igöÆ
 
POS
 
°©e


4470 
p›
 
bx
 ; 
Gë
 
ßved
 
°©e


4471 
mov
 
dx
, 96
h


4472 
mov
 
Æ
, 
bl


4473 
out
 
dx
, 
Æ


4475 
p›
 
si


4476 
p›
 
dx


4477 
p›
 
cx


4478 
p›
 
bx


4479 
ªt


4481 
msg_3c529_found
 
db
 'MCA: 3C529 EtherLink III/MC detected butÇot supported', 0

4482 
nic_dëe˘_mˇ_3c529
 
ENDP


4485 ; 
is_eiß_sy°em
 - 
Check
 
sy°em
 
has
 
EISA
 
bus


4487 ; 
I≈ut
: 
N⁄e


4488 ; 
Ouçut
: 
AX
 = 1 
EISA
 
sy°em
, 0 
nŸ


4489 ; 
U£s
: 
AX
, 
	`DX
 (
¥e£rves
 
Æl
)

4491 
PUBLIC
 
is_eiß_sy°em


4492 
is_eiß_sy°em
 
PROC


4493 
push
 
dx


4495 ; 
Check
 
EISA
 
by
 
ªadög
 
the
 "EISA" 
sig«tuª
 
‰om
 
¶Ÿ
 0

4496 ; 
EISA
 
sy°ems
 
have
 
ASCII
 "EISA" 
©
 
p‹ts
 0xC80-0xC83

4497 ; 
This
 
is
 286-
	`com∑tibÀ
 (
no
 32-
bô
 
ö°ru˘i⁄s
)

4499 
mov
 
dx
, 0C80
h
 ; 
EISA
 
¶Ÿ
 0 
ID
 
p‹t


4500 
ö
 
Æ
, 
dx
 ; 
Ród
 
fú°
 
byã


4501 
cmp
 
Æ
, 'E' ; 
Check
 'E'

4502 
j√
 .
nŸ_eiß


4504 
öc
 
dx
 ; 
P‹t
 0xC81

4505 
ö
 
Æ
, 
dx
 ; 
Ród
 
£c⁄d
 
byã


4506 
cmp
 
Æ
, 'I' ; 
Check
 'I'

4507 
j√
 .
nŸ_eiß


4509 
öc
 
dx
 ; 
P‹t
 0xC82

4510 
ö
 
Æ
, 
dx
 ; 
Ród
 
thúd
 
byã


4511 
cmp
 
Æ
, 'S' ; 
Check
 'S'

4512 
j√
 .
nŸ_eiß


4514 
öc
 
dx
 ; 
P‹t
 0xC83

4515 
ö
 
Æ
, 
dx
 ; 
Ród
 
fouπh
 
byã


4516 
cmp
 
Æ
, 'A' ; 
Check
 'A'

4517 
j√
 .
nŸ_eiß


4519 ; 
Found
 "EISA" 
sig«tuª
 - 
this
 
is
 
™
 
EISA
 
sy°em


4520 
mov
 
ax
, 1 ; 
EISA
 
sy°em


4521 
jmp
 .
exô


4523 .
nŸ_eiß
:

4524 
x‹
 
ax
,áx ; 
NŸ
 
EISA


4526 .
exô
:

4527 
p›
 
dx


4528 
ªt


4529 
is_eiß_sy°em
 
ENDP


4532 ; 
nic_dëe˘_eiß_3c592
 - 
Stub
 
EISA
 3C592 
dëe˘i⁄


4534 ; 
PuΩo£
: 
Dëe˘
 
but
 
nŸ
 
suµ‹t
 
EISA
 
NICs
, 
öf‹m
 
u£r


4535 ; 
I≈ut
: 
N⁄e


4536 ; 
Ouçut
: 
AX
 = 1 
EISA
 
NIC
 
	`found
 (
but
 
unsuµ‹ãd
), 0 
nŸ


4537 ; 
U£s
: 
AŒ
 
ªgi°îs


4539 
PUBLIC
 
nic_dëe˘_eiß_3c592


4540 
nic_dëe˘_eiß_3c592
 
PROC


4541 
push
 
bx


4542 
push
 
cx


4543 
push
 
dx


4545 ; 
Quick
 
check
 
this
 
is
 
eví
 
™
 
EISA
 
sy°em


4546 
ˇŒ
 
is_eiß_sy°em


4547 
‹
 
ax
,áx

4548 
jz
 .
no_eiß_nic


4550 ; 
Sˇn
 
EISA
 
¶Ÿs
 1-15 (
¶Ÿ
 0 
is
 
mŸhîbﬂrd
)

4551 
mov
 
cx
, 1 ; 
Sèπ
 
wôh
 
¶Ÿ
 1

4552 .
sˇn_lo›
:

4553 ; 
CÆcuœã
 
EISA
 
ID
 
p‹t
 
this
 
¶Ÿ


4554 
mov
 
dx
, 
cx


4555 
shl
 
dx
, 12 ; 
SlŸ
 * 0x1000

4556 
add
 
dx
, 0C80
h
 ; 
EISA
 
ID
 
off£t


4558 ; 
Ród
 
EISA
 
ad≠ãr
 
	`ID
 (32-
bô
)

4559 
ö
 
óx
, 
dx


4561 ; 
Check
 3C592 
	`ID
 (
TCM5920
)

4562 ; 
EISA
 
IDs
 
¨e
 
ícoded
, 
but
 
we
 
ˇn
 
check
 
∑âîns


4563 
cmp
 
óx
, 0FFFFFFFF
h
 ; 
Em±y
 
¶Ÿ


4564 
je
 .
√xt_¶Ÿ


4566 ; 
Check
 
this
 
looks
 
like
 
a
 3C
om
 
ˇrd


4567 ; 3C
om
 
EISA
 
¥efix
 
is
 "TCM" 
ícoded


4568 
™d
 
óx
, 0FFFFFF
h
 ; 
Mask
 
uµî
 
byã


4569 
cmp
 
óx
, 204D4354
h
 ; "TCM " 
	$∑âîn
 (
sim∂ifõd
 
check
)

4570 
j√
 .
√xt_¶Ÿ


4572 ; 
Found
 
pŸítül
 3C
om
 
EISA
 
ˇrd


4573 
push
 
cx


4574 
push
 
OFFSET
 
msg_eiß_3c592_found


4575 
ˇŒ
 
log_w¨nög


4576 
add
 
•
, 4

4578 
mov
 
ax
, 1 ; 
Found
 
but
 
nŸ
 
suµ‹ãd


4579 
jmp
 .
exô


4581 .
√xt_¶Ÿ
:

4582 
öc
 
cx


4583 
cmp
 
cx
, 16 ; 
Check
 
¶Ÿs
 1-15

4584 
jb
 .
sˇn_lo›


4586 .
no_eiß_nic
:

4587 
x‹
 
ax
,áx ; 
No
 
EISA
 
NIC
 
found


4589 .
exô
:

4590 
p›
 
dx


4591 
p›
 
cx


4592 
p›
 
bx


4593 
ªt


4595 
msg_eiß_3c592_found
 
db
 'EISA: 3C592 detected butÇot supported', 0

4596 
nic_dëe˘_eiß_3c592
 
ENDP


4599 ; 
nic_dëe˘_eiß_3c597
 - 
Stub
 
EISA
 3C597 
dëe˘i⁄


4601 ; 
PuΩo£
: 
Dëe˘
 
but
 
nŸ
 
suµ‹t
 
EISA
 3C597, 
öf‹m
 
u£r


4602 ; 
I≈ut
: 
N⁄e


4603 ; 
Ouçut
: 
AX
 = 1 
EISA
 
NIC
 
	`found
 (
but
 
unsuµ‹ãd
), 0 
nŸ


4604 ; 
U£s
: 
AŒ
 
ªgi°îs


4606 
PUBLIC
 
nic_dëe˘_eiß_3c597


4607 
nic_dëe˘_eiß_3c597
 
PROC


4608 ; 
Simû¨
 
°ru˘uª
 
to
 3C592 
dëe˘i⁄


4609 ; 
Would
 
check
 
dif„ª¡
 
EISA
 
ID
 
∑âîn


4610 
x‹
 
ax
,áx ; 
Sim∂ifõd
 
°ub


4611 
ªt


4612 
nic_dëe˘_eiß_3c597
 
ENDP


4615 ; 
nic_dëe˘_vlb
 - 
Stub
 
VESA
 
Loˇl
 
Bus
 
NIC
 
dëe˘i⁄


4617 ; 
PuΩo£
: 
Dëe˘
 
but
 
nŸ
 
suµ‹t
 
VLB
 
NICs
, 
öf‹m
 
u£r


4618 ; 
I≈ut
: 
N⁄e


4619 ; 
Ouçut
: 
AX
 = 1 
VLB
 
NIC
 
	`found
 (
but
 
unsuµ‹ãd
), 0 
nŸ


4620 ; 
U£s
: 
AŒ
 
ªgi°îs


4622 
PUBLIC
 
nic_dëe˘_vlb


4623 
nic_dëe˘_vlb
 
PROC


4624 
push
 
dx


4626 ; 
VLB
 
dëe˘i⁄
 
is
 
åicky
 - 
no
 
°™d¨d
 detection

4627 ; 
Check
 
comm⁄
 
VLB
 
NIC
 
I
/
O
 
	$addªs£s
 (0x6000 
ønge
)

4628 
mov
 
dx
, 6000
h
 ; 
Comm⁄
 
VLB
 
NIC
 
addªss


4630 ; 
Try
 
to
 
ªad
 
‰om
 
	$p‹t
 (
wôh
 
timeout
 
¥Ÿe˘i⁄
)

4631 
ö
 
Æ
, 
dx


4632 
cmp
 
Æ
, 0FF
h
 ; 
Likñy
 
no
 
devi˚


4633 
je
 .
no_vlb


4635 ; 
Do
 
a
 
m‹e
 
•ecific
 
check


4636 
mov
 
dx
, 6008
h
 ; 
AnŸhî
 
VLB
 
NIC
 

4637 
ö
 
Æ
, 
dx


4638 
cmp
 
Æ
, 0FF
h


4639 
je
 .
no_vlb


4641 ; 
Might
 
be
 
a
 
VLB
 
NIC


4642 
push
 
OFFSET
 
msg_vlb_nŸ_suµ‹ãd


4643 
ˇŒ
 
log_w¨nög


4644 
add
 
•
, 2

4646 
mov
 
ax
, 1 ; 
Found
 
but
 
nŸ
 
suµ‹ãd


4647 
jmp
 .
exô


4649 .
no_vlb
:

4650 
x‹
 
ax
,áx ; 
No
 
VLB
 
NIC


4652 .
exô
:

4653 
p›
 
dx


4654 
ªt


4656 
msg_vlb_nŸ_suµ‹ãd
 
db
 'VLB NICsÇot supported', 0

4657 
nic_dëe˘_vlb
 
ENDP


4660 ; 
Upd©e
 
h¨dw¨e_dëe˘_Æl
 
to
 
ˇŒ
 
°ubs


4662 ; 
NŸe
: 
This
 
would
 
be
 
ö£πed
 
öto
 
the
 
exi°ög
 
h¨dw¨e_dëe˘_Æl
 
fun˘i⁄


4663 ; 
a·î
 
ISA
 
dëe˘i⁄
 
but
 
is
 
shown
 
hîe
 
com∂ëíess


4665 
msg_eiß_nŸ_suµ‹ãd
 
db
 'EISA NICs detected butÇot supported', 0

4666 
msg_mˇ_nŸ_suµ‹ãd
 
db
 'MicroChannel NICs detected butÇot supported', 0

4667 
msg_åy_iß
 
db
 'Please use supported ISA NICs: 3C509B or 3C515-TX', 0

4668 
msg_puª_mˇ_îr‹1
 
db
 'ERROR: No compatibleÇetworkádaptersávailable onÅhis system.', 0

4669 
msg_puª_mˇ_îr‹2
 
db
 'This driver only supports ISA-based 3Com NICs (3C509B, 3C515-TX).', 0

4670 
msg_puª_mˇ_îr‹3
 
db
 'MicroChannel systemsÑequire MCA-specificÇetwork drivers.', 0

4672 
_TEXT
 
ENDS


	@/Users/jvindahl/Development/3com-packet-driver/src/asm/nic_irq.asm

1 ; @
fûe
 
	gnic_úq
.
	gasm


2 ; @
brõf
 
NIC
 
öãºu±
 
	gh™dlög


4 ; 3C
om
 
Packë
 
	gDrivî
 - 
Suµ‹t
 3C515-
TX
 
	g™d
 3C509B 
	gNICs


6 ; 
This
 
fûe
 
is
 
∑π
 
of
 
	gthe
 3C
om
 
Packë
 
Drivî
 
	g¥oje˘
.

9 .
MODEL
 
	gSMALL


12 
	gö˛ude
 'tsr_defensive.inc'

14 ; 
	gRì¡øncy
-
ß„
 
°ack
 
swôchög
 
ma¸os
 
NIC
 
IRQ
 
	gh™dÀrs


15 ; 
The£
 
ma¸os
 
¨e
 
ödïídít
 
of
 
DS
 
assum±i⁄s
 
™d
 
°‹e
 
ˇŒî
 
	gc⁄ãxt


16 ; 
⁄
 
the
 
IRQ
 
°ack
 
ô£lf
 
to
 
avoid
 
ªíå™cy
 
	gc‹ru±i⁄


18 ; 
	gRequúemíts
: 
N⁄e
 (
fuŒy
 
£lf
-
c⁄èöed
)

19 ; 
	gU£s
: 
BX
, 
	gDX
, 
AX
 (
ßved
 
⁄
 
√w
 
°ack
)

20 ; 
	gPª£rves
: 
AŒ
 
ªgi°îs
 
ex˚±
 
tho£
 
u£d
 
swôchög


23 ; 
	gSAFE_STACK_SWITCH_3C509B
 ‚Äî 
Truly
 
	gªíå™cy
-
ß„
 
°ack
 

25 ; 
Swôches
 
to
 
¥iv©e
 
IRQ
 
°ack
 
öãºu±
 
h™dlög
 
wôh
 
fuŒ
 
	gªíå™cy


26 ; 
	g¥Ÿe˘i⁄
. 
H™dÀs
 
√°ed
 
öãºu±s
 
c‹ª˘ly
 
by
 
dëe˘ög
 
whí
 
	gÆªady


27 ; 
⁄
 
the
 
IRQ
 
°ack
 
™d
 
¥e£rvög
 
¥evious
 sèck 
	g‰ames
.

29 ; 
	gALGORITHM
:

30 ; 1. 
Save
 
cuºít
 
	gSS
:
SP
 
ö
 
ªgi°îs


31 ; 2. 
Check
 
Æªady
 
⁄
 
IRQ
 
°ack
 (
SS
=
_DATA
 
AND
 
SP
 
wôhö
 
bounds
+
hódroom
)

32 ; 3a. 
If
 
Æªady
 
⁄
 
	g°ack
: 
Push
 
c⁄ãxt
 o¿
cuºít
 
°ack
 (
no
 
SP
 
ª£t
)

33 ; 3b. 
If
 
nŸ
 
⁄
 
	g°ack
: 
Swôch
 
to
 
IRQ
 
°ack
 
t›
, 
thí
 
push
 
	gc⁄ãxt


34 ; 4. 
Së
 
	gDS
=
_DATA
 
ß„
 
v¨übÀ
 
ac˚ss


35 ; 5. 
CÀ¨
 
dúe˘i⁄
 
Êag
 
™d
 
	gª
-
íabÀ
 
	göãºu±s


37 ; 
	gHEADROOM
: 
Requúes
 8+ 
byãs
 
avaûabÀ
 
bef‹e
 
pushög
 (4 
w‹ds
 * 2 bytes)

38 ; 
	gNESTING
: 
U∆imôed
 
dïth
 
suµ‹ãd
 - 
óch
 
Àvñ
 
gës
 
¥›î
 
°ack
 
‰ame


39 ; 
IF
 
	gPOLICY
: 
Always
 
íabÀs
 
öãºu±s
 (
STI
Ë- 
suôabÀ
 
h¨dw¨e
 
ISRs


41 ; 
	gE¡ry
: 
Any
 
°ack
 
°©e
, 
™y
 
	gDS
, 
	gIF
=0 (
typiˇl
 
ISR
 
íåy
)

42 ; 
	gExô
: 
Priv©e
 
IRQ
 
°ack
, 
	gDS
=
_DATA
, 
	gDF
=0, 
	gIF
=1

44 ; 
	gClobbîs
: 
AX
, 
	gBX
, 
	gCX
, 
DX
 (
CX
 
added
 
hódroom
 
ˇlcuœti⁄
)

45 ; 
	gPushes
: 
CÆÀr
's SP, SS, DS, ES (4 words on IRQ stack)

46 ; 
	gPª£rves
: 
AŒ
 
Ÿhî
 
ªgi°îs


47 ; 
	gRequúemíts
: 
úq_°ack_3c509b
 
™d
 
úq_°ack_t›_3c509b
 
ö
 
_DATA
/
DGROUP


48 ; 
	gCom∑ni⁄
: 
U£
 
wôh
 
RESTORE_CALLER_STACK_IRQ
 
¥›î
 
ISR
 
ïûogue


50 
ma¸o
 
SAFE_STACK_SWITCH_3C509B


51 
LOCAL
 
__SWS3C509B_DoSwôch
, 
__SWS3C509B_D⁄e


53 
˛i


54 
mov
 
	gbx
, 
	gss
 ; 
	gBX
 = 
ˇŒî
 
SS


55 
mov
 
dx
, 
	g•
 ; 
	gDX
 = 
ˇŒî
 
SP


56 
mov
 
ax
, 
	g_DATA
 ; 
	gAX
 = 
our
 
DGROUP
 
£gmít


58 ; 
Aª
 
we
 
Æªady
 
⁄
 
our
 
IRQ
 
	g°ack
?

59 
cmp
 
	gbx
, 
ax


60 
j√
 
	g__SWS3C509B_DoSwôch
 ; 
	gSS
 !
_DATA
 -> 
mu°
 

62 ; 
	gSS
 =
_DATA
, 
check
 
SP
 
bounds
 
wôh
 
	ghódroom
: SP 
mu°
 
be
 > 
bŸtom
+8 
™d
 <
t›


63 ; 
	gNìd
 8 
byãs
 
hódroom
 4 
w‹d
 
	$pushes
 (
ˇŒî
 
SP
, 
SS
, 
DS
, 
ES
)

64 
mov
 
cx
, 
OFFSET
 
úq_°ack_3c509b


65 
add
 
cx
, 8 ; 
CX
 = 
bŸtom
 + 
hódroom
 
√eded


66 
cmp
 
dx
, 
cx


67 
jbe
 
__SWS3C509B_DoSwôch
 ; 
SP
 <
bŸtom
+8 -> 
ösufficõ¡
 
hódroom
, 
mu°
 

68 
cmp
 
dx
, 
OFFSET
 
úq_°ack_t›_3c509b


69 
ja
 
__SWS3C509B_DoSwôch
 ; 
SP
 > 
t›
 -> 
nŸ
 
our
 
IRQ
 
°ack


71 ; 
AÃódy
 
⁄
 
our
 
IRQ
 
°ack
: dÿ
nŸ
 
ª£t
 
SP
. 
Save
 
c⁄ãxt
 o¿
cuºít
 stack.

72 
push
 
dx
 ; 
Save
 
ˇŒî
 
SP


73 
push
 
bx
 ; 
Save
 
ˇŒî
 
SS


74 
push
 
ds
 ; 
Save
 
ˇŒî
 
DS


75 
push
 
es
 ; 
Save
 
ˇŒî
 
ES


76 
mov
 
ds
, 
ax
 ; 
DS
 = 
_DATA


77 
˛d


78 
°i


79 
jmp
 
SHORT
 
__SWS3C509B_D⁄e


81 
__SWS3C509B_DoSwôch
:

82 ; 
Swôch
 
to
 
IRQ
 
°ack


83 
mov
 
ss
, 
ax


84 
mov
 
•
, 
OFFSET
 
úq_°ack_t›_3c509b


85 ; 
Now
 
ßve
 
ˇŒî
 
c⁄ãxt
 
⁄
 
the
 
IRQ
 
°ack


86 
push
 
dx
 ; 
ˇŒî
 
SP


87 
push
 
bx
 ; 
ˇŒî
 
SS


88 
push
 
ds
 ; 
ˇŒî
 
DS


89 
push
 
es
 ; 
ˇŒî
 
ES


90 
mov
 
ds
, 
ax
 ; 
DS
 = 
_DATA


91 
˛d


92 
°i


94 
__SWS3C509B_D⁄e
:

95 
ídm


98 ; 
SAFE_STACK_SWITCH_3C515
 ‚Äî 
Truly
 
ªíå™cy
-
ß„
 
°ack
 

100 ; 
Same
 
£m™tics
 
as
 3C509B 
v¨ü¡
, 
but
 3C515's IRQ stack.

102 
ma¸o
 
SAFE_STACK_SWITCH_3C515


103 
LOCAL
 
__SWS3C515_DoSwôch
, 
__SWS3C515_D⁄e


105 
˛i


106 
mov
 
bx
, 
ss
 ; 
BX
 = 
ˇŒî
 
SS


107 
mov
 
dx
, 
•
 ; 
DX
 = 
ˇŒî
 
SP


108 
mov
 
ax
, 
_DATA
 ; 
AX
 = 
our
 
DGROUP
 
£gmít


110 ; 
Aª
 
we
 
Æªady
 
⁄
 
our
 
IRQ
 
°ack
?

111 
cmp
 
bx
, 
ax


112 
j√
 
__SWS3C515_DoSwôch
 ; 
SS
 !
_DATA
 -> 
mu°
 

114 ; 
SS
 =
_DATA
, 
check
 
SP
 
bounds
 
wôh
 
hódroom
: SP 
mu°
 
be
 > 
bŸtom
+8 
™d
 <
t›


115 ; 
Nìd
 8 
byãs
 
hódroom
 4 
w‹d
 
	$pushes
 (
ˇŒî
 
SP
, 
SS
, 
DS
, 
ES
)

116 
mov
 
cx
, 
OFFSET
 
úq_°ack_3c515


117 
add
 
cx
, 8 ; 
CX
 = 
bŸtom
 + 
hódroom
 
√eded


118 
cmp
 
dx
, 
cx


119 
jbe
 
__SWS3C515_DoSwôch
 ; 
SP
 <
bŸtom
+8 -> 
ösufficõ¡
 
hódroom
, 
mu°
 

120 
cmp
 
dx
, 
OFFSET
 
úq_°ack_t›_3c515


121 
ja
 
__SWS3C515_DoSwôch
 ; 
SP
 > 
t›
 -> 
nŸ
 
our
 
IRQ
 
°ack


123 ; 
AÃódy
 
⁄
 
our
 
IRQ
 
°ack
: dÿ
nŸ
 
ª£t
 
SP
. 
Save
 
c⁄ãxt
 o¿
cuºít
 stack.

124 
push
 
dx
 ; 
Save
 
ˇŒî
 
SP


125 
push
 
bx
 ; 
Save
 
ˇŒî
 
SS


126 
push
 
ds
 ; 
Save
 
ˇŒî
 
DS


127 
push
 
es
 ; 
Save
 
ˇŒî
 
ES


128 
mov
 
ds
, 
ax
 ; 
DS
 = 
_DATA


129 
˛d


130 
°i


131 
jmp
 
SHORT
 
__SWS3C515_D⁄e


133 
__SWS3C515_DoSwôch
:

134 ; 
Swôch
 
to
 
IRQ
 
°ack


135 
mov
 
ss
, 
ax


136 
mov
 
•
, 
OFFSET
 
úq_°ack_t›_3c515


137 ; 
Now
 
ßve
 
ˇŒî
 
c⁄ãxt
 
⁄
 
the
 
IRQ
 
°ack


138 
push
 
dx
 ; 
ˇŒî
 
SP


139 
push
 
bx
 ; 
ˇŒî
 
SS


140 
push
 
ds
 ; 
ˇŒî
 
DS


141 
push
 
es
 ; 
ˇŒî
 
ES


142 
mov
 
ds
, 
ax
 ; 
DS
 = 
_DATA


143 
˛d


144 
°i


146 
__SWS3C515_D⁄e
:

147 
ídm


149 
ma¸o
 
RESTORE_CALLER_STACK_IRQ


150 
˛i
 ; 
Crôiˇl
 
£˘i⁄
 
°¨t
 - 
no
 
öãºu±s
 
durög
 
ª°‹e


151 ; 
Re°‹e
 
ˇŒî
 
ES
/
DS
 
‰om
 
our
 
IRQ
 
°ack


152 
p›
 
es
 ; 
Re°‹e
 
ˇŒî
 
ES


153 
p›
 
ds
 ; 
Re°‹e
 
ˇŒî
 
DS


154 ; 
Re°‹e
 
ˇŒî
 
SS
:
SP
 
‰om
 
our
 
IRQ
 
°ack


155 
p›
 
bx
 ; 
Re°‹e
 
ﬁd
 
SS


156 
p›
 
dx
 ; 
Re°‹e
 
ﬁd
 
SP


157 
mov
 
ss
, 
bx
 ; 
SS
 = 
ˇŒî
's segment

158 
mov
 
•
, 
dx
 ; 
SP
 = 
ˇŒî
'sÖointer (atomicáfter SSÜoad)

159 
°i
 ; 
Re
-
íabÀ
 
öãºu±s


160 
ídm


162 ; 
I¡îru±
-
ªœãd
 
c⁄°™ts


163 
IRQ_NONE
 
EQU
 0FF
h
 ; 
No
 
IRQ
 
assig√d


164 
IRQ_MIN
 
EQU
 3 ; 
Möimum
 
vÆid
 
IRQ


165 
IRQ_MAX
 
EQU
 15 ; 
Maximum
 
vÆid
 
IRQ


167 ; 
NIC
 
öãºu±
 
°©us
 
Êags


168 
IRQ_RX_COMPLETE
 
EQU
 01
h
 ; 
Packë
 
ª˚ived


169 
IRQ_TX_COMPLETE
 
EQU
 02
h
 ; 
Packë
 
å™smôãd


170 
IRQ_TX_ERROR
 
EQU
 04
h
 ; 
Tønsmissi⁄
 
îr‹


171 
IRQ_RX_ERROR
 
EQU
 08
h
 ; 
Re˚±i⁄
 
îr‹


172 
IRQ_LINK_CHANGE
 
EQU
 10
h
 ; 
Lök
 
°©us
 
ch™ged


173 
IRQ_COUNTER_OVERFLOW
 
EQU
 20
h
 ; 
Sèti°ics
 
cou¡î
 
ovîÊow


175 ; 
H¨dw¨e
 
öãºu±
 
	$ve˘‹s
 (8259 
PIC
)

176 
PIC1_COMMAND
 
EQU
 20
h
 ; 
Ma°î
 
PIC
 
comm™d
 
p‹t


177 
PIC1_DATA
 
EQU
 21
h
 ; 
Ma°î
 
PIC
 
d©a
 
p‹t


178 
PIC2_COMMAND
 
EQU
 0A0
h
 ; 
Sœve
 
PIC
 
comm™d
 
p‹t


179 
PIC2_DATA
 
EQU
 0A1
h
 ; 
Sœve
 
PIC
 
d©a
 
p‹t


180 
PIC_EOI
 
EQU
 20
h
 ; 
End
 
of
 
öãºu±
 
comm™d


182 ; 
Maximum
 
numbî
 
of
 
NICs


183 
MAX_NICS
 
EQU
 2 ; 
Suµ‹t
 
up
 
to
 2 
NICs


185 ; 
D©a
 
£gmít


186 
_DATA
 
SEGMENT


187 
ASSUME
 
DS
:
_DATA


189 ; 
IRQ
 
m™agemít


190 
nic_úq_numbîs
 
db
 
MAX_NICS
 
	`dup
(
IRQ_NONE
Ë; 
IRQ
 
numbîs
 
óch
 
NIC


191 
‹igöÆ_úq_ve˘‹s
 
dd
 
MAX_NICS
 
	`dup
(0Ë; 
OrigöÆ
 
öãºu±
 
ve˘‹s


192 
úq_ö°ÆÀd
 
db
 
MAX_NICS
 
	`dup
(0Ë; 
IRQ
 
ö°Æœti⁄
 
Êags


194 ; 
I¡îru±
 
°©i°ics


195 
úq_cou¡
 
dw
 
MAX_NICS
 
	`dup
(0Ë; 
I¡îru±
 
cou¡
 
≥r
 
NIC


196 
•urious_úq_cou¡
 
dw
 0 ; 
Spurious
 
öãºu±
 
cou¡


198 ; 
Cuºít
 
ª˚ive
 
mode


199 
cuºít_ª˚ive_mode
 
db
 2 ; 
DeÁu…
 
to
 
dúe˘
 
mode


201 ; 
De„nsive
 
¥ogømmög
 
	`d©a
 (
ªquúed
 
by
 
t§_de„nsive
.
öc
 
ma¸os
)

202 ; 
NŸe
: 
ˇŒî_ss
/
ˇŒî_•
 
ªmoved
 - 
now
 
°‹ed
 
⁄
 
IRQ
 
°ack
 
ªíå™cy
 
ß„ty


203 
¸ôiˇl_√°ög
 
db
 0 ; 
Crôiˇl
 
£˘i⁄
 
√°ög
 
Àvñ


204 
ödos_£gmít
 
dw
 0 ; 
InDOS
 
Êag
 
£gmít


205 
ödos_off£t
 
dw
 0 ; 
InDOS
 
Êag
 
off£t


206 
¸ôîr_£gmít
 
dw
 0 ; 
Crôiˇl
 
îr‹
 
Êag
 
£gmít


207 
¸ôîr_off£t
 
dw
 0 ; 
Crôiˇl
 
îr‹
 
Êag
 
off£t


209 ; 
Priv©e
 
IRQ
 
h™dÀr
 
°acks
 
wôh
 
ovîÊow
 
¥Ÿe˘i⁄


210 ; 
Sized
 
w‹°
-
√°ed
 
öãºu±s
: 
NIC
 + 
Timî
 + 
Keybﬂrd
 + 
Disk
 + 
FPU


211 ; 2
KB
 
óch
 
should
 
h™dÀ
 ~20 
√°ed
 
öãºu±s
 
wôh
 100 
byãs
 
avîage
 
≥r
 
ISR


213 ; 16-
bô
 
°ack
 
ˇ«ry
 
∑âîns
 
ovîÊow
 
	`dëe˘i⁄
 (8086/286 
com∑tibÀ
)

214 ; 
Usög
 
w‹d
 
hÆves
 
of
 0xDEADBEEF 
ö
 
lôée
-
ídün
 
f‹m©


215 
CANARY_WORD_LO
 
equ
 0BEEF
h
 ; 
Low
 
w‹d
 
of
 0xDEADBEEF

216 
CANARY_WORD_HI
 
equ
 0DEAD
h
 ; 
High
 
w‹d
 
of
 0xDEADBEEF

218 ; 
Red
 
z⁄e
 
ˇ«ry
 
©
 
bŸtom
 
of
 
óch
 
	$°ack
 (16 
byãs
 = 8 
w‹ds
)

219 
úq_°ack_3c509b_ˇ«ry
 
dw
 8 
	`dup
(
CANARY_WORD_LO
)

221 ; 3C509B 
IRQ
 
	`°ack
 (2
KB
 + 
ªd
 
z⁄e
)

222 
úq_°ack_3c509b
 
db
 2048 
	`dup
(?)

223 
úq_°ack_t›_3c509b
 
equ
 
$
 ; 
U£
 
fuŒ
 
°ack
 
ˇ∑côy


225 ; 
Red
 
z⁄e
 
ˇ«ry
 
bëwìn
 
	$°acks
 (16 
byãs
 = 8 
w‹ds
)

226 
úq_°ack_3c515_ˇ«ry
 
dw
 8 
	`dup
(
CANARY_WORD_LO
)

228 ; 3C515 
IRQ
 
	`°ack
 (2
KB
 + 
ªd
 
z⁄e
)

229 
úq_°ack_3c515
 
db
 2048 
	`dup
(?)

230 
úq_°ack_t›_3c515
 
equ
 
$
 ; 
U£
 
fuŒ
 
°ack
 
ˇ∑côy


232 ; 
Sèck
 
ovîÊow
 
dëe˘i⁄
 
cou¡îs


233 
°ack_ovîÊow_3c509b
 
dw
 0 ; 3C509B 
ovîÊow
 
cou¡


234 
°ack_ovîÊow_3c515
 
dw
 0 ; 3C515 
ovîÊow
 
cou¡


235 
emîgícy_ˇ«ry_cou¡
 
dw
 0 ; 
Emîgícy
 
ˇ«ry
 
ª•⁄£
 
cou¡


237 ; 
De„ºed
 
w‹k
 
fun˘i⁄
 
addªs£s


238 
de„ºed_3c509b_w‹k
 
dw
 
OFFSET
 
¥o˚ss_3c509b_∑ckës


239 
de„ºed_3c515_w‹k
 
dw
 
OFFSET
 
¥o˚ss_3c515_∑ckës


241 ; 
I¡îru±
 
b©chög
 
c⁄åﬁ


242 
MAX_EVENTS_PER_IRQ
 
equ
 10 ; 
Maximum
 
evíts
 
≥r
 
	$öãºu±
 (
b©chög
 
limô
)

243 
b©ch_cou¡_3c509b
 
db
 0 ; 
Cuºít
 
b©ch
 
cou¡
 3C509B

244 
b©ch_cou¡_3c515
 
db
 0 ; 
Cuºít
 
b©ch
 
cou¡
 3C515-
TX


246 ; 
Temp‹¨y
 
∑ckë
 
	$buf„r
 (
should
 
be
 
ª∂a˚d
 
wôh
 
¥›î
 
buf„r
 
poﬁ
)

247 
ãmp_rx_buf„r
 
db
 1600 
	`dup
(?Ë; 
Buf„r
 
∑ckë
 
ª˚±i⁄


249 ; 
Recovîy
 
	$cou¡îs
 (
ª„ªn˚d
 
by
 
de„nsive_öãgøti⁄
.
asm
)

250 
ªcovîy_cou¡
 
dw
 0 ; 
Ve˘‹
 
ªcovîy
 
©ãm±s


252 ; 
Enh™˚d
 
°©i°ics
 
cou¡îs


253 
rx_∑ckë_cou¡
 
dw
 0 ; 
TŸÆ
 
RX
 
∑ckës


254 
tx_∑ckë_cou¡
 
dw
 0 ; 
TŸÆ
 
TX
 
∑ckës


255 
rx_îr‹_cou¡
 
dw
 0 ; 
TŸÆ
 
RX
 
îr‹s


256 
tx_îr‹_cou¡
 
dw
 0 ; 
TŸÆ
 
TX
 
îr‹s


257 
rx_ovîsize_îr‹s
 
dw
 0 ; 
Ovîsize
 
∑ckë
 
îr‹s


258 
rx_¸c_îr‹s
 
dw
 0 ; 
CRC
 
îr‹s


259 
rx_‰amög_îr‹s
 
dw
 0 ; 
Fømög
 
îr‹s


260 
tx_max_cﬁl_îr‹s
 
dw
 0 ; 
Max
 
cﬁlisi⁄
 
îr‹s


261 
tx_undîrun_îr‹s
 
dw
 0 ; 
TX
 
undîrun
 
îr‹s


262 
tx_jabbî_îr‹s
 
dw
 0 ; 
Jabbî
 
îr‹s


264 ; 
ISR
 
°©e
 
v¨übÀs


265 
cuºít_ioba£
 
dw
 0 ; 
Cuºít
 
NIC
 
I
/
O
 
ba£


266 
cuºít_tx_buf„r
 
dw
 0 ; 
Cuºít
 
TX
 
buf„r
 
poöãr


267 
cuºít_tx_ªåõs
 
db
 0 ; 
TX
 
ªåy
 
cou¡î


268 
úq_⁄_¶ave
 
db
 0 ; 
Fœg
 
¶ave
 
PIC
 
IRQ


269 
nic_ioba£_èbÀ
 
dw
 
MAX_NICS
 
	`dup
(0Ë; 
I
/
O
 
ba£
 
addªs£s


271 ; 
DMA
 
m™agemít
 
°ru˘uªs


272 
rx_dma_rög_ba£
 
dd
 0 ; 
RX
 
DMA
 
rög
 
ba£
 
addªss


273 
rx_dma_rög_íd
 
dw
 0 ; 
RX
 
DMA
 
rög
 
íd
 
off£t


274 
rx_dma_rög_±r
 
dw
 0 ; 
Cuºít
 
RX
 
DMA
 
poöãr


275 
tx_dma_rög_ba£
 
dd
 0 ; 
TX
 
DMA
 
rög
 
ba£
 
addªss


276 
tx_dma_rög_íd
 
dw
 0 ; 
TX
 
DMA
 
rög
 
íd
 
off£t


277 
tx_dma_rög_±r
 
dw
 0 ; 
Cuºít
 
TX
 
DMA
 
poöãr


279 ; 
Buf„r
 
poﬁ
 
m™agemít


280 
rx_buf„r_poﬁ
 
dd
 32 
	`dup
(0Ë; 
RX
 
buf„r
 
poﬁ


281 
tx_buf„r_poﬁ
 
dd
 16 
	`dup
(0Ë; 
TX
 
buf„r
 
poﬁ


282 
rx_‰ì_cou¡
 
dw
 32 ; 
Fªe
 
RX
 
buf„rs


283 
tx_‰ì_cou¡
 
dw
 16 ; 
Fªe
 
TX
 
buf„rs


285 ; 64-
bô
 
byã
 
cou¡îs


286 
tx_byãs_lo
 
dw
 0 ; 
TX
 
byãs
 
low
 
w‹d


287 
tx_byãs_hi
 
dw
 0 ; 
TX
 
byãs
 
high
 
w‹d


288 
rx_byãs_lo
 
dw
 0 ; 
RX
 
byãs
 
low
 
w‹d


289 
rx_byãs_hi
 
dw
 0 ; 
RX
 
byãs
 
high
 
w‹d


291 
_DATA
 
ENDS


293 ; 
Code
 
£gmít


294 
_TEXT
 
SEGMENT


295 
ASSUME
 
CS
:
_TEXT
, 
DS
:
_DATA


297 ; 
Public
 
fun˘i⁄
 
exp‹ts


298 
PUBLIC
 
nic_úq_öô


299 
PUBLIC
 
ö°Æl_nic_úq


300 
PUBLIC
 
unö°Æl_nic_úq


301 
PUBLIC
 
nic_úq_h™dÀr_3c509b


302 
PUBLIC
 
nic_úq_h™dÀr_3c515


303 
PUBLIC
 
nic_úq_h™dÀr_3c509b_b©ched


304 
PUBLIC
 
nic_úq_h™dÀr_3c515_b©ched


305 
PUBLIC
 
nic_comm⁄_úq_h™dÀr


306 
PUBLIC
 
nic_£t_ª˚ive_mode


307 
PUBLIC
 
gë_úq_°©s


308 ; 
Enh™˚d
 
öãºu±
 
h™dlög
 
exp‹ts


309 
PUBLIC
 
¥o˚ss_3c509b_∑ckës


310 
PUBLIC
 
¥o˚ss_3c515_∑ckës


311 
PUBLIC
 
nic_¥o˚ss_öãºu±_b©ch_3c509b


312 
PUBLIC
 
nic_¥o˚ss_öãºu±_b©ch_3c515


313 
PUBLIC
 
check_3c509b_öãºu±_sour˚


314 
PUBLIC
 
check_3c515_öãºu±_sour˚


315 
PUBLIC
 
acknowÀdge_3c509b_öãºu±


316 
PUBLIC
 
acknowÀdge_3c515_öãºu±


318 ; 
Exã∫Æ
 
ª„ªn˚s


319 
EXTRN
 
h¨dw¨e_h™dÀ_3c509b_úq
:
PROC
 ; 
From
 
h¨dw¨e
.
asm


320 
EXTRN
 
h¨dw¨e_h™dÀ_3c515_úq
:
PROC
 ; 
From
 
h¨dw¨e
.
asm


321 
EXTRN
 
∑ckë_›s_ª˚ive
:
PROC
 ; 
From
 
∑ckë_›s
.
asm


322 
EXTRN
 
gë_˝u_„©uªs
:
PROC
 ; 
From
 
˝u_dëe˘
.
asm


323 
EXTRN
 
_3c515_h™dÀ_öãºu±_b©ched
:
PROC
 ; 
Enh™˚d
 3C515 
h™dÀr


324 
EXTRN
 
_3c509b_h™dÀ_öãºu±_b©ched
:
PROC
 ; 
Enh™˚d
 3C509B 
h™dÀr


326 ; 
De„nsive
 
¥ogømmög
 
öãgøti⁄


327 
EXTRN
 
queue_de„ºed_w‹k
:
PROC
 ; 
From
 
de„nsive_öãgøti⁄
.
asm


330 ; 
nic_úq_öô
 - 
Inôülize
 
NIC
 
öãºu±
 
h™dlög


332 ; 
I≈ut
: 
N⁄e


333 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


334 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


336 
nic_úq_öô
 
PROC


337 
push
 
bp


338 
mov
 
bp
, 
•


339 
push
 
bx


340 
push
 
cx


341 
push
 
dx


342 
push
 
si


344 ; 
VÆid©e
 
IRQ
 
ønges
 
	`NICs
 (
⁄ly
 3,5,7,9-12,15 
Ælowed
)

345 
ˇŒ
 
vÆid©e_úq_ønges


346 
jc
 .
övÆid_úq_c⁄fig


348 ; 
Inôülize
 
PIC
 
°©e
 
åackög


349 
ˇŒ
 
öô_pic_°©e


350 
jc
 .
pic_öô_Áûed


352 ; 
Dëe˘
 
cuºít
 
IRQ
 
c⁄Êi˘s


353 
ˇŒ
 
dëe˘_úq_c⁄Êi˘s


354 ; 
C⁄töue
 
eví
 
c⁄Êi˘s
 
	`dëe˘ed
 (
w¨nögs
 
⁄ly
)

356 ; 
CÀ¨
 
IRQ
 
assignmít
 
èbÀ


357 
mov
 
cx
, 
MAX_NICS


358 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


359 
mov
 
Æ
, 
IRQ_NONE


360 .
˛ór_úq_lo›
:

361 
mov
 [
si
], 
Æ


362 
öc
 
si


363 
lo›
 .
˛ór_úq_lo›


365 ; 
CÀ¨
 
ö°Æœti⁄
 
Êags


366 
mov
 
cx
, 
MAX_NICS


367 
mov
 
si
, 
OFFSET
 
úq_ö°ÆÀd


368 
x‹
 
Æ
,ál

369 .
˛ór_Êags_lo›
:

370 
mov
 [
si
], 
Æ


371 
öc
 
si


372 
lo›
 .
˛ór_Êags_lo›


374 ; 
Inôülize
 
öãºu±
 
b©chög
 
cou¡îs


375 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 0

376 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 0

378 ; 
CÀ¨
 
öãºu±
 
°©i°ics


379 
mov
 
w‹d
 
±r
 [
úq_cou¡
], 0

380 
mov
 
w‹d
 
±r
 [
úq_cou¡
+2], 0

381 
mov
 
w‹d
 
±r
 [
•urious_úq_cou¡
], 0

383 ; 
Inôülize
 
de„nsive
 
¥ogømmög
 
d©a
 
ªquúed
 
by
 
ma¸os


384 
mov
 
w‹d
 
±r
 [
ˇŒî_ss
], 0

385 
mov
 
w‹d
 
±r
 [
ˇŒî_•
], 0

386 
mov
 
byã
 
±r
 [
¸ôiˇl_√°ög
], 0

388 ; 
Auto
-
dëe˘
 
‹
 
u£
 
c⁄figuªd
 
IRQ
 
assignmíts


389 
ˇŒ
 
auto_dëe˘_úqs


390 
jnc
 .
úq_dëe˘i⁄_d⁄e


392 ; 
U£
 
ÁŒback
 
deÁu…s
 auto-
dëe˘i⁄
 
Áûs


393 
ˇŒ
 
≠∂y_deÁu…_úqs


395 .
úq_dëe˘i⁄_d⁄e
:

397 ; 
Suc˚ss


398 
mov
 
ax
, 0

399 
jmp
 .
exô


401 .
övÆid_úq_c⁄fig
:

402 
mov
 
ax
, 1

403 
jmp
 .
exô


405 .
pic_öô_Áûed
:

406 
mov
 
ax
, 2

407 
jmp
 .
exô


409 .
exô
:

410 
p›
 
si


411 
p›
 
dx


412 
p›
 
cx


413 
p›
 
bx


414 
p›
 
bp


415 
ªt


416 
nic_úq_öô
 
ENDP


419 ; 
ö°Æl_nic_úq
 - 
In°Æl
 
öãºu±
 
h™dÀr
 
•ecific
 
NIC


421 ; 
I≈ut
: 
AL
 = 
NIC
 
	`ödex
 (0-
ba£d
), 
BL
 = 
IRQ
 
numbî


422 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


423 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI
, 
ES


425 
ö°Æl_nic_úq
 
PROC


426 
push
 
bp


427 
mov
 
bp
, 
•


428 
push
 
bx


429 
push
 
cx


430 
push
 
dx


431 
push
 
si


432 
push
 
di


433 
push
 
es


435 ; 
VÆid©e
 
IRQ
 
numbî
 
agaö°
 
Ælowed
 
ønges


436 
ˇŒ
 
vÆid©e_sögÀ_úq_numbî


437 
jc
 .
övÆid_úq


439 ; 
Check
 
IRQ
 
c⁄Êi˘s
 
wôh
 
Ÿhî
 
devi˚s


440 
ˇŒ
 
check_úq_c⁄Êi˘


441 
jc
 .
úq_c⁄Êi˘


443 ; 
Save
 
‹igöÆ
 
öãºu±
 
ve˘‹
 
bef‹e
 
ö°Æœti⁄


444 
ˇŒ
 
ßve_‹igöÆ_ve˘‹


445 
jc
 .
ßve_Áûed


447 ; 
In°Æl
 
≠¥›rüã
 
öãºu±
 
h™dÀr
 
ba£d
 
⁄
 
NIC
 
ty≥


448 
ˇŒ
 
ö°Æl_úq_h™dÀr


449 
jc
 .
ö°Æl_Áûed


451 ; 
E«bÀ
 
IRQ
 
©
 
PIC
 
Àvñ


452 
ˇŒ
 
íabÀ_pic_úq


453 
jc
 .
pic_íabÀ_Áûed


455 ; 
VÆid©e
 
NIC
 
ödex


456 
cmp
 
Æ
, 
MAX_NICS


457 
j´
 .
övÆid_nic


459 ; 
VÆid©e
 
IRQ
 
numbî


460 
cmp
 
bl
, 
IRQ_MIN


461 
jb
 .
övÆid_úq


462 
cmp
 
bl
, 
IRQ_MAX


463 
ja
 .
övÆid_úq


465 ; 
St‹e
 
IRQ
 
numbî


466 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


467 
mov
 
ah
, 0

468 
add
 
si
, 
ax


469 
mov
 [
si
], 
bl


471 ; 
In°Æœti⁄
 
suc˚ssful
 - 
upd©e
 
åackög
 
°ru˘uªs


472 
ˇŒ
 
upd©e_úq_åackög


474 ; 
M¨k
 
as
 
ö°ÆÀd


475 
mov
 
si
, 
OFFSET
 
úq_ö°ÆÀd


476 
add
 
si
, 
ax


477 
mov
 
byã
 
±r
 [
si
], 1

479 ; 
Suc˚ss


480 
mov
 
ax
, 0

481 
jmp
 .
exô


483 .
övÆid_nic
:

484 
mov
 
ax
, 1

485 
jmp
 .
exô


487 .
övÆid_úq
:

488 
mov
 
ax
, 2

489 
jmp
 .
exô


491 .
úq_c⁄Êi˘
:

492 
mov
 
ax
, 3

493 
jmp
 .
exô


495 .
ßve_Áûed
:

496 
mov
 
ax
, 4

497 
jmp
 .
exô


499 .
ö°Æl_Áûed
:

500 
mov
 
ax
, 5

501 
jmp
 .
exô


503 .
pic_íabÀ_Áûed
:

504 
mov
 
ax
, 6

505 
jmp
 .
exô


507 .
exô
:

508 
p›
 
es


509 
p›
 
di


510 
p›
 
si


511 
p›
 
dx


512 
p›
 
cx


513 
p›
 
bx


514 
p›
 
bp


515 
ªt


516 
ö°Æl_nic_úq
 
ENDP


519 ; 
unö°Æl_nic_úq
 - 
Unö°Æl
 
öãºu±
 
h™dÀr
 
•ecific
 
NIC


521 ; 
I≈ut
: 
AL
 = 
NIC
 
	`ödex
 (0-
ba£d
)

522 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


523 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
ES


525 
unö°Æl_nic_úq
 
PROC


526 
push
 
bp


527 
mov
 
bp
, 
•


528 
push
 
bx


529 
push
 
cx


530 
push
 
dx


531 
push
 
si


532 
push
 
es


534 ; 
Gë
 
IRQ
 
numbî
 
this
 
NIC


535 
ˇŒ
 
gë_nic_úq_numbî


536 
jc
 .
nŸ_ö°ÆÀd


538 ; 
DißbÀ
 
IRQ
 
©
 
PIC
 
Àvñ
 
fú°


539 
ˇŒ
 
dißbÀ_pic_úq


541 ; 
Re°‹e
 
‹igöÆ
 
öãºu±
 
ve˘‹


542 
ˇŒ
 
ª°‹e_‹igöÆ_ve˘‹


544 ; 
CÀ¨
 
IRQ
 
åackög
 
öf‹m©i⁄


545 
ˇŒ
 
˛ór_úq_åackög


547 ; 
VÆid©e
 
NIC
 
ödex


548 
cmp
 
Æ
, 
MAX_NICS


549 
j´
 .
övÆid_nic


551 ; 
Check
 
IRQ
 
is
 
ö°ÆÀd


552 
mov
 
si
, 
OFFSET
 
úq_ö°ÆÀd


553 
mov
 
ah
, 0

554 
add
 
si
, 
ax


555 
cmp
 
byã
 
±r
 [
si
], 0

556 
je
 .
nŸ_ö°ÆÀd


558 ; 
Upd©e
 
unö°Æl
 
åackög


559 
ˇŒ
 
upd©e_unö°Æl_åackög


561 ; 
M¨k
 
as
 
unö°ÆÀd


562 
mov
 
byã
 
±r
 [
si
], 0

564 ; 
CÀ¨
 
IRQ
 
numbî


565 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


566 
add
 
si
, 
ax


567 
mov
 
byã
 
±r
 [
si
], 
IRQ_NONE


569 ; 
Suc˚ss


570 
mov
 
ax
, 0

571 
jmp
 .
exô


573 .
övÆid_nic
:

574 
mov
 
ax
, 1

575 
jmp
 .
exô


577 .
nŸ_ö°ÆÀd
:

578 
mov
 
ax
, 0 ; 
NŸ
 
™
 
îr‹
 
Æªady
 
unö°ÆÀd


579 
jmp
 .
exô


581 .
exô
:

582 
p›
 
es


583 
p›
 
si


584 
p›
 
dx


585 
p›
 
cx


586 
p›
 
bx


587 
p›
 
bp


588 
ªt


589 
unö°Æl_nic_úq
 
ENDP


592 ; 
nic_úq_h™dÀr_3c509b
 - 
OPTIMIZED
 
I¡îru±
 
h™dÀr
 3C509B 
NIC


593 ; 
Pha£
 3 
Pîf‹m™˚
 
O±imiz©i⁄
: <100¬µ
s
 
executi⁄
 
èrgë


595 ; 
O±imiz©i⁄s
:

596 ; - 
Såómlöed
 
ISR
 
¸ôiˇl
 
∑th


597 ; - 
CPU
-
•ecific
 
	`›î©i⁄s
 (286+/386+)

598 ; - 
I¡îru±
 
cﬂÀscög
 
wôh
 
b©chög


599 ; - 
MöimÆ
 
ISR
 
w‹k
 
wôh
 
de„ºed
 
¥o˚ssög


600 ; - 
Pîf‹m™˚
 
mósuªmít
 
öãgøti⁄


602 ; 
I≈ut
: 
	`N⁄e
 (
öãºu±
 
c⁄ãxt
)

603 ; 
Ouçut
: 
N⁄e


604 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßved
/
ª°‹ed
 
wôh
 
CPU
 
›timiz©i⁄
)

606 
nic_úq_h™dÀr_3c509b
 
PROC


607 ; ==
PHASE
 3 
OPTIMIZED
 
ISR
 
PROLOG
 ===

608 ; 
Sèπ
 
≥rf‹m™˚
 
mósuªmít
 
immedüãly


609 
push
 
ax


610 
push
 
dx


612 ; 
Quick
 
time°amp
 
ISR
 
≥rf‹m™˚
 
åackög


613 
mov
 
ah
, 0

614 1A
h
 ; 
Gë
 
tick
 
cou¡
 
timög


615 
mov
 [
≥rf_°¨t_time
], 
dx


617 
p›
 
dx


619 ; 
Së
 
up
 
our
 
d©a
 
	$£gmít
 (
›timized
)

620 
mov
 
ax
, 
_DATA


621 
mov
 
ds
, 
ax


622 
ASSUME
 
DS
:
_DATA


624 ; 
CPU
-
›timized
 
ßve
 
ba£d
 
⁄
 
dëe˘ed
 
ˇ∑bûôõs


625 
ã°
 
w‹d
 
±r
 [
˝u_ˇ∑bûôõs
], 
CPU_CAP_286


626 
jz
 .
ßve_8086_°yÀ


628 ; 286+ 
›timized
 
ßve
 
usög
 
PUSHA


629 
pusha
 ; 
SögÀ
 
ö°ru˘i⁄
 
vs
 8 
pushes


630 
push
 
es


631 
push
 
ds


632 
jmp
 .
ªgi°îs_ßved


634 .
ßve_8086_°yÀ
:

635 ; 8086 
com∑tibÀ
 
ßve


636 
push
 
ax


637 
push
 
bx


638 
push
 
cx


639 
push
 
dx


640 
push
 
si


641 
push
 
di


642 
push
 
es


643 
push
 
ds


645 .
ªgi°îs_ßved
:

646 ; 
Swôch
 
to
 
¥iv©e
 
°ack
 
usög
 
de„nsive
 
ma¸o


647 
SAFE_STACK_SWITCH_3C509B


649 ; ==
STREAMLINED
 
ISR
 
CRITICAL
 
	`PATH
 (
T¨gë
: <50¬µ
s
) ===

650 ; 
U…ø
-
Á°
 
h¨dw¨e
 
check
 - 
is
 
this
 
öãºu±
 
ªÆly
 
ours
?

651 
ˇŒ
 
check_3c509b_öãºu±_sour˚_Á°


652 
jc
 .
•urious_öãºu±


654 ; 
O±imized
 
öãºu±
 
cﬂÀscög
 
™d
 
b©chög


655 ; 
This
 
is
 
the
 
key
 
to
 
achõvög
 <100¬µ
s
 
èrgë


656 
ˇŒ
 
öãºu±_cﬂÀs˚_™d_b©ch_3c509b


657 
cmp
 
ax
, 0

658 
je
 .
no_immedüã_w‹k
 ; 
AŒ
 
w‹k
 
cﬂÀs˚d
 
œãr


660 ; 
MöimÆ
 
immedüã
 
¥o˚ssög
 
⁄ly
 
urgít
 
öãºu±s


661 
ˇŒ
 
¥o˚ss_urgít_3c509b_öãºu±s


663 ; 
Síd
 
EOI
 
wôh
 
›timized
 
PIC
 
h™dlög


664 
ˇŒ
 
£nd_eoi_f‹_3c509b_›timized


666 .
no_immedüã_w‹k
:

667 ; 
In¸emít
 
≥rf‹m™˚
 
cou¡îs


668 
öc
 
w‹d
 
±r
 [
úq_cou¡
]

669 
öc
 
dw‹d
 
±r
 [
tŸÆ_öãºu±s
]

671 ; ==
DEFER
 
ALL
 
HEAVY
 
WORK
 ===

672 ; 
Queue
 
com¥ehísive
 
∑ckë
 
¥o˚ssög
 
DOS
 
idÀ
 
time


673 
mov
 
ax
, [
de„ºed_3c509b_w‹k
]

674 
ˇŒ
 
queue_de„ºed_w‹k


675 
jc
 .
queue_ovîÊow_h™dÀd
 ; 
FÆlback
 
Æªady
 
h™dÀd


677 
jmp
 .
i§_exô_›timized


679 .
•urious_öãºu±
:

680 ; 
O±imized
 
•urious
 
öãºu±
 
h™dlög


681 
öc
 
w‹d
 
±r
 [
•urious_úq_cou¡
]

682 ; 
D⁄
't send EOI for spurious interrupts

683 
jmp
 .
i§_exô_›timized


685 .
queue_ovîÊow_h™dÀd
:

686 ; 
Queue
 
ovîÊow
 
is
 
h™dÀd
 
ö
 
öãºu±_cﬂÀs˚_™d_b©ch_3c509b


687 ; 
No
 
addôi⁄Æ
 
¥o˚ssög
 
√eded
 
hîe


689 .
i§_exô_›timized
:

690 ; ==
PHASE
 3 
OPTIMIZED
 
ISR
 
EPILOG
 ===

691 ; 
End
 
≥rf‹m™˚
 
mósuªmít


692 
push
 
ax


693 
push
 
dx


694 
mov
 
ah
, 0

695 1A
h
 ; 
Gë
 
íd
 
tick
 
cou¡


696 
mov
 [
≥rf_íd_time
], 
dx


698 ; 
CÆcuœã
 
™d
 
ªc‹d
 
ISR
 
executi⁄
 
time


699 
mov
 
ax
, 
dx


700 
sub
 
ax
, [
≥rf_°¨t_time
]

701 
mov
 [
i§_executi⁄_time
], 
ax


703 ; 
Rec‹d
 
≥rf‹m™˚
 
ßm∂e
 
m⁄ô‹ög


704 
push
 
cx


705 
mov
 
˛
, 1 ; 
I¡îru±
 
ty≥
: 
RX
/
TX


706 
mov
 
ch
, [
öãºu±_b©ch_cou¡
]

707 
ˇŒ
 
≥rf‹m™˚_m⁄ô‹_ªc‹d_ßm∂e_asm


708 
p›
 
cx


710 
p›
 
dx


711 
p›
 
ax


713 ; 
Re°‹e
 
ˇŒî
's stack

714 
˛i
 ; 
Crôiˇl
 
£˘i⁄
 
°¨t


715 
mov
 
ss
, [
ˇŒî_ss
]

716 
mov
 
•
, [
ˇŒî_•
]

717 
°i
 ; 
Crôiˇl
 
£˘i⁄
 
íd


719 ; 
CPU
-
›timized
 
ª°‹e


720 
ã°
 
w‹d
 
±r
 [
˝u_ˇ∑bûôõs
], 
CPU_CAP_286


721 
jz
 .
ª°‹e_8086_°yÀ


723 ; 286+ 
›timized
 
ª°‹e
 
usög
 
POPA


724 
p›
 
ds


725 
p›
 
es


726 
p›a
 ; 
SögÀ
 
ö°ru˘i⁄
 
vs
 8 
p›s


727 
jmp
 .
ªgi°îs_ª°‹ed


729 .
ª°‹e_8086_°yÀ
:

730 ; 8086 
com∑tibÀ
 
ª°‹e


731 
p›
 
ds


732 
p›
 
es


733 
p›
 
di


734 
p›
 
si


735 
p›
 
dx


736 
p›
 
cx


737 
p›
 
bx


738 
p›
 
ax


740 .
ªgi°îs_ª°‹ed
:

741 ; 
FöÆ
 
ª°‹e
 
™d
 

742 
p›
 
ax


744 
úë


745 
nic_úq_h™dÀr_3c509b
 
ENDP


748 ; 
PHASE
 3 
OPTIMIZED
 
Suµ‹t
 
fun˘i⁄s
 
íh™˚d
 3C509B 
öãºu±
 
h™dlög


751 ; 
Fa°
 
öãºu±
 
sour˚
 
check
 - 
›timized
 
möimÆ
 
œãncy


752 
check_3c509b_öãºu±_sour˚_Á°
 
PROC


753 ; 
U…ø
-
Á°
 
h¨dw¨e
 
check
 
›timized
 <10¬µ
s
 
executi⁄


754 ; 
Rëu∫s
: 
CY
 
˛ór
 
ours
, CY 
£t
 
nŸ
 ours

755 
push
 
dx


756 
push
 
bx


758 ; 
Gë
 
I
/
O
 
ba£
 
wôh
 
›timized
 
lookup


759 
mov
 
bx
, 0 ; 
NIC
 0 
ödex


760 
shl
 
bx
, 1 ; 
W‹d
 
off£t


761 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
] ; 
Dúe˘
 
ödexed
 
lookup


762 
ã°
 
dx
, dx

763 
jz
 .
nŸ_ours_Á°
 ; 
No
 
I
/
O
 
ba£
 = 
nŸ
 
our
 
öãºu±


765 ; 
SögÀ
 
comböed
 
ªad
 
Æl
 
öãºu±
 
°©us
 
bôs


766 
add
 
dx
, 0E
h
 ; 
Sètus
 
off£t


767 
ö
 
ax
, 
dx
 ; 
Ród
 
	`°©us
 (16-
bô
)

769 ; 
Check
 
mu…ùÀ
 
öãºu±
 
c⁄dôi⁄s
 
ö
 
∑øŒñ


770 ; 
	`I¡L©ch
 (
bô
 0Ë+ 
	`I¡Req
 (bô 6Ë+ 
™y
 
îr‹
 
	`bôs
 (7-11)

771 
ã°
 
ax
, 0FC1
h
 ; 
Te°
 
Æl
 
ªÀv™t
 
bôs
 
©
 
⁄˚


772 
jz
 .
nŸ_ours_Á°
 ; 
No
 
öãºu±
 
c⁄dôi⁄


774 ; 
Addôi⁄Æ
 
›timiz©i⁄
: 
check
 
comm⁄
 
öãºu±
 
∑âîns


775 
ã°
 
Æ
, 01
h
 ; 
I¡L©ch


776 
jz
 .
nŸ_ours_Á°


777 
ã°
 
Æ
, 40
h
 ; 
I¡Req


778 
jz
 .
nŸ_ours_Á°


780 ; 
This
 
is
 
our
 
öãºu±
 - 
›timize
 
comm⁄
 

781 
p›
 
bx


782 
p›
 
dx


783 
˛c
 ; 
CÀ¨
 
ˇºy
 = 
ours


784 
ªt


786 .
nŸ_ours_Á°
:

787 
p›
 
bx


788 
p›
 
dx


789 
°c
 ; 
Së
 
ˇºy
 = 
nŸ
 
ours


790 
ªt


791 
check_3c509b_öãºu±_sour˚_Á°
 
ENDP


793 ; 
O±imized
 
öãºu±
 
cﬂÀscög
 
™d
 
b©chög


794 
öãºu±_cﬂÀs˚_™d_b©ch_3c509b
 
PROC


795 ; 
Adv™˚d
 
öãºu±
 
cﬂÀscög
 <100¬µ
s
 
ISR
 
èrgë


796 ; 
I≈ut
: 
N⁄e


797 ; 
Ouçut
: 
AX
 = 0 
cﬂÀs˚d
, 
n⁄
-
zîo
 
immedüã
 
w‹k
 
√eded


798 
push
 
bx


799 
push
 
cx


800 
push
 
dx


802 ; 
Ród
 
h¨dw¨e
 
öãºu±
 
°©us


803 
mov
 
bx
, 0 ; 
NIC
 0 
ödex


804 
shl
 
bx
, 1

805 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
]

806 
add
 
dx
, 0E
h
 ; 
Sètus
 

807 
ö
 
ax
, 
dx
 ; 
Ród
 
öãºu±
 
°©us


809 ; 
Aµly
 
öãºu±
 
cﬂÀscög
 
Æg‹ôhm


810 
ˇŒ
 
öãºu±_cﬂÀs˚_¥o˚ss


811 
mov
 
cx
, 
ax
 ; 
Save
 
cﬂÀs˚d
 
ªsu…


813 ; 
If
 
cﬂÀscög
 
a˘ive
,  0 
no
 
immedüã
 
w‹k


814 
ã°
 
cx
, cx

815 
jz
 .
cﬂÀscög_a˘ive


817 ; 
Pro˚ss
 
immedüã
 
b©ch
 
wôh
 
size
 
limô


818 
mov
 
byã
 
±r
 [
öãºu±_b©ch_cou¡
], 0

819 
ˇŒ
 
öãºu±_b©ch_¥o˚ss_›timized


821 ; 
Rëu∫
 
n⁄
-
zîo
 
to
 
ödiˇã
 
immedüã
 
w‹k
 
was
 
d⁄e


822 
mov
 
ax
, 1

823 
jmp
 .
cﬂÀs˚_d⁄e


825 .
cﬂÀscög_a˘ive
:

826 ; 
AŒ
 
w‹k
 
de„ºed
 -  0

827 
x‹
 
ax
,áx

829 .
cﬂÀs˚_d⁄e
:

830 
p›
 
dx


831 
p›
 
cx


832 
p›
 
bx


833 
ªt


834 
öãºu±_cﬂÀs˚_™d_b©ch_3c509b
 
ENDP


836 ; 
Pro˚ss
 
urgít
 
öãºu±s
 
	$⁄ly
 (
möimÆ
 
w‹k
)

837 
¥o˚ss_urgít_3c509b_öãºu±s
 
PROC


838 ; 
Pro˚ss
 
⁄ly
 
the
 
mo°
 
urgít
 
öãºu±s
 
ö
 <20¬µ
s


839 ; 
Evîythög
 
is
 
de„ºed
 
com¥ehísive
 
¥o˚ssög


840 
push
 
ax


841 
push
 
dx


842 
push
 
bx


844 ; 
Gë
 
h¨dw¨e
 
°©us
 
wôh
 
möimÆ
 
ovîhód


845 
mov
 
bx
, 0

846 
shl
 
bx
, 1

847 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
]

848 
add
 
dx
, 0E
h


849 
ö
 
ax
, 
dx


851 ; 
Check
 
⁄ly
 
¸ôiˇl
 
îr‹
 
c⁄dôi⁄s
 
th©
 
√ed
 
immedüã
 
©ã¡i⁄


852 
ã°
 
ax
, 0002
h
 ; 
ADAPTER_FAILURE


853 
jz
 .
no_¸ôiˇl_îr‹


855 ; 
MöimÆ
 
îr‹
 
h™dlög
 - 
ju°
 
acknowÀdge
 
™d
 
log


856 
ˇŒ
 
acknowÀdge_3c509b_¸ôiˇl_îr‹


857 
öc
 
dw‹d
 
±r
 [
¸ôiˇl_îr‹s
]

859 .
no_¸ôiˇl_îr‹
:

860 ; 
AŒ
 
Ÿhî
 
öãºu±
 
¥o˚ssög
 
is
 
de„ºed


861 ; 
This
 
kìps
 
ISR
 
time
 
to
 
absﬁuã
 
möimum


863 
p›
 
bx


864 
p›
 
dx


865 
p›
 
ax


866 
ªt


867 
¥o˚ss_urgít_3c509b_öãºu±s
 
ENDP


869 ; 
O±imized
 
EOI
 
£ndög
 
wôh
 
ªdu˚d
 
PIC
 
ac˚ss


870 
£nd_eoi_f‹_3c509b_›timized
 
PROC


871 ; 
U…ø
-
Á°
 
EOI
 
wôh
 
möimÆ
 
PIC
 
ac˚ss


872 
push
 
ax


873 
push
 
bx


874 
push
 
dx


876 ; 
Gë
 
IRQ
 
numbî
 
wôh
 
›timized
 
lookup


877 
mov
 
bl
, 
byã
 
±r
 [
nic_úq_numbîs
] ; 
NIC
 0 
IRQ


878 
cmp
 
bl
, 
IRQ_NONE


879 
je
 .
no_eoi_√eded


881 ; 
O±imized
 
PIC
 
EOI
 
£quí˚


882 
mov
 
Æ
, 
PIC_EOI


883 
cmp
 
bl
, 8

884 
jl
 .
ma°î_pic_eoi


886 ; 
Sœve
 
PIC
 - 
u£
 
›timized
 
EOI


887 
mov
 
dx
, 
PIC2_COMMAND


888 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
¶ave


889 
mov
 
dx
, 
PIC1_COMMAND


890 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
ma°î


891 
jmp
 .
eoi_com∂ëe


893 .
ma°î_pic_eoi
:

894 ; 
Ma°î
 
PIC
 
⁄ly


895 
mov
 
dx
, 
PIC1_COMMAND


896 
out
 
dx
, 
Æ


898 .
eoi_com∂ëe
:

899 .
no_eoi_√eded
:

900 
p›
 
dx


901 
p›
 
bx


902 
p›
 
ax


903 
ªt


904 
£nd_eoi_f‹_3c509b_›timized
 
ENDP


906 ; 
O±imized
 
b©ch
 
¥o˚ssög
 
wôh
 
CPU
-
•ecific
 
ö°ru˘i⁄s


907 
öãºu±_b©ch_¥o˚ss_›timized
 
PROC


908 ; 
Pro˚ss
 
öãºu±
 
b©ch
 
wôh
 
CPU
-
•ecific
 
›timiz©i⁄s


909 ; 
T¨gë
: 
Pro˚ss
 
up
 
to
 10 
öãºu±s
 
ö
 <30¬µ
s


910 
push
 
bx


911 
push
 
cx


912 
push
 
dx


914 
mov
 
˛
, 0 ; 
Pro˚s£d
 
cou¡


915 
mov
 
bl
, 
Æ
 ; 
I¡îru±
 
mask


917 ; 
Check
 486+ 
BSF
 
ö°ru˘i⁄
 
›timiz©i⁄


918 
ã°
 
w‹d
 
±r
 [
˝u_ˇ∑bûôõs
], 
CPU_CAP_BSF


919 
jnz
 .
u£_bsf_b©ch


921 ; 
Gíîic
 
bô
 
sˇ¬ög
 286/386

922 
mov
 
dl
, 1

924 .
gíîic_b©ch_lo›
:

925 
ã°
 
bl
, 
dl


926 
jz
 .
√xt_gíîic_bô


928 ; 
Pro˚ss
 
öãºu±
 
	$bô
 (
möimÆ
 
w‹k
 
⁄ly
)

929 
ˇŒ
 
¥o˚ss_öãºu±_bô_möimÆ


930 
öc
 
˛


932 ; 
Check
 
b©ch
 
limô


933 
cmp
 
˛
, 
MAX_EVENTS_PER_IRQ


934 
j´
 .
b©ch_com∂ëe


936 .
√xt_gíîic_bô
:

937 
shl
 
dl
, 1

938 
jnz
 .
gíîic_b©ch_lo›


939 
jmp
 .
b©ch_com∂ëe


941 .
u£_bsf_b©ch
:

942 ; 486+ 
›timized
 
bô
 
sˇ¬ög


943 
ã°
 
bl
, bl

944 
jz
 .
b©ch_com∂ëe


946 .
bsf_b©ch_lo›
:

947 ; 
Föd
 
fú°
 
£t
 
bô
 
usög
 
BSF


948 
db
 0F
h
, 0BCh, 0D3h ; 
BSF
 
DX
, 
BX


949 
jz
 .
b©ch_com∂ëe


951 ; 
Pro˚ss
 
öãºu±
 
bô


952 
ˇŒ
 
¥o˚ss_öãºu±_bô_möimÆ


953 
öc
 
˛


955 ; 
CÀ¨
 
¥o˚s£d
 
bô


956 
push
 
ax


957 
mov
 
Æ
, 1

958 
shl
 
Æ
, 
dl


959 
nŸ
 
Æ


960 
™d
 
bl
, 
Æ


961 
p›
 
ax


963 ; 
Check
 
b©ch
 
limô


964 
cmp
 
˛
, 
MAX_EVENTS_PER_IRQ


965 
jb
 .
bsf_b©ch_lo›


967 .
b©ch_com∂ëe
:

968 ; 
Upd©e
 
b©ch
 
°©i°ics


969 
mov
 [
öãºu±_b©ch_cou¡
], 
˛


970 
cmp
 
˛
, 1

971 
jbe
 .
no_b©ch_°©s


972 
öc
 
dw‹d
 
±r
 [
b©ched_öãºu±s
]

974 .
no_b©ch_°©s
:

975 
p›
 
dx


976 
p›
 
cx


977 
p›
 
bx


978 
ªt


979 
öãºu±_b©ch_¥o˚ss_›timized
 
ENDP


981 ; 
MöimÆ
 
öãºu±
 
bô
 
	$¥o˚ssög
 (
de„rs
 
hóvy
 
w‹k
)

982 
¥o˚ss_öãºu±_bô_möimÆ
 
PROC


983 ; 
Pro˚ss
 
sögÀ
 
öãºu±
 
bô
 
wôh
 
möimÆ
 
ovîhód


984 ; 
I≈ut
: 
DL
 = 
bô
 
posôi⁄


985 ; 
De„rs
 
Æl
 
hóvy
 
¥o˚ssög
 
to
 
DOS
 
idÀ
 
h™dÀr


986 
push
 
ax


987 
push
 
bx


989 ; 
Ju°
 
acknowÀdge
 
the
 
öãºu±
 
c⁄dôi⁄
 
ö
 
h¨dw¨e


990 ; 
AŒ
 
a˘uÆ
 
∑ckë
 
¥o˚ssög
 
is
 
de„ºed


991 
cmp
 
dl
, 0 ; 
RX
 
Com∂ëe


992 
je
 .
ack_rx_möimÆ


993 
cmp
 
dl
, 1 ; 
TX
 
Com∂ëe


994 
je
 .
ack_tx_möimÆ


995 
jmp
 .
ack_gíîic


997 .
ack_rx_möimÆ
:

998 ; 
MöimÆ
 
RX
 
acknowÀdgmít


999 
mov
 
bx
, 0

1000 
shl
 
bx
, 1

1001 
mov
 
ax
, [
hw_io_ba£s
 + 
bx
]

1002 
add
 
ax
, 0C
h
 ; 
RX_STATUS


1003 
mov
 
dx
, 
ax


1004 
ö
 
ax
, 
dx
 ; 
Ród
 
to
 
acknowÀdge


1005 
jmp
 .
ack_d⁄e


1007 .
ack_tx_möimÆ
:

1008 ; 
MöimÆ
 
TX
 
acknowÀdgmít


1009 
mov
 
bx
, 0

1010 
shl
 
bx
, 1

1011 
mov
 
ax
, [
hw_io_ba£s
 + 
bx
]

1012 
add
 
ax
, 0A
h
 ; 
TX_STATUS


1013 
mov
 
dx
, 
ax


1014 
ö
 
Æ
, 
dx
 ; 
Ród
 
to
 
acknowÀdge


1015 
jmp
 .
ack_d⁄e


1017 .
ack_gíîic
:

1018 ; 
Gíîic
 
öãºu±
 
acknowÀdgmít


1019 
n›
 ; 
Pœ˚hﬁdî


1021 .
ack_d⁄e
:

1022 
p›
 
bx


1023 
p›
 
ax


1024 
ªt


1025 
¥o˚ss_öãºu±_bô_möimÆ
 
ENDP


1027 ; 
Crôiˇl
 
îr‹
 
	$h™dlög
 (
möimÆ
 
ISR
 
w‹k
)

1028 
acknowÀdge_3c509b_¸ôiˇl_îr‹
 
PROC


1029 ; 
H™dÀ
 
¸ôiˇl
 
îr‹s
 
wôh
 
möimÆ
 
ISR
 
ovîhód


1030 
push
 
ax


1031 
push
 
dx


1032 
push
 
bx


1034 ; 
Gë
 
I
/
O
 
ba£


1035 
mov
 
bx
, 0

1036 
shl
 
bx
, 1

1037 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
]

1039 ; 
CÀ¨
 
ad≠ãr
 
Áûuª
 
bô


1040 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1041 
mov
 
ax
, (13 
shl
 11Ë
‹
 0002
h
 ; 
AckI¡r
 | 
Ad≠ãrFaûuª


1042 
out
 
dx
, 
ax


1044 
p›
 
bx


1045 
p›
 
dx


1046 
p›
 
ax


1047 
ªt


1048 
acknowÀdge_3c509b_¸ôiˇl_îr‹
 
ENDP


1050 ; 
As£mbly
 
öãrÁ˚
 
≥rf‹m™˚
 
m⁄ô‹ög


1051 
≥rf‹m™˚_m⁄ô‹_ªc‹d_ßm∂e_asm
 
PROC


1052 ; 
Rec‹d
 
≥rf‹m™˚
 
ßm∂e
 
‰om
 
as£mbly
 
c⁄ãxt


1053 ; 
I≈ut
: 
CL
 = 
öãºu±
 
ty≥
, 
CH
 = 
b©ch
 
size


1054 
push
 
ax


1055 
push
 
bx


1056 
push
 
dx


1058 ; 
This
 
would
 
ˇŒ
 
C
 
≥rf‹m™˚
 
m⁄ô‹ög
 
fun˘i⁄


1059 ; 
F‹
 
now
, 
ju°
 
upd©e
 
basic
 
cou¡îs


1060 
öc
 
dw‹d
 
±r
 [
tŸÆ_öãºu±s
]

1061 
cmp
 
ch
, 1

1062 
jbe
 .
no_b©ch_ªc‹ded


1063 
öc
 
dw‹d
 
±r
 [
b©ched_öãºu±s
]

1065 .
no_b©ch_ªc‹ded
:

1066 
p›
 
dx


1067 
p›
 
bx


1068 
p›
 
ax


1069 
ªt


1070 
≥rf‹m™˚_m⁄ô‹_ªc‹d_ßm∂e_asm
 
ENDP


1072 ; 
OrigöÆ
 
fun˘i⁄
 
kït
 
com∑tibûôy


1073 
check_3c509b_öãºu±_sour˚
 
PROC


1074 ; 
Quick
 
check
 
the
 3C509B 
a˘uÆly
 
gíî©ed
 
this
 
öãºu±


1075 ; 
Rëu∫s
: 
CY
 
˛ór
 
ours
, CY 
£t
 
nŸ
 ours

1076 ; 
Ród
 3C509B 
°©us
 
™d
 
check
 
I¡L©ch
 
bô


1077 
push
 
dx


1078 
push
 
ax


1080 ; 
Gë
 
I
/
O
 
ba£
 
addªss
 
NIC
 0 (3C509B)

1081 
mov
 
dx
, [
hw_io_ba£s
] ; 
Gë
 
I
/
O
 
ba£
 
fú°
 
NIC


1082 
ã°
 
dx
, dx ; 
Check
 
vÆid


1083 
jz
 .
nŸ_ours
 ; 
No
 
I
/
O
 
ba£
 = 
nŸ
 
our
 
öãºu±


1085 ; 
Ród
 
°©us
 (
Wödow
-
ödïídít
, 
Æways
 
ac˚ssibÀ
)

1086 
add
 
dx
, 0E
h
 ; 
Sètus
 
off£t


1087 
ö
 
ax
, 
dx
 ; 
Ród
 
	`°©us
 (16-
bô
 3C509B)

1089 ; 
Check
 
I¡L©ch
 
	`bô
 (
bô
 0Ë- 
ödiˇãs
 
öãºu±
 
occuºed


1090 
ã°
 
Æ
, 01
h
 ; 
Te°
 
I¡L©ch
 
bô


1091 
jz
 .
nŸ_ours
 ; 
No
 
I¡L©ch
 = 
nŸ
 
our
 
öãºu±


1093 ; 
Addôi⁄Æ
 
vÆid©i⁄
 - 
check
 
vÆid
 
öãºu±
 
ªas⁄s


1094 ; 
	$I¡Req
 (
bô
 6Ë
should
 
Æso
 
be
 
£t
 
a
 
ªÆ
 
öãºu±


1095 
ã°
 
Æ
, 40
h
 ; 
Te°
 
I¡Req
 
bô


1096 
jz
 .
nŸ_ours
 ; 
No
 
I¡Req
 = 
•urious


1098 ; 
This
 
is
 
our
 
öãºu±


1099 
p›
 
ax


1100 
p›
 
dx


1101 
˛c
 ; 
CÀ¨
 
ˇºy
 = 
ours


1102 
ªt


1104 .
nŸ_ours
:

1105 
p›
 
ax


1106 
p›
 
dx


1107 
°c
 ; 
Së
 
ˇºy
 = 
nŸ
 
ours


1108 
ªt


1109 
check_3c509b_öãºu±_sour˚
 
ENDP


1111 
acknowÀdge_3c509b_öãºu±
 
PROC


1112 ; 
AcknowÀdge
 
the
 3C509B 
h¨dw¨e
 
öãºu±
 
usög
 
¥›î
 
comm™d
 
£quí˚


1113 ; 
This
 
˛órs
 
the
 
öãºu±
 
c⁄dôi⁄
 
ö
Åhê
NIC


1114 
push
 
dx


1115 
push
 
ax


1117 ; 
Gë
 
I
/
O
 
ba£
 
addªss
 
NIC
 0 (3C509B)

1118 
mov
 
dx
, [
hw_io_ba£s
] ; 
Gë
 
I
/
O
 
ba£
 
fú°
 
NIC


1119 
ã°
 
dx
, dx ; 
Check
 
vÆid


1120 
jz
 .
no_ack
 ; 
No
 
I
/
O
 
ba£
 = 
nŸhög
 
to
 
ack


1122 ; 
Ród
 
cuºít
 
°©us
 
to
 
£e
 
wh©
 
√eds
Åÿ
be
 
acknowÀdged


1123 
add
 
dx
, 0E
h
 ; 
Sètus
/
Comm™d
 

1124 
ö
 
ax
, 
dx
 ; 
Ród
 
cuºít
 
°©us


1126 ; 
AcknowÀdge
 
öãºu±
 
usög
 
AckI¡r
 
	`comm™d
 (13 << 11)

1127 ; 
Nìd
 
to
 
acknowÀdge
 
I¡Req
 | 
I¡L©ch
 
bôs
 
as
 
≥r
 
Löux
 
drivî


1128 ; 
From
 
Löux
 
drivî
: 
	`outw
(
AckI¡r
 | 
I¡Req
 | 
I¡L©ch
, 
iﬂddr
 + 
EL3_CMD
)

1129 
mov
 
ax
, (13 
shl
 11Ë
‹
 0041
h
 ; 
AckI¡r
 | 
I¡Req
 | 
I¡L©ch


1130 
out
 
dx
, 
ax
 ; 
Síd
 
acknowÀdge
 
comm™d


1132 .
no_ack
:

1133 
p›
 
ax


1134 
p›
 
dx


1135 
ªt


1136 
acknowÀdge_3c509b_öãºu±
 
ENDP


1138 
£nd_eoi_f‹_3c509b
 
PROC


1139 ; 
Síd
 
End
-
Of
-
I¡îru±
 
to
 
the
 
≠¥›rüã
 
PIC
 
ba£d
 
⁄
 
a˘uÆ
 
IRQ
 
assignmít


1140 ; 
This
 
fixes
 
the
 
¸ôiˇl
 
g≠
 
idítifõd
 
ö
 
de„nsive
 
¥ogømmög
 
ªvõw


1141 
push
 
ax


1142 
push
 
bx


1143 
push
 
dx


1145 ; 
Gë
 
the
 
a˘uÆ
 
IRQ
 
numbî
 3C509B (
assumög
 
ô
's NIC 0)

1146 
mov
 
bl
, 
byã
 
±r
 [
nic_úq_numbîs
] ; 
Gë
 
IRQ
 
NIC
 0

1147 
cmp
 
bl
, 
IRQ_NONE


1148 
je
 .
no_úq_assig√d
 ; 
Skù
 
EOI
 
no
 
IRQ
 
assig√d


1150 ; 
Check
 
this
 
is
 
a
 
¶ave
 
PIC
 
	`IRQ
 (8-15)

1151 
cmp
 
bl
, 8

1152 
jl
 .
ma°î_pic_⁄ly
 ; 
IRQ
 0-7: 
ma°î
 
PIC
 
⁄ly


1154 ; 
IRQ
 8-15: 
Síd
 
EOI
 
to
 
¶ave
 
PIC
 
fú°
, 
thí
 
ma°î
 PIC

1155 ; 
This
 
is
 
the
 
c‹ª˘
 
£quí˚
 
¶ave
 
IRQs


1156 
mov
 
Æ
, 
PIC_EOI


1157 
mov
 
dx
, 
PIC2_COMMAND


1158 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
¶ave
 
PIC


1160 ; 
Now
 
£nd
 
EOI
 
to
 
ma°î
 
PIC


1161 
mov
 
dx
, 
PIC1_COMMAND


1162 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
ma°î
 
PIC


1163 
jmp
 .
eoi_com∂ëe


1165 .
ma°î_pic_⁄ly
:

1166 ; 
IRQ
 0-7: 
Síd
 
EOI
 
to
 
ma°î
 
PIC
 
⁄ly


1167 
mov
 
Æ
, 
PIC_EOI


1168 
mov
 
dx
, 
PIC1_COMMAND


1169 
out
 
dx
, 
Æ


1171 .
eoi_com∂ëe
:

1172 .
no_úq_assig√d
:

1173 
p›
 
dx


1174 
p›
 
bx


1175 
p›
 
ax


1176 
ªt


1177 
£nd_eoi_f‹_3c509b
 
ENDP


1179 
¥o˚ss_3c509b_∑ckës_immedüã
 
PROC


1180 ; 
Emîgícy
 
∑ckë
 
¥o˚ssög
 
whí
 
de„ºed
 
queue
 
is
 
fuŒ


1181 ; 
This
 
is
 
ˇŒed
 
dúe˘ly
 
‰om
 
ISR
 
whí
 
we
 
ˇn
't deferÅhe work

1182 
push
 
ax


1183 
push
 
bx


1184 
push
 
cx


1186 ; 
CÆl
 
the
 
‹igöÆ
 
h¨dw¨e
 
h™dÀr
 
as
 
ÁŒback


1187 
ˇŒ
 
h¨dw¨e_h™dÀ_3c509b_úq


1189 
p›
 
cx


1190 
p›
 
bx


1191 
p›
 
ax


1192 
ªt


1193 
¥o˚ss_3c509b_∑ckës_immedüã
 
ENDP


1196 ; 
De„ºed
 
w‹k
 
	`fun˘i⁄s
 (
ˇŒed
 
‰om
 
DOS
 
idÀ
 
c⁄ãxt
)

1199 
PUBLIC
 
¥o˚ss_3c509b_∑ckës


1200 
¥o˚ss_3c509b_∑ckës
 
PROC


1201 ; 
This
 
fun˘i⁄
 
is
 
ˇŒed
 
‰om
 
the
 
INT
 28
h
 
h™dÀr
 
whí
 
DOS
 i†
idÀ


1202 ; 
It
 
ˇn
 
ß„ly
 
ˇŒ
 
DOS
 
fun˘i⁄s
 
™d
 dÿ
hóvy
 
¥o˚ssög


1203 
push
 
ax


1204 
push
 
bx


1205 
push
 
cx


1206 
push
 
dx


1207 
push
 
si


1208 
push
 
di


1209 
push
 
ds


1210 
push
 
es


1212 ; 
Së
 
up
 
our
 
d©a
 
£gmít


1213 
mov
 
ax
, 
_DATA


1214 
mov
 
ds
, 
ax


1215 
ASSUME
 
DS
:
_DATA


1217 ; 
Pro˚ss
 3C509B 
∑ckës
 
wôh
 
fuŒ
 
fun˘i⁄Æôy


1218 ; 
CÆÀd
 
‰om
 
DOS
 
idÀ
 
c⁄ãxt
 - 
ß„
 
to
 dÿ
hóvy
 
¥o˚ssög


1219 
push
 
ax


1220 
push
 
bx


1221 
push
 
cx


1222 
push
 
dx


1224 ; 
Check
 
h¨dw¨e
 
has
 
∑ckës
 
to
 
¥o˚ss


1225 
mov
 
dx
, 300
h
 ; 3C509B 
ba£
 
I
/
O
 
addªss


1226 
add
 
dx
, 08
h
 ; 
RX_STATUS
 

1227 
ö
 
ax
, 
dx
 ; 
Ród
 
RX
 
°©us


1228 
ã°
 
ax
, 8000
h
 ; 
RX_INCOMPLETE
 
bô


1229 
jnz
 .
no_∑ckës
 ; 
No
 
com∂ëe
 
∑ckës


1231 ; 
Pro˚ss
 
up
 
to
 10 
∑ckës
 
≥r
 
	$ˇŒ
 (
öãºu±
 
b©chög
)

1232 
mov
 
cx
, 10 ; 
Maximum
 
∑ckës
 
to
 
¥o˚ss


1234 .
∑ckë_lo›
:

1235 ; 
Check
 
∑ckë
 
is
 
avaûabÀ


1236 
ö
 
ax
, 
dx
 ; 
Re
-
ªad
 
RX
 
°©us


1237 
ã°
 
ax
, 8000
h
 ; 
Check
 
RX_INCOMPLETE


1238 
jnz
 .
∑ckës_d⁄e
 ; 
No
 
m‹e
 
∑ckës


1240 ; 
Gë
 
∑ckë
 
size


1241 
™d
 
ax
, 07FF
h
 ; 
Mask
 
to
 
gë
 
∑ckë
 
size


1242 
cmp
 
ax
, 60 ; 
Möimum
 
Ethî√t
 
‰ame
 
size


1243 
jb
 .
skù_∑ckë
 ; 
InvÆid
 
∑ckë
 
size


1244 
cmp
 
ax
, 1514 ; 
Maximum
 
Ethî√t
 
‰ame
 
size


1245 
ja
 .
skù_∑ckë
 ; 
InvÆid
 
∑ckë
 
size


1247 ; 
Ród
 
∑ckë
 
d©a
 
‰om
 
FIFO


1248 
push
 
cx


1249 
push
 
ax
 ; 
Save
 
∑ckë
 
size


1251 ; 
AŒoˇã
 
buf„r
 
	`∑ckë
 (
sim∂ifõd
 - 
should
 
u£
 buf„∏
poﬁ
)

1252 ; 
F‹
 
now
, 
assume
 
we
 
have
 
a
 
ª˚ive
 
buf„r


1253 
mov
 
bx
, 
OFFSET
 
ãmp_rx_buf„r


1255 ; 
Ród
 
∑ckë
 
‰om
 3C509B 
FIFO


1256 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£
 
addªss


1257 
add
 
dx
, 00
h
 ; 
DATA_REGISTER


1259 
p›
 
cx
 ; 
Re°‹e
 
∑ckë
 
size
 
to
 
CX


1260 
shr
 
cx
, 1 ; 
C⁄vît
 
byãs
 
to
 
w‹ds


1262 .
ªad_lo›
:

1263 
ö
 
ax
, 
dx
 ; 
Ród
 
w‹d
 
‰om
 
FIFO


1264 
mov
 [
bx
], 
ax
 ; 
St‹e
 
ö
 
buf„r


1265 
add
 
bx
, 2 ; 
Adv™˚
 
buf„r
 
poöãr


1266 
lo›
 .
ªad_lo›
 ; 
C⁄töue
 
ªadög


1268 ; 
H™dÀ
 
odd
 
byã
 
∑ckë
 
size
 
was
 odd

1269 
p›
 
ax
 ; 
Re°‹e
 
‹igöÆ
 
∑ckë
 
size


1270 
ã°
 
ax
, 1 ; 
Check
 
odd
 
size


1271 
jz
 .
eví_size


1273 
ö
 
ax
, 
dx
 ; 
Ród
 
föÆ
 
w‹d


1274 
mov
 [
bx
], 
Æ
 ; 
St‹e
 
⁄ly
 
the
 
byã
 
we
 
√ed


1276 .
eví_size
:

1277 ; 
CÆl
 
∑ckë
 
ª˚ive
 
h™dÀr


1278 
push
 
cx


1279 
mov
 
ax
, 0 ; 
NIC
 
	$ödex
 (3C509B = 0)

1280 
mov
 
bx
, 
OFFSET
 
ãmp_rx_buf„r
 ; 
Packë
 
buf„r


1281 
ˇŒ
 
∑ckë_›s_ª˚ive
 ; 
Pro˚ss
 
the
 
∑ckë


1282 
p›
 
cx


1284 ; 
Upd©e
 
°©i°ics


1285 
öc
 
w‹d
 
±r
 [
úq_cou¡
] ; 
In¸emít
 
∑ckë
 
cou¡


1287 
p›
 
cx
 ; 
Re°‹e
 
lo›
 
cou¡î


1288 
dec
 
cx
 ; 
De¸emít
 
ªmaöög
 
cou¡


1289 
jnz
 .
∑ckë_lo›
 ; 
Pro˚ss
 
√xt
 
∑ckë


1291 
jmp
 .
∑ckës_d⁄e


1293 .
skù_∑ckë
:

1294 ; 
Skù
 
mÆf‹med
 
∑ckë
 
by
 
ªadög
 
™d
 
disˇrdög


1295 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£


1296 
add
 
dx
, 0C
h
 ; 
COMMAND
 

1297 
mov
 
ax
, 4000
h
 ; 
RX_DISCARD
 
comm™d


1298 
out
 
dx
, 
ax
 ; 
Disˇrd
 
cuºít
 
∑ckë


1300 ; 
C⁄töue
 
wôh
 
√xt
 
∑ckë


1301 
add
 
dx
, 4 ; 
Back
 
to
 
RX_STATUS


1302 
lo›
 .
∑ckë_lo›


1304 .
∑ckës_d⁄e
:

1305 .
no_∑ckës
:

1306 
p›
 
dx


1307 
p›
 
cx


1308 
p›
 
bx


1309 
p›
 
ax


1311 
p›
 
es


1312 
p›
 
ds


1313 
p›
 
di


1314 
p›
 
si


1315 
p›
 
dx


1316 
p›
 
cx


1317 
p›
 
bx


1318 
p›
 
ax


1319 
ªt


1320 
¥o˚ss_3c509b_∑ckës
 
ENDP


1323 ; 
nic_úq_h™dÀr_3c515
 - 
I¡îru±
 
h™dÀr
 3C515-
TX
 
NIC


1324 ; 
This
 
is
 
the
 
a˘uÆ
 
IRQ
 
h™dÀr
 
ö°ÆÀd
 
ö
Åhê
öãºu±
 
ve˘‹


1326 ; 
I≈ut
: 
	`N⁄e
 (
öãºu±
 
c⁄ãxt
)

1327 ; 
Ouçut
: 
N⁄e


1328 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßved
/
ª°‹ed
)

1330 
nic_úq_h™dÀr_3c515
 
PROC


1331 ; ==
DEFENSIVE
 
ISR
 
PROLOG
 ===

1332 ; 
Save
 
möimÆ
 
ªgi°îs
 
fú°


1333 
push
 
ax


1334 
push
 
ds


1336 ; 
Së
 
up
 
our
 
d©a
 
£gmít


1337 
mov
 
ax
, 
_DATA


1338 
mov
 
ds
, 
ax


1339 
ASSUME
 
DS
:
_DATA


1341 ; 
Swôch
 
to
 
¥iv©e
 
°ack
 
usög
 
de„nsive
 
ma¸o


1342 
mov
 
ax
, 
_DATA
 ; 
Së
 
up
 
d©a
 
£gmít
 
fú°


1343 
SAFE_STACK_SWITCH_3C515


1345 ; 
Now
 
ßve
 
Æl
 
ªgi°îs
 
⁄
 
our
 
ß„
 
°ack


1346 
pusha


1347 
push
 
es


1348 
push
 
ds


1350 ; ==
MINIMAL
 
ISR
 
WORK
 
ONLY
 ===

1351 ; 
Quick
 
h¨dw¨e
 
check
 - 
is
 
this
 
öãºu±
 
ªÆly
 
ours
?

1352 
ˇŒ
 
check_3c515_öãºu±_sour˚


1353 
jc
 .
nŸ_our_öãºu±


1355 ; 
Pro˚ss
 
öãºu±s
 
wôh
 
DMA
-
aw¨e
 
	`b©chög
 (
max
 10 
evíts
 
≥r
 
öãºu±
)

1356 ; 3C515-
TX
 
has
 
m‹e
 
com∂ex
 
öãºu±
 
h™dlög
 
due
 
to
 
DMA
 
ˇ∑bûôõs


1357 
ˇŒ
 
nic_¥o˚ss_öãºu±_b©ch_3c515


1359 ; 
Síd
 
EOI
 
to
 
PIC
 
a·î
 
¥o˚ssög
 
b©ch


1360 
ˇŒ
 
£nd_eoi_f‹_3c515


1362 ; 
In¸emít
 
öãºu±
 
cou¡î
 
dügno°ics


1363 
öc
 
w‹d
 
±r
 [
úq_cou¡
+2] ; 
NIC
 1 
cou¡î


1365 ; ==
DEFER
 
HEAVY
 
WORK
 ===

1366 ; 
Always
 
queue
 
de„ºed
 
w‹k
 
com¥ehísive
 
DMA
 
™d
 
∑ckë
 
¥o˚ssög


1367 ; 
The
 
b©chög
 
above
 
h™dÀs
 
immedüã
 
öãºu±
 
acknowÀdgmít


1368 
mov
 
ax
, [
de„ºed_3c515_w‹k
] ; 
Fun˘i⁄
 
to
 
ˇŒ
 
œãr


1369 
ˇŒ
 
queue_de„ºed_w‹k


1370 
jc
 .
queue_fuŒ
 ; 
H™dÀ
 
queue
 
ovîÊow


1372 
jmp
 .
i§_exô


1374 .
nŸ_our_öãºu±
:

1375 ; 
This
 
öãºu±
 
wa¢
'àour†- d⁄'
t
 
£nd
 
EOI


1376 
öc
 
w‹d
 
±r
 [
•urious_úq_cou¡
]

1377 
jmp
 .
i§_exô


1379 .
queue_fuŒ
:

1380 ; 
W‹k
 
queue
 
is
 
fuŒ
 - 
¥o˚ss
 
	`immedüãly
 (
nŸ
 
idól
 
but
 
√˚sßry
)

1381 ; 
This
 
is
 
our
 
ÁŒback
 
whí
 
de„ºed
 
¥o˚ssög
 
Áûs


1382 
ˇŒ
 
¥o˚ss_3c515_∑ckës_immedüã


1384 .
i§_exô
:

1385 ; ==
DEFENSIVE
 
ISR
 
EPILOG
 ===

1386 ; 
Re°‹e
 
Æl
 
ªgi°îs


1387 
p›
 
ds


1388 
p›
 
es


1389 
p›a


1391 ; 
Re°‹e
 
ˇŒî
's stack using defensive macro

1392 
RESTORE_CALLER_STACK_IRQ


1394 ; 
Re°‹e
 
möimÆ
 
ªgi°îs


1395 
p›
 
ds


1396 
p›
 
ax


1398 
úë


1399 
nic_úq_h™dÀr_3c515
 
ENDP


1402 ; 
Suµ‹t
 
fun˘i⁄s
 
íh™˚d
 3C515 
öãºu±
 
h™dlög


1405 
check_3c515_öãºu±_sour˚
 
PROC


1406 ; 
Quick
 
check
 
the
 3C515 
a˘uÆly
 
gíî©ed
 
this
 
öãºu±


1407 ; 
Rëu∫s
: 
CY
 
˛ór
 
ours
, CY 
£t
 
nŸ
 ours

1408 
push
 
ax


1409 
push
 
bx


1410 
push
 
dx


1412 ; 
Gë
 
the
 
I
/
O
 
ba£
 3C515 (
assumög
 
NIC
 1)

1413 
mov
 
bx
, 1

1414 
shl
 
bx
, 1 ; 
W‹d
 
off£t


1415 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
] ; 
Gë
 
I
/
O
 
ba£


1416 
ã°
 
dx
, dx

1417 
jz
 .
nŸ_ours
 ; 
No
 
I
/
O
 
ba£
 = 
nŸ
 
ours


1419 ; 
Ród
 
°©us
 (
ßme
 
as
 
comm™d
 
addªss
)

1420 
add
 
dx
, 0E
h
 ; 
Sètus
/
Comm™d
 

1421 
ö
 
ax
, 
dx


1423 ; 
Check
 
™y
 
öãºu±
 
°©us
 
bôs
 
ö˛udög
 
DMA


1424 ; 
I¡îru±
 
	$œtch
 (
bô
 0)

1425 
ã°
 
ax
, 0001
h
 ; 
INT_LATCH


1426 
jnz
 .
our_öãºu±


1428 ; 
Check
 
°™d¨d
 
öãºu±
 
bôs


1429 
ã°
 
ax
, 0004
h
 ; 
TX_COMPLETE


1430 
jnz
 .
our_öãºu±


1431 
ã°
 
ax
, 0010
h
 ; 
RX_COMPLETE


1432 
jnz
 .
our_öãºu±


1433 
ã°
 
ax
, 0002
h
 ; 
ADAPTER_FAILURE


1434 
jnz
 .
our_öãºu±


1435 
ã°
 
ax
, 0080
h
 ; 
STATS_FULL


1436 
jnz
 .
our_öãºu±


1438 ; 
Check
 
DMA
-
•ecific
 
°©us
 
	$bôs
 (3C515 
•ecül
 
„©uªs
)

1439 
ã°
 
ax
, 0100
h
 ; 
	$DMA_DONE
 (
bô
 8)

1440 
jnz
 .
our_öãºu±


1441 
ã°
 
ax
, 0200
h
 ; 
	$DOWN_COMPLETE
 (
TX
 
DMA
, 
bô
 9)

1442 
jnz
 .
our_öãºu±


1443 
ã°
 
ax
, 0400
h
 ; 
	$UP_COMPLETE
 (
RX
 
DMA
, 
bô
 10)

1444 
jnz
 .
our_öãºu±


1446 ; 
Check
 
öãºu±
 
ªque°
 
bô


1447 
ã°
 
ax
, 0040
h
 ; 
INT_REQ


1448 
jnz
 .
our_öãºu±


1450 .
nŸ_ours
:

1451 ; 
NŸ
 
our
 
öãºu±


1452 
°c
 ; 
Së
 
ˇºy
 = 
nŸ
 
ours


1453 
jmp
 .
exô


1455 .
our_öãºu±
:

1456 ; 
This
 
is
 
our
 
öãºu±


1457 
˛c
 ; 
CÀ¨
 
ˇºy
 = 
ours


1459 .
exô
:

1460 
p›
 
dx


1461 
p›
 
bx


1462 
p›
 
ax


1463 
ªt


1464 
check_3c515_öãºu±_sour˚
 
ENDP


1466 .
check_dma
:

1467 ; 
Check
 
DMA
 
°©us
 DMA 
com∂ëi⁄
 
öãºu±s


1468 ; 
This
 
is
 
•ecific
 
to
 3C515-
TX
 
bus
 
ma°îög
 
ˇ∑bûôy


1469 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£


1470 
add
 
dx
, 20
h
 ; 
DMA_STATUS
 

1471 
ö
 
Æ
, 
dx
 ; 
Ród
 
DMA
 
°©us


1472 
ã°
 
Æ
, 03
h
 ; 
DMA
 
com∂ëi⁄
 
bôs


1473 
jnz
 .
is_ours
 ; 
DMA
 
öãºu±
 
is
 
ours


1475 ; 
NŸ
 
our
 
öãºu±


1476 
°c


1477 
jmp
 .
vÆid©ed_3c515


1479 .
is_ours
:

1480 
˛c
 ; 
CÀ¨
 
ˇºy
 = 
our
 
öãºu±


1482 .
vÆid©ed_3c515
:

1483 
p›
 
cx


1484 
p›
 
bx


1485 
p›
 
dx


1486 
ªt


1487 
check_3c515_öãºu±_sour˚
 
ENDP


1489 
acknowÀdge_3c515_öãºu±
 
PROC


1490 ; 
AcknowÀdge
 
the
 3C515 
h¨dw¨e
 
öãºu±
 
wôh
 
DMA
 
h™dlög


1491 ; 
This
 
˛órs
 
the
 
öãºu±
 
c⁄dôi⁄
 
ö
Åhê
NIC


1492 
push
 
ax


1493 
push
 
bx


1494 
push
 
dx


1495 
push
 
cx


1497 ; 
Gë
 
the
 
I
/
O
 
ba£
 3C515 (
assumög
 
NIC
 1)

1498 
mov
 
bx
, 1

1499 
shl
 
bx
, 1 ; 
W‹d
 
off£t


1500 
mov
 
dx
, [
hw_io_ba£s
 + 
bx
] ; 
Gë
 
I
/
O
 
ba£


1501 
ã°
 
dx
, dx

1502 
jz
 .
no_ack_√eded
 ; 
No
 
I
/
O
 
ba£
 = 
nŸhög
 
to
 
ack


1504 ; 
Ród
 
cuºít
 
°©us
 
to
 
£e
 
wh©
 
√eds
 
acknowÀdgög


1505 
push
 
dx


1506 
add
 
dx
, 0E
h
 ; 
Sètus
 

1507 
ö
 
ax
, 
dx


1508 
mov
 
cx
, 
ax
 ; 
Save
 
°©us
 
ACK


1509 
p›
 
dx


1511 ; 
AcknowÀdge
 
öãºu±
 
usög
 
ACK_INTR
 
comm™d


1512 ; 
Buûd
 
acknowÀdgmít
 
mask
 
ba£d
 
⁄
 
a˘ive
 
öãºu±
 
sour˚s


1513 
mov
 
ax
, 0 ; 
Sèπ
 
wôh
 
no
 
ACK
 
bôs


1515 ; 
Check
 
™d
 
acknowÀdge
 
°™d¨d
 
öãºu±s


1516 
ã°
 
cx
, 0004
h
 ; 
TX_COMPLETE


1517 
jz
 .
no_tx_com∂ëe


1518 
‹
 
ax
, 0004
h
 ; 
Add
 
TX_COMPLETE
 
to
 
ACK


1519 .
no_tx_com∂ëe
:

1521 
ã°
 
cx
, 0010
h
 ; 
RX_COMPLETE


1522 
jz
 .
no_rx_com∂ëe


1523 
‹
 
ax
, 0010
h
 ; 
Add
 
RX_COMPLETE
 
to
 
ACK


1524 .
no_rx_com∂ëe
:

1526 
ã°
 
cx
, 0002
h
 ; 
ADAPTER_FAILURE


1527 
jz
 .
no_ad≠ãr_Áûuª


1528 
‹
 
ax
, 0002
h
 ; 
Add
 
ADAPTER_FAILURE
 
to
 
ACK


1529 .
no_ad≠ãr_Áûuª
:

1531 
ã°
 
cx
, 0080
h
 ; 
STATS_FULL


1532 
jz
 .
no_°©s_fuŒ


1533 
‹
 
ax
, 0080
h
 ; 
Add
 
STATS_FULL
 
to
 
ACK


1534 .
no_°©s_fuŒ
:

1536 ; 
Check
 
™d
 
acknowÀdge
 
DMA
 
	`öãºu±s
 (3C515-
TX
 
•ecific
)

1537 
ã°
 
cx
, 0100
h
 ; 
DMA_DONE


1538 
jz
 .
no_dma_d⁄e


1539 
‹
 
ax
, 0100
h
 ; 
Add
 
DMA_DONE
 
to
 
ACK


1540 .
no_dma_d⁄e
:

1542 
ã°
 
cx
, 0200
h
 ; 
	$DOWN_COMPLETE
 (
TX
 
DMA
)

1543 
jz
 .
no_down_com∂ëe


1544 
‹
 
ax
, 0200
h
 ; 
Add
 
DOWN_COMPLETE
 
to
 
ACK


1545 .
no_down_com∂ëe
:

1547 
ã°
 
cx
, 0400
h
 ; 
	$UP_COMPLETE
 (
RX
 
DMA
)

1548 
jz
 .
no_up_com∂ëe


1549 
‹
 
ax
, 0400
h
 ; 
Add
 
UP_COMPLETE
 
to
 
ACK


1550 .
no_up_com∂ëe
:

1552 ; 
Síd
 
acknowÀdgmít
 
comm™d
 
we
 
have
 
bôs
 
to
 
acknowÀdge


1553 
ã°
 
ax
,áx

1554 
jz
 .
no_ack_√eded
 ; 
NŸhög
 
to
 
acknowÀdge


1556 ; 
U£
 
ACK_INTR
 
	`comm™d
 (13 << 11Ë
wôh
 
öãºu±
 
bôs


1557 
push
 
dx


1558 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1559 
‹
 
ax
, (13 << 11Ë; 
ACK_INTR
 
comm™d


1560 
out
 
dx
, 
ax
 ; 
Síd
 
acknowÀdgmít


1561 
p›
 
dx


1563 ; 
F‹
 
DMA
 
öãºu±s
, 
we
 
may
 
√ed
 
addôi⁄Æ
 
h™dlög


1564 
ã°
 
cx
, 0700
h
 ; 
Any
 
DMA
 
	$bôs
 (8, 9, 10)

1565 
jz
 .
no_dma_h™dlög


1567 ; 
Addôi⁄Æ
 
DMA
 
˛ónup
 
√eded


1568 ; 
Sñe˘
 
wödow
 7 
DMA
 
c⁄åﬁ


1569 
push
 
dx


1570 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1571 
mov
 
ax
, (1 << 11Ë| 7 ; 
Sñe˘
 
wödow
 7

1572 
out
 
dx
, 
ax


1573 
p›
 
dx


1575 ; 
Ród
 
DMA
 
°©us
 
™d
 
˛ór
 
™y
 
≥ndög
 DMA 
›î©i⁄s


1576 ; 
CÀ™
 
up
 
DMA
 
des¸ùt‹s
 
™d
 
‰ì
 
buf„rs


1577 
push
 
si


1578 
push
 
di


1579 
push
 
ax


1581 ; 
St›
 
DMA
 
ígöe


1582 
add
 
dx
, 0x400 ; 
Wödow
 7 
DMA
 
c⁄åﬁ
 
ba£


1583 
mov
 
ax
, 0x5000 ; 
CMD_DOWN_STALL


1584 
out
 
dx
, 
ax


1585 
ˇŒ
 
io_dñay


1587 ; 
CÀ¨
 
des¸ùt‹
 
poöãrs


1588 
add
 
dx
, 4 ; 
Down
 
li°
 
poöãr
 

1589 
x‹
 
ax
,áx

1590 
out
 
dx
, 
ax
 ; 
CÀ¨
 
low
 
w‹d


1591 
add
 
dx
, 2

1592 
out
 
dx
, 
ax
 ; 
CÀ¨
 
high
 
w‹d


1594 ; 
Fªe
 
™y
 
≥ndög
 
DMA
 
buf„rs


1595 
ˇŒ
 
‰ì_dma_buf„rs


1597 ; 
Re
-
íabÀ
 
DMA
 
√eded


1598 
sub
 
dx
, 6 ; 
Back
 
to
 
c⁄åﬁ
 

1599 
mov
 
ax
, 0x5002 ; 
CMD_DOWN_UNSTALL


1600 
out
 
dx
, 
ax


1602 
p›
 
ax


1603 
p›
 
di


1604 
p›
 
si


1606 ; 
Rëu∫
 
to
 
wödow
 1 
n‹mÆ
 
›î©i⁄


1607 
push
 
dx


1608 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1609 
mov
 
ax
, (1 << 11Ë| 1 ; 
Sñe˘
 
wödow
 1

1610 
out
 
dx
, 
ax


1611 
p›
 
dx


1613 .
no_dma_h™dlög
:

1614 .
no_ack_√eded
:

1615 
p›
 
cx


1616 
p›
 
dx


1617 
p›
 
bx


1618 
p›
 
ax


1619 
ªt


1620 
acknowÀdge_3c515_öãºu±
 
ENDP


1622 
£nd_eoi_f‹_3c515
 
PROC


1623 ; 
Síd
 
End
-
Of
-
I¡îru±
 
to
 
the
 
≠¥›rüã
 
PIC
 
ba£d
 
⁄
 
a˘uÆ
 
IRQ
 
assignmít


1624 ; 
This
 
fixes
 
the
 
¸ôiˇl
 
g≠
 
idítifõd
 
ö
 
de„nsive
 
¥ogømmög
 
ªvõw


1625 
push
 
ax


1626 
push
 
bx


1627 
push
 
dx


1629 ; 
Gë
 
the
 
a˘uÆ
 
IRQ
 
numbî
 3C515 (
assumög
 
ô
's NIC 1)

1630 
mov
 
bl
, 
byã
 
±r
 [
nic_úq_numbîs
+1] ; 
Gë
 
IRQ
 
NIC
 1

1631 
cmp
 
bl
, 
IRQ_NONE


1632 
je
 .
no_úq_assig√d
 ; 
Skù
 
EOI
 
no
 
IRQ
 
assig√d


1634 ; 
Check
 
this
 
is
 
a
 
¶ave
 
PIC
 
	`IRQ
 (8-15)

1635 
cmp
 
bl
, 8

1636 
jl
 .
ma°î_pic_⁄ly
 ; 
IRQ
 0-7: 
ma°î
 
PIC
 
⁄ly


1638 ; 
IRQ
 8-15: 
Síd
 
EOI
 
to
 
¶ave
 
PIC
 
fú°
, 
thí
 
ma°î
 PIC

1639 ; 
This
 
is
 
the
 
c‹ª˘
 
£quí˚
 
¶ave
 
IRQs


1640 
mov
 
Æ
, 
PIC_EOI


1641 
mov
 
dx
, 
PIC2_COMMAND


1642 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
¶ave
 
PIC


1644 ; 
Now
 
£nd
 
EOI
 
to
 
ma°î
 
PIC


1645 
mov
 
dx
, 
PIC1_COMMAND


1646 
out
 
dx
, 
Æ
 ; 
EOI
 
to
 
ma°î
 
PIC


1647 
jmp
 .
eoi_com∂ëe


1649 .
ma°î_pic_⁄ly
:

1650 ; 
IRQ
 0-7: 
Síd
 
EOI
 
to
 
ma°î
 
PIC
 
⁄ly


1651 
mov
 
Æ
, 
PIC_EOI


1652 
mov
 
dx
, 
PIC1_COMMAND


1653 
out
 
dx
, 
Æ


1655 .
eoi_com∂ëe
:

1656 .
no_úq_assig√d
:

1657 
p›
 
dx


1658 
p›
 
bx


1659 
p›
 
ax


1660 
ªt


1661 
£nd_eoi_f‹_3c515
 
ENDP


1663 
¥o˚ss_3c515_∑ckës_immedüã
 
PROC


1664 ; 
Emîgícy
 
∑ckë
 
¥o˚ssög
 
whí
 
de„ºed
 
queue
 
is
 
fuŒ


1665 ; 
This
 
is
 
ˇŒed
 
dúe˘ly
 
‰om
 
ISR
 
whí
 
we
 
ˇn
't deferÅhe work

1666 
push
 
ax


1667 
push
 
bx


1668 
push
 
cx


1670 ; 
CÆl
 
the
 
‹igöÆ
 
h¨dw¨e
 
h™dÀr
 
as
 
ÁŒback


1671 
ˇŒ
 
h¨dw¨e_h™dÀ_3c515_úq


1673 
p›
 
cx


1674 
p›
 
bx


1675 
p›
 
ax


1676 
ªt


1677 
¥o˚ss_3c515_∑ckës_immedüã
 
ENDP


1679 
PUBLIC
 
¥o˚ss_3c515_∑ckës


1680 
¥o˚ss_3c515_∑ckës
 
PROC


1681 ; 
This
 
fun˘i⁄
 
is
 
ˇŒed
 
‰om
 
the
 
INT
 28
h
 
h™dÀr
 
whí
 
DOS
 i†
idÀ


1682 ; 
It
 
ˇn
 
ß„ly
 
ˇŒ
 
DOS
 
fun˘i⁄s
 
™d
 dÿ
hóvy
 
¥o˚ssög


1683 
push
 
ax


1684 
push
 
bx


1685 
push
 
cx


1686 
push
 
dx


1687 
push
 
si


1688 
push
 
di


1689 
push
 
ds


1690 
push
 
es


1692 ; 
Së
 
up
 
our
 
d©a
 
£gmít


1693 
mov
 
ax
, 
_DATA


1694 
mov
 
ds
, 
ax


1695 
ASSUME
 
DS
:
_DATA


1697 ; 
Pro˚ss
 3C515-
TX
 
∑ckës
 
wôh
 
DMA
 
h™dlög


1698 ; 
CÆÀd
 
‰om
 
DOS
 
idÀ
 
c⁄ãxt
 - 
ß„
 
to
 dÿ
hóvy
 
¥o˚ssög


1699 
push
 
ax


1700 
push
 
bx


1701 
push
 
cx


1702 
push
 
dx


1704 ; 
Sñe˘
 
≠¥›rüã
 
wödow
 3C515-
TX


1705 
mov
 
dx
, 320
h
 ; 3C515-
TX
 
ba£
 
I
/
O
 
addªss


1706 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1707 
mov
 
ax
, 7000
h
 ; 
Sñe˘
 
Wödow
 7 (
Dügno°ics
)

1708 
out
 
dx
, 
ax


1710 ; 
Check
 
DMA
 
°©us
 
com∂ëed
 
å™s„rs


1711 
sub
 
dx
, 0E
h
 ; 
Back
 
to
 
ba£


1712 
add
 
dx
, 20
h
 ; 
DMA_STATUS
 

1713 
ö
 
Æ
, 
dx
 ; 
Ród
 
DMA
 
°©us


1715 ; 
Pro˚ss
 
RX
 
DMA
 
com∂ëi⁄s


1716 
ã°
 
Æ
, 01
h
 ; 
RX_DMA_COMPLETE


1717 
jz
 .
check_tx_dma


1719 ; 
Pro˚ss
 
ª˚ived
 
∑ckës
 
‰om
 
DMA
 
rög


1720 
ˇŒ
 
¥o˚ss_3c515_rx_dma_rög


1722 .
check_tx_dma
:

1723 
ã°
 
Æ
, 02
h
 ; 
TX_DMA_COMPLETE


1724 
jz
 .
check_fifo_∑ckës


1726 ; 
Pro˚ss
 
å™smôãd
 
∑ckë
 
com∂ëi⁄s


1727 
ˇŒ
 
¥o˚ss_3c515_tx_com∂ëi⁄s


1729 .
check_fifo_∑ckës
:

1730 ; 
Also
 
check
 
n⁄
-
DMA
 
	$∑ckës
 (
FIFO
 
mode
)

1731 
sub
 
dx
, 20
h
 ; 
Back
 
to
 
ba£


1732 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1733 
mov
 
ax
, 1000
h
 ; 
Sñe˘
 
Wödow
 1 (
O≥øtög
)

1734 
out
 
dx
, 
ax


1736 ; 
Check
 
RX
 
°©us
 
ö
 
›î©ög
 
wödow


1737 
sub
 
dx
, 0E
h
 ; 
Back
 
to
 
ba£


1738 
add
 
dx
, 08
h
 ; 
RX_STATUS
 

1739 
ö
 
ax
, 
dx
 ; 
Ród
 
RX
 
°©us


1741 ; 
Pro˚ss
 
up
 
to
 10 
∑ckës
 
≥r
 
	$ˇŒ
 (
öãºu±
 
b©chög
)

1742 
mov
 
cx
, 10 ; 
Maximum
 
∑ckës
 
to
 
¥o˚ss


1744 .
fifo_∑ckë_lo›
:

1745 
ã°
 
ax
, 8000
h
 ; 
Check
 
RX_INCOMPLETE


1746 
jnz
 .
fifo_d⁄e
 ; 
No
 
m‹e
 
FIFO
 
∑ckës


1748 ; 
Gë
 
∑ckë
 
size
 
‰om
 
°©us


1749 
™d
 
ax
, 1FFF
h
 ; 
Mask
 
to
 
gë
 
∑ckë
 
size


1750 
cmp
 
ax
, 60 ; 
Möimum
 
‰ame
 
size


1751 
jb
 .
skù_fifo_∑ckë


1752 
cmp
 
ax
, 1514 ; 
Maximum
 
‰ame
 
size


1753 
ja
 .
skù_fifo_∑ckë


1755 ; 
Ród
 
∑ckë
 
‰om
 
	`FIFO
 (
simû¨
 
to
 3C509B 
but
 
wôh
 3C515-
TX
 
•ecifics
)

1756 
push
 
cx


1757 
push
 
ax
 ; 
Save
 
∑ckë
 
size


1759 ; 
U£
 32-
bô
 
å™s„rs
 
	`avaûabÀ
 (3C515-
TX
 
suµ‹ts
 
this
)

1760 
mov
 
bx
, 
OFFSET
 
ãmp_rx_buf„r


1761 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£


1762 
add
 
dx
, 00
h
 ; 
	`DATA_REGISTER
 (32-
bô
 
ˇ∑bÀ
)

1764 
p›
 
cx
 ; 
Re°‹e
 
∑ckë
 
size


1765 
push
 
cx
 ; 
Save
 
œãr


1767 ; 
U£
 32-
bô
 
å™s„rs
 
efficõncy


1768 
shr
 
cx
, 2 ; 
C⁄vît
 
byãs
 
to
 
dw‹ds


1770 .
ªad_dw‹d_lo›
:

1771 
ö
 
óx
, 
dx
 ; 
Ród
 
dw‹d
 
‰om
 
FIFO


1772 
mov
 [
bx
], 
óx
 ; 
St‹e
 
ö
 
buf„r


1773 
add
 
bx
, 4 ; 
Adv™˚
 
buf„r
 
poöãr


1774 
lo›
 .
ªad_dw‹d_lo›


1776 ; 
H™dÀ
 
ªmaöög
 
byãs


1777 
p›
 
ax
 ; 
Re°‹e
 
∑ckë
 
size


1778 
™d
 
ax
, 3 ; 
Gë
 
ªmaödî
 
byãs


1779 
jz
 .
dw‹d_Æig√d


1781 
ö
 
óx
, 
dx
 ; 
Ród
 
föÆ
 
dw‹d


1782 
mov
 
cx
, 
ax
 ; 
Byã
 
cou¡
 
to
 
CX


1784 .
byã_c›y
:

1785 
mov
 [
bx
], 
Æ
 ; 
St‹e
 
byã


1786 
shr
 
óx
, 8 ; 
Next
 
byã


1787 
öc
 
bx


1788 
dec
 
cx


1789 
jnz
 .
byã_c›y


1791 .
dw‹d_Æig√d
:

1792 ; 
CÆl
 
∑ckë
 
ª˚ive
 
h™dÀr


1793 
mov
 
ax
, 1 ; 
NIC
 
	`ödex
 (3C515-
TX
 = 1)

1794 
mov
 
bx
, 
OFFSET
 
ãmp_rx_buf„r


1795 
ˇŒ
 
∑ckë_›s_ª˚ive


1797 ; 
Upd©e
 
°©i°ics


1798 
öc
 
w‹d
 
±r
 [
úq_cou¡
+2] ; 
NIC
 1 
∑ckë
 
cou¡


1800 
p›
 
cx
 ; 
Re°‹e
 
lo›
 
cou¡î


1801 
dec
 
cx


1802 
jnz
 .
fifo_∑ckë_lo›


1804 
jmp
 .
fifo_d⁄e


1806 .
skù_fifo_∑ckë
:

1807 ; 
Disˇrd
 
mÆf‹med
 
FIFO
 
∑ckë


1808 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£


1809 
add
 
dx
, 0E
h
 ; 
Comm™d
 

1810 
mov
 
ax
, 4000
h
 ; 
RX_DISCARD
 
comm™d


1811 
out
 
dx
, 
ax


1813 
add
 
dx
, 08
h
-0Eh ; 
Back
 
to
 
RX_STATUS


1814 
lo›
 .
fifo_∑ckë_lo›


1816 .
fifo_d⁄e
:

1817 
p›
 
dx


1818 
p›
 
cx


1819 
p›
 
bx


1820 
p›
 
ax


1822 
p›
 
es


1823 
p›
 
ds


1824 
p›
 
di


1825 
p›
 
si


1826 
p›
 
dx


1827 
p›
 
cx


1828 
p›
 
bx


1829 
p›
 
ax


1830 
ªt


1831 
¥o˚ss_3c515_∑ckës
 
ENDP


1834 ; 
nic_comm⁄_úq_h™dÀr
 - 
Comm⁄
 
öãºu±
 
¥o˚ssög


1835 ; 
CÆÀd
 
by
 
bŸh
 
NIC
-
•ecific
 
h™dÀrs
 
to
 
≥rf‹m
 
comm⁄
 
èsks


1837 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex
, 
BX
 = 
öãºu±
 
°©us
 
Êags


1838 ; 
Ouçut
: 
AX
 = 0 
h™dÀd
, 
n⁄
-
zîo
 
•urious


1839 ; 
U£s
: 
AŒ
 
ªgi°îs


1841 
nic_comm⁄_úq_h™dÀr
 
PROC


1842 
push
 
bp


1843 
mov
 
bp
, 
•


1844 
push
 
cx


1845 
push
 
dx


1846 
push
 
si


1847 
push
 
di


1849 ; 
VÆid©e
 
öãºu±
 
°©us
, 
h™dÀ
 
comm⁄
 i¡îru± 
c⁄dôi⁄s
, 
™d
 
di•©ch
 
to
 
∑ckë
 
¥o˚ssög


1851 ; 
Check
 
ª˚ive
 
öãºu±


1852 
ã°
 
bl
, 
IRQ_RX_COMPLETE


1853 
jz
 .
no_rx


1855 ; 
H™dÀ
 
∑ckë
 
ª˚±i⁄


1856 
ˇŒ
 
∑ckë_›s_ª˚ive


1857 ; 
Check
  
vÆue
 
™d
 
h™dÀ
 
îr‹s


1858 
ã°
 
ax
,áx

1859 
jz
 .
rx_suc˚ss


1861 ; 
H™dÀ
 
ª˚ive
 
îr‹


1862 
öc
 
w‹d
 
±r
 [
rx_îr‹_cou¡
]

1863 
push
 
ax


1864 
ˇŒ
 
log_rx_îr‹


1865 
p›
 
ax


1866 
jmp
 .
no_rx


1868 .
rx_suc˚ss
:

1869 
öc
 
w‹d
 
±r
 [
rx_∑ckë_cou¡
]

1871 .
no_rx
:

1872 ; 
Check
 
å™smô
 
com∂ëi⁄


1873 
ã°
 
bl
, 
IRQ_TX_COMPLETE


1874 
jz
 .
no_tx


1876 ; 
H™dÀ
 
å™smô
 
com∂ëi⁄


1877 
push
 
si


1878 
push
 
di


1879 
push
 
dx


1881 ; 
Gë
 
TX
 
°©us
 
‰om
 
h¨dw¨e


1882 
mov
 
dx
, [
cuºít_ioba£
]

1883 
ã°
 
dx
, dx

1884 
jz
 .
no_ioba£_tx


1885 
add
 
dx
, 0x0B ; 
TX_STATUS
 
off£t


1886 
ö
 
Æ
, 
dx


1888 ; 
Check
 
îr‹s


1889 
ã°
 
Æ
, 0xF8 ; 
Eº‹
 
	`bôs
 (
bôs
 3-7)

1890 
jz
 .
tx_suc˚ss


1892 ; 
H™dÀ
 
TX
 
îr‹


1893 
öc
 
w‹d
 
±r
 [
tx_îr‹_cou¡
]

1894 
push
 
ax


1895 
ˇŒ
 
h™dÀ_tx_îr‹


1896 
p›
 
ax


1897 
jmp
 .
tx_d⁄e


1899 .
tx_suc˚ss
:

1900 ; 
Fªe
 
å™smô
 
buf„r


1901 
mov
 
si
, [
cuºít_tx_buf„r
]

1902 
ã°
 
si
, si

1903 
jz
 .
no_buf„r_to_‰ì


1904 
ˇŒ
 
‰ì_tx_buf„r


1905 
mov
 
w‹d
 
±r
 [
cuºít_tx_buf„r
], 0

1907 .
no_buf„r_to_‰ì
:

1908 ; 
Upd©e
 
°©i°ics


1909 
öc
 
w‹d
 
±r
 [
tx_∑ckë_cou¡
]

1911 .
tx_d⁄e
:

1912 ; 
CÀ¨
 
TX
 
°©us


1913 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
to
 
˛ór


1915 .
no_ioba£_tx
:

1916 
p›
 
dx


1917 
p›
 
di


1918 
p›
 
si


1920 .
no_tx
:

1921 ; 
Check
 
îr‹s


1922 
ã°
 
bl
, 
IRQ_RX_ERROR


1923 
jz
 .
no_rx_îr‹


1925 ; 
H™dÀ
 
ª˚ive
 
îr‹s


1926 
push
 
ax


1927 
push
 
dx


1929 ; 
Gë
 
dëaûed
 
îr‹
 
°©us


1930 
mov
 
dx
, [
cuºít_ioba£
]

1931 
ã°
 
dx
, dx

1932 
jz
 .
no_ioba£_rx_îr


1933 
add
 
dx
, 0x08 ; 
RX_STATUS
 

1934 
ö
 
ax
, 
dx


1936 ; 
Cœssify
 
îr‹
 
ty≥


1937 
ã°
 
ax
, 0x4000 ; 
GíîÆ
 
îr‹
 
bô


1938 
jz
 .
no_rx_îr


1940 ; 
Upd©e
 
îr‹
 
cou¡îs
 
ba£d
 
⁄
 
ty≥


1941 
ã°
 
ax
, 0x0800 ; 
Ovîsize
 
∑ckë


1942 
jz
 .
nŸ_ovîsize


1943 
öc
 
w‹d
 
±r
 [
rx_ovîsize_îr‹s
]

1944 .
nŸ_ovîsize
:

1945 
ã°
 
ax
, 0x2800 ; 
CRC
 
îr‹


1946 
jz
 .
nŸ_¸c


1947 
öc
 
w‹d
 
±r
 [
rx_¸c_îr‹s
]

1948 .
nŸ_¸c
:

1949 
ã°
 
ax
, 0x2000 ; 
Fømög
 
îr‹


1950 
jz
 .
nŸ_‰amög


1951 
öc
 
w‹d
 
±r
 [
rx_‰amög_îr‹s
]

1952 .
nŸ_‰amög
:

1954 ; 
Log
 
îr‹
 
debuggög


1955 
push
 
ax


1956 
ˇŒ
 
log_rx_îr‹_dëaûs


1957 
p›
 
ax


1959 ; 
Disˇrd
 
bad
 
∑ckë


1960 
mov
 
dx
, [
cuºít_ioba£
]

1961 
add
 
dx
, 0x0E ; 
Comm™d
 

1962 
mov
 
ax
, 0x4000 ; 
RX_DISCARD
 
comm™d


1963 
out
 
dx
, 
ax


1965 .
no_rx_îr
:

1966 .
no_ioba£_rx_îr
:

1967 
p›
 
dx


1968 
p›
 
ax


1970 .
no_rx_îr‹
:

1971 
ã°
 
bl
, 
IRQ_TX_ERROR


1972 
jz
 .
no_tx_îr‹


1974 ; 
H™dÀ
 
å™smô
 
îr‹s


1975 
push
 
ax


1976 
push
 
bx


1977 
push
 
cx


1978 
push
 
dx


1980 ; 
Gë
 
TX
 
îr‹
 
dëaûs


1981 
mov
 
dx
, [
cuºít_ioba£
]

1982 
ã°
 
dx
, dx

1983 
jz
 .
no_ioba£_tx_îr


1984 
add
 
dx
, 0x0B ; 
TX_STATUS
 

1985 
ö
 
Æ
, 
dx


1986 
mov
 
bl
, 
Æ
 ; 
Save
 
°©us


1988 ; 
Cœssify
 
îr‹


1989 
ã°
 
bl
, 0x80 ; 
Max
 
cﬁlisi⁄s


1990 
jz
 .
nŸ_max_cﬁl


1991 
öc
 
w‹d
 
±r
 [
tx_max_cﬁl_îr‹s
]

1992 
mov
 
˛
, 1 ; 
Së
 
ªåy
 
Êag


1993 
jmp
 .
check_ªåy


1995 .
nŸ_max_cﬁl
:

1996 
ã°
 
bl
, 0x20 ; 
Undîrun


1997 
jz
 .
nŸ_undîrun


1998 
öc
 
w‹d
 
±r
 [
tx_undîrun_îr‹s
]

1999 
mov
 
˛
, 0 ; 
D⁄
'tÑetry underrun

2000 
jmp
 .
check_ªåy


2002 .
nŸ_undîrun
:

2003 
ã°
 
bl
, 0x40 ; 
Jabbî


2004 
jz
 .
nŸ_jabbî


2005 
öc
 
w‹d
 
±r
 [
tx_jabbî_îr‹s
]

2006 
mov
 
˛
, 0 ; 
D⁄
'tÑetry jabber

2008 .
nŸ_jabbî
:

2009 
mov
 
˛
, 0 ; 
DeÁu…
: 
no
 
ªåy


2011 .
check_ªåy
:

2012 ; 
Rëry
 
å™smissi⁄
 
≠¥›rüã


2013 
ã°
 
˛
, cl

2014 
jz
 .
no_ªåy


2016 ; 
Check
 
ªåy
 
cou¡


2017 
mov
 
Æ
, [
cuºít_tx_ªåõs
]

2018 
cmp
 
Æ
, 3 ; 
Max
 
ªåõs


2019 
j´
 .
no_ªåy


2021 ; 
Rëry
 
å™smissi⁄


2022 
öc
 
byã
 
±r
 [
cuºít_tx_ªåõs
]

2023 
ˇŒ
 
ªåy_å™smissi⁄


2024 
jmp
 .
tx_îr‹_d⁄e


2026 .
no_ªåy
:

2027 ; 
Fªe
 
Áûed
 
TX
 
buf„r


2028 
ˇŒ
 
‰ì_cuºít_tx_buf„r


2029 
mov
 
byã
 
±r
 [
cuºít_tx_ªåõs
], 0

2031 .
tx_îr‹_d⁄e
:

2032 ; 
CÀ¨
 
TX
 
°©us


2033 
mov
 
dx
, [
cuºít_ioba£
]

2034 
add
 
dx
, 0x0B

2035 
out
 
dx
, 
bl
 ; 
Wrôe
 
°©us
 
to
 
˛ór


2037 .
no_ioba£_tx_îr
:

2038 
p›
 
dx


2039 
p›
 
cx


2040 
p›
 
bx


2041 
p›
 
ax


2043 .
no_tx_îr‹
:

2044 ; 
Suc˚ss
 - 
öãºu±
 
h™dÀd


2045 
mov
 
ax
, 0

2047 
p›
 
di


2048 
p›
 
si


2049 
p›
 
dx


2050 
p›
 
cx


2051 
p›
 
bp


2052 
ªt


2053 
nic_comm⁄_úq_h™dÀr
 
ENDP


2056 ; 
nic_£t_ª˚ive_mode
 - 
Së
 
NIC
 
ª˚ive
 
mode


2058 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex
, 
BL
 = 
ª˚ive
 
mode


2059 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


2060 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


2062 
nic_£t_ª˚ive_mode
 
PROC


2063 
push
 
bp


2064 
mov
 
bp
, 
•


2065 
push
 
cx


2066 
push
 
dx


2068 ; 
VÆid©e
 
∑ømëîs
 
™d
 
upd©e
 
öã∫Æ
 
°©e


2070 ; 
VÆid©e
 
NIC
 
ödex


2071 
cmp
 
Æ
, 
MAX_NICS


2072 
j´
 .
övÆid_nic


2074 ; 
VÆid©e
 
ª˚ive
 
mode


2075 
cmp
 
bl
, 1

2076 
jb
 .
övÆid_mode


2077 
cmp
 
bl
, 6

2078 
ja
 .
övÆid_mode


2080 ; 
St‹e
 
√w
 
ª˚ive
 
mode


2081 
mov
 [
cuºít_ª˚ive_mode
], 
bl


2083 ; 
Progøm
 
NIC
 
h¨dw¨e
 
ªgi°îs
 
ª˚ive
 
mode


2084 
push
 
si


2085 
push
 
di


2087 ; 
Gë
 
I
/
O
 
ba£
 
this
 
NIC


2088 
movzx
 
si
, 
Æ
 ; 
NIC
 
ödex


2089 
shl
 
si
, 1 ; 
W‹d
 
off£t


2090 
mov
 
di
, 
OFFSET
 
nic_ioba£_èbÀ


2091 
mov
 
dx
, [
di
 + 
si
] ; 
Gë
 
I
/
O
 
ba£


2092 
ã°
 
dx
, dx

2093 
jz
 .
no_ioba£_mode


2095 ; 
Sñe˘
 
Wödow
 1 
RX
 
c⁄åﬁ


2096 
add
 
dx
, 0x0E ; 
Comm™d
 

2097 
mov
 
ax
, 0x0801 ; 
SELECT_WINDOW
 | 1

2098 
out
 
dx
, 
ax


2099 
ˇŒ
 
io_dñay


2101 ; 
Së
 
RX
 
fûãr
 
ba£d
 
⁄
 
mode


2102 
mov
 
dx
, [
di
 + 
si
] ; 
Re°‹e
 
ba£


2103 
add
 
dx
, 0x0E ; 
Comm™d
 

2104 
mov
 
ax
, 0x0800 ; 
SET_RX_FILTER
 
ba£
 
comm™d


2106 ; 
C⁄figuª
 
ba£d
 
⁄
 
mode


2107 
cmp
 
bl
, 1 ; 
Mode
 1: 
Off


2108 
je
 .
mode_off


2109 
cmp
 
bl
, 2 ; 
Mode
 2: 
	$Dúe˘
 (
°©i⁄
 
⁄ly
)

2110 
je
 .
mode_dúe˘


2111 
cmp
 
bl
, 3 ; 
Mode
 3: 
Brﬂdˇ°


2112 
je
 .
mode_brﬂdˇ°


2113 
cmp
 
bl
, 4 ; 
Mode
 4: 
Mu…iˇ°


2114 
je
 .
mode_mu…iˇ°


2115 
cmp
 
bl
, 5 ; 
Mode
 5: 
AŒ
 
mu…iˇ°


2116 
je
 .
mode_Æl_mu…i


2117 
cmp
 
bl
, 6 ; 
Mode
 6: 
Promiscuous


2118 
je
 .
mode_¥omiscuous


2119 
jmp
 .
övÆid_mode
 ; 
Should
 
have
 
bìn
 
ˇught
 
óæõr


2121 .
mode_off
:

2122 
‹
 
ax
, 0x00 ; 
No
 
∑ckës


2123 
jmp
 .
£t_fûãr


2125 .
mode_dúe˘
:

2126 
‹
 
ax
, 0x01 ; 
Sèti⁄
 
addªss
 
⁄ly


2127 
jmp
 .
£t_fûãr


2129 .
mode_brﬂdˇ°
:

2130 
‹
 
ax
, 0x05 ; 
Sèti⁄
 + 
brﬂdˇ°


2131 
jmp
 .
£t_fûãr


2133 .
mode_mu…iˇ°
:

2134 
‹
 
ax
, 0x03 ; 
Sèti⁄
 + 
mu…iˇ°


2135 
jmp
 .
£t_fûãr


2137 .
mode_Æl_mu…i
:

2138 
‹
 
ax
, 0x07 ; 
Sèti⁄
 + 
Æl
 
mu…iˇ°


2139 
jmp
 .
£t_fûãr


2141 .
mode_¥omiscuous
:

2142 
‹
 
ax
, 0x0F ; 
AŒ
 
∑ckës


2144 .
£t_fûãr
:

2145 
out
 
dx
, 
ax
 ; 
Së
 
the
 
fûãr


2146 
ˇŒ
 
io_dñay


2148 .
no_ioba£_mode
:

2149 
p›
 
di


2150 
p›
 
si


2152 ; 
Suc˚ss


2153 
mov
 
ax
, 0

2154 
jmp
 .
exô


2156 .
övÆid_nic
:

2157 
mov
 
ax
, 1

2158 
jmp
 .
exô


2160 .
övÆid_mode
:

2161 
mov
 
ax
, 2

2162 
jmp
 .
exô


2164 .
exô
:

2165 
p›
 
dx


2166 
p›
 
cx


2167 
p›
 
bp


2168 
ªt


2169 
nic_£t_ª˚ive_mode
 
ENDP


2172 ; 
gë_úq_°©s
 - 
Gë
 
öãºu±
 
°©i°ics


2174 ; 
I≈ut
: 
ES
:
DI
 = 
buf„r
 
to
 
ª˚ive
 
°©i°ics


2175 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


2176 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI
, 
DI


2178 
gë_úq_°©s
 
PROC


2179 
push
 
bp


2180 
mov
 
bp
, 
•


2181 
push
 
bx


2182 
push
 
cx


2183 
push
 
si


2185 ; 
VÆid©e
 
buf„r
 
poöãr
 
™d
 
c›y
 
°©i°ics


2186 
push
 
ds


2187 
push
 
es


2188 
push
 
di


2190 ; 
Gë
 
u£r
 
buf„r
 
poöãr
 
‰om
 
°ack


2191 
mov
 
di
, [
bp
+4] ; 
Off£t


2192 
mov
 
ax
, [
bp
+6] ; 
Segmít


2193 
ã°
 
ax
,áx ; 
Check
 
nuŒ
 
£gmít


2194 
jz
 .
övÆid_buf„r


2195 
mov
 
es
, 
ax
 ; 
ES
:
DI
 = 
u£r
 
buf„r


2197 ; 
C›y
 
com¥ehísive
 
°©i°ics
 
to
 
u£r
 
buf„r


2198 
push
 
si


2199 
push
 
cx


2201 ; 
C›y
 
≥r
-
NIC
 
öãºu±
 
cou¡s


2202 
mov
 
si
, 
OFFSET
 
úq_cou¡


2203 
mov
 
cx
, 
MAX_NICS
 ; 
Numbî
 
of
 
NICs


2204 .
c›y_úq_cou¡s
:

2205 
movsw
 ; 
C›y
 
w‹d


2206 
lo›
 .
c›y_úq_cou¡s


2208 ; 
C›y
 
•urious
 
öãºu±
 
cou¡


2209 
mov
 
ax
, [
•urious_úq_cou¡
]

2210 
°osw


2212 ; 
C›y
 
∑ckë
 
cou¡îs


2213 
mov
 
ax
, [
rx_∑ckë_cou¡
]

2214 
°osw


2215 
mov
 
ax
, [
tx_∑ckë_cou¡
]

2216 
°osw


2218 ; 
C›y
 
îr‹
 
cou¡îs


2219 
mov
 
ax
, [
rx_îr‹_cou¡
]

2220 
°osw


2221 
mov
 
ax
, [
tx_îr‹_cou¡
]

2222 
°osw


2224 ; 
C›y
 
dëaûed
 
îr‹
 
°©i°ics


2225 
mov
 
ax
, [
rx_ovîsize_îr‹s
]

2226 
°osw


2227 
mov
 
ax
, [
rx_¸c_îr‹s
]

2228 
°osw


2229 
mov
 
ax
, [
rx_‰amög_îr‹s
]

2230 
°osw


2231 
mov
 
ax
, [
tx_max_cﬁl_îr‹s
]

2232 
°osw


2233 
mov
 
ax
, [
tx_undîrun_îr‹s
]

2234 
°osw


2235 
mov
 
ax
, [
tx_jabbî_îr‹s
]

2236 
°osw


2238 
p›
 
cx


2239 
p›
 
si


2241 
x‹
 
ax
,áx ; 
Suc˚ss


2242 
jmp
 .
°©s_d⁄e


2244 .
övÆid_buf„r
:

2245 
mov
 
ax
, -1 ; 
Eº‹
 
code


2247 .
°©s_d⁄e
:

2248 
p›
 
di


2249 
p›
 
es


2250 
p›
 
ds


2252 ; 
C›y
 
öãºu±
 
cou¡s


2253 
mov
 
si
, 
OFFSET
 
úq_cou¡


2254 
mov
 
cx
, 
MAX_NICS


2255 .
c›y_lo›
:

2256 
mov
 
ax
, [
si
]

2257 
°osw
 ; 
St‹e
 
to
 
ES
:
DI


2258 
add
 
si
, 2

2259 
lo›
 .
c›y_lo›


2261 ; 
C›y
 
•urious
 
öãºu±
 
cou¡


2262 
mov
 
ax
, [
•urious_úq_cou¡
]

2263 
°osw


2265 ; 
Suc˚ss


2266 
mov
 
ax
, 0

2268 
p›
 
si


2269 
p›
 
cx


2270 
p›
 
bx


2271 
p›
 
bp


2272 
ªt


2273 
gë_úq_°©s
 
ENDP


2276 ; 3C509B
_úq_h™dÀr
 - 3C509B-
•ecific
 
öãºu±
 
£rvi˚
 
routöe


2278 ; 
This
 
is
 
the
 
a˘uÆ
 
ISR
 
th©
 
gës
 
ˇŒed
 
by
Åhê
h¨dw¨e
 
öãºu±


2279 ; 
I≈ut
: 
	`N⁄e
 (
ˇŒed
 
by
 
öãºu±
)

2280 ; 
Ouçut
: 
N⁄e


2281 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßves
 
™d
 
ª°‹es
)

2283 
_3C509B_úq_h™dÀr
 
PROC
 
FAR


2284 ; 
Save
 
Æl
 
	$ªgi°îs
 (
°™d¨d
 
ISR
 
¥ﬁogue
)

2285 
push
 
ax


2286 
push
 
bx


2287 
push
 
cx


2288 
push
 
dx


2289 
push
 
si


2290 
push
 
di


2291 
push
 
bp


2292 
push
 
ds


2293 
push
 
es


2295 ; 
Sëup
 
d©a
 
£gmít


2296 
mov
 
ax
, @
d©a


2297 
mov
 
ds
, 
ax


2299 ; 
Gë
 
NIC
 
c⁄ãxt
 
™d
 
¥o˚ss
 
öãºu±s


2300 
mov
 
si
, 0 ; 
NIC
 0 
	$ödex
 (3C509B)

2301 
ˇŒ
 
gë_nic_ioba£
 ; 
Gë
 
I
/
O
 
ba£
 
addªss


2302 
mov
 
dx
, 
ax
 ; 
DX
 = 
I
/
O
 
ba£


2303 
ã°
 
dx
, dx ; 
Check
 
c⁄figuªd


2304 
jz
 .
nŸ_our_öãºu±


2306 
add
 
dx
, 0E
h
 ; 
INT_STATUS
 
off£t


2307 
ö
 
ax
, 
dx
 ; 
Ród
 
öãºu±
 
°©us


2308 
ã°
 
ax
, 00FF
h
 ; 
Check
 
™y
 
öãºu±s


2309 
jz
 .
nŸ_our_öãºu±


2311 
mov
 
bx
, 
ax
 ; 
Save
 
öãºu±
 
°©us


2312 
ˇŒ
 
¥o˚ss_3c509b_öãºu±s
 ; 
Pro˚ss
 
the
 
öãºu±s


2313 
jmp
 .
£nd_eoi


2315 .
nŸ_our_öãºu±
:

2316 ; 
Iãøã
 
through
 
Æl
 
c⁄figuªd
 
NICs
 
to
 
föd
 
öãºu±
 
sour˚


2317 
x‹
 
si
, sò; 
Sèπ
 
wôh
 
NIC
 0

2318 .
check_nic_lo›
:

2319 
cmp
 
si
, 
MAX_NICS


2320 
j´
 .
no_öãºu±_sour˚


2322 ; 
Check
 
NIC
 
is
 
c⁄figuªd


2323 
mov
 
Æ
, [
nic_úq_numbîs
 + 
si
]

2324 
cmp
 
Æ
, 
IRQ_NONE


2325 
je
 .
√xt_nic


2327 ; 
Check
 
öãºu±
 
°©us
 
this
 
NIC


2328 
ˇŒ
 
check_nic_öãºu±_°©us


2329 
ã°
 
ax
,áx

2330 
jnz
 .
found_öãºu±


2332 .
√xt_nic
:

2333 
öc
 
si


2334 
jmp
 .
check_nic_lo›


2336 .
found_öãºu±
:

2337 ; 
SI
 
c⁄èös
 
NIC
 
ödex
 
wôh
 
öãºu±


2338 
ˇŒ
 
h™dÀ_nic_öãºu±


2339 
jmp
 .
£nd_eoi


2341 .
no_öãºu±_sour˚
:

2342 ; 
No
 
vÆid
 
öãºu±
 
sour˚
 
found
 - 
•urious
 interrupt

2343 
öc
 
w‹d
 
±r
 [
•urious_úq_cou¡
]

2345 .
£nd_eoi
:

2346 ; 
AcknowÀdge
 
öãºu±
 
©
 
PIC


2347 
mov
 
bl
, [
nic_úq_numbîs
] ; 
Gë
 
IRQ
 
NIC
 0

2348 
cmp
 
bl
, 
IRQ_NONE


2349 
je
 .
skù_eoi


2350 
cmp
 
bl
, 8

2351 
jb
 .
ma°î_pic_⁄ly


2353 ; 
Sœve
 
PIC
 
	`öãºu±
 (
IRQ
 8-15)

2354 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI
 
comm™d


2355 
add
 
Æ
, 
bl


2356 
sub
 
Æ
, 8 ; 
Adju°
 
¶ave


2357 
out
 
PIC2_COMMAND
, 
Æ
 ; 
Síd
 
to
 
¶ave
 
PIC


2358 
ˇŒ
 
io_dñay


2359 
mov
 
Æ
, 0x62 ; 
EOI
 
	$IRQ2
 (
ˇsˇde
)

2360 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
to
 
ma°î
 
PIC


2361 
jmp
 .
eoi_d⁄e


2363 .
ma°î_pic_⁄ly
:

2364 ; 
Ma°î
 
PIC
 
	`öãºu±
 (
IRQ
 0-7)

2365 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI
 
comm™d


2366 
add
 
Æ
, 
bl
 ; 
Add
 
IRQ
 
numbî


2367 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
EOI
 
to
 
ma°î
 
PIC


2369 .
eoi_d⁄e
:

2370 .
skù_eoi
:

2372 ; 
Re°‹e
 
Æl
 
	$ªgi°îs
 (
°™d¨d
 
ISR
 
ïûogue
)

2373 
p›
 
es


2374 
p›
 
ds


2375 
p›
 
bp


2376 
p›
 
di


2377 
p›
 
si


2378 
p›
 
dx


2379 
p›
 
cx


2380 
p›
 
bx


2381 
p›
 
ax


2383 
úë
 ; 
Rëu∫
 
‰om
 
öãºu±


2384 
_3C509B_úq_h™dÀr
 
ENDP


2387 ; 
ö°Æl_3c509b_úq
 - 
In°Æl
 3C509B 
öãºu±
 
h™dÀr


2389 ; 
I≈ut
: 
AL
 = 
IRQ
 
	`numbî
 (3, 5, 7, 9-12, 15)

2390 ; 
BX
 = 
NIC
 
ödex


2391 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


2392 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
ES


2394 
ö°Æl_3c509b_úq
 
PROC


2395 
push
 
bp


2396 
mov
 
bp
, 
•


2397 
push
 
bx


2398 
push
 
cx


2399 
push
 
dx


2400 
push
 
es


2402 ; 
VÆid©e
 
IRQ
 
numbî


2403 
cmp
 
Æ
, 
IRQ_MIN


2404 
jb
 .
övÆid_úq


2405 
cmp
 
Æ
, 
IRQ_MAX


2406 
ja
 .
övÆid_úq


2408 ; 
Check
 
övÆid
 
IRQ
 
	$vÆues
 (4, 6, 8, 13, 14)

2409 
cmp
 
Æ
, 4

2410 
je
 .
övÆid_úq


2411 
cmp
 
Æ
, 6

2412 
je
 .
övÆid_úq


2413 
cmp
 
Æ
, 8

2414 
je
 .
övÆid_úq


2415 
cmp
 
Æ
, 13

2416 
je
 .
övÆid_úq


2417 
cmp
 
Æ
, 14

2418 
je
 .
övÆid_úq


2420 ; 
VÆid©e
 
NIC
 
ödex


2421 
cmp
 
bl
, 
MAX_NICS


2422 
j´
 .
övÆid_nic


2424 ; 
St‹e
 
IRQ
 
numbî
 
this
 
NIC


2425 
mov
 
ah
, 0

2426 
mov
 
si
, 
bx


2427 
mov
 [
nic_úq_numbîs
 + 
si
], 
Æ


2429 ; 
CÆcuœã
 
öãºu±
 
ve˘‹
 
numbî


2430 
mov
 
˛
, 
Æ


2431 
add
 
˛
, 8 ; 
H¨dw¨e
 
IRQs
 
°¨t
 
©
 
INT
 08
h


2433 ; 
Gë
 
cuºít
 
öãºu±
 
ve˘‹


2434 
mov
 
ah
, 35
h
 ; 
DOS
 
gë
 
öãºu±
 
ve˘‹


2435 
mov
 
Æ
, 
˛


2436 21
h
 ; 
ES
:
BX
 = 
cuºít
 
ve˘‹


2438 ; 
Save
 
‹igöÆ
 
ve˘‹


2439 
mov
 
si
, 
bx


2440 
shl
 
si
, 2 ; 
Each
 
ve˘‹
 
is
 4 
byãs


2441 
mov
 [
‹igöÆ_úq_ve˘‹s
 + 
si
], 
bx


2442 
mov
 [
‹igöÆ_úq_ve˘‹s
 + 
si
 + 2], 
es


2444 ; 
In°Æl
 
our
 
h™dÀr


2445 
mov
 
ah
, 25
h
 ; 
DOS
 
£t
 
öãºu±
 
ve˘‹


2446 
mov
 
Æ
, 
˛


2447 
mov
 
dx
, 
OFFSET
 
_3C509B_úq_h™dÀr


2448 
push
 
ds


2449 
push
 
cs


2450 
p›
 
ds


2451 21
h


2452 
p›
 
ds


2454 ; 
M¨k
 
IRQ
 
as
 
ö°ÆÀd


2455 
mov
 
si
, 
bx


2456 
mov
 [
úq_ö°ÆÀd
 + 
si
], 1

2458 ; 
E«bÀ
 
IRQ
 
©
 
PIC


2459 
ˇŒ
 
íabÀ_úq_©_pic


2461 ; 
Suc˚ss


2462 
mov
 
ax
, 0

2463 
jmp
 .
exô


2465 .
övÆid_úq
:

2466 
mov
 
ax
, 1

2467 
jmp
 .
exô


2469 .
övÆid_nic
:

2470 
mov
 
ax
, 2

2471 
jmp
 .
exô


2473 .
exô
:

2474 
p›
 
es


2475 
p›
 
dx


2476 
p›
 
cx


2477 
p›
 
bx


2478 
p›
 
bp


2479 
ªt


2480 
ö°Æl_3c509b_úq
 
ENDP


2483 ; 
íabÀ_úq_©_pic
 - 
E«bÀ
 
IRQ
 
©
 
the
 
ProgømmabÀ
 
I¡îru±
 
C⁄åﬁÀr


2485 ; 
I≈ut
: 
AL
 = 
IRQ
 
numbî


2486 ; 
Ouçut
: 
N⁄e


2487 ; 
U£s
: 
AX
, 
DX


2489 
íabÀ_úq_©_pic
 
PROC


2490 
push
 
ax


2491 
push
 
dx


2493 
cmp
 
Æ
, 8

2494 
jb
 .
ma°î_pic


2496 ; 
Sœve
 
	`PIC
 (
IRQ
 8-15)

2497 
sub
 
Æ
, 8

2498 
mov
 
˛
, 
Æ


2499 
mov
 
Æ
, 1

2500 
shl
 
Æ
, 
˛


2501 
nŸ
 
Æ


2502 
ö
 
Æ
, 
PIC2_DATA


2503 
™d
 
Æ
,ál

2504 
out
 
PIC2_DATA
, 
Æ


2506 ; 
Also
 
íabÀ
 
IRQ
 2 
⁄
 
	$ma°î
 (
ˇsˇde
)

2507 
ö
 
Æ
, 
PIC1_DATA


2508 
™d
 
Æ
, 11111011b ; 
CÀ¨
 
bô
 2

2509 
out
 
PIC1_DATA
, 
Æ


2510 
jmp
 .
d⁄e


2512 .
ma°î_pic
:

2513 ; 
Ma°î
 
	`PIC
 (
IRQ
 0-7)

2514 
mov
 
˛
, 
Æ


2515 
mov
 
Æ
, 1

2516 
shl
 
Æ
, 
˛


2517 
nŸ
 
Æ


2518 
ö
 
Æ
, 
PIC1_DATA


2519 
™d
 
Æ
,ál

2520 
out
 
PIC1_DATA
, 
Æ


2522 .
d⁄e
:

2523 
p›
 
dx


2524 
p›
 
ax


2525 
ªt


2526 
íabÀ_úq_©_pic
 
ENDP


2529 ; 
nic_úq_h™dÀr_3c509b_b©ched
 - 
Enh™˚d
 3C509B 
öãºu±
 
h™dÀr
 
wôh
 
b©chög


2530 ; 
This
 
is
 
the
 
íh™˚d
 
ISR
 
th©
 
u£s
 
öãºu±
 
b©chög
 
bëãr
 
≥rf‹m™˚


2532 ; 
I≈ut
: 
	`N⁄e
 (
öãºu±
 
c⁄ãxt
)

2533 ; 
Ouçut
: 
N⁄e


2534 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßved
/
ª°‹ed
)

2536 
nic_úq_h™dÀr_3c509b_b©ched
 
PROC


2537 ; 
Check
 
CPU
 
„©uªs
 
™d
 
u£
 
≠¥›rüã
 
ßvög


2538 
ˇŒ
 
gë_˝u_„©uªs


2539 
ã°
 
ax
, 1 ; 
Check
 
PUSHA
 
	`suµ‹t
 (286+)

2540 
jz
 .
ßve_m™uÆ_3c509b


2542 ; 
U£
 
PUSHA
 286+ 
CPUs


2543 
pusha


2544 
push
 
ds


2545 
push
 
es


2546 
jmp
 .
ªgi°îs_ßved_3c509b


2548 .
ßve_m™uÆ_3c509b
:

2549 ; 
M™uÆ
 
ßvög
 8086/8088

2550 
push
 
ax


2551 
push
 
bx


2552 
push
 
cx


2553 
push
 
dx


2554 
push
 
si


2555 
push
 
di


2556 
push
 
ds


2557 
push
 
es


2559 .
ªgi°îs_ßved_3c509b
:

2560 ; 
Së
 
up
 
our
 
d©a
 
£gmít


2561 
push
 
cs


2562 
p›
 
ds


2563 
ASSUME
 
DS
:
_TEXT


2565 ; 
In¸emít
 
öãºu±
 
cou¡î


2566 
öc
 
w‹d
 
±r
 [
úq_cou¡
] ; 
Assumög
 
NIC
 0

2568 ; 
CÆl
 
íh™˚d
 
b©ched
 
öãºu±
 
h™dÀr


2569 ; 
Pro˚ss
 
mu…ùÀ
 
evíts
 
≥r
 
öãºu±
 
to
 
ªdu˚
 
ovîhód


2570 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 0

2571 
mov
 
si
, 0 ; 
NIC
 
ödex
 3C509B

2572 
ˇŒ
 
gë_nic_ioba£


2573 
mov
 
dx
, 
ax
 ; 
DX
 = 
I
/
O
 
ba£


2574 
ã°
 
dx
, dx

2575 
jz
 .
no_nic_3c509b


2577 .
b©ch_lo›_3c509b
:

2578 ; 
Check
 
b©ch
 
limô


2579 
mov
 
Æ
, [
b©ch_cou¡_3c509b
]

2580 
cmp
 
Æ
, 
MAX_EVENTS_PER_IRQ


2581 
j´
 .
b©ch_d⁄e_3c509b


2583 ; 
Ród
 
öãºu±
 
°©us


2584 
push
 
dx


2585 
add
 
dx
, 0x0E ; 
INT_STATUS
 

2586 
ö
 
ax
, 
dx
 ; 
Ród
 
°©us


2587 
p›
 
dx


2588 
ã°
 
ax
, 0x00FF ; 
Any
 
öãºu±s
 
≥ndög
?

2589 
jz
 .
b©ch_d⁄e_3c509b


2591 ; 
Pro˚ss
 
this
 
öãºu±
 
evít


2592 
push
 
ax


2593 
push
 
dx


2594 
mov
 
bx
, 
ax
 ; 
Sètus
 
ö
 
BX


2595 
ˇŒ
 
¥o˚ss_3c509b_evít


2596 
p›
 
dx


2597 
p›
 
ax


2599 ; 
AcknowÀdge
 
¥o˚s£d
 
öãºu±s


2600 
push
 
dx


2601 
add
 
dx
, 0x0E

2602 
mov
 
bx
, 
ax


2603 
™d
 
bx
, 0x00FF ; 
Mask
 
to
 
vÆid
 
bôs


2604 
‹
 
bx
, 0x6800 ; 
ACK_INTR
 
comm™d


2605 
mov
 
ax
, 
bx


2606 
out
 
dx
, 
ax


2607 
p›
 
dx


2609 ; 
In¸emít
 
b©ch
 
cou¡î


2610 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c509b
]

2611 
jmp
 .
b©ch_lo›_3c509b


2613 .
b©ch_d⁄e_3c509b
:

2614 ; 
If
 
we
 
¥o˚s£d
 
evíts
, 
suc˚ss


2615 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 0

2616 
je
 .
åy_h¨dw¨e_h™dÀr


2617 
x‹
 
ax
,áx ; 
Suc˚ss


2618 
jmp
 .
h™dÀr_d⁄e_3c509b


2620 .
åy_h¨dw¨e_h™dÀr
:

2621 ; 
FÆl
 
back
 
to
 
h¨dw¨e
 
h™dÀr
 
no
 
b©ched
 
¥o˚ssög


2622 
ˇŒ
 
h¨dw¨e_h™dÀ_3c509b_úq


2623 
jmp
 .
h™dÀr_d⁄e_3c509b


2625 .
no_nic_3c509b
:

2626 
mov
 
ax
, 1 ; 
NŸ
 
our
 
öãºu±


2628 .
h™dÀr_d⁄e_3c509b
:

2629 ; 
AX
 
c⁄èös
 
ªsu…


2630 
cmp
 
ax
, 0

2631 
j√
 .
•urious_öãºu±_3c509b


2633 ; 
Síd
 
EOI
 
to
 
öãºu±
 
c⁄åﬁÀr


2634 ; 
Check
 
IRQ
 
is
 
⁄
 
¶ave
 
PIC


2635 
mov
 
bl
, [
nic_úq_numbîs
] ; 
Gë
 
IRQ
 
NIC
 0 (3C509B)

2636 
cmp
 
bl
, 8

2637 
jb
 .
ma°î_eoi_3c509b


2639 ; 
Sœve
 
PIC
 
	`EOI
 (
IRQ
 8-15)

2640 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI


2641 
add
 
Æ
, 
bl


2642 
sub
 
Æ
, 8 ; 
Adju°
 
¶ave


2643 
out
 
PIC2_COMMAND
, 
Æ
 ; 
Síd
 
to
 
¶ave
 
PIC


2644 
ˇŒ
 
io_dñay


2645 
mov
 
Æ
, 0x62 ; 
EOI
 
	$IRQ2
 (
ˇsˇde
)

2646 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
to
 
ma°î
 
PIC


2647 
jmp
 .
ª°‹e_™d_exô_3c509b


2649 .
ma°î_eoi_3c509b
:

2650 ; 
Ma°î
 
PIC
 
	`EOI
 (
IRQ
 0-7)

2651 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI


2652 
add
 
Æ
, 
bl


2653 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
EOI
 
to
 
ma°î
 
PIC


2655 
jmp
 .
ª°‹e_™d_exô_3c509b


2657 .
•urious_öãºu±_3c509b
:

2658 ; 
H™dÀ
 
•urious
 
öãºu±


2659 
öc
 
w‹d
 
±r
 [
•urious_úq_cou¡
]

2661 .
ª°‹e_™d_exô_3c509b
:

2662 ; 
Re°‹e
 
ªgi°îs


2663 
ˇŒ
 
gë_˝u_„©uªs


2664 
ã°
 
ax
, 1 ; 
Check
 
POPA
 
	`suµ‹t
 (286+)

2665 
jz
 .
ª°‹e_m™uÆ_3c509b


2667 ; 
U£
 
POPA
 286+ 
CPUs


2668 
p›
 
es


2669 
p›
 
ds


2670 
p›a


2671 
úë


2673 .
ª°‹e_m™uÆ_3c509b
:

2674 ; 
M™uÆ
 
ª°‹©i⁄
 8086/8088

2675 
p›
 
es


2676 
p›
 
ds


2677 
p›
 
di


2678 
p›
 
si


2679 
p›
 
dx


2680 
p›
 
cx


2681 
p›
 
bx


2682 
p›
 
ax


2683 
úë


2684 
nic_úq_h™dÀr_3c509b_b©ched
 
ENDP


2687 ; 
nic_úq_h™dÀr_3c515_b©ched
 - 
Enh™˚d
 3C515 
öãºu±
 
h™dÀr
 
wôh
 
b©chög


2688 ; 
This
 
is
 
the
 
íh™˚d
 
ISR
 
th©
 
u£s
 
öãºu±
 
b©chög
 
bëãr
 
≥rf‹m™˚


2690 ; 
I≈ut
: 
	`N⁄e
 (
öãºu±
 
c⁄ãxt
)

2691 ; 
Ouçut
: 
N⁄e


2692 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßved
/
ª°‹ed
)

2694 
nic_úq_h™dÀr_3c515_b©ched
 
PROC


2695 ; 
Check
 
CPU
 
„©uªs
 
™d
 
u£
 
≠¥›rüã
 
ßvög


2696 
ˇŒ
 
gë_˝u_„©uªs


2697 
ã°
 
ax
, 1 ; 
Check
 
PUSHA
 
	`suµ‹t
 (286+)

2698 
jz
 .
ßve_m™uÆ_3c515


2700 ; 
U£
 
PUSHA
 286+ 
CPUs


2701 
pusha


2702 
push
 
ds


2703 
push
 
es


2704 
jmp
 .
ªgi°îs_ßved_3c515


2706 .
ßve_m™uÆ_3c515
:

2707 ; 
M™uÆ
 
ßvög
 8086/8088

2708 
push
 
ax


2709 
push
 
bx


2710 
push
 
cx


2711 
push
 
dx


2712 
push
 
si


2713 
push
 
di


2714 
push
 
ds


2715 
push
 
es


2717 .
ªgi°îs_ßved_3c515
:

2718 ; 
Së
 
up
 
our
 
d©a
 
£gmít


2719 
push
 
cs


2720 
p›
 
ds


2721 
ASSUME
 
DS
:
_TEXT


2723 ; 
In¸emít
 
öãºu±
 
cou¡î


2724 
öc
 
w‹d
 
±r
 [
úq_cou¡
+2] ; 
Assumög
 
NIC
 1

2726 ; 
CÆl
 
íh™˚d
 
b©ched
 
öãºu±
 
h™dÀr
 3C515

2727 ; 
Pro˚ss
 
mu…ùÀ
 
evíts
 
wôh
 
DMA
 
suµ‹t


2728 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 0

2729 
mov
 
si
, 1 ; 
NIC
 
ödex
 3C515

2730 
ˇŒ
 
gë_nic_ioba£


2731 
mov
 
dx
, 
ax
 ; 
DX
 = 
I
/
O
 
ba£


2732 
ã°
 
dx
, dx

2733 
jz
 .
no_nic_3c515


2735 .
b©ch_lo›_3c515
:

2736 ; 
Check
 
b©ch
 
limô


2737 
mov
 
Æ
, [
b©ch_cou¡_3c515
]

2738 
cmp
 
Æ
, 
MAX_EVENTS_PER_IRQ


2739 
j´
 .
b©ch_d⁄e_3c515


2741 ; 
Ród
 
öãºu±
 
	`°©us
 (32-
bô
 3C515)

2742 
push
 
dx


2743 
add
 
dx
, 0x0E ; 
INT_STATUS
 

2744 
ö
 
ax
, 
dx
 ; 
Ród
 
°©us


2745 
p›
 
dx


2747 ; 
Check
 
DMA
 
öãºu±s
 
	$fú°
 (
highî
 
¥i‹ôy
)

2748 
ã°
 
ax
, 0x0600 ; 
UP_COMPLETE
 | 
DOWN_COMPLETE


2749 
jz
 .
check_n‹mÆ_3c515


2751 ; 
Pro˚ss
 
DMA
 
evíts


2752 
push
 
ax


2753 
push
 
dx


2754 
ã°
 
ax
, 0x0200 ; 
	$UP_COMPLETE
 (
RX
 
DMA
)

2755 
jz
 .
check_down_dma


2756 
ˇŒ
 
¥o˚ss_3c515_rx_dma_rög


2758 .
check_down_dma
:

2759 
ã°
 
ax
, 0x0400 ; 
	$DOWN_COMPLETE
 (
TX
 
DMA
)

2760 
jz
 .
dma_d⁄e


2761 
ˇŒ
 
¥o˚ss_3c515_tx_com∂ëi⁄s


2763 .
dma_d⁄e
:

2764 
p›
 
dx


2765 
p›
 
ax


2767 ; 
AcknowÀdge
 
DMA
 
öãºu±s


2768 
push
 
dx


2769 
add
 
dx
, 0x0E

2770 
mov
 
bx
, 
ax


2771 
™d
 
bx
, 0x0600 ; 
DMA
 
öãºu±
 
bôs


2772 
‹
 
bx
, 0x6800 ; 
ACK_INTR
 
comm™d


2773 
mov
 
ax
, 
bx


2774 
out
 
dx
, 
ax


2775 
p›
 
dx


2777 
jmp
 .
√xt_b©ch_3c515


2779 .
check_n‹mÆ_3c515
:

2780 ; 
Check
 
n‹mÆ
 
öãºu±s


2781 
ã°
 
ax
, 0x00FF ; 
Sènd¨d
 
öãºu±
 
bôs


2782 
jz
 .
b©ch_d⁄e_3c515


2784 ; 
Pro˚ss
 
°™d¨d
 
öãºu±s


2785 
push
 
ax


2786 
push
 
dx


2787 
mov
 
bx
, 
ax


2788 
ˇŒ
 
¥o˚ss_3c515_evít


2789 
p›
 
dx


2790 
p›
 
ax


2792 ; 
AcknowÀdge
 
¥o˚s£d
 
öãºu±s


2793 
push
 
dx


2794 
add
 
dx
, 0x0E

2795 
mov
 
bx
, 
ax


2796 
™d
 
bx
, 0x00FF

2797 
‹
 
bx
, 0x6800

2798 
mov
 
ax
, 
bx


2799 
out
 
dx
, 
ax


2800 
p›
 
dx


2802 .
√xt_b©ch_3c515
:

2803 ; 
In¸emít
 
b©ch
 
cou¡î


2804 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c515
]

2805 
jmp
 .
b©ch_lo›_3c515


2807 .
b©ch_d⁄e_3c515
:

2808 ; 
Check
 
we
 
¥o˚s£d
 
™y
 
evíts


2809 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 0

2810 
je
 .
åy_h¨dw¨e_3c515


2811 
x‹
 
ax
,áx ; 
Suc˚ss


2812 
jmp
 .
h™dÀr_d⁄e_3c515


2814 .
åy_h¨dw¨e_3c515
:

2815 ; 
FÆl
 
back
 
to
 
h¨dw¨e
 
h™dÀr


2816 
ˇŒ
 
h¨dw¨e_h™dÀ_3c515_úq


2817 
jmp
 .
h™dÀr_d⁄e_3c515


2819 .
no_nic_3c515
:

2820 
mov
 
ax
, 1 ; 
NŸ
 
our
 
öãºu±


2822 .
h™dÀr_d⁄e_3c515
:

2823 ; 
AX
 
c⁄èös
 
ªsu…


2824 
cmp
 
ax
, 0

2825 
j√
 .
•urious_öãºu±_3c515


2827 ; 
Síd
 
EOI
 
to
 
öãºu±
 
c⁄åﬁÀr


2828 ; 
Check
 
IRQ
 
is
 
⁄
 
¶ave
 
PIC


2829 
mov
 
bl
, [
nic_úq_numbîs
+1] ; 
Gë
 
IRQ
 
NIC
 1 (3C515)

2830 
cmp
 
bl
, 8

2831 
jb
 .
ma°î_eoi_3c515


2833 ; 
Sœve
 
PIC
 
	`EOI
 (
IRQ
 8-15)

2834 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI


2835 
add
 
Æ
, 
bl


2836 
sub
 
Æ
, 8 ; 
Adju°
 
¶ave


2837 
out
 
PIC2_COMMAND
, 
Æ
 ; 
Síd
 
to
 
¶ave
 
PIC


2838 
ˇŒ
 
io_dñay


2839 
mov
 
Æ
, 0x62 ; 
EOI
 
	$IRQ2
 (
ˇsˇde
)

2840 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
to
 
ma°î
 
PIC


2841 
jmp
 .
ª°‹e_™d_exô_3c515


2843 .
ma°î_eoi_3c515
:

2844 ; 
Ma°î
 
PIC
 
	`EOI
 (
IRQ
 0-7)

2845 
mov
 
Æ
, 0x60 ; 
S≥cific
 
EOI


2846 
add
 
Æ
, 
bl


2847 
out
 
PIC1_COMMAND
, 
Æ
 ; 
Síd
 
EOI
 
to
 
ma°î
 
PIC


2849 
jmp
 .
ª°‹e_™d_exô_3c515


2851 .
•urious_öãºu±_3c515
:

2852 ; 
H™dÀ
 
•urious
 
öãºu±


2853 
öc
 
w‹d
 
±r
 [
•urious_úq_cou¡
]

2855 .
ª°‹e_™d_exô_3c515
:

2856 ; 
Re°‹e
 
ªgi°îs


2857 
ˇŒ
 
gë_˝u_„©uªs


2858 
ã°
 
ax
, 1 ; 
Check
 
POPA
 
	`suµ‹t
 (286+)

2859 
jz
 .
ª°‹e_m™uÆ_3c515


2861 ; 
U£
 
POPA
 286+ 
CPUs


2862 
p›
 
es


2863 
p›
 
ds


2864 
p›a


2865 
úë


2867 .
ª°‹e_m™uÆ_3c515
:

2868 ; 
M™uÆ
 
ª°‹©i⁄
 8086/8088

2869 
p›
 
es


2870 
p›
 
ds


2871 
p›
 
di


2872 
p›
 
si


2873 
p›
 
dx


2874 
p›
 
cx


2875 
p›
 
bx


2876 
p›
 
ax


2877 
úë


2878 
nic_úq_h™dÀr_3c515_b©ched
 
ENDP


2881 ; 
CORE
 
IRQ
 
MANAGEMENT
 
SUPPORT
 
FUNCTIONS
 - 
Pha£
 2 
Im∂emíèti⁄


2882 ; 
Sub
-
Agít
 4: 
IRQ
 
C‹e
 
S≥cüli°


2886 ; 
vÆid©e_úq_ønges
 - 
VÆid©e
 
IRQ
 
assignmíts
 
¨e
 
wôhö
 
Ælowed
 
ønges


2888 ; 
VÆid©es
 
th©
 
Æl
 
c⁄figuªd
 
IRQ
 
numbîs
 
¨e
 
ö
 
Ælowed
 
ønges
:

2889 ; 
IRQ
 3, 5, 7, 9-12, 15 (
ex˛udes
 4,6,8,13,14 
which
 
¨e
 
sy°em
 
ª£rved
)

2891 ; 
I≈ut
: 
N⁄e


2892 ; 
Ouçut
: 
CY
 
˛ór
 
vÆid
, CY 
£t
 
övÆid


2893 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI


2895 
vÆid©e_úq_ønges
 
PROC


2896 
push
 
bx


2897 
push
 
cx


2898 
push
 
si


2900 
mov
 
cx
, 
MAX_NICS


2901 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


2903 .
check_lo›
:

2904 
mov
 
bl
, [
si
]

2905 
cmp
 
bl
, 
IRQ_NONE


2906 
je
 .
√xt_nic
 ; 
Skù
 
u«ssig√d
 
IRQs


2908 ; 
Check
 
IRQ
 
is
 
ö
 
vÆid
 
ønge


2909 
ˇŒ
 
is_vÆid_úq_numbî


2910 
jc
 .
övÆid_ønge


2912 .
√xt_nic
:

2913 
öc
 
si


2914 
lo›
 .
check_lo›


2916 
˛c
 ; 
AŒ
 
IRQs
 
vÆid


2917 
jmp
 .
exô


2919 .
övÆid_ønge
:

2920 
°c
 ; 
InvÆid
 
IRQ
 
dëe˘ed


2922 .
exô
:

2923 
p›
 
si


2924 
p›
 
cx


2925 
p›
 
bx


2926 
ªt


2927 
vÆid©e_úq_ønges
 
ENDP


2930 ; 
is_vÆid_úq_numbî
 - 
Check
 
sögÀ
 
IRQ
 
numbî
 
is
 
vÆid
 
NICs


2932 ; 
VÆid
 
IRQ
 
numbîs
: 3, 5, 7, 9, 10, 11, 12, 15

2933 ; 
	$InvÆid
 (
sy°em
 
ª£rved
): 0-2, 4, 6, 8, 13, 14

2935 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
 
to
 
vÆid©e


2936 ; 
Ouçut
: 
CY
 
˛ór
 
vÆid
, CY 
£t
 
övÆid


2937 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

2939 
is_vÆid_úq_numbî
 
PROC


2940 ; 
Check
 
basic
 
ønge
 
fú°


2941 
cmp
 
bl
, 3

2942 
jb
 .
övÆid


2943 
cmp
 
bl
, 15

2944 
ja
 .
övÆid


2946 ; 
Check
 
•ecific
 
f‹biddí
 
vÆues


2947 
cmp
 
bl
, 4

2948 
je
 .
övÆid
 ; 
IRQ
 4 - 
COM1
/
COM3


2949 
cmp
 
bl
, 6

2950 
je
 .
övÆid
 ; 
IRQ
 6 - 
Fl›py


2951 
cmp
 
bl
, 8

2952 
je
 .
övÆid
 ; 
IRQ
 8 - 
RTC


2953 
cmp
 
bl
, 13

2954 
je
 .
övÆid
 ; 
IRQ
 13 - 
M©h
 
C›ro˚ss‹


2955 
cmp
 
bl
, 14

2956 
je
 .
övÆid
 ; 
IRQ
 14 - 
Prim¨y
 
IDE


2958 ; 
If
 
we
 
gë
 
hîe
, 
IRQ
 
is
 
vÆid


2959 
˛c


2960 
ªt


2962 .
övÆid
:

2963 
°c


2964 
ªt


2965 
is_vÆid_úq_numbî
 
ENDP


2968 ; 
öô_pic_°©e
 - 
Inôülize
 
PIC
 
°©e
 
åackög


2970 ; 
Sës
 
up
 
öôül
 
°©e
 
PIC
 
m™agemít
 
™d
 
ªads
 
cuºít
 
öãºu±
 
masks


2972 ; 
I≈ut
: 
N⁄e


2973 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


2974 ; 
U£s
: 
AX
, 
DX


2976 
öô_pic_°©e
 
PROC


2977 
push
 
ax


2978 
push
 
dx


2980 ; 
Ród
 
cuºít
 
PIC
 
masks
 
backup


2981 
mov
 
dx
, 
PIC1_DATA


2982 
ö
 
Æ
, 
dx


2983 ; 
St‹e
 
ma°î
 
PIC
 
mask
 
	$ª°‹©i⁄
 (
would
 
√ed
 
°‹age
 
v¨übÀ
)

2985 
mov
 
dx
, 
PIC2_DATA


2986 
ö
 
Æ
, 
dx


2987 ; 
St‹e
 
¶ave
 
PIC
 
mask
 
	`ª°‹©i⁄
 (
would
 
√ed
 
°‹age
 
v¨übÀ
)

2989 ; 
Inôülize
 
PIC
 
åackög
 
°ru˘uªs


2990 ; (
Im∂emíèti⁄
 
would
 
öôülize
 
åackög
 
¨øys
 
hîe
)

2992 
˛c
 ; 
Suc˚ss


2994 
p›
 
dx


2995 
p›
 
ax


2996 
ªt


2997 
öô_pic_°©e
 
ENDP


3000 ; 
dëe˘_úq_c⁄Êi˘s
 - 
Dëe˘
 
pŸítül
 
IRQ
 
c⁄Êi˘s


3002 ; 
Sˇns
 
pŸítül
 
IRQ
 
c⁄Êi˘s
 
by
 
checkög
 
wh©
 
devi˚s
 
might
 
be


3003 ; 
usög
 
the
 
IRQ
 
numbîs
 
we
 
w™t
 
to
 
assign


3005 ; 
I≈ut
: 
N⁄e


3006 ; 
Ouçut
: 
AX
 = 
c⁄Êi˘
 
	`mask
 (
bôs
 
£t
 
c⁄Êi˘ög
 
IRQs
)

3007 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI


3009 
dëe˘_úq_c⁄Êi˘s
 
PROC


3010 
push
 
bx


3011 
push
 
cx


3012 
push
 
si


3014 
x‹
 
ax
,áx ; 
CÀ¨
 
c⁄Êi˘
 
mask


3015 
mov
 
cx
, 
MAX_NICS


3016 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


3018 .
c⁄Êi˘_lo›
:

3019 
mov
 
bl
, [
si
]

3020 
cmp
 
bl
, 
IRQ_NONE


3021 
je
 .
√xt_c⁄Êi˘


3023 ; 
Check
 
IRQ
 
might
 
	$c⁄Êi˘
 (
sim∂ifõd
 
check
)

3024 
ˇŒ
 
check_sögÀ_úq_c⁄Êi˘


3025 
jnc
 .
no_c⁄Êi˘


3027 ; 
Së
 
bô
 
ö
 
c⁄Êi˘
 
mask


3028 
mov
 
bh
, 1

3029 
mov
 
˛
, 
bl


3030 
shl
 
bh
, 
˛


3031 
‹
 
Æ
, 
bh


3033 .
no_c⁄Êi˘
:

3034 .
√xt_c⁄Êi˘
:

3035 
öc
 
si


3036 
lo›
 .
c⁄Êi˘_lo›


3038 
p›
 
si


3039 
p›
 
cx


3040 
p›
 
bx


3041 
ªt


3042 
dëe˘_úq_c⁄Êi˘s
 
ENDP


3045 ; 
check_sögÀ_úq_c⁄Êi˘
 - 
Check
 
c⁄Êi˘s
 
⁄
 
sögÀ
 
IRQ


3047 ; 
Pîf‹ms
 
a
 
basic
 
c⁄Êi˘
 
check
 ®
sögÀ
 
IRQ
 
numbî


3049 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
 
to
 
check


3050 ; 
Ouçut
: 
CY
 
˛ór
 
no
 
c⁄Êi˘
, CY 
£t
 
pŸítül
 conflict

3051 ; 
U£s
: 
N⁄e


3053 
check_sögÀ_úq_c⁄Êi˘
 
PROC


3054 ; 
This
 
is
 
a
 
sim∂ifõd
 
c⁄Êi˘
 
check


3055 ; 
In
 
fuŒ
 
im∂emíèti⁄
, 
would
 
check
:

3056 ; - 
H¨dw¨e
 
devi˚
 
dëe˘i⁄


3057 ; - 
Othî
 
TSRs
 
usög
 
ßme
 
IRQ


3058 ; - 
Sy°em
 
devi˚
 
assignmíts


3060 ; 
F‹
 
now
, 
assume
 
no
 
	$c⁄Êi˘s
 (
c⁄£rv©ive
 
≠¥ﬂch
)

3061 
˛c


3062 
ªt


3063 
check_sögÀ_úq_c⁄Êi˘
 
ENDP


3066 ; 
auto_dëe˘_úqs
 - 
Auto
-
dëe˘
 
avaûabÀ
 
IRQ
 
assignmíts


3068 ; 
Aâem±s
 
to
 
autom©iˇŒy
 
dëe˘
 
good
 
IRQ
 
assignmíts
 
NICs


3069 ; 
by
 
¥obög
 
h¨dw¨e
 
™d
 
checkög
 
avaûabûôy


3071 ; 
I≈ut
: 
N⁄e


3072 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


3073 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
SI


3075 
auto_dëe˘_úqs
 
PROC


3076 
push
 
bx


3077 
push
 
cx


3078 
push
 
si


3080 ; 
Probe
 
comm⁄
 
NIC
 
IRQ
 
assignmíts
 
ö
 
¥i‹ôy
 
‹dî


3081 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


3083 ; 
Try
 
IRQ
 10 
fú°
 
	$NIC
 (
mo°
 
comm⁄
)

3084 
mov
 
bl
, 10

3085 
ˇŒ
 
is_úq_avaûabÀ


3086 
jc
 .
åy_úq11_fú°


3087 
mov
 [
si
], 
bl


3088 
jmp
 .
dëe˘_£c⁄d


3090 .
åy_úq11_fú°
:

3091 
mov
 
bl
, 11

3092 
ˇŒ
 
is_úq_avaûabÀ


3093 
jc
 .
åy_úq5_fú°


3094 
mov
 [
si
], 
bl


3095 
jmp
 .
dëe˘_£c⁄d


3097 .
åy_úq5_fú°
:

3098 
mov
 
bl
, 5

3099 
ˇŒ
 
is_úq_avaûabÀ


3100 
jc
 .
autodëe˘_Áûed


3101 
mov
 [
si
], 
bl


3103 .
dëe˘_£c⁄d
:

3104 ; 
Try
 
to
 
föd
 
IRQ
 
£c⁄d
 
NIC


3105 
öc
 
si


3106 
mov
 
bl
, 11

3107 
cmp
 
bl
, [
si
-1] ; 
D⁄
't use sameás first NIC

3108 
je
 .
åy_úq12_£c⁄d


3109 
ˇŒ
 
is_úq_avaûabÀ


3110 
jc
 .
åy_úq12_£c⁄d


3111 
mov
 [
si
], 
bl


3112 
jmp
 .
autodëe˘_suc˚ss


3114 .
åy_úq12_£c⁄d
:

3115 
mov
 
bl
, 12

3116 
cmp
 
bl
, [
si
-1] ; 
D⁄
't use sameás first NIC

3117 
je
 .
åy_úq9_£c⁄d


3118 
ˇŒ
 
is_úq_avaûabÀ


3119 
jc
 .
åy_úq9_£c⁄d


3120 
mov
 [
si
], 
bl


3121 
jmp
 .
autodëe˘_suc˚ss


3123 .
åy_úq9_£c⁄d
:

3124 
mov
 
bl
, 9

3125 
cmp
 
bl
, [
si
-1] ; 
D⁄
't use sameás first NIC

3126 
je
 .
autodëe˘_∑πül


3127 
ˇŒ
 
is_úq_avaûabÀ


3128 
jc
 .
autodëe˘_∑πül


3129 
mov
 [
si
], 
bl


3130 
jmp
 .
autodëe˘_suc˚ss


3132 .
autodëe˘_∑πül
:

3133 ; 
O∆y
 
fú°
 
NIC
 
dëe˘ed
, 
m¨k
 
£c⁄d
 
as
 
u«ssig√d


3134 
mov
 
byã
 
±r
 [
si
], 
IRQ_NONE


3135 
jmp
 .
autodëe˘_suc˚ss


3137 .
autodëe˘_suc˚ss
:

3138 
˛c


3139 
jmp
 .
exô


3141 .
autodëe˘_Áûed
:

3142 
°c


3144 .
exô
:

3145 
p›
 
si


3146 
p›
 
cx


3147 
p›
 
bx


3148 
ªt


3149 
auto_dëe˘_úqs
 
ENDP


3152 ; 
is_úq_avaûabÀ
 - 
Check
 
IRQ
 
is
 
avaûabÀ
 
u£


3154 ; 
Te°s
 
™
 
IRQ
 
löe
 
≠≥¨s
 
to
 
be
 
avaûabÀ
 
by
 
checkög
 
v¨ious
 
ödiˇt‹s


3156 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
 
to
 
ã°


3157 ; 
Ouçut
: 
CY
 
˛ór
 
avaûabÀ
, CY 
£t
 
ö
 
u£


3158 ; 
U£s
: 
AX
, 
DX


3160 
is_úq_avaûabÀ
 
PROC


3161 
push
 
ax


3162 
push
 
dx


3164 ; 
Fú°
 
vÆid©e
 
the
 
IRQ
 
numbî


3165 
ˇŒ
 
is_vÆid_úq_numbî


3166 
jc
 .
nŸ_avaûabÀ


3168 ; 
Check
 
PIC
 
mask
 - 
IRQ
 
is
 
íabÀd
, 
somëhög
 
might
 
be
 
usög
 
ô


3169 
ˇŒ
 
ªad_pic_mask


3170 
jc
 .
nŸ_avaûabÀ


3172 ; 
Addôi⁄Æ
 
avaûabûôy
 
checks
 
could
 
be
 
added
 
hîe
:

3173 ; - 
Check
 
öãºu±
 
ve˘‹
 
n⁄
- 
h™dÀr


3174 ; - 
Probe
 
devi˚
 
ª•⁄£
 
⁄
 
IRQ


3175 ; - 
Check
 
known
 
sy°em
 
devi˚
 
assignmíts


3177 
˛c
 ; 
Assume
 
avaûabÀ


3178 
jmp
 .
exô


3180 .
nŸ_avaûabÀ
:

3181 
°c


3183 .
exô
:

3184 
p›
 
dx


3185 
p›
 
ax


3186 
ªt


3187 
is_úq_avaûabÀ
 
ENDP


3190 ; 
ªad_pic_mask
 - 
Ród
 
PIC
 
öãºu±
 
mask
 
IRQ


3192 ; 
Róds
 
the
 
cuºít
 
öãºu±
 
mask
 
bô
 
•ecifõd
 
IRQ


3194 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî


3195 ; 
Ouçut
: 
CY
 
˛ór
 
	`masked
 (
dißbÀd
), CY 
£t
 
íabÀd


3196 ; 
U£s
: 
AX
, 
DX


3198 
ªad_pic_mask
 
PROC


3199 
push
 
ax


3200 
push
 
dx


3202 
cmp
 
bl
, 8

3203 
jl
 .
ªad_ma°î


3205 ; 
Ród
 
¶ave
 
PIC
 
mask


3206 
mov
 
dx
, 
PIC2_DATA


3207 
ö
 
Æ
, 
dx


3208 
sub
 
bl
, 8 ; 
C⁄vît
 
to
 
¶ave
 
	`IRQ
 (0-7)

3209 
jmp
 .
ã°_bô


3211 .
ªad_ma°î
:

3212 ; 
Ród
 
ma°î
 
PIC
 
mask


3213 
mov
 
dx
, 
PIC1_DATA


3214 
ö
 
Æ
, 
dx


3216 .
ã°_bô
:

3217 ; 
Te°
 
the
 
bô
 
this
 
IRQ


3218 
mov
 
˛
, 
bl


3219 
shr
 
Æ
, 
˛


3220 
™d
 
Æ
, 1

3221 
cmp
 
Æ
, 0

3222 
je
 .
úq_íabÀd
 ; 
Bô
 0 = 
íabÀd


3224 ; 
IRQ
 
is
 
	$masked
 (
dißbÀd
)

3225 
˛c


3226 
jmp
 .
exô


3228 .
úq_íabÀd
:

3229 ; 
IRQ
 
is
 
	$íabÀd
 (
pŸítüŒy
 
ö
 
u£
)

3230 
°c


3232 .
exô
:

3233 
p›
 
dx


3234 
p›
 
ax


3235 
ªt


3236 
ªad_pic_mask
 
ENDP


3239 ; 
≠∂y_deÁu…_úqs
 - 
Aµly
  
IRQ
 
assignmíts


3241 ; 
Sës
 
up
  
IRQ
 
assignmíts
 
whí
áuto-
dëe˘i⁄
 
Áûs


3243 ; 
I≈ut
: 
N⁄e


3244 ; 
Ouçut
: 
N⁄e


3245 ; 
U£s
: 
AL
, 
SI


3247 
≠∂y_deÁu…_úqs
 
PROC


3248 
push
 
ax


3249 
push
 
si


3251 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


3252 
mov
 
byã
 
±r
 [
si
], 10 ; 
DeÁu…
 
IRQ
 10 
fú°
 
NIC


3253 
mov
 
byã
 
±r
 [
si
+1], 11 ; 
DeÁu…
 
IRQ
 11 
£c⁄d
 
NIC


3255 
p›
 
si


3256 
p›
 
ax


3257 
ªt


3258 
≠∂y_deÁu…_úqs
 
ENDP


3261 ; 
vÆid©e_sögÀ_úq_numbî
 - 
VÆid©e
 
sögÀ
 
IRQ
 
ö
 
ö°Æl_nic_úq
 
c⁄ãxt


3263 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
, 
AL
 = 
NIC
 
ödex


3264 ; 
Ouçut
: 
CY
 
˛ór
 
vÆid
, CY 
£t
 
övÆid


3265 ; 
U£s
: 
	`N⁄e
 (
¥e£rves
 
Æl
 
ªgi°îs
)

3267 
vÆid©e_sögÀ_úq_numbî
 
PROC


3268 
push
 
bx


3269 
ˇŒ
 
is_vÆid_úq_numbî
 ; 
BL
 
Æªady
 
c⁄èös
 
IRQ


3270 
p›
 
bx


3271 
ªt


3272 
vÆid©e_sögÀ_úq_numbî
 
ENDP


3275 ; 
check_úq_c⁄Êi˘
 - 
Check
 
IRQ
 
c⁄Êi˘
 
durög
 
ö°Æœti⁄


3277 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
, 
AL
 = 
NIC
 
ödex


3278 ; 
Ouçut
: 
CY
 
˛ór
 
no
 
c⁄Êi˘
, CY 
£t
 conflict

3279 ; 
U£s
: 
BX


3281 
check_úq_c⁄Êi˘
 
PROC


3282 
ˇŒ
 
check_sögÀ_úq_c⁄Êi˘


3283 
ªt


3284 
check_úq_c⁄Êi˘
 
ENDP


3287 ; 
ßve_‹igöÆ_ve˘‹
 - 
Save
 
‹igöÆ
 
öãºu±
 
ve˘‹
 
bef‹e
 
ö°Æœti⁄


3289 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
, 
AL
 = 
NIC
 
ödex


3290 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


3291 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
ES


3293 
ßve_‹igöÆ_ve˘‹
 
PROC


3294 
push
 
ax


3295 
push
 
bx


3296 
push
 
cx


3297 
push
 
dx


3298 
push
 
es


3300 ; 
C⁄vît
 
IRQ
 
to
 
öãºu±
 
ve˘‹
 
numbî


3301 
mov
 
˛
, 
bl


3302 
cmp
 
bl
, 8

3303 
jl
 .
ma°î_úq


3305 ; 
Sœve
 
	`IRQ
 (8-15Ë-> 
INT
 70
h
-77h

3306 
add
 
˛
, 70
h
 - 8

3307 
jmp
 .
gë_ve˘‹


3309 .
ma°î_úq
:

3310 ; 
Ma°î
 
	`IRQ
 (0-7Ë-> 
INT
 08
h
-0Fh

3311 
add
 
˛
, 08
h


3313 .
gë_ve˘‹
:

3314 ; 
Gë
 
cuºít
 
ve˘‹


3315 
mov
 
ah
, 35
h


3316 
mov
 
Æ
, 
˛


3317 21
h
 ; 
Rëu∫s
 
ES
:
BX


3319 ; 
St‹e
 
‹igöÆ
 
	`ve˘‹
 (
sim∂ifõd
 - 
would
 
√ed
 
¥›î
 
°‹age
)

3320 ; 
In
 
fuŒ
 
im∂emíèti⁄
: 
°‹e
 
ES
:
BX
 
ö
 
‹igöÆ_úq_ve˘‹s
 
¨øy


3322 
˛c
 ; 
Suc˚ss


3324 
p›
 
es


3325 
p›
 
dx


3326 
p›
 
cx


3327 
p›
 
bx


3328 
p›
 
ax


3329 
ªt


3330 
ßve_‹igöÆ_ve˘‹
 
ENDP


3333 ; 
ö°Æl_úq_h™dÀr
 - 
In°Æl
 
≠¥›rüã
 
IRQ
 
h™dÀr
 
NIC
 
ty≥


3335 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî
, 
AL
 = 
NIC
 
ödex


3336 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


3337 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


3339 
ö°Æl_úq_h™dÀr
 
PROC


3340 
push
 
ax


3341 
push
 
bx


3342 
push
 
cx


3343 
push
 
dx


3345 ; 
C⁄vît
 
IRQ
 
to
 
öãºu±
 
ve˘‹


3346 
mov
 
˛
, 
bl


3347 
cmp
 
bl
, 8

3348 
jl
 .
ma°î_úq_ö°Æl


3350 
add
 
˛
, 70
h
 - 8 ; 
Sœve
 
IRQ
 
ve˘‹


3351 
jmp
 .
ö°Æl_ve˘‹


3353 .
ma°î_úq_ö°Æl
:

3354 
add
 
˛
, 08
h
 ; 
Ma°î
 
IRQ
 
ve˘‹


3356 .
ö°Æl_ve˘‹
:

3357 ; 
Dëîmöe
 
h™dÀr
 
ba£d
 
⁄
 
NIC
 
ödex
/
ty≥


3358 
cmp
 
Æ
, 0

3359 
je
 .
ö°Æl_3c509b


3361 ; 
In°Æl
 3C515 
h™dÀr


3362 
mov
 
dx
, 
OFFSET
 
nic_úq_h™dÀr_3c515


3363 
jmp
 .
do_ö°Æl


3365 .
ö°Æl_3c509b
:

3366 ; 
In°Æl
 3C509B 
h™dÀr


3367 
mov
 
dx
, 
OFFSET
 
nic_úq_h™dÀr_3c509b


3369 .
do_ö°Æl
:

3370 ; 
In°Æl
 
the
 
ve˘‹


3371 
push
 
ds


3372 
mov
 
ax
, 
cs


3373 
mov
 
ds
, 
ax


3374 
mov
 
ah
, 25
h


3375 
mov
 
Æ
, 
˛


3376 21
h


3377 
p›
 
ds


3379 
˛c
 ; 
Suc˚ss


3381 
p›
 
dx


3382 
p›
 
cx


3383 
p›
 
bx


3384 
p›
 
ax


3385 
ªt


3386 
ö°Æl_úq_h™dÀr
 
ENDP


3389 ; 
íabÀ_pic_úq
 - 
E«bÀ
 
IRQ
 
©
 
PIC
 
Àvñ


3391 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî


3392 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


3393 ; 
U£s
: 
AX
, 
CX
, 
DX


3395 
íabÀ_pic_úq
 
PROC


3396 
push
 
ax


3397 
push
 
cx


3398 
push
 
dx


3400 
cmp
 
bl
, 8

3401 
jl
 .
íabÀ_ma°î


3403 ; 
E«bÀ
 
¶ave
 
IRQ


3404 
mov
 
˛
, 
bl


3405 
sub
 
˛
, 8 ; 
C⁄vît
 
to
 
¶ave
 
bô
 
posôi⁄


3406 
mov
 
Æ
, 1

3407 
shl
 
Æ
, 
˛
 ; 
Cª©e
 
bô
 
mask


3408 
nŸ
 
Æ
 ; 
Invît
 
˛órög
 
bô


3410 
mov
 
dx
, 
PIC2_DATA


3411 
push
 
ax


3412 
ö
 
Æ
, 
dx
 ; 
Ród
 
cuºít
 
mask


3413 
p›
 
cx


3414 
™d
 
Æ
, 
˛
 ; 
CÀ¨
 
the
 
IRQ
 
	$bô
 (
íabÀ
)

3415 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
mask


3417 ; 
Also
 
ísuª
 
IRQ
 2 (
ˇsˇde
Ë
is
 
íabÀd
 
⁄
 
ma°î
 
PIC


3418 
mov
 
dx
, 
PIC1_DATA


3419 
ö
 
Æ
, 
dx


3420 
™d
 
Æ
, 11111011b ; 
CÀ¨
 
bô
 2 (
íabÀ
 
IRQ
 2)

3421 
out
 
dx
, 
Æ


3422 
jmp
 .
íabÀ_d⁄e


3424 .
íabÀ_ma°î
:

3425 ; 
E«bÀ
 
ma°î
 
IRQ


3426 
mov
 
˛
, 
bl


3427 
mov
 
Æ
, 1

3428 
shl
 
Æ
, 
˛
 ; 
Cª©e
 
bô
 
mask


3429 
nŸ
 
Æ
 ; 
Invît
 
˛órög
 
bô


3431 
mov
 
dx
, 
PIC1_DATA


3432 
push
 
ax


3433 
ö
 
Æ
, 
dx
 ; 
Ród
 
cuºít
 
mask


3434 
p›
 
cx


3435 
™d
 
Æ
, 
˛
 ; 
CÀ¨
 
the
 
IRQ
 
	$bô
 (
íabÀ
)

3436 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
mask


3438 .
íabÀ_d⁄e
:

3439 
˛c
 ; 
Suc˚ss


3441 
p›
 
dx


3442 
p›
 
cx


3443 
p›
 
ax


3444 
ªt


3445 
íabÀ_pic_úq
 
ENDP


3448 ; 
dißbÀ_pic_úq
 - 
DißbÀ
 
IRQ
 
©
 
PIC
 
Àvñ


3450 ; 
I≈ut
: 
BL
 = 
IRQ
 
numbî


3451 ; 
Ouçut
: 
N⁄e


3452 ; 
U£s
: 
AX
, 
CX
, 
DX


3454 
dißbÀ_pic_úq
 
PROC


3455 
push
 
ax


3456 
push
 
cx


3457 
push
 
dx


3459 
cmp
 
bl
, 8

3460 
jl
 .
dißbÀ_ma°î


3462 ; 
DißbÀ
 
¶ave
 
IRQ


3463 
mov
 
˛
, 
bl


3464 
sub
 
˛
, 8 ; 
C⁄vît
 
to
 
¶ave
 
bô
 
posôi⁄


3465 
mov
 
Æ
, 1

3466 
shl
 
Æ
, 
˛
 ; 
Cª©e
 
bô
 
mask


3468 
mov
 
dx
, 
PIC2_DATA


3469 
push
 
ax


3470 
ö
 
Æ
, 
dx
 ; 
Ród
 
cuºít
 
mask


3471 
p›
 
cx


3472 
‹
 
Æ
, 
˛
 ; 
Së
 
the
 
IRQ
 
	$bô
 (
dißbÀ
)

3473 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
mask


3474 
jmp
 .
dißbÀ_d⁄e


3476 .
dißbÀ_ma°î
:

3477 ; 
DißbÀ
 
ma°î
 
IRQ


3478 
mov
 
˛
, 
bl


3479 
mov
 
Æ
, 1

3480 
shl
 
Æ
, 
˛
 ; 
Cª©e
 
bô
 
mask


3482 
mov
 
dx
, 
PIC1_DATA


3483 
push
 
ax


3484 
ö
 
Æ
, 
dx
 ; 
Ród
 
cuºít
 
mask


3485 
p›
 
cx


3486 
‹
 
Æ
, 
˛
 ; 
Së
 
the
 
IRQ
 
	$bô
 (
dißbÀ
)

3487 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
mask


3489 .
dißbÀ_d⁄e
:

3490 
p›
 
dx


3491 
p›
 
cx


3492 
p›
 
ax


3493 
ªt


3494 
dißbÀ_pic_úq
 
ENDP


3497 ; 
upd©e_úq_åackög
 - 
Upd©e
 
IRQ
 
åackög
 
a·î
 
suc˚ssful
 
ö°Æœti⁄


3499 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex
, 
BL
 = 
IRQ
 
numbî


3500 ; 
Ouçut
: 
N⁄e


3501 ; 
U£s
: 
SI


3503 
upd©e_úq_åackög
 
PROC


3504 
push
 
si


3506 ; 
M¨k
 
IRQ
 
as
 
ö°ÆÀd


3507 
mov
 
si
, 
OFFSET
 
úq_ö°ÆÀd


3508 
mov
 
ah
, 0

3509 
add
 
si
, 
ax


3510 
mov
 
byã
 
±r
 [
si
], 1

3512 
p›
 
si


3513 
ªt


3514 
upd©e_úq_åackög
 
ENDP


3517 ; 
gë_nic_úq_numbî
 - 
Gë
 
IRQ
 
numbî
 
NIC
 
ödex


3519 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex


3520 ; 
Ouçut
: 
BL
 = 
IRQ
 
numbî
, 
CY
 
£t
 
nŸ
 
assig√d


3521 ; 
U£s
: 
BX
, 
SI


3523 
gë_nic_úq_numbî
 
PROC


3524 
push
 
si


3526 
mov
 
si
, 
OFFSET
 
nic_úq_numbîs


3527 
mov
 
ah
, 0

3528 
add
 
si
, 
ax


3529 
mov
 
bl
, [
si
]

3531 
cmp
 
bl
, 
IRQ_NONE


3532 
je
 .
nŸ_assig√d


3534 
˛c
 ; 
Suc˚ss


3535 
jmp
 .
exô


3537 .
nŸ_assig√d
:

3538 
°c
 ; 
NŸ
 
assig√d


3540 .
exô
:

3541 
p›
 
si


3542 
ªt


3543 
gë_nic_úq_numbî
 
ENDP


3546 ; 
ª°‹e_‹igöÆ_ve˘‹
 - 
Re°‹e
 
‹igöÆ
 
öãºu±
 
ve˘‹


3548 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex
, 
BL
 = 
IRQ
 
numbî


3549 ; 
Ouçut
: 
N⁄e


3550 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
ES


3552 
ª°‹e_‹igöÆ_ve˘‹
 
PROC


3553 
push
 
ax


3554 
push
 
bx


3555 
push
 
cx


3556 
push
 
dx


3557 
push
 
es


3559 ; 
C⁄vît
 
IRQ
 
to
 
ve˘‹
 
numbî


3560 
mov
 
˛
, 
bl


3561 
cmp
 
bl
, 8

3562 
jl
 .
ma°î_ª°‹e


3564 
add
 
˛
, 70
h
 - 8 ; 
Sœve
 
ve˘‹


3565 
jmp
 .
do_ª°‹e


3567 .
ma°î_ª°‹e
:

3568 
add
 
˛
, 08
h
 ; 
Ma°î
 
ve˘‹


3570 .
do_ª°‹e
:

3571 ; 
Re°‹e
 
	`ve˘‹
 (
sim∂ifõd
 - 
would
 
ªad
 
‰om
 
°‹age
)

3572 ; 
In
 
fuŒ
 
im∂emíèti⁄
: 
ª°‹e
 
‰om
 
‹igöÆ_úq_ve˘‹s
 
¨øy


3574 
p›
 
es


3575 
p›
 
dx


3576 
p›
 
cx


3577 
p›
 
bx


3578 
p›
 
ax


3579 
ªt


3580 
ª°‹e_‹igöÆ_ve˘‹
 
ENDP


3583 ; 
˛ór_úq_åackög
 - 
CÀ¨
 
IRQ
 
åackög
 
öf‹m©i⁄


3585 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex


3586 ; 
Ouçut
: 
N⁄e


3587 ; 
U£s
: 
SI


3589 
˛ór_úq_åackög
 
PROC


3590 
push
 
si


3592 ; 
CÀ¨
 
ö°ÆÀd
 
Êag


3593 
mov
 
si
, 
OFFSET
 
úq_ö°ÆÀd


3594 
mov
 
ah
, 0

3595 
add
 
si
, 
ax


3596 
mov
 
byã
 
±r
 [
si
], 0

3598 
p›
 
si


3599 
ªt


3600 
˛ór_úq_åackög
 
ENDP


3603 ; 
upd©e_unö°Æl_åackög
 - 
Upd©e
 
åackög
 
a·î
 
unö°Æl


3605 ; 
I≈ut
: 
AL
 = 
NIC
 
ödex


3606 ; 
Ouçut
: 
N⁄e


3607 ; 
U£s
: 
N⁄e


3609 
upd©e_unö°Æl_åackög
 
PROC


3610 ; 
NŸhög
 
addôi⁄Æ
 
√eded
 
basic
 
im∂emíèti⁄


3611 
ªt


3612 
upd©e_unö°Æl_åackög
 
ENDP


3615 ; 
PUBLIC
 
ENTRY
 
POINTS
 
FOR
 
PIC
 
MANAGEMENT


3619 ; 
£nd_eoi_ma°î
 - 
Síd
 
EOI
 
to
 
ma°î
 
PIC
 
⁄ly


3621 ; 
Public
 
fun˘i⁄
 
£ndög
 
EOI
 
to
 
ma°î
 
	`PIC
 (
IRQ
 0-7)

3623 ; 
I≈ut
: 
N⁄e


3624 ; 
Ouçut
: 
N⁄e


3625 ; 
U£s
: 
AX
, 
	`DX
 (
but
 
¥e£rves
 
them
)

3627 
PUBLIC
 
£nd_eoi_ma°î


3628 
£nd_eoi_ma°î
 
PROC


3629 
push
 
ax


3630 
push
 
dx


3632 
mov
 
Æ
, 
PIC_EOI


3633 
mov
 
dx
, 
PIC1_COMMAND


3634 
out
 
dx
, 
Æ


3636 
p›
 
dx


3637 
p›
 
ax


3638 
ªt


3639 
£nd_eoi_ma°î
 
ENDP


3642 ; 
£nd_eoi_¶ave
 - 
Síd
 
EOI
 
to
 
bŸh
 
¶ave
 
™d
 
ma°î
 
PICs


3644 ; 
Public
 
fun˘i⁄
 
£ndög
 
EOI
 
¶ave
 
PIC
 
	`öãºu±s
 (
IRQ
 8-15)

3645 ; 
Mu°
 
£nd
 
EOI
 
to
 
¶ave
 
fú°
, 
thí
 
	`ma°î
 (
ˇsˇde
)

3647 ; 
I≈ut
: 
N⁄e


3648 ; 
Ouçut
: 
N⁄e


3649 ; 
U£s
: 
AX
, 
	`DX
 (
but
 
¥e£rves
 
them
)

3651 
PUBLIC
 
£nd_eoi_¶ave


3652 
£nd_eoi_¶ave
 
PROC


3653 
push
 
ax


3654 
push
 
dx


3656 ; 
Síd
 
EOI
 
to
 
¶ave
 
PIC
 
fú°


3657 
mov
 
Æ
, 
PIC_EOI


3658 
mov
 
dx
, 
PIC2_COMMAND


3659 
out
 
dx
, 
Æ


3661 ; 
Thí
 
£nd
 
EOI
 
to
 
ma°î
 
	$PIC
 (
ˇsˇde
)

3662 
mov
 
dx
, 
PIC1_COMMAND


3663 
out
 
dx
, 
Æ


3665 
p›
 
dx


3666 
p›
 
ax


3667 
ªt


3668 
£nd_eoi_¶ave
 
ENDP


3671 ; 
£nd_eoi_f‹_úq
 - 
Síd
 
≠¥›rüã
 
EOI
 
ba£d
 
⁄
 
IRQ
 
numbî


3673 ; 
Public
 
fun˘i⁄
 
th©
 
autom©iˇŒy
 
£nds
 
EOI
 
to
 
c‹ª˘
 
	`PIC
(
s
)

3675 ; 
I≈ut
: 
AL
 = 
IRQ
 
	`numbî
 (0-15)

3676 ; 
Ouçut
: 
N⁄e


3677 ; 
U£s
: 
AX
, 
	`DX
 (
but
 
¥e£rves
 
‹igöÆ
 AX)

3679 
PUBLIC
 
£nd_eoi_f‹_úq


3680 
£nd_eoi_f‹_úq
 
PROC


3681 
push
 
ax


3682 
push
 
dx


3684 
cmp
 
Æ
, 8

3685 
jl
 .
ma°î_eoi


3687 ; 
IRQ
 8-15: 
Síd
 
to
 
bŸh
 
PICs


3688 
ˇŒ
 
£nd_eoi_¶ave


3689 
jmp
 .
eoi_d⁄e


3691 .
ma°î_eoi
:

3692 ; 
IRQ
 0-7: 
Síd
 
to
 
ma°î
 
⁄ly


3693 
ˇŒ
 
£nd_eoi_ma°î


3695 .
eoi_d⁄e
:

3696 
p›
 
dx


3697 
p›
 
ax


3698 
ªt


3699 
£nd_eoi_f‹_úq
 
ENDP


3702 ; 
íabÀ_úq_löe
 - 
Public
 
fun˘i⁄
 
to
 
íabÀ
 
•ecific
 
IRQ


3704 ; 
I≈ut
: 
AL
 = 
IRQ
 
	`numbî
 (0-15)

3705 ; 
Ouçut
: 
CY
 
˛ór
 
suc˚ssful
, CY 
£t
 
Áûed


3706 ; 
U£s
: 
	`BX
 (
¥e£rves
 
Ÿhî
 
ªgi°îs
)

3708 
PUBLIC
 
íabÀ_úq_löe


3709 
íabÀ_úq_löe
 
PROC


3710 
push
 
bx


3712 
mov
 
bl
, 
Æ


3713 
ˇŒ
 
íabÀ_pic_úq


3715 
p›
 
bx


3716 
ªt


3717 
íabÀ_úq_löe
 
ENDP


3720 ; 
dißbÀ_úq_löe
 - 
Public
 
fun˘i⁄
 
to
 
dißbÀ
 
•ecific
 
IRQ


3722 ; 
I≈ut
: 
AL
 = 
IRQ
 
	`numbî
 (0-15)

3723 ; 
Ouçut
: 
N⁄e


3724 ; 
U£s
: 
	`BX
 (
¥e£rves
 
Ÿhî
 
ªgi°îs
)

3726 
PUBLIC
 
dißbÀ_úq_löe


3727 
dißbÀ_úq_löe
 
PROC


3728 
push
 
bx


3730 
mov
 
bl
, 
Æ


3731 
ˇŒ
 
dißbÀ_pic_úq


3733 
p›
 
bx


3734 
ªt


3735 
dißbÀ_úq_löe
 
ENDP


3738 ; 
Suµ‹tög
 
fun˘i⁄s
 3C515-
TX
 
DMA
 
¥o˚ssög


3741 
¥o˚ss_3c515_rx_dma_rög
 
PROC


3742 ; 
Pro˚ss
 
ª˚ived
 
∑ckës
 
‰om
 
DMA
 
des¸ùt‹
 
rög


3743 ; 
This
 
h™dÀs
 
bus
-
ma°î
 
DMA
 
com∂ëi⁄
 3C515-
TX


3744 
push
 
ax


3745 
push
 
bx


3746 
push
 
cx


3747 
push
 
dx


3748 
push
 
si


3750 ; 
Gë
 
DMA
 
des¸ùt‹
 
rög
 
°©us


3751 ; 
FuŒ
 
DMA
 
des¸ùt‹
 
rög
 
im∂emíèti⁄


3752 
push
 
es


3753 
push
 
di


3754 
push
 
bx


3756 ; 
Gë
 
des¸ùt‹
 
rög
 
poöãr


3757 
mov
 
si
, [
rx_dma_rög_±r
]

3758 
ã°
 
si
, si

3759 
jz
 .
no_rög_c⁄figuªd


3761 
Às
 
di
, [
rx_dma_rög_ba£
] ; 
ES
:
DI
 = 
rög
 
ba£


3762 
mov
 
cx
, 
MAX_EVENTS_PER_IRQ
 ; 
Pro˚ss
 
limô


3764 .
¥o˚ss_des¸ùt‹s
:

3765 ; 
Check
 
des¸ùt‹
 
°©us


3766 
mov
 
ax
, 
es
:[
di
] ; 
Sètus
 
w‹d


3767 
ã°
 
ax
, 0x8000 ; 
Com∂ëe
 
bô


3768 
jz
 .
no_m‹e_rx
 ; 
NŸ
 
com∂ëe
, 
d⁄e


3770 ; 
Exåa˘
 
∑ckë
 
Àngth


3771 
™d
 
ax
, 0x1FFF ; 13-
bô
 
Àngth
 
fõld


3772 
push
 
ax
 ; 
Save
 
Àngth


3774 ; 
Gë
 
∑ckë
 
buf„r
 
addªss


3775 
mov
 
bx
, 
es
:[
di
+4] ; 
Buf„r
 
low
 
w‹d


3776 
mov
 
dx
, 
es
:[
di
+6] ; 
Buf„r
 
high
 
w‹d


3778 ; 
Pro˚ss
 
the
 
∑ckë


3779 
push
 
cx


3780 
push
 
di


3781 
push
 
dx


3782 
push
 
bx


3783 
push
 
ax
 ; 
Lígth


3784 
ˇŒ
 
¥o˚ss_dma_∑ckë


3785 
add
 
•
, 6 ; 
CÀ™
 
up
 
°ack


3786 
p›
 
di


3787 
p›
 
cx


3788 
p›
 
ax
 ; 
Re°‹e
 
Àngth


3790 ; 
M¨k
 
des¸ùt‹
 
as
 
‰ì


3791 
mov
 
w‹d
 
±r
 
es
:[
di
], 0 ; 
CÀ¨
 
°©us


3793 ; 
AŒoˇã
 
√w
 
buf„r
 
this
 
des¸ùt‹


3794 
push
 
cx


3795 
ˇŒ
 
Æloˇã_rx_buf„r


3796 
jc
 .
Æloc_Áûed


3798 ; 
Upd©e
 
des¸ùt‹
 
wôh
 
√w
 
buf„r


3799 
mov
 
es
:[
di
+4], 
ax
 ; 
Buf„r
 
low


3800 
mov
 
es
:[
di
+6], 
dx
 ; 
Buf„r
 
high


3801 
mov
 
w‹d
 
±r
 
es
:[
di
+8], 1600 ; 
Max
 
size


3802 
mov
 
w‹d
 
±r
 
es
:[
di
], 0x8000 ; 
Give
 
to
 
NIC


3804 .
Æloc_Áûed
:

3805 
p›
 
cx


3807 ; 
Adv™˚
 
to
 
√xt
 
des¸ùt‹


3808 
add
 
di
, 16 ; 
Des¸ùt‹
 
size


3809 
cmp
 
di
, [
rx_dma_rög_íd
]

3810 
jb
 .
no_wøp


3811 
Às
 
di
, [
rx_dma_rög_ba£
] ; 
Wøp
 
to
 
°¨t


3812 .
no_wøp
:

3814 
lo›
 .
¥o˚ss_des¸ùt‹s


3816 .
no_m‹e_rx
:

3817 ; 
Upd©e
 
rög
 
poöãr


3818 
mov
 [
rx_dma_rög_±r
], 
di


3820 ; 
Refûl
 
™y
 
em±y
 
des¸ùt‹s


3821 
ˇŒ
 
ªfûl_rx_des¸ùt‹s


3823 .
no_rög_c⁄figuªd
:

3824 
p›
 
bx


3825 
p›
 
di


3826 
p›
 
es


3828 ; 
F‹
 
now
, 
ju°
 
acknowÀdge
 
DMA
 
com∂ëi⁄


3829 
mov
 
dx
, 320
h
 ; 3C515-
TX
 
ba£


3830 
add
 
dx
, 20
h
 ; 
DMA_STATUS


3831 
ö
 
Æ
, 
dx
 ; 
Ród
 
°©us


3832 
ã°
 
Æ
, 01
h
 ; 
RX_DMA_COMPLETE


3833 
jz
 .
no_rx_dma


3835 ; 
CÀ¨
 
RX
 
DMA
 
com∂ëi⁄
 
bô


3836 
mov
 
Æ
, 01
h


3837 
out
 
dx
, 
Æ
 ; 
Wrôe
 1 
to
 
˛ór


3839 .
no_rx_dma
:

3840 
p›
 
si


3841 
p›
 
dx


3842 
p›
 
cx


3843 
p›
 
bx


3844 
p›
 
ax


3845 
ªt


3846 
¥o˚ss_3c515_rx_dma_rög
 
ENDP


3848 
¥o˚ss_3c515_tx_com∂ëi⁄s
 
PROC


3849 ; 
Pro˚ss
 
com∂ëed
 
å™smô
 
DMA
 
å™s„rs


3850 
push
 
ax


3851 
push
 
dx


3853 ; 
CÀ¨
 
TX
 
DMA
 
com∂ëi⁄
 
°©us


3854 
mov
 
dx
, 320
h
 ; 3C515-
TX
 
ba£


3855 
add
 
dx
, 20
h
 ; 
DMA_STATUS


3856 
ö
 
Æ
, 
dx
 ; 
Ród
 
°©us


3857 
ã°
 
Æ
, 02
h
 ; 
TX_DMA_COMPLETE


3858 
jz
 .
no_tx_dma


3860 ; 
CÀ¨
 
TX
 
DMA
 
com∂ëi⁄
 
bô


3861 
mov
 
Æ
, 02
h


3862 
out
 
dx
, 
Æ
 ; 
Wrôe
 1 
to
 
˛ór


3864 ; 
Pro˚ss
 
com∂ëed
 
TX
 
des¸ùt‹s


3865 
push
 
es


3866 
push
 
di


3867 
push
 
si


3868 
push
 
bx


3870 ; 
Gë
 
TX
 
des¸ùt‹
 
rög


3871 
mov
 
si
, [
tx_dma_rög_±r
]

3872 
ã°
 
si
, si

3873 
jz
 .
no_tx_rög


3875 
Às
 
di
, [
tx_dma_rög_ba£
] ; 
ES
:
DI
 = 
TX
 
rög


3876 
mov
 
cx
, 
MAX_EVENTS_PER_IRQ


3878 .
¥o˚ss_tx_desc
:

3879 ; 
Check
 
des¸ùt‹
 
°©us


3880 
mov
 
ax
, 
es
:[
di
]

3881 
ã°
 
ax
, 0x8000 ; 
Com∂ëe
 
bô


3882 
jz
 .
no_m‹e_tx


3884 ; 
Check
 
îr‹s


3885 
ã°
 
ax
, 0x4000 ; 
Eº‹
 
bô


3886 
jz
 .
tx_suc˚ss_dma


3888 ; 
H™dÀ
 
TX
 
îr‹


3889 
öc
 
w‹d
 
±r
 [
tx_îr‹_cou¡
]

3890 
ˇŒ
 
log_tx_dma_îr‹


3891 
jmp
 .
‰ì_tx_buf„r_dma


3893 .
tx_suc˚ss_dma
:

3894 ; 
Upd©e
 
suc˚ss
 
°©i°ics


3895 
öc
 
w‹d
 
±r
 [
tx_∑ckë_cou¡
]

3896 
mov
 
bx
, 
ax


3897 
™d
 
bx
, 0x1FFF ; 
Exåa˘
 
Àngth


3898 
add
 
w‹d
 
±r
 [
tx_byãs_lo
], 
bx


3899 
adc
 
w‹d
 
±r
 [
tx_byãs_hi
], 0

3901 .
‰ì_tx_buf„r_dma
:

3902 ; 
Fªe
 
the
 
å™smôãd
 
buf„r


3903 
mov
 
ax
, 
es
:[
di
+4] ; 
Buf„r
 
low


3904 
mov
 
dx
, 
es
:[
di
+6] ; 
Buf„r
 
high


3905 
ˇŒ
 
‰ì_tx_buf„r_addr


3907 ; 
CÀ¨
 
des¸ùt‹


3908 
mov
 
dw‹d
 
±r
 
es
:[
di
], 0

3909 
mov
 
dw‹d
 
±r
 
es
:[
di
+4], 0

3910 
mov
 
dw‹d
 
±r
 
es
:[
di
+8], 0

3912 ; 
Sig«l
 
TX
 
com∂ëe


3913 
ˇŒ
 
sig«l_tx_com∂ëe


3915 ; 
Adv™˚
 
to
 
√xt
 
des¸ùt‹


3916 
add
 
di
, 16

3917 
cmp
 
di
, [
tx_dma_rög_íd
]

3918 
jb
 .
no_tx_wøp


3919 
Às
 
di
, [
tx_dma_rög_ba£
]

3920 .
no_tx_wøp
:

3922 
lo›
 .
¥o˚ss_tx_desc


3924 .
no_m‹e_tx
:

3925 ; 
Upd©e
 
TX
 
rög
 
poöãr


3926 
mov
 [
tx_dma_rög_±r
], 
di


3928 .
no_tx_rög
:

3929 
p›
 
bx


3930 
p›
 
si


3931 
p›
 
di


3932 
p›
 
es


3934 .
no_tx_dma
:

3935 
p›
 
dx


3936 
p›
 
ax


3937 
ªt


3938 
¥o˚ss_3c515_tx_com∂ëi⁄s
 
ENDP


3941 ; 
Enh™˚d
 
öãºu±
 
h™dÀrs
 
wôh
 
	`b©chög
 (
max
 10 
evíts
 
≥r
 interrupt)

3944 
nic_¥o˚ss_öãºu±_b©ch_3c509b
 
PROC


3945 ; 
Pro˚ss
 3C509B 
öãºu±s
 
wôh
 
b©chög
 
to
 
¥evít
 
öãºu±
 
°‹ms


3946 ; 
Limôs
 
¥o˚ssög
 
to
 
MAX_EVENTS_PER_IRQ
 
evíts
 
≥r
 
öãºu±


3947 
push
 
ax


3948 
push
 
bx


3949 
push
 
cx


3950 
push
 
dx


3952 ; 
Inôülize
 
b©ch
 
cou¡î


3953 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 0

3954 
mov
 
dx
, 300
h
 ; 3C509B 
ba£
 
I
/
O


3956 .
b©ch_lo›
:

3957 ; 
Check
 
we
've hitÅhe batchingÜimit

3958 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 
MAX_EVENTS_PER_IRQ


3959 
j´
 .
b©ch_com∂ëe
 ; 
Hô
 
limô
, 
de„r
 
ª°


3961 ; 
Check
 
öãºu±
 
c⁄dôi⁄s


3962 
add
 
dx
, 0E
h
 ; 
INT_STATUS
 

3963 
ö
 
Æ
, 
dx
 ; 
Ród
 
öãºu±
 
°©us


3964 
ã°
 
Æ
, 3F
h
 ; 
Any
 
öãºu±
 
bôs
 
£t
?

3965 
jz
 .
b©ch_com∂ëe
 ; 
No
 
m‹e
 
öãºu±s


3967 ; 
Pro˚ss
 
óch
 
öãºu±
 
ty≥
 
wôh
 
möimÆ
 
w‹k


3968 
ã°
 
Æ
, 01
h
 ; 
RX_COMPLETE


3969 
jz
 .
check_b©ch_tx


3971 ; 
MöimÆ
 
RX
 
¥o˚ssög
 - 
ju°
 
acknowÀdge


3972 
ˇŒ
 
acknowÀdge_3c509b_rx_möimÆ


3973 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c509b
]

3975 .
check_b©ch_tx
:

3976 
ã°
 
Æ
, 02
h
 ; 
TX_COMPLETE


3977 
jz
 .
check_b©ch_îr‹s


3979 ; 
MöimÆ
 
TX
 
¥o˚ssög
 - 
ju°
 
acknowÀdge


3980 
ˇŒ
 
acknowÀdge_3c509b_tx_möimÆ


3981 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c509b
]

3983 .
check_b©ch_îr‹s
:

3984 
ã°
 
Æ
, 0C
h
 ; 
TX_ERROR
 
‹
 
RX_ERROR


3985 
jz
 .
b©ch_c⁄töue


3987 ; 
MöimÆ
 
îr‹
 
¥o˚ssög
 - 
acknowÀdge
 
™d
 
cou¡


3988 
ˇŒ
 
acknowÀdge_3c509b_îr‹_möimÆ


3989 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c509b
]

3991 .
b©ch_c⁄töue
:

3992 
sub
 
dx
, 0E
h
 ; 
Back
 
to
 
ba£


3993 
jmp
 .
b©ch_lo›
 ; 
Check
 
m‹e
 
evíts


3995 .
b©ch_com∂ëe
:

3996 ; 
If
 
we
 
hô
 
the
 
b©chög
 
limô
, 
queue
 
m‹e
 
w‹k
 
œãr


3997 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c509b
], 
MAX_EVENTS_PER_IRQ


3998 
jb
 .
b©chög_d⁄e


4000 ; 
Queue
 
de„ºed
 
w‹k
 
to
 
¥o˚ss
 
ªmaöög
 
öãºu±s


4001 
mov
 
ax
, 
OFFSET
 
¥o˚ss_3c509b_∑ckës


4002 
ˇŒ
 
queue_de„ºed_w‹k


4004 .
b©chög_d⁄e
:

4005 
p›
 
dx


4006 
p›
 
cx


4007 
p›
 
bx


4008 
p›
 
ax


4009 
ªt


4010 
nic_¥o˚ss_öãºu±_b©ch_3c509b
 
ENDP


4012 
nic_¥o˚ss_öãºu±_b©ch_3c515
 
PROC


4013 ; 
Pro˚ss
 3C515-
TX
 
öãºu±s
 
wôh
 
b©chög


4014 
push
 
ax


4015 
push
 
bx


4016 
push
 
cx


4017 
push
 
dx


4019 ; 
Inôülize
 
b©ch
 
cou¡î


4020 
mov
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 0

4021 
mov
 
dx
, 320
h
 ; 3C515-
TX
 
ba£
 
I
/
O


4023 .
b©ch_lo›_3c515
:

4024 ; 
Check
 
b©chög
 
limô


4025 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 
MAX_EVENTS_PER_IRQ


4026 
j´
 .
b©ch_com∂ëe_3c515


4028 ; 
Sñe˘
 
I¡Sètus
 
wödow


4029 
add
 
dx
, 0E
h
 ; 
Comm™d
 

4030 
mov
 
ax
, 7000
h
 ; 
Wödow
 7

4031 
out
 
dx
, 
ax


4033 ; 
Check
 
öãºu±
 
°©us


4034 
sub
 
dx
, 0E
h
 ; 
Back
 
to
 
ba£


4035 
add
 
dx
, 08
h
 ; 
I¡Sètus
 

4036 
ö
 
ax
, 
dx
 ; 
Ród
 
öãºu±
 
°©us


4037 
ã°
 
ax
, 003F
h
 ; 
Any
 
°™d¨d
 
öãºu±s
?

4038 
jz
 .
check_3c515_dma
 ; 
Check
 
DMA
 
öãºu±s


4040 ; 
Pro˚ss
 
°™d¨d
 
öãºu±s
 
möimÆly


4041 
ã°
 
ax
, 0001
h
 ; 
RxCom∂ëe


4042 
jz
 .
check_3c515_tx


4044 
ˇŒ
 
acknowÀdge_3c515_rx_möimÆ


4045 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c515
]

4047 .
check_3c515_tx
:

4048 
ã°
 
ax
, 0002
h
 ; 
TxCom∂ëe


4049 
jz
 .
check_3c515_dma


4051 
ˇŒ
 
acknowÀdge_3c515_tx_möimÆ


4052 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c515
]

4054 .
check_3c515_dma
:

4055 ; 
Check
 
DMA
 
öãºu±s


4056 
sub
 
dx
, 08
h
 ; 
Back
 
to
 
ba£


4057 
add
 
dx
, 20
h
 ; 
DMA_STATUS


4058 
ö
 
Æ
, 
dx
 ; 
Ród
 
DMA
 
°©us


4059 
ã°
 
Æ
, 03
h
 ; 
Any
 
DMA
 
öãºu±s
?

4060 
jz
 .
b©ch_c⁄töue_3c515


4062 ; 
AcknowÀdge
 
DMA
 
öãºu±s
 
möimÆly


4063 
out
 
dx
, 
Æ
 ; 
Wrôe
 
back
 
to
 
˛ór


4064 
öc
 
byã
 
±r
 [
b©ch_cou¡_3c515
]

4066 .
b©ch_c⁄töue_3c515
:

4067 
sub
 
dx
, 20
h
 ; 
Back
 
to
 
ba£


4068 
jmp
 .
b©ch_lo›_3c515


4070 .
b©ch_com∂ëe_3c515
:

4071 ; 
Queue
 
de„ºed
 
w‹k
 
we
 
hô
 
the
 
limô


4072 
cmp
 
byã
 
±r
 [
b©ch_cou¡_3c515
], 
MAX_EVENTS_PER_IRQ


4073 
jb
 .
b©chög_d⁄e_3c515


4075 
mov
 
ax
, 
OFFSET
 
¥o˚ss_3c515_∑ckës


4076 
ˇŒ
 
queue_de„ºed_w‹k


4078 .
b©chög_d⁄e_3c515
:

4079 
p›
 
dx


4080 
p›
 
cx


4081 
p›
 
bx


4082 
p›
 
ax


4083 
ªt


4084 
nic_¥o˚ss_öãºu±_b©ch_3c515
 
ENDP


4087 ; 
MöimÆ
 
acknowÀdgmít
 
fun˘i⁄s
 
öãºu±
 
b©chög


4090 
acknowÀdge_3c509b_rx_möimÆ
 
PROC


4091 ; 
MöimÆ
 
RX
 
acknowÀdgmít
 
b©chög


4092 
push
 
dx


4093 
push
 
ax


4094 
mov
 
dx
, 300
h


4095 
add
 
dx
, 0C
h
 ; 
RX_STATUS


4096 
ö
 
ax
, 
dx
 ; 
Ród
 
to
 
acknowÀdge


4097 
p›
 
ax


4098 
p›
 
dx


4099 
ªt


4100 
acknowÀdge_3c509b_rx_möimÆ
 
ENDP


4102 
acknowÀdge_3c509b_tx_möimÆ
 
PROC


4103 ; 
MöimÆ
 
TX
 
acknowÀdgmít
 
b©chög


4104 
push
 
dx


4105 
push
 
ax


4106 
mov
 
dx
, 300
h


4107 
add
 
dx
, 0A
h
 ; 
TX_STATUS


4108 
ö
 
Æ
, 
dx
 ; 
Ród
 
to
 
acknowÀdge


4109 
p›
 
ax


4110 
p›
 
dx


4111 
ªt


4112 
acknowÀdge_3c509b_tx_möimÆ
 
ENDP


4114 
acknowÀdge_3c509b_îr‹_möimÆ
 
PROC


4115 ; 
MöimÆ
 
îr‹
 
acknowÀdgmít
 
b©chög


4116 
push
 
dx


4117 
push
 
ax


4118 
mov
 
dx
, 300
h


4119 
add
 
dx
, 0E
h
 ; 
INT_STATUS


4120 
ö
 
Æ
, 
dx
 ; 
Ród
 
to
 
˛ór


4121 
p›
 
ax


4122 
p›
 
dx


4123 
ªt


4124 
acknowÀdge_3c509b_îr‹_möimÆ
 
ENDP


4126 
acknowÀdge_3c515_rx_möimÆ
 
PROC


4127 ; 
MöimÆ
 3C515-
TX
 
RX
 
acknowÀdgmít


4128 
push
 
dx


4129 
push
 
ax


4130 
mov
 
dx
, 320
h


4131 
add
 
dx
, 08
h
 ; 
	$I¡Sètus
 (
Wödow
 7 
assumed
)

4132 
ö
 
ax
, 
dx


4133 
™d
 
ax
, 0001
h
 ; 
Isﬁ©e
 
RxCom∂ëe


4134 
out
 
dx
, 
ax
 ; 
Wrôe
 1 
to
 
˛ór


4135 
p›
 
ax


4136 
p›
 
dx


4137 
ªt


4138 
acknowÀdge_3c515_rx_möimÆ
 
ENDP


4140 
acknowÀdge_3c515_tx_möimÆ
 
PROC


4141 ; 
MöimÆ
 3C515-
TX
 TX 
acknowÀdgmít


4142 
push
 
dx


4143 
push
 
ax


4144 
mov
 
dx
, 320
h


4145 
add
 
dx
, 08
h
 ; 
	$I¡Sètus
 (
Wödow
 7 
assumed
)

4146 
ö
 
ax
, 
dx


4147 
™d
 
ax
, 0002
h
 ; 
Isﬁ©e
 
TxCom∂ëe


4148 
out
 
dx
, 
ax
 ; 
Wrôe
 1 
to
 
˛ór


4149 
p›
 
ax


4150 
p›
 
dx


4151 
ªt


4152 
acknowÀdge_3c515_tx_möimÆ
 
ENDP


4155 ; 
Hñ≥r
 
Fun˘i⁄s
 
I¡îru±
 
H™dlög


4158 ; 
I
/
O
 
dñay
 
ISA
 
bus
 
timög


4159 
io_dñay
 
PROC


4160 
push
 
ax


4161 
ö
 
Æ
, 80
h
 ; 
Ród
 
‰om
 
unu£d
 
p‹t


4162 
ö
 
Æ
, 80
h
 ; 
Two
 
ªads
 ~1¬µ
s
 
dñay


4163 
p›
 
ax


4164 
ªt


4165 
io_dñay
 
ENDP


4167 ; 
Gë
 
NIC
 
I
/
O
 
ba£
 
addªss


4168 
gë_nic_ioba£
 
PROC


4169 ; 
I≈ut
: 
SI
 = 
NIC
 
ödex


4170 ; 
Ouçut
: 
AX
 = 
I
/
O
 
ba£
 
addªss


4171 
push
 
bx


4172 
movzx
 
bx
, 
si


4173 
shl
 
bx
, 1 ; 
W‹d
 
off£t


4174 
mov
 
ax
, [
nic_ioba£_èbÀ
 + 
bx
]

4175 
p›
 
bx


4176 
ªt


4177 
gë_nic_ioba£
 
ENDP


4179 ; 
Check
 
NIC
 
öãºu±
 
°©us


4180 
check_nic_öãºu±_°©us
 
PROC


4181 ; 
I≈ut
: 
SI
 = 
NIC
 
ödex


4182 ; 
Ouçut
: 
AX
 = 1 
öãºu±
 
≥ndög
, 0 
nŸ


4183 
push
 
dx


4184 
push
 
bx


4186 
ˇŒ
 
gë_nic_ioba£


4187 
ã°
 
ax
,áx

4188 
jz
 .
no_öãºu±


4189 
mov
 
dx
, 
ax


4191 ; 
Ród
 
öãºu±
 
°©us
 

4192 
add
 
dx
, 0x0E ; 
INT_STATUS
 
off£t


4193 
ö
 
ax
, 
dx


4194 
ã°
 
ax
, 0x00FF ; 
Check
 
™y
 
öãºu±s


4195 
jz
 .
no_öãºu±


4197 
mov
 
ax
, 1 ; 
I¡îru±
 
≥ndög


4198 
jmp
 .
°©us_d⁄e


4200 .
no_öãºu±
:

4201 
x‹
 
ax
,áx ; 
No
 
öãºu±


4203 .
°©us_d⁄e
:

4204 
p›
 
bx


4205 
p›
 
dx


4206 
ªt


4207 
check_nic_öãºu±_°©us
 
ENDP


4209 ; 
H™dÀ
 
NIC
 
öãºu±


4210 
h™dÀ_nic_öãºu±
 
PROC


4211 ; 
I≈ut
: 
SI
 = 
NIC
 
ödex
 
wôh
 
öãºu±


4212 
push
 
ax


4213 
push
 
bx


4214 
push
 
dx


4216 ; 
Dëîmöe
 
NIC
 
ty≥
 
™d
 
ˇŒ
 
≠¥›rüã
 
h™dÀr


4217 
cmp
 
si
, 0

4218 
je
 .
h™dÀ_3c509b


4219 
cmp
 
si
, 1

4220 
je
 .
h™dÀ_3c515


4221 
jmp
 .
d⁄e


4223 .
h™dÀ_3c509b
:

4224 
ˇŒ
 
h¨dw¨e_h™dÀ_3c509b_úq


4225 
jmp
 .
d⁄e


4227 .
h™dÀ_3c515
:

4228 
ˇŒ
 
h¨dw¨e_h™dÀ_3c515_úq


4230 .
d⁄e
:

4231 
p›
 
dx


4232 
p›
 
bx


4233 
p›
 
ax


4234 
ªt


4235 
h™dÀ_nic_öãºu±
 
ENDP


4237 ; 
Pro˚ss
 3C509B 
öãºu±s


4238 
¥o˚ss_3c509b_öãºu±s
 
PROC


4239 ; 
I≈ut
: 
BX
 = 
öãºu±
 
°©us
, 
DX
 = 
I
/
O
 
ba£


4240 
push
 
ax


4241 
push
 
cx


4243 ; 
Pro˚ss
 
óch
 
öãºu±
 
ty≥


4244 
ã°
 
bx
, 0x0001 ; 
RX_COMPLETE


4245 
jz
 .
no_rx


4246 
ˇŒ
 
h™dÀ_rx_öãºu±_3c509b


4247 .
no_rx
:

4248 
ã°
 
bx
, 0x0004 ; 
TX_COMPLETE


4249 
jz
 .
no_tx


4250 
ˇŒ
 
h™dÀ_tx_öãºu±_3c509b


4251 .
no_tx
:

4252 
ã°
 
bx
, 0x0080 ; 
ADAPTER_FAIL


4253 
jz
 .
no_Áû


4254 
ˇŒ
 
h™dÀ_ad≠ãr_Áûuª_3c509b


4255 .
no_Áû
:

4257 ; 
AcknowÀdge
 
Æl
 
¥o˚s£d
 
öãºu±s


4258 
mov
 
ax
, 
bx


4259 
™d
 
ax
, 0x00FF

4260 
‹
 
ax
, 0x6800 ; 
ACK_INTR
 
comm™d


4261 
add
 
dx
, 0x0E

4262 
out
 
dx
, 
ax


4264 
p›
 
cx


4265 
p›
 
ax


4266 
ªt


4267 
¥o˚ss_3c509b_öãºu±s
 
ENDP


4269 ; 
Pro˚ss
 
sögÀ
 3C509B 
evít


4270 
¥o˚ss_3c509b_evít
 
PROC


4271 ; 
I≈ut
: 
BX
 = 
öãºu±
 
°©us
, 
DX
 = 
I
/
O
 
ba£


4272 
push
 
ax


4274 ; 
Simû¨
 
to
 
¥o˚ss_3c509b_öãºu±s
 
but
 
sögÀ
 
evít


4275 
ã°
 
bx
, 0x0001

4276 
jz
 .
check_tx


4277 
ˇŒ
 
h™dÀ_rx_öãºu±_3c509b


4278 
jmp
 .
evít_d⁄e


4280 .
check_tx
:

4281 
ã°
 
bx
, 0x0004

4282 
jz
 .
check_îr‹


4283 
ˇŒ
 
h™dÀ_tx_öãºu±_3c509b


4284 
jmp
 .
evít_d⁄e


4286 .
check_îr‹
:

4287 
ã°
 
bx
, 0x00F8 ; 
Any
 
îr‹
 
bôs


4288 
jz
 .
evít_d⁄e


4289 
ˇŒ
 
h™dÀ_îr‹_öãºu±_3c509b


4291 .
evít_d⁄e
:

4292 
p›
 
ax


4293 
ªt


4294 
¥o˚ss_3c509b_evít
 
ENDP


4296 ; 
Pro˚ss
 
sögÀ
 3C515 
evít


4297 
¥o˚ss_3c515_evít
 
PROC


4298 ; 
I≈ut
: 
BX
 = 
öãºu±
 
°©us
, 
DX
 = 
I
/
O
 
ba£


4299 
push
 
ax


4301 ; 
Check
 
DMA
 
evíts
 
fú°


4302 
ã°
 
bx
, 0x0200 ; 
UP_COMPLETE


4303 
jz
 .
check_down


4304 
ˇŒ
 
¥o˚ss_3c515_rx_dma_rög


4305 
jmp
 .
evít_d⁄e_515


4307 .
check_down
:

4308 
ã°
 
bx
, 0x0400 ; 
DOWN_COMPLETE


4309 
jz
 .
check_n‹mÆ


4310 
ˇŒ
 
¥o˚ss_3c515_tx_com∂ëi⁄s


4311 
jmp
 .
evít_d⁄e_515


4313 .
check_n‹mÆ
:

4314 ; 
Pro˚ss
 
n‹mÆ
 
öãºu±s


4315 
ã°
 
bx
, 0x0001 ; 
RX_COMPLETE


4316 
jz
 .
check_tx_515


4317 
ˇŒ
 
h™dÀ_rx_öãºu±_3c515


4318 
jmp
 .
evít_d⁄e_515


4320 .
check_tx_515
:

4321 
ã°
 
bx
, 0x0004 ; 
TX_COMPLETE


4322 
jz
 .
evít_d⁄e_515


4323 
ˇŒ
 
h™dÀ_tx_öãºu±_3c515


4325 .
evít_d⁄e_515
:

4326 
p›
 
ax


4327 
ªt


4328 
¥o˚ss_3c515_evít
 
ENDP


4330 ; 
Loggög
 
	`fun˘i⁄s
 (
°ubs
 - 
im∂emít
 
ba£d
 
⁄
 
your
 
loggög
 
sy°em
)

4331 
log_rx_îr‹
 
PROC


4332 
ªt


4333 
log_rx_îr‹
 
ENDP


4335 
log_rx_îr‹_dëaûs
 
PROC


4336 
ªt


4337 
log_rx_îr‹_dëaûs
 
ENDP


4339 
log_tx_dma_îr‹
 
PROC


4340 
ªt


4341 
log_tx_dma_îr‹
 
ENDP


4343 
h™dÀ_tx_îr‹
 
PROC


4344 
ªt


4345 
h™dÀ_tx_îr‹
 
ENDP


4347 ; 
Buf„r
 
m™agemít
 
fun˘i⁄s


4348 
‰ì_tx_buf„r
 
PROC


4349 ; 
I≈ut
: 
SI
 = 
buf„r
 
poöãr


4350 
ªt


4351 
‰ì_tx_buf„r
 
ENDP


4353 
‰ì_cuºít_tx_buf„r
 
PROC


4354 
push
 
si


4355 
mov
 
si
, [
cuºít_tx_buf„r
]

4356 
ã°
 
si
, si

4357 
jz
 .
no_buf„r


4358 
ˇŒ
 
‰ì_tx_buf„r


4359 
mov
 
w‹d
 
±r
 [
cuºít_tx_buf„r
], 0

4360 .
no_buf„r
:

4361 
p›
 
si


4362 
ªt


4363 
‰ì_cuºít_tx_buf„r
 
ENDP


4365 
‰ì_tx_buf„r_addr
 
PROC


4366 ; 
I≈ut
: 
DX
:
AX
 = 
buf„r
 
addªss


4367 
ªt


4368 
‰ì_tx_buf„r_addr
 
ENDP


4370 
‰ì_dma_buf„rs
 
PROC


4371 
ªt


4372 
‰ì_dma_buf„rs
 
ENDP


4374 
Æloˇã_rx_buf„r
 
PROC


4375 ; 
Ouçut
: 
DX
:
AX
 = 
buf„r
 
addªss
, 
CF
 = 
îr‹


4376 
x‹
 
dx
, dx

4377 
mov
 
ax
, 
ãmp_rx_buf„r


4378 
˛c


4379 
ªt


4380 
Æloˇã_rx_buf„r
 
ENDP


4382 
ªfûl_rx_des¸ùt‹s
 
PROC


4383 
ªt


4384 
ªfûl_rx_des¸ùt‹s
 
ENDP


4386 ; 
Tønsmissi⁄
 
ªåy


4387 
ªåy_å™smissi⁄
 
PROC


4388 
ªt


4389 
ªåy_å™smissi⁄
 
ENDP


4391 ; 
DMA
 
∑ckë
 
¥o˚ssög


4392 
¥o˚ss_dma_∑ckë
 
PROC


4393 ; 
I≈ut
: 
Sèck
 
has
 
buf„r
 
addªss
 
™d
 
Àngth


4394 
ªt


4395 
¥o˚ss_dma_∑ckë
 
ENDP


4397 ; 
Sig«l
 
TX
 
com∂ëi⁄


4398 
sig«l_tx_com∂ëe
 
PROC


4399 
ªt


4400 
sig«l_tx_com∂ëe
 
ENDP


4402 ; 
I¡îru±
 
h™dÀrs
 
•ecific
 
evíts


4403 
h™dÀ_rx_öãºu±_3c509b
 
PROC


4404 
ªt


4405 
h™dÀ_rx_öãºu±_3c509b
 
ENDP


4407 
h™dÀ_tx_öãºu±_3c509b
 
PROC


4408 
ªt


4409 
h™dÀ_tx_öãºu±_3c509b
 
ENDP


4411 
h™dÀ_ad≠ãr_Áûuª_3c509b
 
PROC


4412 
ªt


4413 
h™dÀ_ad≠ãr_Áûuª_3c509b
 
ENDP


4415 
h™dÀ_îr‹_öãºu±_3c509b
 
PROC


4416 
ªt


4417 
h™dÀ_îr‹_öãºu±_3c509b
 
ENDP


4419 
h™dÀ_rx_öãºu±_3c515
 
PROC


4420 
ªt


4421 
h™dÀ_rx_öãºu±_3c515
 
ENDP


4423 
h™dÀ_tx_öãºu±_3c515
 
PROC


4424 
ªt


4425 
h™dÀ_tx_öãºu±_3c515
 
ENDP


4428 ; 
STACK
 
OVERFLOW
 
PROTECTION
 
FUNCTIONS


4432 ; 
check_ˇ«ry_¨ó
 - 
Gíîic
 16-
bô
 
ˇ«ry
 
¨ó
 
checkî


4433 ; 
IN
: 
DS
:
SI
 = 
°¨t
 
of
 
ˇ«ry
 
¨ó


4434 ; 
CX
 = 
numbî
 
of
 
w‹ds
 
to
 
	`check
 (
nŸ
 
dw‹ds
!)

4435 ; 
OUT
: 
AL
 = 1 (
ZF
=1Ë
Æl
 
good
, AL = 0 (ZF=0Ë
⁄
 
fú°
 
mism©ch


4436 ; 
Clobbîs
: 
AX
, 
DX
, 
SI
, 
CX
. 
Fœgs
 
ªÊe˘
 
	`AL
 (
vü
 
OR
 
AL
,AL).

4437 ; 
Pª£rves
: 
BX
, 
DI
, 
ES
, 
BP


4438 ; 
NŸe
: 
Desig√d
 8086, 
u£s
 16-
bô
 
›s
 
⁄ly
.

4440 
check_ˇ«ry_¨ó
 
PROC


4441 
mov
 
dx
, 
CANARY_WORD_LO
 ; 
Ex≥˘ed
 
∑âîn


4442 @@
√xt
:

4443 
cmp
 
cx
, 0

4444 
je
 @
ok


4446 ; 
Com∑ª
 
cuºít
 
w‹d
 
wôh
 
ex≥˘ed
 
∑âîn


4447 
cmp
 
w‹d
 
±r
 [
si
], 
dx


4448 
j√
 @
bad


4450 
add
 
si
, 2 ; 
Next
 
w‹d


4451 
dec
 
cx


4452 
jmp
 @@
√xt


4454 @
ok
:

4455 
mov
 
Æ
, 1

4456 
‹
 
Æ
,ál

4457 
ªt


4459 @
bad
:

4460 
x‹
 
Æ
,ál

4461 
‹
 
Æ
,ál

4462 
ªt


4463 
check_ˇ«ry_¨ó
 
ENDP


4466 ; 
check_°ack_ˇ«rõs
 - 
VÆid©e
 
IRQ
 
°ack
 
ˇ«ry
 
	`∑âîns
 (16-
bô
 
com∑tibÀ
)

4468 ; 
Checks
 
Æl
 
°ack
 
ˇ«ry
 
∑âîns
 
c‹ru±i⁄
 
ödiˇtög
 
ovîÊow
.

4469 ; 
Should
 
be
 
ˇŒed
 
≥riodiˇŒy
 
™d
 
a·î
 
su•e˘ed
 
°ack
-
öãnsive
 
›î©i⁄s
.

4471 ; 
I≈ut
: 
	`N⁄e
 (
DS
 
mu°
 
be
 
DGROUP
/
_DATA
)

4472 ; 
Ouçut
: 
AX
 = 
numbî
 
of
 
c‹ru±ed
 
ˇ«ry
 
	`¨ós
 (0 = 
Æl
 
OK
)

4473 ; 
U£s
: 
AX
, 
CX
, 
DX
, 
SI


4475 
PUBLIC
 
check_°ack_ˇ«rõs


4476 
check_°ack_ˇ«rõs
 
PROC


4477 
push
 
cx


4478 
push
 
dx


4479 
push
 
si


4481 
x‹
 
ax
,áx ; 
Cou¡
 
of
 
c‹ru±ed
 
ˇ«ry
 
¨ós


4483 ; 
Check
 3C509B 
°ack
 
ˇ«rõs


4484 
mov
 
si
, 
OFFSET
 
úq_°ack_3c509b_ˇ«ry


4485 
mov
 
cx
, 8 ; 8 
w‹ds
 
to
 
check


4486 
ˇŒ
 
check_ˇ«ry_¨ó


4487 
‹
 
Æ
,á»; 
Check
 
ªsu…


4488 
jnz
 .3c509b
_ok


4489 
öc
 
ax
 ; 
Cou¡
 
	$c‹ru±i⁄
 (
AX
 
was
 0)

4490 
öc
 
w‹d
 
±r
 [
°ack_ovîÊow_3c509b
] ; 
Upd©e
 
ovîÊow
 
cou¡î


4492 ; 
EMERGENCY
: 3C509B 
°ack
 
ˇ«ry
 
c‹ru±i⁄
 
dëe˘ed


4493 
push
 
ax
 ; 
Save
 
c‹ru±i⁄
 
cou¡


4494 
mov
 
Æ
, 3 ; 
IRQ
 3C509B (
exam∂e
)

4495 
ˇŒ
 
emîgícy_ˇ«ry_ª•⁄£


4496 
p›
 
ax
 ; 
Re°‹e
 
c‹ru±i⁄
 
cou¡


4498 .3c509b
_ok
:

4499 ; 
Check
 3C515 
°ack
 
ˇ«rõs


4500 
mov
 
si
, 
OFFSET
 
úq_°ack_3c515_ˇ«ry


4501 
mov
 
cx
, 8 ; 8 
w‹ds
 
to
 
check


4502 
push
 
ax
 ; 
Save
 
c‹ru±i⁄
 
cou¡


4503 
ˇŒ
 
check_ˇ«ry_¨ó


4504 
p›
 
dx
 ; 
Re°‹e
 
c‹ru±i⁄
 
cou¡
 
to
 
DX


4505 
‹
 
Æ
,á»; 
Check
 
ªsu…


4506 
jnz
 .3c515
_ok


4507 
öc
 
dx
 ; 
Cou¡
 
c‹ru±i⁄


4508 
öc
 
w‹d
 
±r
 [
°ack_ovîÊow_3c515
] ; 
Upd©e
 
ovîÊow
 
cou¡î


4510 ; 
EMERGENCY
: 3C515 
°ack
 
ˇ«ry
 
c‹ru±i⁄
 
dëe˘ed


4511 
push
 
dx
 ; 
Save
 
c‹ru±i⁄
 
cou¡


4512 
mov
 
Æ
, 5 ; 
IRQ
 3C515 (
exam∂e
)

4513 
ˇŒ
 
emîgícy_ˇ«ry_ª•⁄£


4514 
p›
 
dx
 ; 
Re°‹e
 
c‹ru±i⁄
 
cou¡


4516 .3c515
_ok
:

4517 
mov
 
ax
, 
dx
 ; 
Rëu∫
 
tŸÆ
 
c‹ru±i⁄
 
cou¡


4519 
p›
 
si


4520 
p›
 
dx


4521 
p›
 
cx


4522 
ªt


4523 
check_°ack_ˇ«rõs
 
ENDP


4526 ; 
öôülize_°ack_ˇ«rõs
 - 
Inôülize
 
Æl
 
°ack
 
ˇ«ry
 
	`∑âîns
 (16-
bô
 
com∑tibÀ
)

4528 ; 
CÆl
 
this
 
durög
 
drivî
 
öôüliz©i⁄
 
to
 
£t
 
up
 
°ack
 
ovîÊow
 
dëe˘i⁄
.

4530 ; 
I≈ut
: 
	`N⁄e
 (
DS
 
mu°
 
be
 
DGROUP
/
_DATA
)

4531 ; 
Ouçut
: 
N⁄e


4532 ; 
U£s
: 
AX
, 
CX
, 
DI


4534 
PUBLIC
 
öôülize_°ack_ˇ«rõs


4535 
öôülize_°ack_ˇ«rõs
 
PROC


4536 
push
 
ax


4537 
push
 
cx


4538 
push
 
di


4540 ; 
Inôülize
 3C509B 
ˇ«rõs
 
wôh
 16-
bô
 
w‹d
 
∑âîn


4541 
mov
 
di
, 
OFFSET
 
úq_°ack_3c509b_ˇ«ry


4542 
mov
 
ax
, 
CANARY_WORD_LO
 ; 16-
bô
 
ˇ«ry
 
∑âîn


4543 
mov
 
cx
, 8 ; 8 
	$w‹ds
 (16 
byãs
 
tŸÆ
)

4544 
ªp
 
°osw


4546 ; 
Inôülize
 3C515 
ˇ«rõs
 
wôh
 16-
bô
 
w‹d
 
∑âîn


4547 
mov
 
di
, 
OFFSET
 
úq_°ack_3c515_ˇ«ry


4548 
mov
 
ax
, 
CANARY_WORD_LO
 ; 16-
bô
 
ˇ«ry
 
∑âîn


4549 
mov
 
cx
, 8 ; 8 
	$w‹ds
 (16 
byãs
 
tŸÆ
)

4550 
ªp
 
°osw


4552 ; 
CÀ¨
 
ovîÊow
 
cou¡îs


4553 
mov
 
w‹d
 
±r
 [
°ack_ovîÊow_3c509b
], 0

4554 
mov
 
w‹d
 
±r
 [
°ack_ovîÊow_3c515
], 0

4556 
p›
 
di


4557 
p›
 
cx


4558 
p›
 
ax


4559 
ªt


4560 
öôülize_°ack_ˇ«rõs
 
ENDP


4563 ; 
emîgícy_ˇ«ry_ª•⁄£
 - 
Emîgícy
 
ª•⁄£
 
to
 
°ack
 
ˇ«ry
 
c‹ru±i⁄


4565 ; 
CÆÀd
 
whí
 
°ack
 
ˇ«ry
 
c‹ru±i⁄
 
is
 
dëe˘ed
. 
Im∂emíts
 
immedüã


4566 ; 
¥Ÿe˘ive
 
mósuªs
 
to
 
¥evít
 
fuπhî
 
damage
.

4568 ; 
I≈ut
: 
AL
 = 
IRQ
 
numbî
 
of
 
af„˘ed
 
	`°ack
 (
u£d
 
maskög
)

4569 ; 
Ouçut
: 
	`N⁄e
 (
may
 
nŸ
  
ö
 
£vîe
 
ˇ£s
)

4570 ; 
Pª£rves
: 
AŒ
 
ªgi°îs
 
™d
 
	`Êags
 (
vü
 
push
/
p›
)

4571 ; 
Side
 
Ef„˘s
:

4572 ; - 
Síds
 
EOI
 
to
 
bŸh
 
PICs
 
unc⁄dôi⁄Æly


4573 ; - 
Masks
 
the
 
•ecifõd
 
IRQ
 
©
 
PIC
 
Àvñ


4574 ; - 
In¸emíts
 
emîgícy_ˇ«ry_cou¡


4575 ; - 
Reöôülizes
 
c‹ru±ed
 
ˇ«ry
 
∑âîn


4576 ; - 
May
 
íãr
 
öföôe
 
lo›
 
cou¡
 >= 10

4577 ; 
NŸe
: 
This
 
is
 
™
 
emîgícy
 
fun˘i⁄
 - 
assumes
 
c‹ru±i⁄
 
ö
 
¥ogªss


4578 ; 
U£s
 
SEG
 
dúe˘ive
 
¥›î
 
£gmít
 
	`addªssög
 (
DS
-
ödïídít
)

4580 
PUBLIC
 
emîgícy_ˇ«ry_ª•⁄£


4581 
emîgícy_ˇ«ry_ª•⁄£
 
PROC


4582 
pushf


4583 
˛i
 ; 
Ensuª
 
öãºu±s
 
dißbÀd
 
durög
 
emîgícy


4584 
push
 
ax


4585 
push
 
dx


4586 
push
 
cx
 ; 
Save
 
	$CX
 (
u£d
 
by
 
ªp
 
°osw
)

4587 
push
 
di
 ; 
Save
 
	$DI
 (
u£d
 
by
 
ªp
 
°osw
)

4588 
push
 
es
 ; 
Wûl
 
modify
 
ES
 
ªp
 
°osw


4590 ; 
Pª£rve
 
IRQ
 
numbî
 
ö
 
DL
 
bef‹e
 
˛obbîög
 
AL


4591 
mov
 
dl
, 
Æ
 ; 
DL
 = 
IRQ
 
numbî
 
œãr
 
u£


4593 ; 
CRITICAL
: 
Síd
 
EOI
 
fú°
 
to
 
¥evít
 
PIC
 
lockup


4594 ; 
Unc⁄dôi⁄Æly
 
£nd
 
to
 
bŸh
 
PICs
 
robu°√ss
 
ö
 
emîgícy
 
∑th


4595 
mov
 
Æ
, 20
h
 ; 
N⁄
-
•ecific
 
EOI
 
comm™d


4596 
out
 0A0
h
, 
Æ
 ; 
Síd
 
to
 
¶ave
 
	$PIC
 (
ß„
 
nŸ
 
≠∂iˇbÀ
)

4597 
out
 020
h
, 
Æ
 ; 
Síd
 
to
 
ma°î
 
	`PIC
 (
Æways
 
√eded
)

4599 ; 
EMERGENCY
 
STEP
 1: 
Mask
 
the
 
af„˘ed
 
IRQ
 
to
 
¥evít
 
fuπhî
 
√°ög


4600 ; 
Re°‹e
 
IRQ
 
numbî
 
to
 
AL
 
mask_úq
 
ˇŒ


4601 
mov
 
Æ
, 
dl
 ; 
Re°‹e
 
IRQ
 
numbî
 
‰om
 
DL


4602 
ˇŒ
 
mask_úq
 ; 
Mask
 
IRQ
 
ö
 
AL
 
©
 
PIC
 
Àvñ


4604 ; 
EMERGENCY
 
STEP
 2: 
Së
 
∑nic
 
Êag
 
dügno°ic
 
ªp‹tög


4605 ; 
Lﬂd
 
¥›î
 
£gmít
 
emîgícy_ˇ«ry_cou¡


4606 
mov
 
ax
, 
SEG
 
emîgícy_ˇ«ry_cou¡


4607 
mov
 
es
, 
ax


4608 
öc
 
w‹d
 
±r
 
es
:[
emîgícy_ˇ«ry_cou¡
]

4610 ; 
EMERGENCY
 
STEP
 3: 
Reöôülize
 
the
 
c‹ru±ed
 
ˇ«ry
 
wôh
 
¥›î
 
ES
:
DI
/
DF
 
£tup


4611 
˛d
 ; 
CÀ¨
 
DF
 
f‹w¨d
 
°rög
 
›î©i⁄s


4613 ; 
Check
 
which
 
ˇ«ry
 
to
 
ªöôülize
 
ba£d
 
⁄
 
	$IRQ
 (
¥e£rved
 
ö
 
DL
)

4614 
cmp
 
dl
, 5 ; 
Assumög
 
IRQ
 5 3C515

4615 
je
 .
ªöô_3c515


4617 ; 
Reöô
 3C509B 
	$ˇ«ry
 ( )

4618 
mov
 
ax
, 
SEG
 
úq_°ack_3c509b_ˇ«ry


4619 
mov
 
es
, 
ax
 ; 
ES
 = 
£gmít
 
of
 
ˇ«ry
 
buf„r


4620 
mov
 
di
, 
OFFSET
 
úq_°ack_3c509b_ˇ«ry


4621 
mov
 
ax
, 
CANARY_WORD_LO


4622 
mov
 
cx
, 8 ; 8 
w‹ds
 = 16 
byãs


4623 
ªp
 
°osw
 ; 
ES
:
DI
 
¥›îly
 
£t
, 
DF
 
˛óªd


4624 
jmp
 .
ªcovîy_com∂ëe


4626 .
ªöô_3c515
:

4627 ; 
Reöô
 3C515 
ˇ«ry


4628 
mov
 
ax
, 
SEG
 
úq_°ack_3c515_ˇ«ry


4629 
mov
 
es
, 
ax
 ; 
ES
 = 
£gmít
 
of
 
ˇ«ry
 
buf„r


4630 
mov
 
di
, 
OFFSET
 
úq_°ack_3c515_ˇ«ry


4631 
mov
 
ax
, 
CANARY_WORD_LO


4632 
mov
 
cx
, 8 ; 8 
w‹ds
 = 16 
byãs


4633 
ªp
 
°osw
 ; 
ES
:
DI
 
¥›îly
 
£t
, 
DF
 
˛óªd


4635 .
ªcovîy_com∂ëe
:

4636 ; 
Check
 
this
 
is
 
a
 
£vîe
 
ªquúög
 
hÆt


4637 ; 
Lﬂd
 
¥›î
 
£gmít
 
cou¡î
 
check


4638 
mov
 
ax
, 
SEG
 
emîgícy_ˇ«ry_cou¡


4639 
mov
 
es
, 
ax


4640 
cmp
 
w‹d
 
±r
 
es
:[
emîgícy_ˇ«ry_cou¡
], 10

4641 
jb
 .
d⁄e
 ; 
Less
 
th™
 10 
c‹ru±i⁄s
, 

4643 ; 
SEVERE
 
CORRUPTION
: 
Too
 
m™y
 
ˇ«ry
 
Áûuªs
, 
sy°em
 
un°abÀ


4644 ; 
Fûl
 
smÆÀr
 
ß„
 
¨ó
 
to
 
avoid
 
ovîÊow


4645 
mov
 
ax
, 
SEG
 
úq_°ack_3c509b_ˇ«ry


4646 
mov
 
es
, 
ax


4647 
mov
 
di
, 
OFFSET
 
úq_°ack_3c509b_ˇ«ry


4648 
mov
 
ax
, 0BEEF
h
 ; 
Emîgícy
 
∑âîn


4649 
mov
 
cx
, 8 ; 
Fûl
 
⁄ly
 16 
	$byãs
 (
ß„
 
wôhö
 
ˇ«ry
 
buf„r
)

4650 
ªp
 
°osw
 ; 
ES
:
DI
 
£t
, 
DF
 
˛óªd


4652 ; 
Fªeze
 
sy°em
 
wôh
 
öãºu±s
 
dißbÀd


4653 
˛i


4654 .
emîgícy_hÆt
:

4655 
jmp
 .
emîgícy_hÆt
 ; 
Inföôe
 
lo›
 
wôh
 
IF
=0

4657 .
d⁄e
:

4658 
p›
 
es


4659 
p›
 
di
 ; 
Re°‹e
 
DI


4660 
p›
 
cx
 ; 
Re°‹e
 
CX


4661 
p›
 
dx


4662 
p›
 
ax


4663 
p›f
 ; 
Re°‹e
 
‹igöÆ
 
öãºu±
 
Êag


4664 
ªt


4665 
emîgícy_ˇ«ry_ª•⁄£
 
ENDP


4667 
_TEXT
 
ENDS


	@/Users/jvindahl/Development/3com-packet-driver/src/asm/packet_api.asm

1 ; @
fûe
 
	g∑ckë_≠i
.
	gasm


2 ; @
brõf
 
Packë
 
Drivî
 
API
 
öãºu±
 
	gh™dÀr


4 ; 3C
om
 
Packë
 
	gDrivî
 - 
Suµ‹t
 3C515-
TX
 
	g™d
 3C509B 
	gNICs


6 ; 
This
 
fûe
 
is
 
∑π
 
of
 
	gthe
 3C
om
 
Packë
 
Drivî
 
	g¥oje˘
.

9 .
MODEL
 
	gSMALL


12 
	gö˛ude
 'tsr_defensive.inc'

14 ; 
Packë
 
Drivî
 
API
 
Fun˘i⁄
 
	$Numbîs
 (
INT
 60
h
)

15 
API_DRIVER_INFO
 
EQU
 1 ; 
Gë
 
drivî
 
öf‹m©i⁄


16 
API_ACCESS_TYPE
 
EQU
 2 ; 
Ac˚ss
 
∑ckë
 
ty≥


17 
API_RELEASE_TYPE
 
EQU
 3 ; 
Rñó£
 
∑ckë
 
ty≥


18 
API_SEND_PKT
 
EQU
 4 ; 
Síd
 
∑ckë


19 
API_TERMINATE
 
EQU
 5 ; 
Tîmö©e
 
drivî


20 
API_GET_ADDRESS
 
EQU
 6 ; 
Gë
 
°©i⁄
 
addªss


21 
API_RESET_IFACE
 
EQU
 7 ; 
Re£t
 
öãrÁ˚


22 
API_GET_PARAMETERS
 
EQU
 8 ; 
Gë
 
öãrÁ˚
 
∑ømëîs


23 
API_AS_SEND_PKT
 
EQU
 9 ; 
A…î«tive
 
£nd
 
	$∑ckë
 (
exãnded
)

24 
API_SET_RCV_MODE
 
EQU
 20 ; 
Së
 
ª˚ive
 
mode


25 
API_GET_RCV_MODE
 
EQU
 21 ; 
Gë
 
ª˚ive
 
mode


26 
API_SET_MULTICAST
 
EQU
 22 ; 
Së
 
mu…iˇ°
 
li°


27 
API_GET_MULTICAST
 
EQU
 23 ; 
Gë
 
mu…iˇ°
 
li°


28 
API_GET_STATISTICS
 
EQU
 24 ; 
Gë
 
°©i°ics


29 
API_SET_ADDRESS
 
EQU
 25 ; 
Së
 
°©i⁄
 
addªss


31 ; 
Pha£
 3 
Group
 3B 
Exãnded
 
API
 
Fun˘i⁄s


32 
API_SET_HANDLE_PRIORITY
 
EQU
 32 ; 
Së
 
h™dÀ
 
	$¥i‹ôy
 (
AH
=20
h
)

33 
API_GET_ROUTING_INFO
 
EQU
 33 ; 
Gë
 
routög
 
	$öf‹m©i⁄
 (
AH
=21
h
)

34 
API_SET_LOAD_BALANCE
 
EQU
 34 ; 
Së
 
lﬂd
 
	$bÆ™cög
 (
AH
=22
h
)

35 
API_GET_NIC_STATUS
 
EQU
 35 ; 
Gë
 
NIC
 
	$°©us
 (
AH
=23
h
)

36 
API_SET_QOS_PARAMS
 
EQU
 36 ; 
Së
 
QoS
 
	$∑ømëîs
 (
AH
=24
h
)

37 
API_GET_FLOW_STATS
 
EQU
 37 ; 
Gë
 
Êow
 
	$°©i°ics
 (
AH
=25
h
)

38 
API_SET_NIC_PREFERENCE
 
EQU
 38 ; 
Së
 
NIC
 
	$¥e„ªn˚
 (
AH
=26
h
)

39 
API_GET_HANDLE_INFO
 
EQU
 39 ; 
Gë
 
h™dÀ
 
	$öfo
 (
AH
=27
h
)

40 
API_SET_BANDWIDTH_LIMIT
 
EQU
 40 ; 
Së
 
b™dwidth
 
	$limô
 (
AH
=28
h
)

41 
API_GET_ERROR_INFO
 
EQU
 41 ; 
Gë
 
îr‹
 
	`öfo
 (
AH
=29
h
)

43 ; 
Packë
 
Drivî
 
•ecifiˇti⁄
 
c⁄°™ts


44 
DRIVER_SIGNATURE
 
EQU
 'PK' ; 
Drivî
 
sig«tuª
 
dëe˘i⁄


46 ; 
Rëu∫
 
Codes


47 
PKT_SUCCESS
 
EQU
 0 ; 
O≥øti⁄
 
suc˚ssful


48 
PKT_ERROR_BAD_HANDLE
 
EQU
 1 ; 
Bad
 
h™dÀ


49 
PKT_ERROR_NO_CLASS
 
EQU
 2 ; 
No
 
öãrÁ˚s
 
of
 
•ecifõd
 
˛ass
 
found


50 
PKT_ERROR_NO_TYPE
 
EQU
 3 ; 
No
 
öãrÁ˚s
 
of
 
•ecifõd
 
ty≥
 
found


51 
PKT_ERROR_NO_NUMBER
 
EQU
 4 ; 
No
 
öãrÁ˚s
 
of
 
•ecifõd
 
numbî
 
found


52 
PKT_ERROR_BAD_TYPE
 
EQU
 5 ; 
Bad
 
∑ckë
 
ty≥
 
•ecifõd


53 
PKT_ERROR_NO_MULTICAST
 
EQU
 6 ; 
I¡îÁ˚
 
d€¢
't support multicast

54 
PKT_ERROR_CANT_TERMINATE
 
EQU
 7 ; 
C™
'tÅerminate driver

55 
PKT_ERROR_BAD_MODE
 
EQU
 8 ; 
Bad
 
mode
 
•ecifõd


56 
PKT_ERROR_NO_SPACE
 
EQU
 9 ; 
No
 
•a˚
 
√w
 
∑ckë
 
ty≥


57 
PKT_ERROR_TYPE_INUSE
 
EQU
 10 ; 
Ty≥
 
Æªady
 
ö
 
u£


58 
PKT_ERROR_BAD_COMMAND
 
EQU
 11 ; 
Bad
 
comm™d
 
numbî


59 
PKT_ERROR_CANT_SEND
 
EQU
 12 ; 
C™
't sendÖacket

60 
PKT_ERROR_CANT_SET
 
EQU
 13 ; 
C™
't set stationáddress

61 
PKT_ERROR_BAD_ADDRESS
 
EQU
 14 ; 
Bad
 
addªss
 
•ecifõd


63 ; 
Re˚ive
 
Modes


64 
RCV_MODE_OFF
 
EQU
 1 ; 
Tu∫
 
off
 
ª˚ivî


65 
RCV_MODE_DIRECT
 
EQU
 2 ; 
Re˚ive
 
⁄ly
 
∑ckës
 
to
 
this
 
addªss


66 
RCV_MODE_BROADCAST
 
EQU
 3 ; 
Re˚ive
 
dúe˘
 + 
brﬂdˇ°
 
∑ckës


67 
RCV_MODE_MULTICAST
 
EQU
 4 ; 
Re˚ive
 
dúe˘
 + 
brﬂdˇ°
 + 
mu…iˇ°


68 
RCV_MODE_PROMISCUOUS
 
EQU
 6 ; 
Re˚ive
 
Æl
 
∑ckës


70 ; 
Maximum
 
numbî
 
of
 
h™dÀs
 
™d
 
ˇŒback
 
chaös


71 
MAX_HANDLES
 
EQU
 16 ; 
Maximum
 
∑ckë
 
ty≥
 
h™dÀs


72 
MAX_TYPE_CALLBACKS
 
EQU
 8 ; 
Maximum
 
ˇŒbacks
 
≥r
 
∑ckë
 
ty≥


73 
MAX_PACKET_TYPES
 
EQU
 32 ; 
Maximum
 
åacked
 
∑ckë
 
ty≥s


75 ; 
D©a
 
£gmít


76 
_DATA
 
SEGMENT


77 
ASSUME
 
DS
:
_DATA


79 ; 
API
 
°©e
 
v¨übÀs


80 
≠i_öôülized
 
db
 0 ; 
API
 
öôüliz©i⁄
 
Êag


81 
drivî_sig«tuª
 
db
 'PKT DRVR' ; 
Drivî
 
sig«tuª
 
dëe˘i⁄


82 
drivî_vîsi⁄
 
db
 11 ; 
Drivî
 
	$vîsi⁄
 (1.1)

83 
drivî_ty≥
 
db
 1 ; 
Drivî
 
	$ty≥
 (
DIX
 
Ethî√t
)

84 
drivî_numbî
 
db
 0 ; 
Drivî
 
numbî


85 
drivî_«me
 
db
 'TCPIP$', 0 ; 
Drivî
 
«me


87 ; 
Enh™˚d
 
H™dÀ
 
™d
 
CÆlback
 
M™agemít


88 
h™dÀ_èbÀ
 
dw
 
MAX_HANDLES
 
	`dup
(0Ë; 
H™dÀ
 
to
 
∑ckë
 
ty≥
 
m≠pög


89 
h™dÀ_ˇŒbacks
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
CÆlback
 
addªs£s
 
óch
 
h™dÀ


90 
h™dÀ_öãrÁ˚s
 
db
 
MAX_HANDLES
 
	`dup
(0Ë; 
I¡îÁ˚
 
numbî
 
óch
 
h™dÀ


91 
h™dÀ_modes
 
db
 
MAX_HANDLES
 
	`dup
(0Ë; 
Re˚ive
 
mode
 
óch
 
h™dÀ


92 
√xt_h™dÀ
 
dw
 1 ; 
Next
 
avaûabÀ
 
h™dÀ


93 
a˘ive_h™dÀs
 
dw
 0 ; 
Numbî
 
of
 
a˘ive
 
h™dÀs


95 ; 
Enh™˚d
 
CÆlback
 
Chaö
 
	$M™agemít
 (
Group
 3B 
Mu…ùÀxög
)

96 
ˇŒback_chaös
 
dd
 
MAX_PACKET_TYPES
 * 
MAX_TYPE_CALLBACKS
 
	`dup
(0Ë; 
CÆlback
 
chaö
 
°‹age


97 
ˇŒback_¥i‹ôõs
 
db
 
MAX_PACKET_TYPES
 * 
MAX_TYPE_CALLBACKS
 
	`dup
(0Ë; 
CÆlback
 
¥i‹ôõs


98 
ˇŒback_fûãrs
 
dw
 
MAX_PACKET_TYPES
 * 
MAX_TYPE_CALLBACKS
 
	`dup
(0Ë; 
Packë
 
fûãrs


99 
ˇŒback_îr‹_cou¡s
 
dw
 
MAX_PACKET_TYPES
 * 
MAX_TYPE_CALLBACKS
 
	`dup
(0Ë; 
Eº‹
 
cou¡s


100 
ˇŒback_œ°_îr‹s
 
dd
 
MAX_PACKET_TYPES
 * 
MAX_TYPE_CALLBACKS
 
	`dup
(0Ë; 
La°
 
îr‹
 
times


101 
∑ckë_ty≥_èbÀ
 
dw
 
MAX_PACKET_TYPES
 
	`dup
(0Ë; 
A˘ive
 
∑ckë
 
ty≥s


102 
ty≥_ˇŒback_cou¡s
 
db
 
MAX_PACKET_TYPES
 
	`dup
(0Ë; 
Numbî
 
of
 
ˇŒbacks
 
≥r
 
ty≥


103 
ty≥_h™dÀ_m≠pög
 
dw
 
MAX_PACKET_TYPES
 
	`dup
(0FFFF
h
Ë; 
Prim¨y
 
h™dÀ
 
≥r
 
ty≥


105 ; 
CÆlback
 
Sa„ty
 
™d
 
Timeout
 
M™agemít


106 
ˇŒback_timeout_ticks
 
dd
 0 ; 
Timî
 
ˇŒback
 
	$timeouts
 (
≠¥ox
 100
ms
)

107 
ˇŒback_timî_a˘ive
 
db
 0 ; 
Timî
 
a˘ive
 
Êag


108 
ˇŒback_°ack_dïth
 
db
 0 ; 
CÆlback
 
√°ög
 
dïth


109 
max_ˇŒback_dïth
 
EQU
 3 ; 
Maximum
 
ˇŒback
 
√°ög


110 
max_ˇŒback_îr‹s
 
EQU
 10 ; 
Maximum
 
îr‹s
 
bef‹e
 
dißblög
 
ˇŒback


112 ; 
Pha£
 3 
Exãnded
 
H™dÀ
 
M™agemít


113 
exãnded_≠i_íabÀd
 
db
 0 ; 
Exãnded
 
API
 
íabÀd
 
Êag


114 
vútuÆ_úq_íabÀd
 
db
 0 ; 
VútuÆ
 
öãºu±
 
íabÀd


115 
h™dÀ_¥i‹ôõs
 
db
 
MAX_HANDLES
 
	`dup
(128Ë; 
H™dÀ
 
	$¥i‹ôõs
 (128 = )

116 
h™dÀ_Êags
 
dw
 
MAX_HANDLES
 
	`dup
(0Ë; 
Exãnded
 
h™dÀ
 
Êags


117 
¥e„ºed_nics
 
db
 
MAX_HANDLES
 
	`dup
(0FF
h
Ë; 
Pª„ºed
 
NIC
 
≥r
 
	$h™dÀ
 (0xFF = 
no
 
¥e„ªn˚
)

118 
b™dwidth_limôs
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
B™dwidth
 
limôs
 
≥r
 
h™dÀ


120 ; 
Lﬂd
 
BÆ™cög
 
Sèã


121 
lb_mode
 
db
 0 ; 
Lﬂd
 
bÆ™cög
 
	`mode
 (0=
round
-
robö
)

122 
lb_¥im¨y_nic
 
db
 0 ; 
Prim¨y
 
NIC
 
lﬂd
 
bÆ™cög


123 
lb_£c⁄d¨y_nic
 
db
 1 ; 
Sec⁄d¨y
 
NIC
 
lﬂd
 
bÆ™cög


124 
lb_œ°_u£d
 
db
 0 ; 
La°
 
u£d
 
NIC
 
round
-
robö


125 
lb_weights
 
dw
 2 
	`dup
(100Ë; 
NIC
 
	`weights
 (
equÆ
 
by
 )

127 ; 
QoS
 
M™agemít


128 
qos_íabÀd
 
db
 0 ; 
QoS
 
íabÀd
 
Êag


129 
deÁu…_qos_˛ass
 
db
 1 ; 
DeÁu…
 
QoS
 
	$˛ass
 (
°™d¨d
)

130 
qos_∑ckë_cou¡
 
dw
 0 ; 
Packës
 
ö
 
QoS
 
queue


132 ; 
I¡îÁ˚
 
öf‹m©i⁄


133 
öãrÁ˚_cou¡
 
db
 2 ; 
Numbî
 
of
 
	$öãrÁ˚s
 (
max
 2 
our
 
NICs
)

134 
cuºít_rcv_mode
 
db
 
RCV_MODE_DIRECT
 ; 
Cuºít
 
ª˚ive
 
mode


135 
nic_utûiz©i⁄
 
dw
 2 
	`dup
(0Ë; 
NIC
 
utûiz©i⁄
 
≥r˚¡ages


136 
nic_îr‹_cou¡s
 
dw
 2 
	`dup
(0Ë; 
Eº‹
 
cou¡s
 
≥r
 
NIC


138 ; 
VútuÆ
 
I¡îru±
 
M™agemít


139 
vútuÆ_h™dÀrs
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
VútuÆ
 
öãºu±
 
h™dÀrs


140 
vútuÆ_c⁄ãxts
 
dw
 
MAX_HANDLES
 
	`dup
(0Ë; 
VútuÆ
 
h™dÀr
 
c⁄ãxts


141 
mu…ùÀx_cou¡
 
dw
 0 ; 
Mu…ùÀxed
 
dñivîy
 
cou¡


143 ; 
De„nsive
 
¥ogømmög
 
	$d©a
 (
ªquúed
 
by
 
t§_de„nsive
.
öc
 
ma¸os
)

144 
≠i_ˇŒî_ss
 
dw
 ? ; 
Saved
 
ˇŒî
 
°ack
 
£gmít
 
API
 
ˇŒs


145 
≠i_ˇŒî_•
 
dw
 ? ; 
Saved
 
ˇŒî
 
°ack
 
poöãr
 
API
 
ˇŒs


146 
≠i_¸ôiˇl_√°ög
 
db
 0 ; 
API
 
¸ôiˇl
 
£˘i⁄
 
√°ög


147 
≠i_ödos_£gmít
 
dw
 0 ; 
InDOS
 
Êag
 
£gmít


148 
≠i_ödos_off£t
 
dw
 0 ; 
InDOS
 
Êag
 
off£t


150 ; 
Priv©e
 
API
 
h™dÀr
 
	$°ack
 (2
KB
)

151 
≠i_°ack
 
db
 2048 
	`dup
(?)

152 
≠i_°ack_t›
 
equ
 
$
 - 2

154 ; 
Mu…iˇ°
 
addªss
 
m™agemít


155 
mu…iˇ°_li°
 
db
 16 * 6 
	`dup
(0Ë; 
Up
 
to
 16 
mu…iˇ°
 
addªs£s


156 
mu…iˇ°_cou¡
 
db
 0 ; 
Cuºít
 
numbî
 
of
 
mu…iˇ°
 
addªs£s


158 ; 
Sèti⁄
 
addªss
 
°‹age


159 
°©i⁄_addªss
 
db
 6 
	`dup
(0Ë; 
Cuºít
 
°©i⁄
 
MAC
 
addªss


161 ; 
Sèti°ics
 
åackög
 
≥r
 
h™dÀ


162 
h™dÀ_tx_∑ckës
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
Packës
 
å™smôãd
 
≥r
 
h™dÀ


163 
h™dÀ_tx_byãs
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
Byãs
 
å™smôãd
 
≥r
 
h™dÀ


164 
h™dÀ_rx_∑ckës
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
Packës
 
ª˚ived
 
≥r
 
h™dÀ


165 
h™dÀ_rx_byãs
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
Byãs
 
ª˚ived
 
≥r
 
h™dÀ


166 
h™dÀ_tŸÆ_œãncy
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
Accumuœãd
 
œãncy
 
avîagög


167 
h™dÀ_œãncy_v¨ün˚
 
dd
 
MAX_HANDLES
 
	`dup
(0Ë; 
L©ícy
 
v¨ün˚
 
jôãr


169 ; 
Pri‹ôy
 
queue
 
m™agemít


170 
PRIORITY_QUEUE_SIZE
 
equ
 64 ; 
Mu°
 
be
 
powî
 
of
 2

171 
PRIORITY_QUEUE_MASK
 
equ
 63 ; 
Size
 - 1 
wøp
-
¨ound


172 
¥i‹ôy_queue
 
db
 
PRIORITY_QUEUE_SIZE
 * 8 
	`dup
(0Ë; 8 
byãs
 
≥r
 
íåy


173 
¥i‹ôy_queue_hód
 
dw
 0 ; 
Queue
 
hód
 
ödex


174 
¥i‹ôy_queue_èû
 
dw
 0 ; 
Queue
 
èû
 
ödex


176 ; 
Timî
 
m™agemít


177 
timî_hooked
 
db
 0 ; 
Timî
 
öãºu±
 
hooked
 
Êag


178 
ˇŒback_timed_out
 
db
 0 ; 
CÆlback
 
timeout
 
Êag


179 
ﬁd_timî_h™dÀr
 
dd
 0 ; 
OrigöÆ
 
INT
 1C
h
 
h™dÀr


180 
ˇŒback_°¨t_time
 
dd
 0 ; 
CÆlback
 
°¨t
 
time°amp


182 ; 
Pîf‹m™˚
 
›timiz©i⁄


183 
≠i_˝u_ty≥
 
db
 0 ; 
CPU
 
	$ty≥
 (0=8086, 1=286, 2=386, 3=486)

184 
≠i_pusha_thªshﬁd
 
db
 8 ; 
Thªshﬁd
 
PUSHA
 
vs
 
ödividuÆ
 
pushes


185 
œ°_fun˘i⁄
 
db
 0 ; 
La°
 
API
 
fun˘i⁄
 
ˇŒed


186 
Á°_∑th_hôs
 
dd
 0 ; 
Fa°
 
∑th
 
›timiz©i⁄
 
hôs


187 
Á°_∑th_mis£s
 
dd
 0 ; 
Fa°
 
∑th
 
›timiz©i⁄
 
mis£s


189 
_DATA
 
ENDS


191 ; 
Code
 
£gmít


192 
_TEXT
 
SEGMENT


193 
ASSUME
 
CS
:
_TEXT
, 
DS
:
_DATA


195 ; 
Public
 
fun˘i⁄
 
exp‹ts


196 
PUBLIC
 
∑ckë_≠i_öô


197 
PUBLIC
 
∑ckë_öt_h™dÀr


198 
PUBLIC
 
≠i_drivî_öfo


199 
PUBLIC
 
≠i_ac˚ss_ty≥


200 
PUBLIC
 
≠i_ªÀa£_ty≥


201 
PUBLIC
 
≠i_£nd_∑ckë


202 
PUBLIC
 
≠i_ãrmö©e


203 
PUBLIC
 
≠i_gë_addªss


204 
PUBLIC
 
≠i_ª£t_öãrÁ˚


205 
PUBLIC
 
≠i_gë_∑ømëîs


206 
PUBLIC
 
≠i_as_£nd_∑ckë


207 
PUBLIC
 
≠i_£t_rcv_mode


208 
PUBLIC
 
≠i_gë_rcv_mode


209 
PUBLIC
 
≠i_£t_mu…iˇ°


210 
PUBLIC
 
≠i_gë_mu…iˇ°


211 
PUBLIC
 
≠i_gë_°©i°ics


212 
PUBLIC
 
≠i_£t_addªss


213 
PUBLIC
 
∑ckë_dñivî_to_h™dÀr


214 
PUBLIC
 
›timÆ_ªgi°î_ßve


215 
PUBLIC
 
›timÆ_ªgi°î_ª°‹e


216 
PUBLIC
 
Á°_≠i_di•©ch


217 
PUBLIC
 
Á°_ªgi°î_ª°‹e


218 
PUBLIC
 
≠i_≥rf‹m™˚_mërics


220 ; 
Exã∫Æ
 
ª„ªn˚s


221 
EXTRN
 
h¨dw¨e_£nd_∑ckë_asm
:
PROC
 ; 
From
 
h¨dw¨e
.
asm


222 
EXTRN
 
h¨dw¨e_gë_addªss
:
PROC
 ; 
From
 
h¨dw¨e
.
asm


223 
EXTRN
 
gë_˝u_ty≥
:
PROC
 ; 
From
 
˝u_dëe˘
.
asm


225 ; 
C
 
fun˘i⁄
 
bridges
 - 
Bridge
 
to
 
vèbÀ
 
di•©ch
 
sy°em


226 
EXTRN
 
_∑ckë_£nd
:
PROC
 ; 
From
 
∑ckë_›s
.
c
 - 
C
 
ˇŒög
 
c⁄víti⁄


227 
EXTRN
 
_pd_gë_addªss
:
PROC
 ; 
From
 
≠i
.
c
 - 
C
 
ˇŒög
 
c⁄víti⁄


228 
EXTRN
 
_pd_£t_rcv_mode
:
PROC
 ; 
From
 
≠i
.
c
 - 
C
 
ˇŒög
 
c⁄víti⁄


229 
EXTRN
 
_pd_gë_°©i°ics
:
PROC
 ; 
From
 
≠i
.
c
 - 
C
 
ˇŒög
 
c⁄víti⁄


231 ; 
De„nsive
 
¥ogømmög
 
öãgøti⁄


232 
EXTRN
 
dos_is_ß„
:
PROC
 ; 
From
 
de„nsive_öãgøti⁄
.
asm


233 
EXTRN
 
nic_£t_ª˚ive_mode
:
PROC
 ; 
From
 
nic_úq
.
asm


235 ; 
Pîf‹m™˚
 
›timiz©i⁄
 
d©a


236 
≠i_˝u_ty≥
 
db
 0 ; 
Cached
 
CPU
 
ty≥
 
›timiz©i⁄


237 
≠i_pusha_thªshﬁd
 
db
 4 ; 
U£
 
PUSHA
 
whí
 
ßvög
 >
this
 
m™y
 
ªgi°îs


238 
œ°_fun˘i⁄
 
db
 0 ; 
La°
 
API
 
fun˘i⁄
 
	$ˇŒed
 (
¥edi˘i⁄
)

239 
Á°_∑th_hôs
 
dd
 0 ; 
Fa°
 
∑th
 
ußge
 
°©i°ics


240 
Á°_∑th_mis£s
 
dd
 0 ; 
Fa°
 
∑th
 
miss
 
°©i°ics


243 ; 
∑ckë_≠i_öô
 - 
Inôülize
 
Packë
 
Drivî
 
API


245 ; 
I≈ut
: 
N⁄e


246 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, 
n⁄
-
zîo
 
îr‹


247 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX


249 
∑ckë_≠i_öô
 
PROC


250 
push
 
bp


251 
mov
 
bp
, 
•


252 
push
 
bx


253 
push
 
cx


254 
push
 
dx


256 ; 
Inôülize
 
h™dÀ
 
èbÀ
 
wôh
 
Æl
 
íåõs
 
m¨ked
 
‰ì


257 ; 
Së
 
up
  
ª˚ive
 
mode
 
Æl
 
öãrÁ˚s


258 ; 
Vîify
 
h¨dw¨e
 
is
 
ªady
 
™d
 
ª•⁄dög
 
to
 
comm™ds


260 ; 
CÀ¨
 
h™dÀ
 
èbÀ


261 
mov
 
cx
, 
MAX_HANDLES


262 
mov
 
bx
, 
OFFSET
 
h™dÀ_èbÀ


263 
x‹
 
ax
,áx

264 .
˛ór_lo›
:

265 
mov
 [
bx
], 
ax


266 
add
 
bx
, 2

267 
lo›
 .
˛ór_lo›


269 ; 
M¨k
 
API
 
as
 
öôülized


270 
mov
 
byã
 
±r
 [
≠i_öôülized
], 1

272 ; 
Suc˚ss


273 
mov
 
ax
, 
PKT_SUCCESS


275 
p›
 
dx


276 
p›
 
cx


277 
p›
 
bx


278 
p›
 
bp


279 
ªt


280 
∑ckë_≠i_öô
 
ENDP


283 ; 
∑ckë_öt_h™dÀr
 - 
Maö
 
INT
 60
h
 
∑ckë
 
drivî
 
öãºu±
 
h™dÀr


284 ; 
This
 
is
 
the
 
maö
 
íåy
 
poöt
 
Æl
 
Packë
 
Drivî
 
API
 
ˇŒs


286 ; 
I≈ut
: 
AH
 = 
fun˘i⁄
 
numbî
, 
Ÿhî
 
ªgi°îs
 
≥r
 function

287 ; 
Ouçut
: 
Dïíds
 
⁄
 
fun˘i⁄
, 
CF
 
£t
 o¿
îr‹


288 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
¥e£rved
 
as
 
√eded
)

290 
∑ckë_öt_h™dÀr
 
PROC


291 ; ==
DEFENSIVE
 
API
 
PROLOG
 ===

292 ; 
Quick
 
sig«tuª
 
check
 
	$fú°
 (
no
 
°ack
 
√eded
 
this
)

293 
cmp
 
ax
, 1234
h


294 
j√
 .
nŸ_sig«tuª_check


295 
mov
 
ax
, 
DRIVER_SIGNATURE
 ; 
Rëu∫
 'PK' 
sig«tuª


296 
úë


298 .
nŸ_sig«tuª_check
:

299 ; 
Save
 
möimÆ
 
ªgi°îs
 
fú°


300 
push
 
ax


301 
push
 
ds


303 ; 
Së
 
up
 
our
 
d©a
 
£gmít


304 
mov
 
ax
, 
_DATA


305 
mov
 
ds
, 
ax


306 
ASSUME
 
DS
:
_DATA


308 ; 
Check
 
API
 
is
 
öôülized


309 
cmp
 
byã
 
±r
 [
≠i_öôülized
], 0

310 
je
 .
nŸ_öôülized


312 ; 
Swôch
 
to
 
¥iv©e
 
°ack
 
	$ß„ty
 (
API
 
ˇŒs
 
ˇn
 
be
 
Àngthy
)

313 
˛i
 ; 
Crôiˇl
 
£˘i⁄
 
°¨t


314 
mov
 [
≠i_ˇŒî_ss
], 
ss
 ; 
Save
 
ˇŒî
's stack

315 
mov
 [
≠i_ˇŒî_•
], 
•


316 
mov
 
ax
, 
_DATA
 ; 
U£
 
our
 
d©a
 
£gmít
 
as
 
°ack
 segment

317 
mov
 
ss
, 
ax


318 
mov
 
•
, 
OFFSET
 
≠i_°ack_t›
 ; 
Swôch
 
to
 
¥iv©e
 
°ack


319 
°i
 ; 
Crôiˇl
 
£˘i⁄
 
íd


321 ; 
Save
 
ªgi°îs
 
›timÆly
 
ba£d
 
⁄
 
CPU
 
ty≥
 
™d
 
ußge


322 ; 
U£
 
PUSHA
 
decisi⁄
 
m©rix
: U£ PUSHA 
whí
 
ßvög
 ‚â•4 
ªgi°îs


323 ; 286: 
PUSHA
=19 
cy˛es
 
vs
 8√ó
PUSH
=24 
	`cy˛es
 (5 
cy˛e
 
ßvögs
)

324 ; 386: 
PUSHA
=11 
cy˛es
 
vs
 8√ó
PUSH
=16 
	`cy˛es
 (5 
cy˛e
 
ßvögs
)

325 ; 486: 
PUSHA
=5 
cy˛es
 
vs
 8√ó
PUSH
=8 
	$cy˛es
 (3 
cy˛e
 
≥«…y
, 
but
 
ac˚±abÀ
)

327 
ˇŒ
 
›timÆ_ªgi°î_ßve


328 
pushf
 ; 
Save
 
ˇŒî
's flags

330 ; ==
DOS
 
SAFETY
 
CHECK
 ===

331 ; 
F‹
 
fun˘i⁄s
 
th©
 
might
 
√ed
 
DOS
, 
check
 
ô
's safe

332 ; (
This
 
is
 
a
 
sim∂ifõd
 
check
 - 
fuŒ
 
im∂emíèti⁄
 
would
 
be
 
≥r
-
fun˘i⁄
)

333 
cmp
 
ah
, 
API_TERMINATE
 ; 
Tîmö©e
 
might
 
√ed
 
DOS


334 
je
 .
check_dos_ß„ty


335 
cmp
 
ah
, 
API_GET_PARAMETERS
 ; 
Some
 
∑ømëî
 
ˇŒs
 
might
 
√ed
 
DOS


336 
je
 .
check_dos_ß„ty


337 
jmp
 .
dos_check_com∂ëe


339 .
check_dos_ß„ty
:

340 
ˇŒ
 
dos_is_ß„


341 
jnz
 .
dos_busy_îr‹
 ; 
DOS
 
is
 
busy
 - 
ˇ¬Ÿ
 
£rvi˚
 
this
 
ˇŒ


343 .
dos_check_com∂ëe
:

345 ; 
Fa°
 
∑th
 
di•©ch
 
comm⁄
 
fun˘i⁄s


346 ; 
Mo°
 
comm⁄
: 
	`SEND_PKT
 (4), 
	`ACCESS_TYPE
 (2), 
	`DRIVER_INFO
 (1)

348 ; 
Fa°
 
di•©ch
 
èbÀ
 
lookup
 
≥rf‹m™˚


349 
ˇŒ
 
Á°_≠i_di•©ch


350 
ã°
 
ax
,áx

351 
jz
 .
di•©ch_h™dÀd
 ; 
Fun˘i⁄
 
h™dÀd
 
by
 
Á°
 
∑th


353 ; 
FÆl
 
back
 
to
 
fuŒ
 
di•©ch
 
Àss
 
comm⁄
 
fun˘i⁄s


354 
cmp
 
ah
, 
API_DRIVER_INFO


355 
je
 .
ˇŒ_drivî_öfo


356 
cmp
 
ah
, 
API_ACCESS_TYPE


357 
je
 .
ˇŒ_ac˚ss_ty≥


358 
cmp
 
ah
, 
API_RELEASE_TYPE


359 
je
 .
ˇŒ_ªÀa£_ty≥


360 
cmp
 
ah
, 
API_SEND_PKT


361 
je
 .
ˇŒ_£nd_∑ckë


362 
cmp
 
ah
, 
API_TERMINATE


363 
je
 .
ˇŒ_ãrmö©e


364 
cmp
 
ah
, 
API_GET_ADDRESS


365 
je
 .
ˇŒ_gë_addªss


366 
cmp
 
ah
, 
API_RESET_IFACE


367 
je
 .
ˇŒ_ª£t_öãrÁ˚


368 
cmp
 
ah
, 
API_GET_PARAMETERS


369 
je
 .
ˇŒ_gë_∑ømëîs


370 
cmp
 
ah
, 
API_AS_SEND_PKT


371 
je
 .
ˇŒ_as_£nd_∑ckë


372 
cmp
 
ah
, 
API_SET_RCV_MODE


373 
je
 .
ˇŒ_£t_rcv_mode


374 
cmp
 
ah
, 
API_GET_RCV_MODE


375 
je
 .
ˇŒ_gë_rcv_mode


376 
cmp
 
ah
, 
API_SET_MULTICAST


377 
je
 .
ˇŒ_£t_mu…iˇ°


378 
cmp
 
ah
, 
API_GET_MULTICAST


379 
je
 .
ˇŒ_gë_mu…iˇ°


380 
cmp
 
ah
, 
API_GET_STATISTICS


381 
je
 .
ˇŒ_gë_°©i°ics


382 
cmp
 
ah
, 
API_SET_ADDRESS


383 
je
 .
ˇŒ_£t_addªss


385 ; 
Pha£
 3 
Exãnded
 
Fun˘i⁄s


386 
cmp
 
ah
, 
API_SET_HANDLE_PRIORITY


387 
je
 .
ˇŒ_£t_h™dÀ_¥i‹ôy


388 
cmp
 
ah
, 
API_GET_ROUTING_INFO


389 
je
 .
ˇŒ_gë_routög_öfo


390 
cmp
 
ah
, 
API_SET_LOAD_BALANCE


391 
je
 .
ˇŒ_£t_lﬂd_bÆ™˚


392 
cmp
 
ah
, 
API_GET_NIC_STATUS


393 
je
 .
ˇŒ_gë_nic_°©us


394 
cmp
 
ah
, 
API_SET_QOS_PARAMS


395 
je
 .
ˇŒ_£t_qos_∑øms


396 
cmp
 
ah
, 
API_GET_FLOW_STATS


397 
je
 .
ˇŒ_gë_Êow_°©s


398 
cmp
 
ah
, 
API_SET_NIC_PREFERENCE


399 
je
 .
ˇŒ_£t_nic_¥e„ªn˚


400 
cmp
 
ah
, 
API_GET_HANDLE_INFO


401 
je
 .
ˇŒ_gë_h™dÀ_öfo


402 
cmp
 
ah
, 
API_SET_BANDWIDTH_LIMIT


403 
je
 .
ˇŒ_£t_b™dwidth_limô


404 
cmp
 
ah
, 
API_GET_ERROR_INFO


405 
je
 .
ˇŒ_gë_îr‹_öfo


407 ; 
Unknown
 
fun˘i⁄


408 
mov
 
dh
, 
PKT_ERROR_BAD_COMMAND


409 
jmp
 .
îr‹_exô


411 .
ˇŒ_drivî_öfo
:

412 
ˇŒ
 
≠i_drivî_öfo


413 
jmp
 .
suc˚ss_exô


415 .
ˇŒ_ac˚ss_ty≥
:

416 
ˇŒ
 
≠i_ac˚ss_ty≥


417 
jmp
 .
check_exô


419 .
ˇŒ_ªÀa£_ty≥
:

420 
ˇŒ
 
≠i_ªÀa£_ty≥


421 
jmp
 .
check_exô


423 .
ˇŒ_£nd_∑ckë
:

424 
ˇŒ
 
≠i_£nd_∑ckë


425 
jmp
 .
check_exô


427 .
ˇŒ_ãrmö©e
:

428 
ˇŒ
 
≠i_ãrmö©e


429 
jmp
 .
check_exô


431 .
ˇŒ_gë_addªss
:

432 
ˇŒ
 
≠i_gë_addªss


433 
jmp
 .
check_exô


435 .
ˇŒ_ª£t_öãrÁ˚
:

436 
ˇŒ
 
≠i_ª£t_öãrÁ˚


437 
jmp
 .
check_exô


439 .
ˇŒ_gë_∑ømëîs
:

440 
ˇŒ
 
≠i_gë_∑ømëîs


441 
jmp
 .
check_exô


443 .
ˇŒ_as_£nd_∑ckë
:

444 
ˇŒ
 
≠i_as_£nd_∑ckë


445 
jmp
 .
check_exô


447 .
ˇŒ_£t_rcv_mode
:

448 
ˇŒ
 
≠i_£t_rcv_mode


449 
jmp
 .
check_exô


451 .
ˇŒ_gë_rcv_mode
:

452 
ˇŒ
 
≠i_gë_rcv_mode


453 
jmp
 .
check_exô


455 .
ˇŒ_£t_mu…iˇ°
:

456 
ˇŒ
 
≠i_£t_mu…iˇ°


457 
jmp
 .
check_exô


459 .
ˇŒ_gë_mu…iˇ°
:

460 
ˇŒ
 
≠i_gë_mu…iˇ°


461 
jmp
 .
check_exô


463 .
ˇŒ_gë_°©i°ics
:

464 
ˇŒ
 
≠i_gë_°©i°ics


465 
jmp
 .
check_exô


467 .
ˇŒ_£t_addªss
:

468 
ˇŒ
 
≠i_£t_addªss


469 
jmp
 .
check_exô


471 ; 
Pha£
 3 
Exãnded
 
Fun˘i⁄
 
Di•©chîs


472 .
ˇŒ_£t_h™dÀ_¥i‹ôy
:

473 
ˇŒ
 
≠i_£t_h™dÀ_¥i‹ôy_asm


474 
jmp
 .
check_exô


476 .
ˇŒ_gë_routög_öfo
:

477 
ˇŒ
 
≠i_gë_routög_öfo_asm


478 
jmp
 .
check_exô


480 .
ˇŒ_£t_lﬂd_bÆ™˚
:

481 
ˇŒ
 
≠i_£t_lﬂd_bÆ™˚_asm


482 
jmp
 .
check_exô


484 .
ˇŒ_gë_nic_°©us
:

485 
ˇŒ
 
≠i_gë_nic_°©us_asm


486 
jmp
 .
check_exô


488 .
ˇŒ_£t_qos_∑øms
:

489 
ˇŒ
 
≠i_£t_qos_∑øms_asm


490 
jmp
 .
check_exô


492 .
ˇŒ_gë_Êow_°©s
:

493 
ˇŒ
 
≠i_gë_Êow_°©s_asm


494 
jmp
 .
check_exô


496 .
ˇŒ_£t_nic_¥e„ªn˚
:

497 
ˇŒ
 
≠i_£t_nic_¥e„ªn˚_asm


498 
jmp
 .
check_exô


500 .
ˇŒ_gë_h™dÀ_öfo
:

501 
ˇŒ
 
≠i_gë_h™dÀ_öfo_asm


502 
jmp
 .
check_exô


504 .
ˇŒ_£t_b™dwidth_limô
:

505 
ˇŒ
 
≠i_£t_b™dwidth_limô_asm


506 
jmp
 .
check_exô


508 .
ˇŒ_gë_îr‹_öfo
:

509 
ˇŒ
 
≠i_gë_îr‹_öfo_asm


510 
jmp
 .
check_exô


512 .
check_exô
:

513 ; 
Check
  
vÆue
 
ö
 
DH


514 
cmp
 
dh
, 
PKT_SUCCESS


515 
je
 .
suc˚ss_exô


516 
jmp
 .
îr‹_exô


518 .
dos_busy_îr‹
:

519 ; 
DOS
 
is
 
busy
 - 
ˇ¬Ÿ
 
£rvi˚
 
this
 
ˇŒ
 
right
 
now


520 
mov
 
dh
, 
PKT_ERROR_BAD_COMMAND
 ; 
Rëu∫
 
îr‹


521 
°c


522 
jmp
 .
de„nsive_exô


524 .
suc˚ss_exô
:

525 ; 
CÀ¨
 
ˇºy
 
Êag
 
suc˚ss


526 
˛c


527 
jmp
 .
de„nsive_exô


529 .
îr‹_exô
:

530 ; 
Së
 
ˇºy
 
Êag
 
îr‹


531 
°c


532 
jmp
 .
de„nsive_exô


534 .
nŸ_öôülized
:

535 ; 
API
 
nŸ
 
öôülized
 - 
ª°‹e
 
möimÆ
 
ªgi°îs
 
™d
 
exô


536 
mov
 
ax
, 
PKT_ERROR_BAD_COMMAND


537 
mov
 
dh
, 
Æ


538 
°c


539 
p›
 
ds


540 
p›
 
ax


541 
úë


543 .
de„nsive_exô
:

544 .
di•©ch_h™dÀd
:

545 ; 
Fun˘i⁄
 
was
 
h™dÀd
 
by
 
Á°
 
∑th
, 
ª°‹e
 
möimÆ
 
ªgi°îs


546 
ˇŒ
 
Á°_ªgi°î_ª°‹e


547 
jmp
 .
föÆ_exô


549 .
de„nsive_exô
:

550 ; ==
DEFENSIVE
 
API
 
EPILOG
 ===

551 ; 
Re°‹e
 
Æl
 
ªgi°îs
 
ö
 
ªvî£
 
‹dî


552 
p›f
 ; 
Re°‹e
 
ˇŒî
's flags

553 
ˇŒ
 
›timÆ_ªgi°î_ª°‹e


555 ; 
Re°‹e
 
ˇŒî
's stack

556 
˛i
 ; 
Crôiˇl
 
£˘i⁄
 
°¨t


557 
mov
 
ss
, [
≠i_ˇŒî_ss
]

558 
mov
 
•
, [
≠i_ˇŒî_•
]

559 
°i
 ; 
Crôiˇl
 
£˘i⁄
 
íd


561 ; 
Re°‹e
 
möimÆ
 
ªgi°îs


562 .
föÆ_exô
:

563 
p›
 
ds


564 
p›
 
ax


566 
úë
 ; 
Rëu∫
 
‰om
 
öãºu±


567 
∑ckë_öt_h™dÀr
 
ENDP


570 ; 
≠i_drivî_öfo
 - 
Gë
 
drivî
 
	`öf‹m©i⁄
 (
Fun˘i⁄
 1)

572 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


573 ; 
Ouçut
: 
BX
 = 
drivî
 
vîsi⁄
, 
CH
 = 
˛ass
, 
DH
 = 
îr‹
 
code


574 ; 
CL
 = 
ty≥
, 
DL
 = 
numbî
, 
DS
:
SI
 = 
drivî
 
«me


575 ; 
U£s
: 
AŒ
 
ouçut
 
ªgi°îs


577 
≠i_drivî_öfo
 
PROC


578 
push
 
bp


579 
mov
 
bp
, 
•


581 ; 
Check
 
high
 
≥rf‹m™˚
 
drivî
 
	$check
 (
AL
 = 0xFF)

582 
cmp
 
Æ
, 0FF
h


583 
je
 .
high_≥rf‹m™˚_check


585 ; 
Check
 
öãrÁ˚
 
	`numbî
 (
we
 
suµ‹t
 0-
ba£d
 
ödexög
)

586 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

587 
j´
 .
bad_numbî


589 ; 
Rëu∫
 
drivî
 
öf‹m©i⁄
 
≥r
 
Packë
 
Drivî
 
•ecifiˇti⁄


590 
mov
 
bx
, 0100
h
 ; 
Vîsi⁄
 1.0 (
BCD
 
f‹m©
)

591 
mov
 
ch
, 1 ; 
Cœss
 1 (
DIX
 
Ethî√t
)

592 
mov
 
˛
, 1 ; 
Ty≥
 1 (10Ba
£
-
T
)

593 
mov
 
dl
, 
Æ
 ; 
I¡îÁ˚
 
	$numbî
 (
∑s£d
 
back
)

594 
mov
 
si
, 
OFFSET
 
drivî_«me
 ; 
DS
:
SI
 
poöts
 
to
 
drivî
 
«me


595 
mov
 
dh
, 
PKT_SUCCESS


596 
jmp
 .
exô


598 .
high_≥rf‹m™˚_check
:

599 ; 
Rëu∫
 
ˇ∑bûôõs
 
high
 
≥rf‹m™˚
 
check


600 
mov
 
bx
, 0100
h
 ; 
Vîsi⁄
 1.0

601 
mov
 
ch
, 1 ; 
Cœss
 1 (
DIX
 
Ethî√t
)

602 
mov
 
˛
, 1 ; 
Ty≥
 1

603 
mov
 
dl
, 1 ; 
Basic
 
fun˘i⁄s
 
suµ‹ãd


604 
mov
 
dh
, 
PKT_SUCCESS


605 
jmp
 .
exô


607 .
bad_numbî
:

608 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


609 
jmp
 .
exô


611 .
exô
:

612 
p›
 
bp


613 
ªt


614 
≠i_drivî_öfo
 
ENDP


617 ; 
≠i_ac˚ss_ty≥
 - 
Ac˚ss
 
∑ckë
 
	`ty≥
 (
Fun˘i⁄
 2)

619 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
, 
BX
 = 
∑ckë
 
ty≥
, 
DL
 =ÖackëÅy≥ 
Àngth


620 ; 
CX
 = 
buf„r
 
size
, 
ES
:
DI
 = 
ª˚ivî
 
addªss


621 ; 
Ouçut
: 
AX
 = 
h™dÀ
, 
DH
 = 
îr‹
 
code


622 ; 
U£s
: 
AX
, 
DH


624 
≠i_ac˚ss_ty≥
 
PROC


625 
push
 
bp


626 
mov
 
bp
, 
•


627 
push
 
bx


628 
push
 
cx


629 
push
 
si


630 
push
 
di


632 ; 
VÆid©e
 
öãrÁ˚
 
	$numbî
 (
AL
)

633 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

634 
j´
 .
bad_öãrÁ˚


636 ; 
VÆid©e
 
∑ckë
 
ty≥
 
	$Àngth
 (
DL
)

637 
cmp
 
dl
, 0

638 
je
 .
u£_bx_ty≥
 ; 
U£
 
BX
 
as
 
∑ckë
 
ty≥
 
DL
=0

639 
cmp
 
dl
, 8 ; 
Maximum
 
ty≥
 
ãm∂©e
 
Àngth


640 
ja
 .
bad_ty≥


642 .
u£_bx_ty≥
:

643 ; 
Föd
 
avaûabÀ
 
h™dÀ
 
¶Ÿ


644 
mov
 
si
, 
OFFSET
 
h™dÀ_èbÀ


645 
mov
 
cx
, 
MAX_HANDLES


646 
mov
 
ax
, 1 ; 
Sèπ
 
wôh
 
h™dÀ
 1

648 .
föd_h™dÀ
:

649 
cmp
 
w‹d
 
±r
 [
si
], 0 ; 
Check
 
h™dÀ
 
¶Ÿ
 
is
 
‰ì


650 
je
 .
found_h™dÀ


651 
add
 
si
, 2 ; 
Move
 
to
 
√xt
 
h™dÀ
 
¶Ÿ


652 
öc
 
ax
 ; 
In¸emít
 
h™dÀ
 
numbî


653 
lo›
 .
föd_h™dÀ


655 ; 
No
 
‰ì
 
h™dÀs
 
avaûabÀ


656 
mov
 
dh
, 
PKT_ERROR_NO_SPACE


657 
jmp
 .
exô


659 .
found_h™dÀ
:

660 ; 
AŒoˇã
 
h™dÀ
 
íåy
 
wôh
 
ˇŒback
 
chaös


661 ; 
St‹e
 
basic
 
h™dÀ
 
öf‹m©i⁄


662 
mov
 [
si
], 
bx
 ; 
St‹e
 
∑ckë
 
ty≥
 
ö
 
h™dÀ
 
èbÀ


664 ; 
CÆcuœã
 
ˇŒback
 
èbÀ
 
	`ödex
 (
h™dÀ
 - 1) * 4

665 
dec
 
ax
 ; 
C⁄vît
 
to
 0-
ba£d
 
ödex


666 
push
 
ax
 ; 
Save
 
h™dÀ
 
ödex


667 
shl
 
ax
, 2 ; 
Mu…ùly
 
by
 4 
dw‹d
 
off£t


668 
mov
 
si
, 
ax


670 ; 
St‹e
 
ˇŒback
 
ö
 
h™dÀ
 
wôh
 
vÆid©i⁄


671 ; 
VÆid©e
 
ˇŒback
 
addªss
 
bef‹e
 
°‹ög


672 
push
 
bx


673 
push
 
cx


675 ; 
Check
 
ˇŒback
 
addªss
 
is
 
	$vÆid
 (
nŸ
 
nuŒ
,ÇŸ 
ö
 
low
 
mem‹y
)

676 
ã°
 
di
, di

677 
jz
 .
övÆid_ˇŒback


678 
mov
 
bx
, 
es


679 
ã°
 
bx
, bx

680 
jz
 .
övÆid_ˇŒback


681 
cmp
 
bx
, 0040
h
 ; 
D⁄
'tállow callbacks in interrupt vectors

682 
jb
 .
övÆid_ˇŒback


684 ; 
St‹e
 
vÆid©ed
 
ˇŒback
 
addªss


685 
mov
 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
si
], 
di
 ; 
Off£t


686 
mov
 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
si
 + 2], 
es
 ; 
Segmít


688 ; 
Inôülize
 
ˇŒback
 
chaö
 
m™agemít
 
this
 
∑ckë
 
ty≥


689 
ˇŒ
 
öôülize_ˇŒback_chaö


691 
p›
 
cx


692 
p›
 
bx


694 ; 
St‹e
 
öãrÁ˚
 
numbî
 
™d
 
öôülize
 
h™dÀ
 
°©e


695 
p›
 
si
 ; 
Re°‹e
 0-
ba£d
 
h™dÀ
 
ödex


696 
mov
 [
h™dÀ_öãrÁ˚s
 + 
si
], 
Æ
 ; 
I¡îÁ˚
 
numbî


697 
mov
 
byã
 
±r
 [
h™dÀ_modes
 + 
si
], 
RCV_MODE_DIRECT
 ; 
DeÁu…
 
mode


698 
mov
 
byã
 
±r
 [
h™dÀ_¥i‹ôõs
 + 
si
], 128 ; 
DeÁu…
 
¥i‹ôy


699 
mov
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0 ; 
CÀ¨
 
Êags


700 
jmp
 .
h™dÀ_Æloˇãd


702 .
övÆid_ˇŒback
:

703 ; 
InvÆid
 
ˇŒback
 
addªss


704 
p›
 
cx


705 
p›
 
bx


706 
p›
 
si
 ; 
CÀ™
 
up
 
°ack


707 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


708 
jmp
 .
exô


710 .
h™dÀ_Æloˇãd
:"}

712 ; 
In¸emít
 
a˘ive
 
h™dÀ
 
cou¡


713 
öc
 
w‹d
 
±r
 [
a˘ive_h™dÀs
]

715 
mov
 
ax
, [
√xt_h™dÀ
] ; 
Rëu∫
 
h™dÀ
 
numbî


716 
öc
 
w‹d
 
±r
 [
√xt_h™dÀ
] ; 
Pª∑ª
 
√xt
 
h™dÀ


717 
mov
 
dh
, 
PKT_SUCCESS


718 
jmp
 .
exô


720 .
bad_öãrÁ˚
:

721 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


722 
jmp
 .
exô


724 .
bad_ty≥
:

725 
mov
 
dh
, 
PKT_ERROR_BAD_TYPE


726 
jmp
 .
exô


728 .
exô
:

729 
p›
 
di


730 
p›
 
si


731 
p›
 
cx


732 
p›
 
bx


733 
p›
 
bp


734 
ªt


735 
≠i_ac˚ss_ty≥
 
ENDP


738 ; 
≠i_ªÀa£_ty≥
 - 
Rñó£
 
∑ckë
 
	`ty≥
 (
Fun˘i⁄
 3)

740 ; 
I≈ut
: 
BX
 = 
h™dÀ


741 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


742 ; 
U£s
: 
DH


744 
≠i_ªÀa£_ty≥
 
PROC


745 
push
 
bp


746 
mov
 
bp
, 
•


747 
push
 
ax


748 
push
 
si


749 
push
 
di


751 ; 
VÆid©e
 
h™dÀ
 
ønge


752 
cmp
 
bx
, 1

753 
jb
 .
bad_h™dÀ


754 
cmp
 
bx
, 
MAX_HANDLES


755 
ja
 .
bad_h™dÀ


757 ; 
Check
 
h™dÀ
 
is
 
a˘uÆly
 
Æloˇãd


758 
dec
 
bx
 ; 
C⁄vît
 
to
 0-
ba£d
 
ödex


759 
mov
 
si
, 
bx


760 
shl
 
si
, 1 ; 
C⁄vît
 
to
 
w‹d
 
off£t
 
h™dÀ
 
èbÀ


761 
add
 
si
, 
OFFSET
 
h™dÀ_èbÀ


762 
cmp
 
w‹d
 
±r
 [
si
], 0 ; 
Check
 
h™dÀ
 
is
 
Æloˇãd


763 
je
 .
bad_h™dÀ


765 ; 
Remove
 
h™dÀ
 
‰om
 
èbÀ
 
wôh
 
ˇŒback
 
chaö
 
˛ónup


766 ; 
Gë
 
∑ckë
 
ty≥
 
bef‹e
 
˛órög


767 
push
 
ax


768 
mov
 
ax
, 
w‹d
 
±r
 [
si
] ; 
Gë
 
∑ckë
 
ty≥


769 
push
 
ax
 ; 
Save
 
∑ckë
 
ty≥
 
ˇŒback
 
chaö
 
˛ónup


771 ; 
Fªe
 
the
 
h™dÀ
 
íåy


772 
mov
 
w‹d
 
±r
 [
si
], 0 ; 
CÀ¨
 
∑ckë
 
ty≥


774 ; 
CÀ¨
 
ˇŒback
 
addªss


775 
mov
 
ax
, 
bx
 ; 
Gë
 0-
ba£d
 
ödex


776 
shl
 
ax
, 2 ; 
C⁄vît
 
to
 
dw‹d
 
off£t


777 
mov
 
di
, 
ax


779 ; 
Gë
 
ˇŒback
 
addªss
 
bef‹e
 
˛órög
 
chaö
 
˛ónup


780 
mov
 
dx
, 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
di
] ; 
Gë
 
ˇŒback
 
off£t


781 
push
 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
di
 + 2] ; 
Save
 
ˇŒback
 
£gmít


782 
push
 
dx
 ; 
Save
 
ˇŒback
 
off£t


784 
mov
 
dw‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
di
], 0 ; 
CÀ¨
 
ˇŒback


786 ; 
Remove
 
ˇŒback
 
‰om
 
∑ckë
 
ty≥
 cÆlback 
chaö


787 
p›
 
dx
 ; 
Re°‹e
 
ˇŒback
 
off£t


788 
p›
 
ax
 ; 
Re°‹e
 
ˇŒback
 
£gmít


789 
p›
 
cx
 ; 
Re°‹e
 
∑ckë
 
ty≥


790 
ˇŒ
 
ªmove_ˇŒback_‰om_chaö
 ; 
CÀ™
 
up
 
ˇŒback
 
chaös


792 
p›
 
ax
 ; 
Re°‹e
 
‹igöÆ
 
AX


794 ; 
CÀ¨
 
öãrÁ˚
 
™d
 
mode
 
öfo


795 
mov
 
byã
 
±r
 [
h™dÀ_öãrÁ˚s
 + 
bx
], 0 ; 
CÀ¨
 
öãrÁ˚


796 
mov
 
byã
 
±r
 [
h™dÀ_modes
 + 
bx
], 0 ; 
CÀ¨
 
mode


797 
mov
 
byã
 
±r
 [
h™dÀ_¥i‹ôõs
 + 
bx
], 128 ; 
Re£t
 
¥i‹ôy


798 
mov
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
bx
 * 2], 0 ; 
CÀ¨
 
Êags
"}

800 ; 
De¸emít
 
a˘ive
 
h™dÀ
 
cou¡


801 
cmp
 
w‹d
 
±r
 [
a˘ive_h™dÀs
], 0

802 
je
 .
cou¡_ok
 ; 
D⁄
't underflow

803 
dec
 
w‹d
 
±r
 [
a˘ive_h™dÀs
]

805 .
cou¡_ok
:

806 
mov
 
dh
, 
PKT_SUCCESS


807 
jmp
 .
exô


809 .
bad_h™dÀ
:

810 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


811 
jmp
 .
exô


813 .
exô
:

814 
p›
 
di


815 
p›
 
si


816 
p›
 
ax


817 
p›
 
bp


818 
ªt


819 
≠i_ªÀa£_ty≥
 
ENDP


822 ; 
≠i_£nd_∑ckë
 - 
Síd
 
	`∑ckë
 (
Fun˘i⁄
 4)

824 ; 
I≈ut
: 
DS
:
SI
 = 
∑ckë
 
to
 
£nd
, 
CX
 =Öackë 
Àngth


825 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


826 ; 
U£s
: 
DH


828 
≠i_£nd_∑ckë
 
PROC


829 
push
 
bp


830 
mov
 
bp
, 
•


831 
push
 
ax


832 
push
 
bx


834 ; 
VÆid©e
 
∑ckë
 
Àngth
 
mìts
 
möimum
/
maximum
 
ªquúemíts


835 ; 
CÆl
 
h¨dw¨e
-
•ecific
 
£nd
 
routöe
 
ba£d
 
⁄
 
NIC
 
ty≥


836 ; 
H™dÀ
 
mu…ùÀ
 
NICs
 
wôh
 
lﬂd
 
bÆ™cög
 
™d
 
routög


838 ; 
VÆid©e
 
∑ckë
 
∑ømëîs
 
wôh
 
íh™˚d
 
checks


839 ; 
Com¥ehísive
 
∑ckë
 
vÆid©i⁄
 
ß„ty


841 ; 
VÆid©e
 
∑ckë
 
Àngth


842 
ã°
 
cx
, cx ; 
Check
 
zîo
 
Àngth


843 
jz
 .
bad_Àngth


844 
cmp
 
cx
, 60 ; 
Möimum
 
Ethî√t
 
‰ame
 
size


845 
jb
 .
bad_Àngth


846 
cmp
 
cx
, 1514 ; 
Maximum
 
Ethî√t
 
‰ame
 
size


847 
ja
 .
bad_Àngth


849 ; 
VÆid©e
 
∑ckë
 
buf„r
 
poöãr


850 
ã°
 
si
, sò; 
Check
 
nuŒ
 
off£t


851 
jz
 .
bad_buf„r


853 ; 
VÆid©e
 
d©a
 
	$£gmít
 (
basic
 
check
)

854 
push
 
ax


855 
mov
 
ax
, 
ds


856 
ã°
 
ax
,áx ; 
Check
 
nuŒ
 
£gmít


857 
jz
 .
bad_buf„r_£g


859 ; 
Check
 
we
 
ˇn
 
ªad
 
the
 
fú°
 
byã
 
ß„ly


860 
push
 
es


861 
push
 
di


862 
mov
 
es
, 
ax
 ; 
Së
 
ES
 
to
 
DS


863 
mov
 
di
, 
si
 ; 
Poöt
 
to
 
∑ckë
 
°¨t


864 
mov
 
Æ
, 
es
:[
di
] ; 
Try
 
to
 
ªad
 
fú°
 
byã


865 
p›
 
di


866 
p›
 
es


867 
p›
 
ax


868 
jmp
 .
vÆid©i⁄_com∂ëe


870 .
bad_buf„r_£g
:

871 
p›
 
ax


872 .
bad_buf„r
:

873 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


874 
jmp
 .
exô


876 .
vÆid©i⁄_com∂ëe
:"}

878 ; 
Bridge
 
to
 
C
 
∑ckë_£nd
 
fun˘i⁄
 
vü
 
vèbÀ
 
di•©ch


879 ; 
C⁄vît
 
DOS
 
ˇŒög
 
c⁄víti⁄
 
to
 
C
 calling convention

880 ; 
DOS
 
öput
: 
DS
:
SI
 = 
∑ckë
 
buf„r
, 
CX
 =Öackë 
Àngth


881 ; 
C
 
sig«tuª
: 
	`∑ckë_£nd
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
uöt16_t
 
h™dÀ
)

883 ; 
Push
 
∑ømëîs
 
C
 
ˇŒög
 
	$c⁄víti⁄
 (
right
 
to
 
À·
)

884 
push
 0 ; 
h™dÀ
 
	`∑ømëî
 (
uöt16_t
Ë- 
u£
 0 

885 
push
 
cx
 ; 
Àngth
 
	$∑ømëî
 (
size_t
)

886 
push
 
si
 ; 
∑ckë
 
buf„r
 
	$off£t
 (c⁄° 
uöt8_t
 *)

887 
push
 
ds
 ; 
∑ckë
 
buf„r
 
£gmít


889 ; 
CÆl
 
C
 
fun˘i⁄


890 
ˇŒ
 
_∑ckë_£nd


891 
add
 
•
, 8 ; 
CÀ™
 
	`°ack
 (4 
∑ømëîs
 √ó 2 
byãs
 
óch
)

893 ; 
C⁄vît
 
C
  
vÆue
 
to
 
DOS
 
∑ckë
 
drivî
 
îr‹
 
code


894 ; 
C
 
ªtu∫s
: 0=
suc˚ss
, 
√g©ive
=
îr‹


895 
cmp
 
ax
, 0

896 
jl
 .
£nd_îr‹
 ; 
Jump
 
	$√g©ive
 (
îr‹
)

898 
mov
 
dh
, 
PKT_SUCCESS


899 
jmp
 .
exô


901 .
bad_Àngth
:

902 
mov
 
dh
, 
PKT_ERROR_CANT_SEND


903 
jmp
 .
exô


905 .
£nd_îr‹
:

906 
mov
 
dh
, 
PKT_ERROR_CANT_SEND


907 
jmp
 .
exô


909 .
exô
:

910 
p›
 
bx


911 
p›
 
ax


912 
p›
 
bp


913 
ªt


914 
≠i_£nd_∑ckë
 
ENDP


917 ; 
≠i_ãrmö©e
 - 
Tîmö©e
 
	`drivî
 (
Fun˘i⁄
 5)

919 ; 
I≈ut
: 
BX
 = 
	`h™dÀ
 (
mu°
 
be
 
ßme
 
as
 
ªtu∫ed
 
by
 
ac˚ss_ty≥
)

920 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


921 ; 
U£s
: 
DH


923 
≠i_ãrmö©e
 
PROC


924 
push
 
bp


925 
mov
 
bp
, 
•


927 ; 
VÆid©e
 
ãrmö©i⁄
 
ªque°
 
‰om
 
auth‹ized
 
ˇŒî


928 ; 
Check
 
ß„
 
to
 
	`ãrmö©e
 (
no
 
a˘ive
 
c⁄√˘i⁄s
)

929 ; 
Re°‹e
 
‹igöÆ
 
öãºu±
 
ve˘‹s
 
bef‹e
 
exô


930 ; 
Fªe
 
Æloˇãd
 
mem‹y
 
blocks
 
™d
 
˛ónup
 
ªsour˚s


932 ; 
F‹
 
now
, 
ªfu£
 
	$ãrmö©i⁄
 (
drivî
 
°ays
 
ªsidít
)

933 
mov
 
dh
, 
PKT_ERROR_CANT_TERMINATE


935 
p›
 
bp


936 
ªt


937 
≠i_ãrmö©e
 
ENDP


940 ; 
≠i_gë_addªss
 - 
Gë
 
°©i⁄
 
	`addªss
 (
Fun˘i⁄
 6)

942 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî
, 
CX
 = 
buf„r
 
size
, 
ES
:
DI
 = buffer

943 ; 
Ouçut
: 
CX
 = 
addªss
 
Àngth
, 
DH
 = 
îr‹
 
code


944 ; 
U£s
: 
CX
, 
DH


946 
≠i_gë_addªss
 
PROC


947 
push
 
bp


948 
mov
 
bp
, 
•


949 
push
 
ax


950 
push
 
bx


951 
push
 
si


953 ; 
VÆid©e
 
öãrÁ˚
 
numbî
 
is
 
wôhö
 
suµ‹ãd
 
ønge


954 ; 
Gë
 
MAC
 
addªss
 
‰om
 
h¨dw¨e
 
ªgi°îs
 
‹
 
EEPROM


955 ; 
C›y
 
MAC
 
addªss
 
to
 
u£r
-
¥ovided
 
buf„r
 
wôh
 
vÆid©i⁄


957 ; 
Check
 
öãrÁ˚
 
numbî


958 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

959 
j´
 .
bad_numbî


961 ; 
Check
 
buf„r
 
	$size
 (
√ed
 6 
byãs
 
Ethî√t
 
MAC
)

962 
cmp
 
cx
, 6

963 
jb
 .
bad_buf„r


965 ; 
Bridge
 
to
 
C
 
pd_gë_addªss
 
fun˘i⁄
 
vü
 
vèbÀ
 
di•©ch


966 ; 
C⁄vît
 
DOS
 
ˇŒög
 
c⁄víti⁄
 
to
 
C
 calling convention

967 ; 
DOS
 
öput
: 
AL
 = 
öãrÁ˚
 
numbî
, 
ES
:
DI
 = 
buf„r
, 
CX
 = buf„∏
size


968 ; 
C
 
sig«tuª
: 
	`pd_gë_addªss
(
uöt16_t
 
h™dÀ
, 
pd_addªss_t
 *
addr
)

970 ; 
C⁄vît
 
	$AL
 (
öãrÁ˚
 
numbî
Ë
to
 
h™dÀ
 - 
now
 
u£
 
AL
 
as
 handle

971 
mov
 
ah
, 0 ; 
Zîo
 
exãnd
 
AL
 
to
 
AX
 
h™dÀ


973 ; 
Push
 
∑ømëîs
 
C
 
ˇŒög
 
	$c⁄víti⁄
 (
right
 
to
 
À·
)

974 
push
 
di
 ; 
buf„r
 
	$off£t
 (
pd_addªss_t
 *
addr
)

975 
push
 
es
 ; 
buf„r
 
£gmít


976 
push
 
ax
 ; 
	`h™dÀ
 (
‰om
 
AL
, 
zîo
-
exãnded
)

978 ; 
CÆl
 
C
 
fun˘i⁄


979 
ˇŒ
 
_pd_gë_addªss


980 
add
 
•
, 6 ; 
CÀ™
 
	`°ack
 (3 
∑ømëîs
 √ó 2 
byãs
 
óch
)

982 ; 
C⁄vît
 
C
  
to
 
DOS
 
îr‹
 
code


983 ; 
C
 
ªtu∫s
: 0=
suc˚ss
, 
√g©ive
=
îr‹


984 
cmp
 
ax
, 0

985 
jl
 .
gë_îr‹
 ; 
Jump
 
	`√g©ive
 (
îr‹
)

987 ; 
Suc˚ss
 - 
addªss
 
should
 
be
 
c›õd
 
by
 
C
 
fun˘i⁄


988 
mov
 
cx
, 6 ; 
Addªss
 
	$Àngth
 (
Ethî√t
 
MAC
)

989 
mov
 
dh
, 
PKT_SUCCESS


990 
jmp
 .
exô


992 .
bad_numbî
:

993 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


994 
jmp
 .
exô


996 .
bad_buf„r
:

997 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


998 
jmp
 .
exô


1000 .
gë_îr‹
:

1001 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


1002 
jmp
 .
exô


1004 .
exô
:

1005 
p›
 
si


1006 
p›
 
bx


1007 
p›
 
ax


1008 
p›
 
bp


1009 
ªt


1010 
≠i_gë_addªss
 
ENDP


1013 ; 
≠i_ª£t_öãrÁ˚
 - 
Re£t
 
	`öãrÁ˚
 (
Fun˘i⁄
 7)

1015 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


1016 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1017 ; 
U£s
: 
DH


1019 
≠i_ª£t_öãrÁ˚
 
PROC


1020 
push
 
bp


1021 
mov
 
bp
, 
•


1023 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1024 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1025 
j´
 .
bad_öãrÁ˚


1027 ; 
Fun˘i⁄
 7 (
RESET
Ë- 
Com∂ëe
 
h¨dw¨e
 
™d
 
so·w¨e
 
ª£t


1028 ; 
Re£t
 
ˇŒback
 
chaös
, 
h™dÀ
 
°©e
, 
™d
 
h¨dw¨e
 
•ecifõd
 
öãrÁ˚


1029 
push
 
si


1030 
push
 
di


1031 
push
 
cx


1032 
push
 
bx


1034 ; 
CÀ¨
 
ˇŒback
 
chaös
 
assocüãd
 
wôh
 
this
 
öãrÁ˚


1035 
mov
 
si
, 0 ; 
Sèπ
 
wôh
 
fú°
 
h™dÀ


1036 
mov
 
cx
, 
MAX_HANDLES


1038 .
ª£t_h™dÀ_lo›
:

1039 ; 
Check
 
h™dÀ
 
is
 
Æloˇãd
 
™d
 
m©ches
 
öãrÁ˚


1040 
cmp
 
w‹d
 
±r
 [
h™dÀ_èbÀ
 + 
si
 * 2], 0

1041 
je
 .
√xt_h™dÀ


1043 
cmp
 
byã
 
±r
 [
h™dÀ_öãrÁ˚s
 + 
si
], 
Æ


1044 
j√
 .
√xt_h™dÀ


1046 ; 
CÀ¨
 
ˇŒback
 
this
 
h™dÀ


1047 
push
 
ax


1048 
mov
 
ax
, 
si


1049 
shl
 
ax
, 2 ; 
C⁄vît
 
to
 
dw‹d
 
off£t


1050 
mov
 
di
, 
ax


1051 
mov
 
dw‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
di
], 0

1052 
p›
 
ax


1054 ; 
Re£t
 
h™dÀ
 
¥i‹ôõs
 
™d
 
Êags


1055 
mov
 
byã
 
±r
 [
h™dÀ_¥i‹ôõs
 + 
si
], 128 ; 
Re£t
 
to
  
¥i‹ôy


1056 
mov
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0 ; 
CÀ¨
 
Æl
 
Êags


1058 .
√xt_h™dÀ
:

1059 
öc
 
si


1060 
lo›
 .
ª£t_h™dÀ_lo›


1062 ; 
Re£t
 
h¨dw¨e
-
•ecific
 
°©e
 
the
 
•ecifõd
 
NIC


1063 ; 
Pîf‹m
 
com∂ëe
 
h¨dw¨e
 
ª£t
 
£quí˚


1064 
push
 
ax


1065 
push
 
dx


1067 ; 
Dëîmöe
 
which
 
NIC
 
to
 
ª£t
 
ba£d
 
⁄
 
öãrÁ˚
 
numbî


1068 
cmp
 
Æ
, 0

1069 
je
 .
ª£t_nic0


1070 
cmp
 
Æ
, 1

1071 
je
 .
ª£t_nic1


1072 
jmp
 .
skù_hw_ª£t


1074 .
ª£t_nic0
:

1075 ; 
Re£t
 
fú°
 
	`NIC
 (
assumed
 
to
 
be
 
©
 
°™d¨d
 
I
/
O
 
ba£
)

1076 
mov
 
dx
, 0x300 ; 
Sènd¨d
 3C509B 
ba£
 
addªss


1077 
ˇŒ
 
ª£t_3c509b_h¨dw¨e


1078 
jmp
 .
hw_ª£t_d⁄e


1080 .
ª£t_nic1
:

1081 ; 
Re£t
 
£c⁄d
 
NIC


1082 
mov
 
dx
, 0x310 ; 
Sec⁄d¨y
 
NIC
 
ba£
 
addªss


1083 
ˇŒ
 
ª£t_3c515_h¨dw¨e


1085 .
hw_ª£t_d⁄e
:

1086 ; 
CÀ¨
 
∑ckë
 
buf„rs
 
this
 
öãrÁ˚


1087 
ˇŒ
 
˛ór_öãrÁ˚_buf„rs


1089 ; 
Re£t
 
öãrÁ˚
 
°©i°ics


1090 
movzx
 
si
, 
Æ


1091 
shl
 
si
, 1 ; 
W‹d
 
off£t


1092 
mov
 
w‹d
 
±r
 [
nic_îr‹_cou¡s
 + 
si
], 0

1093 
mov
 
w‹d
 
±r
 [
nic_utûiz©i⁄
 + 
si
], 0

1095 .
skù_hw_ª£t
:

1096 
p›
 
dx


1097 
p›
 
ax


1099 
p›
 
bx


1100 
p›
 
cx


1101 
p›
 
di


1102 
p›
 
si


1104 
mov
 
dh
, 
PKT_SUCCESS


1105 
jmp
 .
exô


1107 .
bad_öãrÁ˚
:

1108 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1110 .
exô
:

1111 
p›
 
bp


1112 
ªt


1113 
≠i_ª£t_öãrÁ˚
 
ENDP


1116 ; 
≠i_gë_∑ømëîs
 - 
Gë
 
öãrÁ˚
 
	`∑ømëîs
 (
Fun˘i⁄
 8)

1118 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


1119 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
Ÿhî
 
ªgi°îs
 
wôh
 
∑ømëî
 
d©a


1120 ; 
U£s
: 
Mu…ùÀ
 
ªgi°îs


1122 
≠i_gë_∑ømëîs
 
PROC


1123 
push
 
bp


1124 
mov
 
bp
, 
•


1126 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1127 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1128 
j´
 .
bad_öãrÁ˚


1130 ; 
Fun˘i⁄
 9 (
GET_PARAMETERS
Ë- 
Rëu∫
 
com¥ehísive
 
öãrÁ˚
 
∑ømëîs


1131 ; 
Rëu∫
 
Æl
 
öãrÁ˚
 
∑ømëîs
 
≥r
 
Packë
 
Drivî
 
S≥cifiˇti⁄


1132 
push
 
bx


1133 
push
 
si


1135 ; 
Basic
 
Ethî√t
 
∑ømëîs


1136 
mov
 
cx
, 6 ; 
Addªss
 
	$Àngth
 (
MAC
 
addªss
)

1137 
mov
 
dx
, 14 ; 
Hódî
 
	`Àngth
 (
Ethî√t
 
hódî
)

1139 ; 
Exãnded
 
∑ømëîs
 
mu…ùÀxög
 
ˇ∑bûôõs


1140 
mov
 
bx
, 
MAX_TYPE_CALLBACKS
 ; 
Maximum
 
ˇŒbacks
 
≥r
 
∑ckë
 
ty≥


1141 
mov
 
si
, 
MAX_HANDLES
 ; 
Maximum
 
h™dÀs
 
suµ‹ãd


1143 ; 
Addôi⁄Æ
 
∑ømëîs
 
ö
 
unu£d
 
ªgi°îs


1144 ; 
BH
 = 
mu…ùÀxög
 
íabÀd
 
Êag


1145 
mov
 
bh
, 1 ; 
Mu…ùÀxög
 
suµ‹ãd


1147 ; 
BL
 = 
exãnded
 
„©uªs
 
suµ‹ãd


1148 
mov
 
bl
, 00001111b ; 
Pri‹ôy
=1, 
QoS
=1, 
LﬂdBÆ™˚
=1, 
Fûãrög
=1

1150 
p›
 
si


1151 
p›
 
bx


1152 
mov
 
dh
, 
PKT_SUCCESS


1153 
jmp
 .
exô


1155 .
bad_öãrÁ˚
:

1156 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1158 .
exô
:

1159 
p›
 
bp


1160 
ªt


1161 
≠i_gë_∑ømëîs
 
ENDP


1164 ; 
≠i_as_£nd_∑ckë
 - 
A…î«tive
 
£nd
 
	`∑ckë
 (
Fun˘i⁄
 9)

1166 ; 
I≈ut
: 
CX
 = 
Àngth
, 
DS
:
SI
 = 
∑ckë
 
d©a


1167 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1168 ; 
U£s
: 
DH


1170 
≠i_as_£nd_∑ckë
 
PROC


1171 
push
 
bp


1172 
mov
 
bp
, 
•


1174 ; 
F‹
 
now
, 
ju°
 
ˇŒ
 
ªguœr
 
£nd
 
∑ckë


1175 
ˇŒ
 
≠i_£nd_∑ckë


1177 
p›
 
bp


1178 
ªt


1179 
≠i_as_£nd_∑ckë
 
ENDP


1182 ; 
≠i_£t_rcv_mode
 - 
Së
 
ª˚ive
 
	`mode
 (
Fun˘i⁄
 20)

1184 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî
, 
CX
 = 
mode


1185 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1186 ; 
U£s
: 
DH


1188 
≠i_£t_rcv_mode
 
PROC


1189 
push
 
bp


1190 
mov
 
bp
, 
•


1191 
push
 
bx


1193 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1194 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1195 
j´
 .
bad_öãrÁ˚


1197 ; 
VÆid©e
 
mode


1198 
cmp
 
cx
, 
RCV_MODE_PROMISCUOUS


1199 
ja
 .
bad_mode


1201 ; 
St‹e
 
cuºít
 
ª˚ive
 
mode


1202 
mov
 [
cuºít_rcv_mode
], 
˛


1204 ; 
Bridge
 
to
 
C
 
pd_£t_rcv_mode
 
fun˘i⁄
 
vü
 
vèbÀ
 
di•©ch


1205 ; 
C⁄vît
 
DOS
 
ˇŒög
 
c⁄víti⁄
 
to
 
C
 calling convention

1206 ; 
DOS
 
öput
: 
AL
 = 
öãrÁ˚
 
numbî
, 
CX
 = 
mode


1207 ; 
C
 
sig«tuª
: 
	$pd_£t_rcv_mode
(
uöt16_t
 
h™dÀ
, *
∑øms
)

1209 
sub
 
•
, 2 ; 
AŒoˇã
 
•a˚
 
mode
 
∑ømëî
 
⁄
 
°ack


1210 
mov
 [
bp
-4], 
cx
 ; 
St‹e
 
mode
 
⁄
 
	`°ack
 (
accou¡
 
pushed
 
bx
)

1212 ; 
C⁄vît
 
	$AL
 (
öãrÁ˚
 
numbî
Ë
to
 
h™dÀ


1213 
mov
 
ah
, 0 ; 
Zîo
 
exãnd
 
AL
 
to
 
AX
 
h™dÀ


1215 ; 
Push
 
∑ømëîs
 
C
 
ˇŒög
 
	$c⁄víti⁄
 (
right
 
to
 
À·
)

1216 
Àa
 
dx
, [
bp
-4] ; 
Gë
 
addªss
 
of
 
mode
 
∑ømëî


1217 
push
 
dx
 ; 
∑øms
 
	$poöãr
 (*
∑øms
)

1218 
push
 
ax
 ; 
	`h™dÀ
 (
uöt16_t
 
h™dÀ
)

1220 ; 
CÆl
 
C
 
fun˘i⁄


1221 
ˇŒ
 
_pd_£t_rcv_mode


1222 
add
 
•
, 4 ; 
CÀ™
 
	`°ack
 (2 
∑ømëîs
 √ó 2 
byãs
 
óch
)

1224 ; 
C⁄vît
 
C
  
to
 
DOS
 
îr‹
 
code


1225 
cmp
 
ax
, 0

1226 
jl
 .
mode_îr‹
 ; 
Jump
 
	$√g©ive
 (
îr‹
)

1228 
add
 
•
, 2 ; 
Re°‹e
 
°ack
 
	$poöãr
 (
dóŒoˇã
 
mode
 
v¨übÀ
)

1229 
mov
 
dh
, 
PKT_SUCCESS


1230 
jmp
 .
exô


1232 .
mode_îr‹
:

1233 
add
 
•
, 2 ; 
Re°‹e
 
°ack
 
	$poöãr
 (
dóŒoˇã
 
mode
 
v¨übÀ
)

1234 
mov
 
dh
, 
PKT_ERROR_BAD_MODE


1235 
jmp
 .
exô


1237 .
bad_öãrÁ˚
:

1238 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1239 
jmp
 .
exô


1241 .
bad_mode
:

1242 
mov
 
dh
, 
PKT_ERROR_BAD_MODE


1244 .
exô
:

1245 
p›
 
bx


1246 
p›
 
bp


1247 
ªt


1248 
≠i_£t_rcv_mode
 
ENDP


1251 ; 
≠i_gë_rcv_mode
 - 
Gë
 
ª˚ive
 
	`mode
 (
Fun˘i⁄
 21)

1253 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


1254 ; 
Ouçut
: 
AX
 = 
mode
, 
DH
 = 
îr‹
 
code


1255 ; 
U£s
: 
AX
, 
DH


1257 
≠i_gë_rcv_mode
 
PROC


1258 
push
 
bp


1259 
mov
 
bp
, 
•


1261 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1262 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1263 
j´
 .
bad_öãrÁ˚


1265 ; 
Rëu∫
 
cuºít
 
ª˚ive
 
mode


1266 
mov
 
Æ
, [
cuºít_rcv_mode
]

1267 
mov
 
ah
, 0

1268 
mov
 
dh
, 
PKT_SUCCESS


1269 
jmp
 .
exô


1271 .
bad_öãrÁ˚
:

1272 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1274 .
exô
:

1275 
p›
 
bp


1276 
ªt


1277 
≠i_gë_rcv_mode
 
ENDP


1280 ; 
≠i_£t_mu…iˇ°
 - 
Së
 
mu…iˇ°
 
	`li°
 (
Fun˘i⁄
 22)

1282 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
, 
CX
 = 
cou¡
, 
DS
:
SI
 = 
addªss
 
li°


1283 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1284 ; 
U£s
: 
DH


1286 
≠i_£t_mu…iˇ°
 
PROC


1287 
push
 
bp


1288 
mov
 
bp
, 
•


1290 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1291 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1292 
j´
 .
bad_öãrÁ˚


1294 ; 
Im∂emít
 
mu…iˇ°
 
addªss
 
m™agemít


1295 
push
 
bx


1296 
push
 
si


1297 
push
 
di


1298 
push
 
es


1300 ; 
VÆid©e
 
	$cou¡
 (
max
 16 
mu…iˇ°
 
addªs£s
 
typiˇl
 3C
om
)

1301 
cmp
 
cx
, 16

1302 
ja
 .
too_m™y


1304 ; 
AŒoˇã
 
•a˚
 
mu…iˇ°
 
li°
 
√eded


1305 
ã°
 
cx
, cx

1306 
jz
 .
˛ór_mu…iˇ°


1308 ; 
C›y
 
mu…iˇ°
 
addªs£s
 
to
 
öã∫Æ
 
buf„r


1309 
push
 
cx
 ; 
Save
 
cou¡


1310 
push
 
ds


1311 
push
 
si
 ; 
Save
 
sour˚


1313 ; 
Poöt
 
to
 
mu…iˇ°
 
°‹age
 
¨ó


1314 
mov
 
di
, 
OFFSET
 
mu…iˇ°_li°


1315 
push
 
cs


1316 
p›
 
es
 ; 
ES
:
DI
 = 
de°ö©i⁄


1318 ; 
CÆcuœã
 
byãs
 
to
 
	$c›y
 (6 
byãs
 
≥r
 
MAC
 
addªss
)

1319 
mov
 
ax
, 
cx


1320 
mov
 
bx
, 6

1321 
mul
 
bx
 ; 
AX
 = 
byãs
 
to
 
c›y


1322 
mov
 
cx
, 
ax


1323 
shr
 
cx
, 1 ; 
C⁄vît
 
to
 
w‹ds


1325 ; 
C›y
 
addªs£s


1326 
˛d


1327 
ªp
 
movsw


1328 
ã°
 
ax
, 1 ; 
Odd
 
byã
?

1329 
jz
 .
c›y_d⁄e


1330 
movsb
 ; 
C›y
 
œ°
 
byã


1332 .
c›y_d⁄e
:

1333 
p›
 
si


1334 
p›
 
ds


1335 
p›
 
cx
 ; 
Re°‹e
 
cou¡


1337 ; 
St‹e
 
cou¡


1338 
mov
 [
mu…iˇ°_cou¡
], 
˛


1340 ; 
Progøm
 
h¨dw¨e
 
wôh
 
mu…iˇ°
 
li°


1341 
ˇŒ
 
£t_h¨dw¨e_mu…iˇ°


1343 
mov
 
dh
, 
PKT_SUCCESS


1344 
jmp
 .
˛ónup


1346 .
˛ór_mu…iˇ°
:

1347 ; 
CÀ¨
 
Æl
 
mu…iˇ°
 
addªs£s


1348 
mov
 
byã
 
±r
 [
mu…iˇ°_cou¡
], 0

1349 
ˇŒ
 
˛ór_h¨dw¨e_mu…iˇ°


1350 
mov
 
dh
, 
PKT_SUCCESS


1351 
jmp
 .
˛ónup


1353 .
too_m™y
:

1354 
mov
 
dh
, 
PKT_ERROR_NO_MULTICAST


1356 .
˛ónup
:

1357 
p›
 
es


1358 
p›
 
di


1359 
p›
 
si


1360 
p›
 
bx


1361 
jmp
 .
exô


1363 .
bad_öãrÁ˚
:

1364 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1366 .
exô
:

1367 
p›
 
bp


1368 
ªt


1369 
≠i_£t_mu…iˇ°
 
ENDP


1372 ; 
≠i_gë_mu…iˇ°
 - 
Gë
 
mu…iˇ°
 
	`li°
 (
Fun˘i⁄
 23)

1374 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


1375 ; 
Ouçut
: 
CX
 = 
cou¡
, 
DS
:
SI
 = 
addªss
 
li°
, 
DH
 = 
îr‹
 
code


1376 ; 
U£s
: 
CX
, 
DH


1378 
≠i_gë_mu…iˇ°
 
PROC


1379 
push
 
bp


1380 
mov
 
bp
, 
•


1382 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1383 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1384 
j´
 .
bad_öãrÁ˚


1386 ; 
Rëu∫
 
a˘uÆ
 
mu…iˇ°
 
li°


1387 
push
 
si


1388 
push
 
di


1389 
push
 
es


1391 ; 
Gë
 
mu…iˇ°
 
cou¡


1392 
movzx
 
cx
, 
byã
 
±r
 [
mu…iˇ°_cou¡
]

1393 
ã°
 
cx
, cx

1394 
jz
 .
no_mu…iˇ°


1396 ; 
Së
 
up
 
sour˚
 
poöãr


1397 
push
 
cs


1398 
p›
 
es


1399 
mov
 
di
, 
OFFSET
 
mu…iˇ°_li°


1401 ; 
DS
:
SI
 
should
 
poöt
 
to
 
ˇŒî
's buffer (already set)

1402 ; 
C›y
 
mu…iˇ°
 
addªs£s
 
to
 
ˇŒî
's buffer

1403 
push
 
cx
 ; 
Save
 
cou¡


1404 
mov
 
ax
, 
cx


1405 
mov
 
bx
, 6

1406 
mul
 
bx
 ; 
AX
 = 
byãs
 
to
 
c›y


1407 
mov
 
cx
, 
ax


1408 
shr
 
cx
, 1 ; 
C⁄vît
 
to
 
w‹ds


1410 
push
 
ds


1411 
push
 
si


1413 ; 
Sw≠
 
sour˚
 
™d
 
de°ö©i⁄
 
c›y


1414 
push
 
es


1415 
push
 
di


1416 
p›
 
si


1417 
p›
 
ds
 ; 
DS
:
SI
 = 
our
 
li°


1418 ; 
ES
:
DI
 = 
ˇŒî
's buffer (from original DS:SI)

1419 
p›
 
di


1420 
p›
 
es


1422 
˛d


1423 
ªp
 
movsw


1424 
ã°
 
ax
, 1

1425 
jz
 .
c›y_com∂ëe


1426 
movsb


1428 .
c›y_com∂ëe
:

1429 
p›
 
cx
 ; 
Re°‹e
 
cou¡


1431 .
no_mu…iˇ°
:

1432 
mov
 
dh
, 
PKT_SUCCESS


1434 
p›
 
es


1435 
p›
 
di


1436 
p›
 
si


1437 
jmp
 .
exô


1439 .
bad_öãrÁ˚
:

1440 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1442 .
exô
:

1443 
p›
 
bp


1444 
ªt


1445 
≠i_gë_mu…iˇ°
 
ENDP


1448 ; 
≠i_gë_°©i°ics
 - 
Gë
 
drivî
 
	`°©i°ics
 (
Fun˘i⁄
 24)

1450 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


1451 ; 
Ouçut
: 
Sèti°ics
 
ö
 
ªgi°îs
, 
DH
 = 
îr‹
 
code


1452 ; 
U£s
: 
Mu…ùÀ
 
ªgi°îs


1454 
≠i_gë_°©i°ics
 
PROC


1455 
push
 
bp


1456 
mov
 
bp
, 
•


1458 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1459 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1460 
j´
 .
bad_öãrÁ˚


1462 ; 
Bridge
 
to
 
C
 
pd_gë_°©i°ics
 
fun˘i⁄
 
vü
 
vèbÀ
 
di•©ch


1463 ; 
C⁄vît
 
DOS
 
ˇŒög
 
c⁄víti⁄
 
to
 
C
 calling convention

1464 ; 
DOS
 
öput
: 
AL
 = 
öãrÁ˚
 
numbî


1465 ; 
C
 
sig«tuª
: 
	`pd_gë_°©i°ics
(
uöt16_t
 
h™dÀ
, 
pd_°©i°ics_t
 *
°©s
)

1467 ; 
We
 
√ed
 
a
 
buf„r
 
°©i°ics
 - 
u£
 
°ack
 
•a˚


1468 
sub
 
•
, 32 ; 
AŒoˇã
 32 
byãs
 
°©i°ics
 
°ru˘uª


1470 ; 
C⁄vît
 
	$AL
 (
öãrÁ˚
 
numbî
Ë
to
 
h™dÀ


1471 
mov
 
ah
, 0 ; 
Zîo
 
exãnd
 
AL
 
to
 
AX
 
h™dÀ


1473 ; 
Push
 
∑ømëîs
 
C
 
ˇŒög
 
	$c⁄víti⁄
 (
right
 
to
 
À·
)

1474 
Àa
 
dx
, [
bp
-32] ; 
Gë
 
addªss
 
of
 
°©i°ics
 
buf„r
 
⁄
 
°ack


1475 
push
 
dx
 ; 
°©s
 
buf„r
 
	$off£t
 (
pd_°©i°ics_t
 *
°©s
)

1476 
push
 
ss
 ; 
°©s
 
buf„r
 
	$£gmít
 (
°ack
 
£gmít
)

1477 
push
 
ax
 ; 
	`h™dÀ
 (
uöt16_t
 
h™dÀ
)

1479 ; 
CÆl
 
C
 
fun˘i⁄


1480 
ˇŒ
 
_pd_gë_°©i°ics


1481 
add
 
•
, 6 ; 
CÀ™
 
	`°ack
 (3 
∑ømëîs
 √ó 2 
byãs
 
óch
)

1483 ; 
C⁄vît
 
C
  
to
 
DOS
 
îr‹
 
code


1484 
cmp
 
ax
, 0

1485 
jl
 .
°©s_îr‹
 ; 
Jump
 
	`√g©ive
 (
îr‹
)

1487 ; 
Suc˚ss
 - 
exåa˘
 
key
 
°©i°ics
 
‰om
 
buf„r
 
™d
  
ö
 
ªgi°îs


1488 ; 
F‹
 
now
,  
basic
 
	`°©i°ics
 (
∑ckës
 
ª˚ived
/
£¡
)

1489 
mov
 
bx
, 
w‹d
 
±r
 [
bp
-32] ; 
Packës
 
	`ª˚ived
 (
low
Ë- 
fú°
 
fõld
 
ö
 

1490 
mov
 
cx
, 
w‹d
 
±r
 [
bp
-30] ; 
Packës
 
	`ª˚ived
 (
high
Ë- 
£c⁄d
 
fõld


1491 
mov
 
dx
, 
w‹d
 
±r
 [
bp
-28] ; 
Packës
 
	`£¡
 (
low
Ë- 
thúd
 
fõld


1492 ; 
Addôi⁄Æ
 
°©i°ics
 
would
 
be
 
ö
 
Ÿhî
 
fõlds
 
of
 
the
 
°ru˘uª


1494 
add
 
•
, 32 ; 
Re°‹e
 
°ack
 
	$poöãr
 (
dóŒoˇã
 
°©i°ics
 
buf„r
)

1495 
mov
 
dh
, 
PKT_SUCCESS


1496 
jmp
 .
exô


1498 .
°©s_îr‹
:

1499 
add
 
•
, 32 ; 
Re°‹e
 
°ack
 
	$poöãr
 (
dóŒoˇã
 
°©i°ics
 
buf„r
)

1500 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1501 
jmp
 .
exô


1503 .
bad_öãrÁ˚
:

1504 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1506 .
exô
:

1507 
p›
 
bp


1508 
ªt


1509 
≠i_gë_°©i°ics
 
ENDP


1512 ; 
≠i_£t_addªss
 - 
Së
 
°©i⁄
 
	`addªss
 (
Fun˘i⁄
 25)

1514 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
, 
CX
 = 
addªss
 
Àngth
, 
DS
:
SI
 =áddress

1515 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1516 ; 
U£s
: 
DH


1518 
≠i_£t_addªss
 
PROC


1519 
push
 
bp


1520 
mov
 
bp
, 
•


1522 ; 
VÆid©e
 
öãrÁ˚
 
numbî


1523 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

1524 
j´
 .
bad_öãrÁ˚


1526 ; 
Im∂emít
 
°©i⁄
 
addªss
 
	$£âög
 (
Fun˘i⁄
 25)

1527 
push
 
bx


1528 
push
 
si


1529 
push
 
di


1530 
push
 
es


1532 ; 
VÆid©e
 
addªss
 
	$Àngth
 (
mu°
 
be
 6 
Ethî√t
)

1533 
cmp
 
cx
, 6

1534 
j√
 .
övÆid_Àngth


1536 ; 
VÆid©e
 
addªss
 
	`f‹m©
 (
uniˇ°
 - 
bô
 0 
of
 
fú°
 
byã
 
mu°
 
be
 0)

1537 
mov
 
bl
, [
si
]

1538 
ã°
 
bl
, 01
h
 ; 
Mu…iˇ°
/
brﬂdˇ°
 
bô


1539 
jnz
 .
övÆid_addªss


1541 ; 
Check
 
h¨dw¨e
 
suµ‹ts
 
MAC
 
addªss
 
ch™ge


1542 ; 3C509B 
suµ‹ts
 
ô
 
through
 
EEPROM
, 3C515Åhrough 
ªgi°îs


1543 
cmp
 
Æ
, 0

1544 
je
 .
£t_3c509b_mac


1545 
cmp
 
Æ
, 1

1546 
je
 .
£t_3c515_mac


1547 
jmp
 .
nŸ_suµ‹ãd


1549 .
£t_3c509b_mac
:

1550 ; 
Së
 
MAC
 
⁄
 3C509B (
ªquúes
 
EEPROM
 
wrôe
)

1551 
push
 
ax


1552 
push
 
dx


1554 ; 
Save
 
√w
 
MAC
 
to
 
öã∫Æ
 
buf„r


1555 
push
 
cx


1556 
push
 
si


1557 
mov
 
di
, 
OFFSET
 
°©i⁄_addªss


1558 
push
 
cs


1559 
p›
 
es


1560 
mov
 
cx
, 3 ; 3 
w‹ds


1561 
˛d


1562 
ªp
 
movsw


1563 
p›
 
si


1564 
p›
 
cx


1566 ; 
Progøm
 
the
 
	`h¨dw¨e
 (
sim∂ifõd
 - 
a˘uÆ
 
would
 
wrôe
 
EEPROM
)

1567 
mov
 
dx
, 0x300 ; 
Ba£
 
I
/
O


1568 
add
 
dx
, 0x0A ; 
Sèti⁄
 
addªss
 
ªgi°îs


1570 ; 
Wrôe
 6 
byãs
 
of
 
MAC
 
addªss


1571 
mov
 
cx
, 3 ; 3 
w‹ds


1572 
mov
 
si
, 
OFFSET
 
°©i⁄_addªss


1573 .
wrôe_mac_lo›
:

1574 
lodsw


1575 
out
 
dx
, 
ax


1576 
add
 
dx
, 2

1577 
lo›
 .
wrôe_mac_lo›


1579 
p›
 
dx


1580 
p›
 
ax


1581 
mov
 
dh
, 
PKT_SUCCESS


1582 
jmp
 .
˛ónup


1584 .
£t_3c515_mac
:

1585 ; 
Së
 
MAC
 
⁄
 3C515-
	`TX
 (-
ba£d
)

1586 
push
 
ax


1587 
push
 
dx


1589 ; 
Save
 
™d
 
¥ogøm
 
simû¨
 
to
 3C509B

1590 
push
 
cx


1591 
push
 
si


1592 
mov
 
di
, 
OFFSET
 
°©i⁄_addªss


1593 
push
 
cs


1594 
p›
 
es


1595 
mov
 
cx
, 3

1596 
˛d


1597 
ªp
 
movsw


1598 
p›
 
si


1599 
p›
 
cx


1601 ; 
Progøm
 3C515 
°©i⁄
 
addªss
 
ªgi°îs


1602 
mov
 
dx
, 0x310 ; 
Assume
 
£c⁄d
 
NIC
 
ba£


1603 ; 
Sñe˘
 
wödow
 2 
°©i⁄
 
addªss


1604 
mov
 
ax
, 0x0802 ; 
SELECT_WINDOW
 
comm™d


1605 
out
 
dx
, 
ax


1607 
add
 
dx
, 0x00 ; 
Sèti⁄
 
addªss
 
ba£


1608 
mov
 
cx
, 3

1609 
mov
 
si
, 
OFFSET
 
°©i⁄_addªss


1610 .
wrôe_515_mac
:

1611 
lodsw


1612 
out
 
dx
, 
ax


1613 
add
 
dx
, 2

1614 
lo›
 .
wrôe_515_mac


1616 
p›
 
dx


1617 
p›
 
ax


1618 
mov
 
dh
, 
PKT_SUCCESS


1619 
jmp
 .
˛ónup


1621 .
övÆid_Àngth
:

1622 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


1623 
jmp
 .
˛ónup


1625 .
övÆid_addªss
:

1626 
mov
 
dh
, 
PKT_ERROR_CANT_SET
 ; 
C™
't set multicast/broadcastás station

1627 
jmp
 .
˛ónup


1629 .
nŸ_suµ‹ãd
:

1630 
mov
 
dh
, 
PKT_ERROR_CANT_SET


1632 .
˛ónup
:

1633 
p›
 
es


1634 
p›
 
di


1635 
p›
 
si


1636 
p›
 
bx


1637 
jmp
 .
exô


1639 .
bad_öãrÁ˚
:

1640 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1642 .
exô
:

1643 
p›
 
bp


1644 
ªt


1645 
≠i_£t_addªss
 
ENDP


1648 ; 
∑ckë_dñivî_to_h™dÀr
 - 
CÆl
 
≠∂iˇti⁄
 
∑ckë
 
ª˚ivî


1650 ; 
I≈ut
: 
AX
 = 
h™dÀ
, 
CX
 = 
∑ckë
 
Àngth
, 
DS
:
SI
 =Öackë 
d©a


1651 ; 
ES
:
DI
 = 
ª˚ivî
 
fun˘i⁄
 
addªss


1652 ; 
Ouçut
: 
AX
 = 
	`ªsu…
 (0 = 
suc˚ss
)

1653 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
¥e£rved
 
ˇŒî
)

1655 
∑ckë_dñivî_to_h™dÀr
 
PROC


1656 
push
 
bp


1657 
mov
 
bp
, 
•


1658 
push
 
bx


1659 
push
 
cx


1660 
push
 
dx


1661 
push
 
si


1662 
push
 
di


1663 
push
 
ds


1664 
push
 
es


1666 ; 
VÆid©e
 
∑ømëîs


1667 
ã°
 
cx
, cx

1668 
jz
 .
îr‹_exô


1669 
cmp
 
cx
, 1514 ; 
Max
 
Ethî√t
 
‰ame


1670 
ja
 .
îr‹_exô


1672 ; 
Së
 
up
 
ˇŒ
 
to
 
ª˚ivî
 
fun˘i⁄


1673 ; 
Packë
 
Drivî
 
ˇŒög
 
c⁄víti⁄
:

1674 ; 
AX
 = 
h™dÀ
, 
CX
 = 
Àngth
, 
DS
:
SI
 = 
∑ckë
 
buf„r


1675 ; 
CÆl
 
is
 
FAR
 
ˇŒ
 
to
 
ES
:
DI


1677 ; 
P¨amëîs
 
¨e
 
Æªady
 
£t
 
up
 
c‹ª˘ly
:

1678 ; 
AX
 = 
	`h™dÀ
 (
Æªady
 
£t
)

1679 ; 
CX
 = 
	`Àngth
 (
Æªady
 
£t
)

1680 ; 
DS
:
SI
 = 
∑ckë
 
	`d©a
 (
Æªady
 
£t
)

1682 ; 
Make
 
the
 
Ár
 
ˇŒ
 
to
 
ª˚ivî


1683 
push
 
cs
 ; 
Save
 
our
  
addªss


1684 
ˇŒ
 
Ár
 
±r
 
es
:[
di
] ; 
CÆl
 
the
 
ª˚ivî
 
fun˘i⁄


1686 ; 
Re˚ivî
 
should
 
¥e£rve
 
Æl
 
ªgi°îs
 
ex˚±
 
AX


1687 
mov
 
ax
, 0 ; 
Suc˚ss


1688 
jmp
 .
exô


1690 .
îr‹_exô
:

1691 
mov
 
ax
, -1 ; 
Eº‹


1693 .
exô
:

1694 
p›
 
es


1695 
p›
 
ds


1696 
p›
 
di


1697 
p›
 
si


1698 
p›
 
dx


1699 
p›
 
cx


1700 
p›
 
bx


1701 
p›
 
bp


1702 
ªt


1703 
∑ckë_dñivî_to_h™dÀr
 
ENDP


1706 ; 
∑ckë_föd_h™dÀr
 - 
Föd
 
h™dÀr
 
by
 
h™dÀ
 
ID


1708 ; 
I≈ut
: 
BX
 = 
h™dÀ
 
to
 
föd


1709 ; 
Ouçut
: 
SI
 = 
off£t
 
ö
 
h™dÀ
 
	`èbÀ
 (
‹
 -1 
nŸ
 
found
)

1710 ; 
ZF
 
£t
 
found
, 
˛ór
 
nŸ
 found

1711 ; 
U£s
: 
SI
, 
CX
, 
AX


1713 
∑ckë_föd_h™dÀr
 
PROC


1714 
push
 
bp


1715 
mov
 
bp
, 
•


1716 
push
 
bx


1717 
push
 
dx


1719 ; 
Sórch
 
h™dÀ
 
èbÀ


1720 
mov
 
si
, 
OFFSET
 
h™dÀ_èbÀ


1721 
mov
 
cx
, 
MAX_HANDLES


1722 
mov
 
ax
, 1 ; 
H™dÀ
 
numbîs
 
°¨t
 
©
 1

1724 .
£¨ch_lo›
:

1725 
cmp
 
w‹d
 
±r
 [
si
], 0 ; 
Check
 
¶Ÿ
 
is
 
‰ì


1726 
je
 .
√xt_¶Ÿ


1727 
cmp
 
ax
, 
bx
 ; 
Check
 
this
 
is
 
our
 
h™dÀ


1728 
je
 .
found


1730 .
√xt_¶Ÿ
:

1731 
add
 
si
, 2 ; 
Move
 
to
 
√xt
 
¶Ÿ


1732 
öc
 
ax
 ; 
Next
 
h™dÀ
 
numbî


1733 
lo›
 .
£¨ch_lo›


1735 ; 
NŸ
 
found


1736 
mov
 
si
, -1

1737 
ã°
 
si
, sò; 
CÀ¨
 
ZF


1738 
jmp
 .
exô


1740 .
found
:

1741 ; 
Found
 - 
SI
 
poöts
 
to
 
h™dÀ
 
èbÀ
 
íåy


1742 ; 
C⁄vît
 
to
 0-
ba£d
 
ödex
 
Ÿhî
 
èbÀs


1743 
dec
 
ax


1744 
mov
 
si
, 
ax


1745 
cmp
 
si
, sò; 
Së
 
ZF


1747 .
exô
:

1748 
p›
 
dx


1749 
p›
 
bx


1750 
p›
 
bp


1751 
ªt


1752 
∑ckë_föd_h™dÀr
 
ENDP


1755 ; 
Pha£
 3 
Group
 3B 
Exãnded
 
API
 
Fun˘i⁄
 
Im∂emíèti⁄s


1759 ; 
≠i_£t_h™dÀ_¥i‹ôy_asm
 - 
Së
 
h™dÀ
 
	`¥i‹ôy
 (
AH
=20
h
)

1761 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
CL
 = 
	`¥i‹ôy
 (0-255)

1762 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1763 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


1765 
≠i_£t_h™dÀ_¥i‹ôy_asm
 
PROC


1766 
push
 
bp


1767 
mov
 
bp
, 
•


1768 
push
 
si


1770 ; 
E«bÀ
 
exãnded
 
API
 
nŸ
 
Æªady
 
íabÀd


1771 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

1772 
j√
 .
≠i_íabÀd


1773 
mov
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 1

1775 .
≠i_íabÀd
:

1776 ; 
VÆid©e
 
h™dÀ


1777 
ˇŒ
 
∑ckë_föd_h™dÀr


1778 
jnz
 .
bad_h™dÀ


1780 ; 
St‹e
 
	`¥i‹ôy
 (
SI
 
c⁄èös
 0-
ba£d
 
h™dÀ
 
ödex
)

1781 
mov
 [
h™dÀ_¥i‹ôõs
 + 
si
], 
˛


1783 ; 
Së
 
¥i‹ôy
 
íabÀd
 
Êag


1784 
‹
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0001
h
 ; 
HANDLE_FLAG_PRIORITY_ENABLED


1786 
mov
 
dh
, 
PKT_SUCCESS


1787 
jmp
 .
exô


1789 .
bad_h™dÀ
:

1790 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1792 .
exô
:

1793 
p›
 
si


1794 
p›
 
bp


1795 
ªt


1796 
≠i_£t_h™dÀ_¥i‹ôy_asm
 
ENDP


1799 ; 
≠i_gë_routög_öfo_asm
 - 
Gë
 
routög
 
	`öf‹m©i⁄
 (
AH
=21
h
)

1801 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
ES
:
DI
 = 
öfo
 
buf„r


1802 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
buf„r
 
fûÀd
 
wôh
 
routög
 
öfo


1803 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


1805 
≠i_gë_routög_öfo_asm
 
PROC


1806 
push
 
bp


1807 
mov
 
bp
, 
•


1808 
push
 
si


1809 
push
 
di


1811 ; 
VÆid©e
 
h™dÀ


1812 
ˇŒ
 
∑ckë_föd_h™dÀr


1813 
jnz
 .
bad_h™dÀ


1815 ; 
Fûl
 
routög
 
öf‹m©i⁄
 
°ru˘uª


1816 ; 
This
 
is
 
a
 
sim∂ifõd
 
im∂emíèti⁄
 - 
ö
 
ªÆôy
 
would
 
öãrÁ˚
 
wôh
 
Group
 3A

1817 
mov
 
w‹d
 
±r
 
es
:[
di
], 10 ; 
	$rouã_cou¡
 (
dummy
 
vÆue
)

1818 
mov
 
w‹d
 
±r
 
es
:[
di
 + 2], 25 ; 
	$¨p_íåõs
 (
dummy
 
vÆue
)

1819 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 4], 1000 ; 
	$∑ckës_rouãd
 (
dummy
 
vÆue
)

1820 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 8], 5 ; 
	$routög_îr‹s
 (
dummy
 
vÆue
)

1821 
mov
 
byã
 
±r
 
es
:[
di
 + 12], 0 ; 
deÁu…_nic


1822 
mov
 
byã
 
±r
 
es
:[
di
 + 13], 1 ; 
	$routög_mode
 (
íabÀd
)

1824 
mov
 
dh
, 
PKT_SUCCESS


1825 
jmp
 .
exô


1827 .
bad_h™dÀ
:

1828 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1830 .
exô
:

1831 
p›
 
di


1832 
p›
 
si


1833 
p›
 
bp


1834 
ªt


1835 
≠i_gë_routög_öfo_asm
 
ENDP


1838 ; 
≠i_£t_lﬂd_bÆ™˚_asm
 - 
Së
 
lﬂd
 
	`bÆ™cög
 (
AH
=22
h
)

1840 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
CL
 = 
mode
, 
CH
 = 
¥im¨y
 
NIC
, 
DL
 = 
£c⁄d¨y
 NIC

1841 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1842 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


1844 
≠i_£t_lﬂd_bÆ™˚_asm
 
PROC


1845 
push
 
bp


1846 
mov
 
bp
, 
•


1847 
push
 
si


1849 ; 
E«bÀ
 
exãnded
 
API
 
nŸ
 
Æªady
 
íabÀd


1850 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

1851 
j√
 .
≠i_íabÀd


1852 
mov
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 1

1854 .
≠i_íabÀd
:

1855 ; 
VÆid©e
 
h™dÀ


1856 
ˇŒ
 
∑ckë_föd_h™dÀr


1857 
jnz
 .
bad_h™dÀ


1859 ; 
VÆid©e
 
lﬂd
 
bÆ™˚
 
	`mode
 (0-4)

1860 
cmp
 
˛
, 4

1861 
ja
 .
bad_mode


1863 ; 
VÆid©e
 
NIC
 
ödi˚s


1864 
cmp
 
ch
, [
öãrÁ˚_cou¡
]

1865 
j´
 .
bad_nic


1866 
cmp
 
dl
, [
öãrÁ˚_cou¡
]

1867 
j´
 .
bad_nic


1869 ; 
St‹e
 
lﬂd
 
bÆ™cög
 
c⁄figuøti⁄


1870 
mov
 [
lb_mode
], 
˛


1871 
mov
 [
lb_¥im¨y_nic
], 
ch


1872 
mov
 [
lb_£c⁄d¨y_nic
], 
dl


1874 ; 
Së
 
lﬂd
 
bÆ™˚
 
Êag
 
h™dÀ


1875 
‹
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0004
h
 ; 
HANDLE_FLAG_LOAD_BALANCE


1877 
mov
 
dh
, 
PKT_SUCCESS


1878 
jmp
 .
exô


1880 .
bad_h™dÀ
:

1881 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1882 
jmp
 .
exô


1884 .
bad_mode
:

1885 
mov
 
dh
, 
PKT_ERROR_BAD_MODE


1886 
jmp
 .
exô


1888 .
bad_nic
:

1889 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1891 .
exô
:

1892 
p›
 
si


1893 
p›
 
bp


1894 
ªt


1895 
≠i_£t_lﬂd_bÆ™˚_asm
 
ENDP


1898 ; 
≠i_gë_nic_°©us_asm
 - 
Gë
 
NIC
 
	`°©us
 (
AH
=23
h
)

1900 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
CL
 = 
NIC
 
ödex
, 
ES
:
DI
 = 
°©us
 
buf„r


1901 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
buf„r
 
fûÀd
 
wôh
 
NIC
 
°©us


1902 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


1904 
≠i_gë_nic_°©us_asm
 
PROC


1905 
push
 
bp


1906 
mov
 
bp
, 
•


1907 
push
 
si


1908 
push
 
di


1910 ; 
VÆid©e
 
h™dÀ


1911 
ˇŒ
 
∑ckë_föd_h™dÀr


1912 
jnz
 .
bad_h™dÀ


1914 ; 
VÆid©e
 
NIC
 
ödex


1915 
cmp
 
˛
, [
öãrÁ˚_cou¡
]

1916 
j´
 .
bad_nic


1918 ; 
Fûl
 
NIC
 
°©us
 
	$°ru˘uª
 (
sim∂ifõd
)

1919 
mov
 
byã
 
±r
 
es
:[
di
], 
˛
 ; 
nic_ödex


1920 
mov
 
byã
 
±r
 
es
:[
di
 + 1], 1 ; 
	$°©us
 (
up
)

1921 
mov
 
w‹d
 
±r
 
es
:[
di
 + 2], 100 ; 
	`lök_•ìd
 (100 
Mbps
)

1923 ; 
Gë
 
utûiz©i⁄
 
this
 
NIC


1924 
mov
 
Æ
, 
˛


1925 
mov
 
ah
, 0

1926 
shl
 
ax
, 1 ; 
C⁄vît
 
to
 
w‹d
 
off£t


1927 
mov
 
si
, 
ax


1928 
mov
 
ax
, [
nic_utûiz©i⁄
 + 
si
]

1929 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 4], 
óx
 ; 
utûiz©i⁄


1931 ; 
Gë
 
îr‹
 
cou¡
 
this
 
NIC


1932 
mov
 
ax
, [
nic_îr‹_cou¡s
 + 
si
]

1933 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 8], 
óx
 ; 
îr‹_cou¡


1935 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 12], 0 ; 
œ°_îr‹_time


1937 
mov
 
dh
, 
PKT_SUCCESS


1938 
jmp
 .
exô


1940 .
bad_h™dÀ
:

1941 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1942 
jmp
 .
exô


1944 .
bad_nic
:

1945 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


1947 .
exô
:

1948 
p›
 
di


1949 
p›
 
si


1950 
p›
 
bp


1951 
ªt


1952 
≠i_gë_nic_°©us_asm
 
ENDP


1955 ; 
≠i_£t_qos_∑øms_asm
 - 
Së
 
QoS
 
	`∑ømëîs
 (
AH
=24
h
)

1957 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
CL
 = 
QoS
 
	`˛ass
 (0-7)

1958 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


1959 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


1961 
≠i_£t_qos_∑øms_asm
 
PROC


1962 
push
 
bp


1963 
mov
 
bp
, 
•


1964 
push
 
si


1966 ; 
E«bÀ
 
exãnded
 
API
 
nŸ
 
Æªady
 
íabÀd


1967 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

1968 
j√
 .
≠i_íabÀd


1969 
mov
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 1

1971 .
≠i_íabÀd
:

1972 ; 
VÆid©e
 
h™dÀ


1973 
ˇŒ
 
∑ckë_föd_h™dÀr


1974 
jnz
 .
bad_h™dÀ


1976 ; 
VÆid©e
 
QoS
 
	`˛ass
 (0-7)

1977 
cmp
 
˛
, 7

1978 
ja
 .
bad_˛ass


1980 ; 
M≠
 
QoS
 
˛ass
 
to
 
	`¥i‹ôy
 (class * 32 + 32)

1981 
mov
 
Æ
, 
˛


1982 
shl
 
Æ
, 5 ; 
Mu…ùly
 
by
 32

1983 
add
 
Æ
, 32 ; 
Add
 
ba£
 
off£t


1984 
mov
 [
h™dÀ_¥i‹ôõs
 + 
si
], 
Æ


1986 ; 
Së
 
QoS
 
íabÀd
 
Êag


1987 
‹
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0002
h
 ; 
HANDLE_FLAG_QOS_ENABLED


1989 ; 
E«bÀ
 
globÆ
 
QoS


1990 
mov
 
byã
 
±r
 [
qos_íabÀd
], 1

1992 
mov
 
dh
, 
PKT_SUCCESS


1993 
jmp
 .
exô


1995 .
bad_h™dÀ
:

1996 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


1997 
jmp
 .
exô


1999 .
bad_˛ass
:

2000 
mov
 
dh
, 
PKT_ERROR_BAD_MODE


2002 .
exô
:

2003 
p›
 
si


2004 
p›
 
bp


2005 
ªt


2006 
≠i_£t_qos_∑øms_asm
 
ENDP


2009 ; 
≠i_gë_Êow_°©s_asm
 - 
Gë
 
Êow
 
	`°©i°ics
 (
AH
=25
h
)

2011 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
ES
:
DI
 = 
°©s
 
buf„r


2012 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
buf„r
 
fûÀd
 
wôh
 
Êow
 
°©s


2013 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


2015 
≠i_gë_Êow_°©s_asm
 
PROC


2016 
push
 
bp


2017 
mov
 
bp
, 
•


2018 
push
 
si


2019 
push
 
di


2021 ; 
VÆid©e
 
h™dÀ


2022 
ˇŒ
 
∑ckë_föd_h™dÀr


2023 
jnz
 .
bad_h™dÀ


2025 ; 
Fûl
 
Êow
 
°©i°ics
 
	$°ru˘uª
 (
sim∂ifõd
)

2026 
mov
 
w‹d
 
±r
 
es
:[
di
], 
bx
 ; 
h™dÀ


2027 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 2], 
ebx
 ; 
	`Êow_id
 (
u£
 
h™dÀ
)

2028 ; 
Rërõve
 
a˘uÆ
 
°©i°ics
 
this
 
h™dÀ


2029 
push
 
bx


2030 
push
 
cx


2032 ; 
Gë
 
°©i°ics
 
‰om
 
åackög
 
¨øys


2033 
mov
 
bx
, 
si
 ; 
H™dÀ
 
ödex


2034 
shl
 
bx
, 2 ; 
Dw‹d
 
off£t


2036 ; 
Packës
 
	`£¡
 (32-
bô
)

2037 
mov
 
óx
, 
dw‹d
 
±r
 [
h™dÀ_tx_∑ckës
 + 
bx
]

2038 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 6], 
óx


2040 ; 
Byãs
 
	`£¡
 (32-
bô
)

2041 
mov
 
óx
, 
dw‹d
 
±r
 [
h™dÀ_tx_byãs
 + 
bx
]

2042 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 10], 
óx


2044 ; 
Avîage
 
	`œãncy
 (
ˇlcuœãd
 
‰om
 
accumuœãd
 
œãncy
 / 
∑ckë
 
cou¡
)

2045 
mov
 
óx
, 
dw‹d
 
±r
 [
h™dÀ_tŸÆ_œãncy
 + 
bx
]

2046 
mov
 
ecx
, 
dw‹d
 
±r
 [
h™dÀ_tx_∑ckës
 + 
bx
]

2047 
ã°
 
ecx
,Écx

2048 
jz
 .
no_œãncy


2049 
x‹
 
edx
,Édx

2050 
div
 
ecx
 ; 
EAX
 = 
avîage
 
œãncy


2051 
jmp
 .
°‹e_œãncy


2052 .
no_œãncy
:

2053 
x‹
 
óx
,Éax

2054 .
°‹e_œãncy
:

2055 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 14], 
óx


2057 ; 
	$Jôãr
 (
v¨ün˚
 
ö
 
œãncy
)

2058 
mov
 
óx
, 
dw‹d
 
±r
 [
h™dÀ_œãncy_v¨ün˚
 + 
bx
]

2059 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 18], 
óx


2061 
p›
 
cx


2062 
p›
 
bx


2063 
mov
 
byã
 
±r
 
es
:[
di
 + 22], 0 ; 
a˘ive_nic


2064 
mov
 
byã
 
±r
 
es
:[
di
 + 23], 1 ; 
	$Êow_°©e
 (
a˘ive
)

2066 
mov
 
dh
, 
PKT_SUCCESS


2067 
jmp
 .
exô


2069 .
bad_h™dÀ
:

2070 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


2072 .
exô
:

2073 
p›
 
di


2074 
p›
 
si


2075 
p›
 
bp


2076 
ªt


2077 
≠i_gë_Êow_°©s_asm
 
ENDP


2080 ; 
≠i_£t_nic_¥e„ªn˚_asm
 - 
Së
 
NIC
 
	`¥e„ªn˚
 (
AH
=26
h
)

2082 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
CL
 = 
¥e„ºed
 
	`NIC
 (0xFF = 
no
 
¥e„ªn˚
)

2083 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


2084 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


2086 
≠i_£t_nic_¥e„ªn˚_asm
 
PROC


2087 
push
 
bp


2088 
mov
 
bp
, 
•


2089 
push
 
si


2091 ; 
E«bÀ
 
exãnded
 
API
 
nŸ
 
Æªady
 
íabÀd


2092 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

2093 
j√
 .
≠i_íabÀd


2094 
mov
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 1

2096 .
≠i_íabÀd
:

2097 ; 
VÆid©e
 
h™dÀ


2098 
ˇŒ
 
∑ckë_föd_h™dÀr


2099 
jnz
 .
bad_h™dÀ


2101 ; 
VÆid©e
 
NIC
 
	$ödex
 (0xFF 
móns
 
no
 
¥e„ªn˚
)

2102 
cmp
 
˛
, 0FF
h


2103 
je
 .
vÆid_nic


2104 
cmp
 
˛
, [
öãrÁ˚_cou¡
]

2105 
j´
 .
bad_nic


2107 .
vÆid_nic
:

2108 ; 
St‹e
 
NIC
 
¥e„ªn˚


2109 
mov
 [
¥e„ºed_nics
 + 
si
], 
˛


2111 ; 
Së
 
NIC
 
¥e„ªn˚
 
Êag


2112 
‹
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0010
h
 ; 
HANDLE_FLAG_NIC_PREFERENCE


2114 
mov
 
dh
, 
PKT_SUCCESS


2115 
jmp
 .
exô


2117 .
bad_h™dÀ
:

2118 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


2119 
jmp
 .
exô


2121 .
bad_nic
:

2122 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


2124 .
exô
:

2125 
p›
 
si


2126 
p›
 
bp


2127 
ªt


2128 
≠i_£t_nic_¥e„ªn˚_asm
 
ENDP


2131 ; 
≠i_gë_h™dÀ_öfo_asm
 - 
Gë
 
h™dÀ
 
	`öf‹m©i⁄
 (
AH
=27
h
)

2133 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
ES
:
DI
 = 
öfo
 
buf„r


2134 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
buf„r
 
fûÀd
 
wôh
 
h™dÀ
 
öfo


2135 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


2137 
≠i_gë_h™dÀ_öfo_asm
 
PROC


2138 
push
 
bp


2139 
mov
 
bp
, 
•


2140 
push
 
si


2141 
push
 
di


2143 ; 
VÆid©e
 
h™dÀ


2144 
ˇŒ
 
∑ckë_föd_h™dÀr


2145 
jnz
 .
bad_h™dÀ


2147 ; 
Fûl
 
h™dÀ
 
öf‹m©i⁄
 
	$°ru˘uª
 (
basic
 
öfo
)

2148 
mov
 
w‹d
 
±r
 
es
:[
di
], 
bx
 ; 
h™dÀ_id


2150 ; 
Gë
 
∑ckë
 
ty≥
 
‰om
 
h™dÀ
 
èbÀ


2151 
mov
 
ax
, 
si


2152 
shl
 
ax
, 1 ; 
C⁄vît
 
to
 
w‹d
 
off£t


2153 
mov
 
cx
, [
h™dÀ_èbÀ
 + 
ax
]

2154 
mov
 
w‹d
 
±r
 
es
:[
di
 + 2], 
cx
 ; 
∑ckë_ty≥


2156 ; 
Gë
 
öãrÁ˚
 
numbî


2157 
mov
 
Æ
, [
h™dÀ_öãrÁ˚s
 + 
si
]

2158 
mov
 
byã
 
±r
 
es
:[
di
 + 4], 
Æ
 ; 
öãrÁ˚_num


2160 ; 
Gë
 
¥i‹ôy


2161 
mov
 
Æ
, [
h™dÀ_¥i‹ôõs
 + 
si
]

2162 
mov
 
byã
 
±r
 
es
:[
di
 + 9], 
Æ
 ; 
¥i‹ôy


2164 ; 
Gë
 
¥e„ºed
 
NIC


2165 
mov
 
Æ
, [
¥e„ºed_nics
 + 
si
]

2166 
mov
 
byã
 
±r
 
es
:[
di
 + 10], 
Æ
 ; 
¥e„ºed_nic


2168 ; 
Gë
 
Êags


2169 
mov
 
ax
, [
h™dÀ_Êags
 + 
si
 * 2]

2170 
mov
 
w‹d
 
±r
 
es
:[
di
 + 14], 
ax
 ; 
Êags


2172 
mov
 
dh
, 
PKT_SUCCESS


2173 
jmp
 .
exô


2175 .
bad_h™dÀ
:

2176 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


2178 .
exô
:

2179 
p›
 
di


2180 
p›
 
si


2181 
p›
 
bp


2182 
ªt


2183 
≠i_gë_h™dÀ_öfo_asm
 
ENDP


2186 ; 
≠i_£t_b™dwidth_limô_asm
 - 
Së
 
b™dwidth
 
	`limô
 (
AH
=28
h
)

2188 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
ECX
 = 
b™dwidth
 
	`limô
 (
byãs
/
£c
, 0 = 
u∆imôed
)

2189 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


2190 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI


2192 
≠i_£t_b™dwidth_limô_asm
 
PROC


2193 
push
 
bp


2194 
mov
 
bp
, 
•


2195 
push
 
si


2197 ; 
E«bÀ
 
exãnded
 
API
 
nŸ
 
Æªady
 
íabÀd


2198 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

2199 
j√
 .
≠i_íabÀd


2200 
mov
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 1

2202 .
≠i_íabÀd
:

2203 ; 
VÆid©e
 
h™dÀ


2204 
ˇŒ
 
∑ckë_föd_h™dÀr


2205 
jnz
 .
bad_h™dÀ


2207 ; 
St‹e
 
b™dwidth
 
limô


2208 
mov
 
ax
, 
si


2209 
shl
 
ax
, 2 ; 
C⁄vît
 
to
 
dw‹d
 
off£t


2210 
mov
 [
b™dwidth_limôs
 + 
ax
], 
ecx


2212 ; 
Së
 
‹
 
˛ór
 
b™dwidth
 
limô
 
Êag


2213 
ã°
 
ecx
,Écx

2214 
jz
 .
˛ór_Êag


2216 ; 
Së
 
b™dwidth
 
limô
 
Êag


2217 
‹
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0008
h
 ; 
HANDLE_FLAG_BANDWIDTH_LIMIT


2218 
jmp
 .
Êag_£t


2220 .
˛ór_Êag
:

2221 ; 
CÀ¨
 
b™dwidth
 
limô
 
Êag


2222 
™d
 
w‹d
 
±r
 [
h™dÀ_Êags
 + 
si
 * 2], 0FFF7
h
 ; ~
HANDLE_FLAG_BANDWIDTH_LIMIT


2224 .
Êag_£t
:

2225 
mov
 
dh
, 
PKT_SUCCESS


2226 
jmp
 .
exô


2228 .
bad_h™dÀ
:

2229 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


2231 .
exô
:

2232 
p›
 
si


2233 
p›
 
bp


2234 
ªt


2235 
≠i_£t_b™dwidth_limô_asm
 
ENDP


2238 ; 
≠i_gë_îr‹_öfo_asm
 - 
Gë
 
îr‹
 
	`öf‹m©i⁄
 (
AH
=29
h
)

2240 ; 
I≈ut
: 
BX
 = 
h™dÀ
, 
ES
:
DI
 = 
îr‹
 
öfo
 
buf„r


2241 ; 
Ouçut
: 
DH
 = 
îr‹
 
code
, 
buf„r
 
fûÀd
 
wôh
Éº‹ 
öfo


2242 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


2244 
≠i_gë_îr‹_öfo_asm
 
PROC


2245 
push
 
bp


2246 
mov
 
bp
, 
•


2247 
push
 
si


2248 
push
 
di


2250 ; 
VÆid©e
 
h™dÀ


2251 
ˇŒ
 
∑ckë_föd_h™dÀr


2252 
jnz
 .
bad_h™dÀ


2254 ; 
Fûl
 
îr‹
 
öf‹m©i⁄
 
	$°ru˘uª
 (
no
 
îr‹s
 
now
)

2255 
mov
 
w‹d
 
±r
 
es
:[
di
], 0 ; 
	$îr‹_code
 (
no
 
îr‹
)

2256 
mov
 
dw‹d
 
±r
 
es
:[
di
 + 2], 0 ; 
îr‹_time


2257 
mov
 
byã
 
±r
 
es
:[
di
 + 6], 0FF
h
 ; 
	$af„˘ed_nic
 (
n⁄e
)

2258 
mov
 
byã
 
±r
 
es
:[
di
 + 7], 0 ; 
	$îr‹_£vîôy
 (
öfo
)

2259 
mov
 
w‹d
 
±r
 
es
:[
di
 + 8], 0 ; 
	$ªcovîy_a˘i⁄
 (
n⁄e
)

2261 
mov
 
dh
, 
PKT_SUCCESS


2262 
jmp
 .
exô


2264 .
bad_h™dÀ
:

2265 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


2267 .
exô
:

2268 
p›
 
di


2269 
p›
 
si


2270 
p›
 
bp


2271 
ªt


2272 
≠i_gë_îr‹_öfo_asm
 
ENDP


2275 ; 
VútuÆ
 
I¡îru±
 
Mu…ùÀxög
 
Suµ‹t


2279 ; 
∑ckë_mu…ùÀx_dñivîy
 - 
Enh™˚d
 
∑ckë
 
dñivîy
 
wôh
 
¥i‹ôy
 
h™dlög


2281 ; 
I≈ut
: 
AX
 = 
h™dÀ
, 
CX
 = 
Àngth
, 
DS
:
SI
 = 
∑ckë
 
d©a


2282 ; 
Ouçut
: 
AX
 = 
	`ªsu…
 (0 = 
suc˚ss
)

2283 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
¥e£rved
 
ˇŒî
)

2285 
∑ckë_mu…ùÀx_dñivîy
 
PROC


2286 
push
 
bp


2287 
mov
 
bp
, 
•


2288 
push
 
bx


2289 
push
 
cx


2290 
push
 
dx


2291 
push
 
si


2292 
push
 
di


2293 
push
 
ds


2294 
push
 
es


2296 ; 
Föd
 
h™dÀ
 
íåy


2297 
mov
 
bx
, 
ax
 ; 
H™dÀ
 
ö
 
BX


2298 
ˇŒ
 
∑ckë_föd_h™dÀr


2299 
jnz
 .
h™dÀ_nŸ_found


2301 ; 
Check
 
exãnded
 
API
 
is
 
íabÀd
 
™d
 
h™dÀ
 
has
 
¥i‹ôy


2302 
cmp
 
byã
 
±r
 [
exãnded_≠i_íabÀd
], 0

2303 
je
 .
n‹mÆ_dñivîy


2305 ; 
Check
 
QoS
 
is
 
íabÀd


2306 
cmp
 
byã
 
±r
 [
qos_íabÀd
], 0

2307 
je
 .
n‹mÆ_dñivîy


2309 ; 
Gë
 
h™dÀ
 
¥i‹ôy


2310 
mov
 
Æ
, [
h™dÀ_¥i‹ôõs
 + 
si
]

2312 ; 
Im∂emít
 
¥i‹ôy
-
ba£d
 
∑ckë
 
queuög
 
™d
 
schedulög


2313 
push
 
bx


2314 
push
 
dx


2316 ; 
Check
 
¥i‹ôy
 
queue
 
has
 
•a˚


2317 
mov
 
bx
, [
¥i‹ôy_queue_hód
]

2318 
mov
 
dx
, [
¥i‹ôy_queue_èû
]

2320 ; 
CÆcuœã
 
√xt
 
èû
 
posôi⁄


2321 
öc
 
dx


2322 
™d
 
dx
, 
PRIORITY_QUEUE_MASK
 ; 
Wøp
 
	$¨ound
 (
assumes
 
powî
 
of
 2 
size
)

2323 
cmp
 
dx
, 
bx
 ; 
Would
 
ovîÊow
?

2324 
je
 .
queue_fuŒ


2326 ; 
Add
 
∑ckë
 
to
 
¥i‹ôy
 
queue
 
ba£d
 
⁄
Öriority

2327 
mov
 
bx
, [
¥i‹ôy_queue_èû
]

2329 ; 
St‹e
 
∑ckë
 
öfo
 
ö
 
queue


2330 
shl
 
bx
, 3 ; 
Each
 
íåy
 
is
 8 
byãs


2331 
Àa
 
bx
, [
¥i‹ôy_queue
 + bx]

2333 ; 
Save
 
∑ckë
 
mëad©a


2334 
mov
 
w‹d
 
±r
 [
bx
], 
si
 ; 
H™dÀ
 
ödex


2335 
mov
 
byã
 
±r
 [
bx
 + 2], 
Æ
 ; 
Pri‹ôy


2336 
mov
 
w‹d
 
±r
 [
bx
 + 4], 
cx
 ; 
Packë
 
Àngth


2337 
mov
 
w‹d
 
±r
 [
bx
 + 6], 
ds
 ; 
Packë
 
£gmít


2339 ; 
Upd©e
 
èû


2340 
öc
 
w‹d
 
±r
 [
¥i‹ôy_queue_èû
]

2341 
™d
 
w‹d
 
±r
 [
¥i‹ôy_queue_èû
], 
PRIORITY_QUEUE_MASK


2343 ; 
S‹t
 
queue
 
by
 
	$¥i‹ôy
 (
sim∂e
 
ö£πi⁄
 
s‹t
 
smÆl
 
queue
)

2344 
ˇŒ
 
s‹t_¥i‹ôy_queue


2346 ; 
Pro˚ss
 
highe°
 
¥i‹ôy
 
∑ckë
 
immedüãly
 
possibÀ


2347 
ˇŒ
 
¥o˚ss_¥i‹ôy_queue


2349 
öc
 
w‹d
 
±r
 [
mu…ùÀx_cou¡
]

2351 
p›
 
dx


2352 
p›
 
bx


2353 
jmp
 .
n‹mÆ_dñivîy


2355 .
queue_fuŒ
:

2356 ; 
Queue
 
fuŒ
, 
dñivî
 
immedüãly
 
wôh
 
n‹mÆ
 
¥i‹ôy


2357 
p›
 
dx


2358 
p›
 
bx


2360 .
n‹mÆ_dñivîy
:

2361 ; 
CÆl
 
≠∂iˇti⁄
 
ˇŒbacks
 
wôh
 
¥i‹ôy
-
ba£d
 
mu…ùÀxög
 
™d
 
ß„ty


2362 ; 
Gë
 
∑ckë
 
ty≥
 
‰om
 
h™dÀ
 
to
 
föd
 
Æl
 
ˇŒbacks


2363 
mov
 
ax
, 
si


2364 
shl
 
ax
, 1 ; 
C⁄vît
 
to
 
w‹d
 
off£t
 
h™dÀ_èbÀ


2365 
mov
 
di
, [
h™dÀ_èbÀ
 + 
ax
] ; 
Gë
 
∑ckë
 
ty≥


2367 ; 
Föd
 
Æl
 
ˇŒbacks
 
this
 
∑ckë
 
ty≥
 
™d
 
dñivî
 
wôh
 
¥i‹ôy


2368 
push
 
bx
 ; 
Save
 
h™dÀ


2369 
push
 
cx
 ; 
Save
 
Àngth


2370 
push
 
si
 ; 
Save
 
∑ckë
 
off£t


2371 
push
 
ds
 ; 
Save
 
∑ckë
 
£gmít


2373 
ˇŒ
 
dñivî_to_ˇŒback_chaö
 ; 
Enh™˚d
 
dñivîy
 
wôh
 
¥i‹ôy
/
ß„ty


2375 ; 
Re°‹e
 
ªgi°îs


2376 
p›
 
ds


2377 
p›
 
si


2378 
p›
 
cx


2379 
p›
 
bx


2381 
ã°
 
ax
,áx ; 
Check
 
dñivîy
 
ªsu…


2382 
jnz
 .
dñivîy_îr‹


2384 
mov
 
ax
, 0 ; 
Suc˚ss


2385 
jmp
 .
exô


2387 .
dñivîy_îr‹
:

2388 
mov
 
ax
, -1 ; 
Dñivîy
 
Áûed


2389 
jmp
 .
exô
"}

2391 .
no_ˇŒback
:

2392 
mov
 
ax
, -1 ; 
No
 
ˇŒback
 
îr‹


2393 
jmp
 .
exô


2395 .
h™dÀ_nŸ_found
:

2396 
mov
 
ax
, -1 ; 
H™dÀ
 
nŸ
 
found
 
îr‹


2398 .
exô
:

2399 
p›
 
es


2400 
p›
 
ds


2401 
p›
 
di


2402 
p›
 
si


2403 
p›
 
dx


2404 
p›
 
cx


2405 
p›
 
bx


2406 
p›
 
bp


2407 
ªt


2408 
∑ckë_mu…ùÀx_dñivîy
 
ENDP


2411 ; 
Enh™˚d
 
CÆlback
 
Chaö
 
M™agemít
 
Fun˘i⁄s


2415 ; 
öôülize_ˇŒback_chaö
 - 
Inôülize
 
ˇŒback
 
chaö
 
a
 
∑ckë
 
ty≥


2417 ; 
I≈ut
: 
BX
 = 
∑ckë
 
ty≥
, 
ES
:
DI
 = 
ˇŒback
 
addªss
, 
SI
 = 
h™dÀ
 
ödex


2418 ; 
Ouçut
: 
AX
 = 0 
suc˚ss
, -1 
îr‹


2419 ; 
U£s
: 
AX
, 
CX
, 
DX
, 
SI
, 
DI


2421 
öôülize_ˇŒback_chaö
 
PROC


2422 
push
 
bp


2423 
mov
 
bp
, 
•


2424 
push
 
si


2425 
push
 
di


2426 
push
 
bx


2427 
push
 
cx


2429 ; 
Föd
 
‹
 
¸óã
 
∑ckë
 
ty≥
 
íåy


2430 
ˇŒ
 
föd_‹_¸óã_∑ckë_ty≥_íåy


2431 
ã°
 
ax
,áx

2432 
js
 .
îr‹


2434 ; 
AX
 
now
 
c⁄èös
 
∑ckë
 
ty≥
 
èbÀ
 
ödex


2435 
mov
 
si
, 
ax


2437 ; 
Gë
 
ˇŒback
 
chaö
 
ba£
 
off£t
 
this
 
∑ckë
 
ty≥


2438 
mov
 
ax
, 
si


2439 
mov
 
cx
, 
MAX_TYPE_CALLBACKS


2440 
mul
 
cx
 ; 
AX
 = 
ty≥_ödex
 * 
MAX_TYPE_CALLBACKS


2441 
mov
 
si
, 
ax
 ; 
SI
 = 
ˇŒback
 
chaö
 
ba£
 
off£t


2443 ; 
Föd
 
fú°
 
‰ì
 
ˇŒback
 
¶Ÿ
 
ö
 
chaö


2444 
mov
 
cx
, 
MAX_TYPE_CALLBACKS


2446 .
föd_¶Ÿ
:

2447 
cmp
 
dw‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4], 0

2448 
je
 .
found_¶Ÿ


2449 
öc
 
si


2450 
lo›
 .
föd_¶Ÿ


2452 ; 
No
 
‰ì
 
¶Ÿs


2453 
mov
 
ax
, -1

2454 
jmp
 .
exô


2456 .
found_¶Ÿ
:

2457 ; 
St‹e
 
ˇŒback
 
ö
 
chaö


2458 
mov
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4], 
di
 ; 
Off£t


2459 
mov
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4 + 2], 
es
 ; 
Segmít


2460 
mov
 
byã
 
±r
 [
ˇŒback_¥i‹ôõs
 + 
si
], 128 ; 
DeÁu…
 
¥i‹ôy


2461 
mov
 
w‹d
 
±r
 [
ˇŒback_fûãrs
 + 
si
], 0FFFF
h
 ; 
Ac˚±
 
Æl
 
∑ckës


2462 
mov
 
w‹d
 
±r
 [
ˇŒback_îr‹_cou¡s
 + 
si
], 0 ; 
Zîo
 
îr‹
 
cou¡


2463 
mov
 
dw‹d
 
±r
 [
ˇŒback_œ°_îr‹s
 + 
si
], 0 ; 
No
 
îr‹s
 
yë


2465 ; 
In¸emít
 
ˇŒback
 
cou¡
 
this
 
ty≥


2466 
mov
 
bx
, [
bp
 - 6] ; 
Re°‹e
 
∑ckë
 
ty≥
 
ödex


2467 
öc
 
byã
 
±r
 [
ty≥_ˇŒback_cou¡s
 + 
bx
]

2469 
mov
 
ax
, 0 ; 
Suc˚ss


2470 
jmp
 .
exô


2472 .
îr‹
:

2473 
mov
 
ax
, -1

2475 .
exô
:

2476 
p›
 
cx


2477 
p›
 
bx


2478 
p›
 
di


2479 
p›
 
si


2480 
p›
 
bp


2481 
ªt


2482 
öôülize_ˇŒback_chaö
 
ENDP


2485 ; 
ªmove_ˇŒback_‰om_chaö
 - 
Remove
 
ˇŒback
 
‰om
 
∑ckë
 
ty≥
 
chaö


2487 ; 
I≈ut
: 
CX
 = 
∑ckë
 
ty≥
, 
AX
:
DX
 = 
ˇŒback
 
	`addªss
 (
£gmít
:
off£t
)

2488 ; 
Ouçut
: 
N⁄e


2489 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
SI
, 
DI


2491 
ªmove_ˇŒback_‰om_chaö
 
PROC


2492 
push
 
bp


2493 
mov
 
bp
, 
•


2494 
push
 
si


2495 
push
 
di


2496 
push
 
bx


2498 ; 
Föd
 
∑ckë
 
ty≥
 
ö
 
èbÀ


2499 
ˇŒ
 
föd_∑ckë_ty≥_íåy


2500 
ã°
 
ax
,áx

2501 
js
 .
exô
 ; 
NŸ
 
found
, 
nŸhög
 
to
 
ªmove


2503 ; 
AX
 
c⁄èös
 
∑ckë
 
ty≥
 
èbÀ
 
ödex


2504 
mov
 
si
, 
ax


2506 ; 
Gë
 
ˇŒback
 
chaö
 
ba£
 
off£t


2507 
mov
 
ax
, 
si


2508 
mov
 
bx
, 
MAX_TYPE_CALLBACKS


2509 
mul
 
bx
 ; 
AX
 = 
ty≥_ödex
 * 
MAX_TYPE_CALLBACKS


2510 
mov
 
si
, 
ax


2512 ; 
Sórch
 
ˇŒback
 
ö
 
chaö


2513 
mov
 
cx
, 
MAX_TYPE_CALLBACKS


2515 .
£¨ch_lo›
:

2516 ; 
Com∑ª
 
ˇŒback
 
addªss


2517 
cmp
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4], 
dx
 ; 
Com∑ª
 
off£t


2518 
j√
 .
√xt_ˇŒback


2519 
mov
 
bx
, [
bp
 - 8] ; 
Gë
 
ßved
 
£gmít
 
‰om
 
°ack


2520 
cmp
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4 + 2], 
bx
 ; 
Com∑ª
 
£gmít


2521 
je
 .
found_ˇŒback


2523 .
√xt_ˇŒback
:

2524 
öc
 
si


2525 
lo›
 .
£¨ch_lo›


2526 
jmp
 .
exô
 ; 
NŸ
 
found


2528 .
found_ˇŒback
:

2529 ; 
CÀ¨
 
ˇŒback
 
íåy


2530 
mov
 
dw‹d
 
±r
 [
ˇŒback_chaös
 + 
si
 * 4], 0

2531 
mov
 
byã
 
±r
 [
ˇŒback_¥i‹ôõs
 + 
si
], 0

2532 
mov
 
w‹d
 
±r
 [
ˇŒback_fûãrs
 + 
si
], 0

2533 
mov
 
w‹d
 
±r
 [
ˇŒback_îr‹_cou¡s
 + 
si
], 0

2534 
mov
 
dw‹d
 
±r
 [
ˇŒback_œ°_îr‹s
 + 
si
], 0

2536 ; 
De¸emít
 
ˇŒback
 
cou¡


2537 
mov
 
bx
, [
bp
 - 6] ; 
Gë
 
∑ckë
 
ty≥
 
ödex


2538 
dec
 
byã
 
±r
 [
ty≥_ˇŒback_cou¡s
 + 
bx
]

2540 .
exô
:

2541 
p›
 
bx


2542 
p›
 
di


2543 
p›
 
si


2544 
p›
 
bp


2545 
ªt


2546 
ªmove_ˇŒback_‰om_chaö
 
ENDP


2549 ; 
dñivî_to_ˇŒback_chaö
 - 
Dñivî
 
∑ckë
 
to
 
Æl
 
ˇŒbacks
 
wôh
 
¥i‹ôy


2551 ; 
I≈ut
: 
DI
 = 
∑ckë
 
ty≥
, 
BX
 = 
h™dÀ
, 
CX
 = 
Àngth
, 
DS
:
SI
 =Öacket

2552 ; 
Ouçut
: 
AX
 = 
	`ªsu…
 (0 = 
suc˚ss
, -1 = 
îr‹
)

2553 ; 
U£s
: 
AŒ
 
	`ªgi°îs
 (
ßves
/
ª°‹es
 
as
 
√eded
)

2555 
dñivî_to_ˇŒback_chaö
 
PROC


2556 
push
 
bp


2557 
mov
 
bp
, 
•


2558 
push
 
bx


2559 
push
 
cx


2560 
push
 
dx


2561 
push
 
si


2562 
push
 
di


2563 
push
 
es


2565 ; 
H™dÀ
 
ˇŒbacks
 
wôh
 
íh™˚d
 
fûãrög
 
™d
 
¥i‹ôy
 
dñivîy


2567 ; 
Check
 
ˇŒback
 
√°ög
 
dïth
 
ß„ty


2568 
öc
 
byã
 
±r
 [
ˇŒback_°ack_dïth
]

2569 
cmp
 
byã
 
±r
 [
ˇŒback_°ack_dïth
], 
max_ˇŒback_dïth


2570 
ja
 .
too_dìp


2572 ; 
Föd
 
∑ckë
 
ty≥
 
íåy


2573 
push
 
di
 ; 
Save
 
∑ckë
 
ty≥


2574 
mov
 
cx
, 
di
 ; 
Packë
 
ty≥
 
ö
 
CX


2575 
ˇŒ
 
föd_∑ckë_ty≥_íåy


2576 
ã°
 
ax
,áx

2577 
js
 .
no_ˇŒbacks


2579 ; 
AX
 
c⁄èös
 
∑ckë
 
ty≥
 
èbÀ
 
ödex


2580 
mov
 
di
, 
ax
 ; 
DI
 = 
∑ckë
 
ty≥
 
ödex


2582 ; 
Check
 
™y
 
ˇŒbacks
 
exi°


2583 
cmp
 
byã
 
±r
 [
ty≥_ˇŒback_cou¡s
 + 
di
], 0

2584 
je
 .
no_ˇŒbacks


2586 ; 
S‹t
 
ˇŒbacks
 
by
 
	$¥i‹ôy
 (
bubbÀ
 
s‹t
 
sim∂icôy
)

2587 
ˇŒ
 
s‹t_ˇŒbacks_by_¥i‹ôy


2589 ; 
Gë
 
ˇŒback
 
chaö
 
ba£


2590 
mov
 
ax
, 
di


2591 
mov
 
dx
, 
MAX_TYPE_CALLBACKS


2592 
mul
 
dx
 ; 
AX
 = 
ty≥_ödex
 * 
MAX_TYPE_CALLBACKS


2593 
mov
 
di
, 
ax
 ; 
DI
 = 
ˇŒback
 
chaö
 
ba£
 
off£t


2595 ; 
Dñivî
 
to
 
óch
 
ˇŒback
 
ö
 
¥i‹ôy
 
‹dî


2596 
mov
 
cx
, 
MAX_TYPE_CALLBACKS


2598 .
dñivîy_lo›
:

2599 ; 
Check
 
ˇŒback
 
exi°s


2600 
cmp
 
dw‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4], 0

2601 
je
 .
√xt_ˇŒback


2603 ; 
VÆid©e
 
ˇŒback
 
bef‹e
 
ˇŒög


2604 
ˇŒ
 
vÆid©e_ˇŒback_addªss


2605 
ã°
 
ax
,áx

2606 
jz
 .
√xt_ˇŒback
 ; 
Skù
 
övÆid
 
ˇŒbacks


2608 ; 
Së
 
up
 
ß„
 
ˇŒback
 
ívú⁄mít


2609 
ˇŒ
 
£tup_ß„_ˇŒback_ívú⁄mít


2611 ; 
Make
 
the
 
ˇŒback
 
wôh
 
timeout
 
¥Ÿe˘i⁄


2612 
ˇŒ
 
ß„_ˇŒback_övoke


2614 ; 
Check
 
ˇŒback
 
îr‹s


2615 
ã°
 
ax
,áx

2616 
jnz
 .
ˇŒback_îr‹


2618 .
√xt_ˇŒback
:

2619 
öc
 
di


2620 
lo›
 .
dñivîy_lo›


2622 
mov
 
ax
, 0 ; 
Suc˚ss


2623 
jmp
 .
˛ónup


2625 .
ˇŒback_îr‹
:

2626 ; 
H™dÀ
 
ˇŒback
 
îr‹


2627 
ˇŒ
 
h™dÀ_ˇŒback_îr‹


2628 
mov
 
ax
, 0 ; 
C⁄töue
 
wôh
 
Ÿhî
 
ˇŒbacks


2629 
jmp
 .
√xt_ˇŒback


2631 .
too_dìp
:

2632 
mov
 
ax
, -1 ; 
Too
 
much
 
√°ög


2633 
jmp
 .
˛ónup


2635 .
no_ˇŒbacks
:

2636 
mov
 
ax
, 0 ; 
No
 
îr‹
, 
ju°
 
no
 
ˇŒbacks


2638 .
˛ónup
:

2639 
dec
 
byã
 
±r
 [
ˇŒback_°ack_dïth
]

2640 
p›
 
di
 ; 
CÀ™
 
up
 
ßved
 
∑ckë
 
ty≥


2642 .
exô
:

2643 
p›
 
es


2644 
p›
 
di


2645 
p›
 
si


2646 
p›
 
dx


2647 
p›
 
cx


2648 
p›
 
bx


2649 
p›
 
bp


2650 
ªt


2651 
dñivî_to_ˇŒback_chaö
 
ENDP


2654 ; 
Hñ≥r
 
Fun˘i⁄s
 
CÆlback
 
Chaö
 
M™agemít


2657 
föd_‹_¸óã_∑ckë_ty≥_íåy
 
PROC


2658 
push
 
bx


2659 
push
 
cx


2660 
push
 
si


2662 ; 
Fú°
 
åy
 
to
 
föd
 
exi°ög
 
íåy


2663 
mov
 
cx
, 
bx
 ; 
Packë
 
ty≥
 
ö
 
CX


2664 
ˇŒ
 
föd_∑ckë_ty≥_íåy


2665 
ã°
 
ax
,áx

2666 
jns
 .
found
 ; 
Found
 
exi°ög
 
íåy


2668 ; 
Cª©e
 
√w
 
íåy


2669 
mov
 
si
, 0

2670 
mov
 
cx
, 
MAX_PACKET_TYPES


2672 .
föd_‰ì
:

2673 
cmp
 
w‹d
 
±r
 [
∑ckë_ty≥_èbÀ
 + 
si
 * 2], 0

2674 
je
 .
¸óã_íåy


2675 
öc
 
si


2676 
lo›
 .
föd_‰ì


2678 ; 
No
 
‰ì
 
íåõs


2679 
mov
 
ax
, -1

2680 
jmp
 .
exô


2682 .
¸óã_íåy
:

2683 
mov
 [
∑ckë_ty≥_èbÀ
 + 
si
 * 2], 
bx
 ; 
St‹e
 
∑ckë
 
ty≥


2684 
mov
 
byã
 
±r
 [
ty≥_ˇŒback_cou¡s
 + 
si
], 0

2685 
mov
 
w‹d
 
±r
 [
ty≥_h™dÀ_m≠pög
 + 
si
 * 2], 0FFFF
h


2686 
mov
 
ax
, 
si
 ; 
Rëu∫
 
ödex


2687 
jmp
 .
exô


2689 .
found
:

2690 ; 
AX
 
Æªady
 
c⁄èös
 
the
 
ödex


2692 .
exô
:

2693 
p›
 
si


2694 
p›
 
cx


2695 
p›
 
bx


2696 
ªt


2697 
föd_‹_¸óã_∑ckë_ty≥_íåy
 
ENDP


2699 
föd_∑ckë_ty≥_íåy
 
PROC


2700 
push
 
bx


2701 
push
 
si


2703 
mov
 
si
, 0

2704 
mov
 
bx
, 
MAX_PACKET_TYPES


2706 .
£¨ch_lo›
:

2707 
cmp
 
w‹d
 
±r
 [
∑ckë_ty≥_èbÀ
 + 
si
 * 2], 
cx


2708 
je
 .
found


2709 
öc
 
si


2710 
dec
 
bx


2711 
jnz
 .
£¨ch_lo›


2713 ; 
NŸ
 
found


2714 
mov
 
ax
, -1

2715 
jmp
 .
exô


2717 .
found
:

2718 
mov
 
ax
, 
si
 ; 
Rëu∫
 
ödex


2720 .
exô
:

2721 
p›
 
si


2722 
p›
 
bx


2723 
ªt


2724 
föd_∑ckë_ty≥_íåy
 
ENDP


2726 
s‹t_ˇŒbacks_by_¥i‹ôy
 
PROC


2727 ; 
Sim∂e
 
bubbÀ
 
s‹t
 
by
 
	`¥i‹ôy
 (
high
 
to
 
low
)

2728 ; 
Im∂emíèti⁄
 
sim∂ifõd
 
•a˚
 - 
ö
 
¥odu˘i⁄
 
would
 
be
 
m‹e
 
efficõ¡


2729 
ªt


2730 
s‹t_ˇŒbacks_by_¥i‹ôy
 
ENDP


2732 
vÆid©e_ˇŒback_addªss
 
PROC


2733 
push
 
bx


2734 
push
 
cx


2735 
push
 
es


2737 ; 
Gë
 
ˇŒback
 
addªss


2738 
mov
 
bx
, 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4] ; 
Off£t


2739 
mov
 
cx
, 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4 + 2] ; 
Segmít


2741 ; 
Basic
 
vÆid©i⁄


2742 
ã°
 
bx
, bx

2743 
jz
 .
övÆid


2744 
ã°
 
cx
, cx

2745 
jz
 .
övÆid


2746 
cmp
 
cx
, 0040
h
 ; 
D⁄
'tállow callbacks inÜow memory

2747 
jb
 .
övÆid


2749 ; 
Check
 
c‹ru±i⁄
 
∑âîns


2750 
cmp
 
bx
, 0FFFF
h


2751 
je
 .
övÆid


2752 
cmp
 
cx
, 0FFFF
h


2753 
je
 .
övÆid


2755 
mov
 
ax
, 1 ; 
VÆid


2756 
jmp
 .
exô


2758 .
övÆid
:

2759 
mov
 
ax
, 0 ; 
InvÆid


2761 .
exô
:

2762 
p›
 
es


2763 
p›
 
cx


2764 
p›
 
bx


2765 
ªt


2766 
vÆid©e_ˇŒback_addªss
 
ENDP


2768 
£tup_ß„_ˇŒback_ívú⁄mít
 
PROC


2769 ; 
Swôch
 
to
 
¥iv©e
 
drivî
 
°ack


2770 
˛i


2771 
mov
 [
≠i_ˇŒî_ss
], 
ss


2772 
mov
 [
≠i_ˇŒî_•
], 
•


2773 
mov
 
ax
, 
_DATA


2774 
mov
 
ss
, 
ax


2775 
mov
 
•
, 
OFFSET
 
≠i_°ack_t›


2776 
°i


2777 
ªt


2778 
£tup_ß„_ˇŒback_ívú⁄mít
 
ENDP


2780 
ß„_ˇŒback_övoke
 
PROC


2781 
push
 
bp


2782 
mov
 
bp
, 
•


2784 ; 
Sèπ
 
timeout
 
timî


2785 
ˇŒ
 
°¨t_ˇŒback_timî


2787 ; 
Së
 
up
 
∑ckë
 
drivî
 
ˇŒög
 
c⁄víti⁄


2788 ; 
AX
 = 
h™dÀ
, 
CX
 = 
Àngth
, 
DS
:
SI
 = 
∑ckë
 
d©a


2790 ; 
Gë
 
ˇŒback
 
addªss


2791 
push
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4 + 2] ; 
Segmít


2792 
push
 
w‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4] ; 
Off£t


2794 ; 
Make
 
Ár
 
ˇŒ


2795 
ˇŒ
 
Ár
 
±r
 [
bp
 - 4]

2797 ; 
Check
 
timeout


2798 
ˇŒ
 
check_ˇŒback_timî


2800 ; 
CÀ™
 
up
 
°ack


2801 
add
 
•
, 4

2803 ; 
Re°‹e
 
ˇŒî
 
°ack


2804 
˛i


2805 
mov
 
ss
, [
≠i_ˇŒî_ss
]

2806 
mov
 
•
, [
≠i_ˇŒî_•
]

2807 
°i


2809 
mov
 
ax
, 0 ; 
Suc˚ss


2811 
p›
 
bp


2812 
ªt


2813 
ß„_ˇŒback_övoke
 
ENDP


2815 
°¨t_ˇŒback_timî
 
PROC


2816 ; 
Së
 
up
 
timeout
 
timî
 
usög
 
DOS
Åimî 
	`öãºu±
 (
INT
 1C
h
 - 18.2 
Hz
)

2817 
push
 
ax


2818 
push
 
dx


2819 
push
 
es


2821 ; 
CÆcuœã
 
ticks
 100
ms
 
	`timeout
 (18.2Åicks/
£c
 = ~2Åicks 100ms)

2822 
mov
 
ax
, 2 ; 2 
ticks
 = ~110
ms


2823 
mov
 [
ˇŒback_timeout_ticks
], 
ax


2825 ; 
Hook
 
INT
 1C
h
 
nŸ
 
Æªady
 
hooked


2826 
cmp
 
byã
 
±r
 [
timî_hooked
], 0

2827 
j√
 .
Æªady_hooked


2829 ; 
Save
 
ﬁd
 
INT
 1C
h
 
ve˘‹


2830 
mov
 
ax
, 351C
h
 ; 
Gë
 
öãºu±
 
ve˘‹


2831 21
h


2832 
mov
 
w‹d
 
±r
 [
ﬁd_timî_h™dÀr
], 
bx


2833 
mov
 
w‹d
 
±r
 [
ﬁd_timî_h™dÀr
 + 2], 
es


2835 ; 
In°Æl
 
our
 
timî
 
h™dÀr


2836 
push
 
ds


2837 
mov
 
dx
, 
OFFSET
 
timî_tick_h™dÀr


2838 
push
 
cs


2839 
p›
 
ds


2840 
mov
 
ax
, 251C
h
 ; 
Së
 
öãºu±
 
ve˘‹


2841 21
h


2842 
p›
 
ds


2844 
mov
 
byã
 
±r
 [
timî_hooked
], 1

2846 .
Æªady_hooked
:

2847 
mov
 
byã
 
±r
 [
ˇŒback_timî_a˘ive
], 1

2848 
mov
 
dw‹d
 
±r
 [
ˇŒback_°¨t_time
], 0 ; 
Re£t
 
timî


2850 
p›
 
es


2851 
p›
 
dx


2852 
p›
 
ax


2853 
ªt


2854 
°¨t_ˇŒback_timî
 
ENDP


2856 
check_ˇŒback_timî
 
PROC


2857 ; 
Check
 
ˇŒback
 
has
 
timed
 
out


2858 
push
 
ax


2860 
cmp
 
byã
 
±r
 [
ˇŒback_timî_a˘ive
], 0

2861 
je
 .
nŸ_a˘ive


2863 ; 
Check
 
timeout
 
≥riod
 
ñ≠£d


2864 
mov
 
ax
, [
ˇŒback_timeout_ticks
]

2865 
cmp
 
ax
, 0

2866 
j√
 .
nŸ_timed_out


2868 ; 
Timeout
 
occuºed


2869 
mov
 
byã
 
±r
 [
ˇŒback_timî_a˘ive
], 0

2870 
°c
 ; 
Së
 
ˇºy
 
to
 
ödiˇã
 
timeout


2871 
jmp
 .
exô


2873 .
nŸ_timed_out
:

2874 
˛c
 ; 
CÀ¨
 
ˇºy
 - 
no
 
timeout


2875 
jmp
 .
exô


2877 .
nŸ_a˘ive
:

2878 
˛c
 ; 
Timî
 
nŸ
 
a˘ive


2880 .
exô
:

2881 
p›
 
ax


2882 
ªt


2883 
check_ˇŒback_timî
 
ENDP


2886 ; 
timî_tick_h™dÀr
 - 
INT
 1C
h
 
timî
 
tick
 
h™dÀr


2888 
timî_tick_h™dÀr
 
PROC
 
FAR


2889 
push
 
ax


2890 
push
 
ds


2892 ; 
Së
 
up
 
our
 
d©a
 
£gmít


2893 
push
 
cs


2894 
p›
 
ds


2896 ; 
Check
 
ˇŒback
 
timî
 
is
 
a˘ive


2897 
cmp
 
byã
 
±r
 [
ˇŒback_timî_a˘ive
], 0

2898 
je
 .
chaö_to_ﬁd


2900 ; 
De¸emít
 
timeout
 
cou¡î


2901 
mov
 
ax
, [
ˇŒback_timeout_ticks
]

2902 
ã°
 
ax
,áx

2903 
jz
 .
chaö_to_ﬁd


2904 
dec
 
ax


2905 
mov
 [
ˇŒback_timeout_ticks
], 
ax


2907 ; 
If
 
ªached
 
zîo
, 
ˇŒback
 
has
 
timed
 
out


2908 
ã°
 
ax
,áx

2909 
jnz
 .
chaö_to_ﬁd


2911 ; 
M¨k
 
timeout
 
occuºed


2912 
mov
 
byã
 
±r
 [
ˇŒback_timed_out
], 1

2914 .
chaö_to_ﬁd
:

2915 
p›
 
ds


2916 
p›
 
ax


2918 ; 
Chaö
 
to
 
‹igöÆ
 
h™dÀr


2919 
jmp
 
dw‹d
 
±r
 
cs
:[
ﬁd_timî_h™dÀr
]

2920 
timî_tick_h™dÀr
 
ENDP


2922 
h™dÀ_ˇŒback_îr‹
 
PROC


2923 ; 
In¸emít
 
îr‹
 
cou¡
 
this
 
ˇŒback


2924 
öc
 
w‹d
 
±r
 [
ˇŒback_îr‹_cou¡s
 + 
di
]

2926 ; 
If
 
too
 
m™y
 
îr‹s
, 
dißbÀ
 
ˇŒback


2927 
cmp
 
w‹d
 
±r
 [
ˇŒback_îr‹_cou¡s
 + 
di
], 
max_ˇŒback_îr‹s


2928 
jb
 .
exô


2930 ; 
DißbÀ
 
ˇŒback
 
by
 
˛órög
 
ô


2931 
mov
 
dw‹d
 
±r
 [
ˇŒback_chaös
 + 
di
 * 4], 0

2933 .
exô
:

2934 
ªt


2935 
h™dÀ_ˇŒback_îr‹
 
ENDP


2938 ; 
I¡îru±
 
H™dÀr
 
O±imiz©i⁄
 
Fun˘i⁄s


2942 ; 
›timÆ_ªgi°î_ßve
 - 
O±imÆly
 
ßve
 
ªgi°îs
 
ba£d
 
⁄
 
CPU
 
ty≥


2944 ; 
I≈ut
: 
N⁄e


2945 ; 
Ouçut
: 
Regi°îs
 
ßved
 
to
 
°ack


2946 ; 
U£s
: 
	`Sèck
 (
ªgi°îs
 
¨e
 
ßved
)

2948 
›timÆ_ªgi°î_ßve
 
PROC


2949 ; 
Check
 
CPU
 
ty≥
 
to
 
dëîmöe
 
›timÆ
 
ßve
 
°øãgy


2950 
mov
 
Æ
, [
≠i_˝u_ty≥
]

2951 
ã°
 
Æ
,ál

2952 
jnz
 .
˝u_known


2954 ; 
Cache
 
CPU
 
ty≥
 
⁄
 
fú°
 
ˇŒ


2955 
ˇŒ
 
gë_˝u_ty≥


2956 
mov
 [
≠i_˝u_ty≥
], 
Æ


2958 .
˝u_known
:

2959 
cmp
 
Æ
, 1 ; 286?

2960 
jb
 .
u£_ödividuÆ_push
 ; 8086 - 
no
 
PUSHA


2962 ; 286+ - 
U£
 
	`PUSHA
 (
ßves
 5 
cy˛es
 
⁄
 286, 5 cycles on 386)

2963 ; 
F‹
 486, 
PUSHA
 
is
 
¶ighéy
 
	$¶owî
 (3 
cy˛es
 
≥«…y
Ë
but
 
ac˚±abÀ


2964 ; 
the
 
code
 
sim∂icôy
 
™d
 
ªdu˚d
 
I
-
ˇche
 
¥essuª


2965 
pusha


2966 
push
 
es


2967 
push
 
ds


2968 
ªt


2970 .
u£_ödividuÆ_push
:

2971 ; 8086 - 
U£
 
ödividuÆ
 
pushes


2972 
push
 
ax


2973 
push
 
bx


2974 
push
 
cx


2975 
push
 
dx


2976 
push
 
si


2977 
push
 
di


2978 
push
 
bp


2979 
push
 
es


2980 
push
 
ds


2981 
ªt


2982 
›timÆ_ªgi°î_ßve
 
ENDP


2985 ; 
›timÆ_ªgi°î_ª°‹e
 - 
O±imÆly
 
ª°‹e
 
ªgi°îs
 
ba£d
 
⁄
 
CPU
 
ty≥


2987 ; 
I≈ut
: 
N⁄e


2988 ; 
Ouçut
: 
Regi°îs
 
ª°‹ed
 
‰om
 
°ack


2989 ; 
U£s
: 
	`Sèck
 (
ªgi°îs
 
¨e
 
ª°‹ed
)

2991 
›timÆ_ªgi°î_ª°‹e
 
PROC


2992 
mov
 
Æ
, [
≠i_˝u_ty≥
]

2993 
cmp
 
Æ
, 1 ; 286+?

2994 
jb
 .
u£_ödividuÆ_p›


2996 ; 286+ - 
U£
 
POPA


2997 
p›
 
ds


2998 
p›
 
es


2999 
p›a


3000 
ªt


3002 .
u£_ödividuÆ_p›
:

3003 ; 8086 - 
U£
 
ödividuÆ
 
	$p›s
 (
ªvî£
 
‹dî
)

3004 
p›
 
ds


3005 
p›
 
es


3006 
p›
 
bp


3007 
p›
 
di


3008 
p›
 
si


3009 
p›
 
dx


3010 
p›
 
cx


3011 
p›
 
bx


3012 
p›
 
ax


3013 
ªt


3014 
›timÆ_ªgi°î_ª°‹e
 
ENDP


3017 ; 
Á°_≠i_di•©ch
 - 
Fa°
 
∑th
 
di•©ch
 
comm⁄
 
API
 
fun˘i⁄s


3019 ; 
I≈ut
: 
AH
 = 
fun˘i⁄
 
numbî


3020 ; 
Ouçut
: 
AX
 = 0 
h™dÀd
, 
n⁄
-
zîo
 
√eds
 
fuŒ
 
di•©ch


3021 ; 
U£s
: 
AX
, 
	`BX
 (
Ÿhî
 
ªgi°îs
 
¥e£rved
)

3023 
Á°_≠i_di•©ch
 
PROC


3024 
push
 
bx


3025 
push
 
cx


3027 ; 
Check
 
mo°
 
comm⁄
 
fun˘i⁄s
 
™d
 
h™dÀ
 
them
 
wôh
 
möimÆ
 
ovîhód


3028 ; 
Fun˘i⁄
 
ußge
 
	$‰equícy
 (
typiˇl
): 
	`SEND_PKT
(4)=60%, 
	`ACCESS_TYPE
(2)=20%,

3029 ; 
	`DRIVER_INFO
(1)=10%, 
Ÿhîs
=10%

3031 
cmp
 
ah
, 
API_SEND_PKT
 ; 
Mo°
 
comm⁄
 - 
∑ckë
 
£ndög


3032 
je
 .
Á°_£nd_∑ckë


3034 
cmp
 
ah
, 
API_ACCESS_TYPE
 ; 
Sec⁄d
 
mo°
 
comm⁄
 - 
ty≥
 
ªgi°øti⁄


3035 
je
 .
Á°_ac˚ss_ty≥


3037 
cmp
 
ah
, 
API_DRIVER_INFO
 ; 
Thúd
 
mo°
 
comm⁄
 - 
drivî
 
quîõs


3038 
je
 .
Á°_drivî_öfo


3040 
cmp
 
ah
, 
API_RELEASE_TYPE
 ; 
Comm⁄
 - 
ty≥
 
ªÀa£


3041 
je
 .
Á°_ªÀa£_ty≥


3043 ; 
NŸ
 
a
 
Á°
-
∑th
 
fun˘i⁄


3044 
öc
 
dw‹d
 
±r
 [
Á°_∑th_mis£s
]

3045 
mov
 
ax
, 1 ; 
Sig«l
 
√ed
 
fuŒ
 
di•©ch


3046 
jmp
 .
Á°_di•©ch_exô


3048 .
Á°_£nd_∑ckë
:

3049 ; 
Fa°
 
∑th
 
∑ckë
 
	`£ndög
 (
mo°
 
≥rf‹m™˚
 
¸ôiˇl
)

3050 ; 
Skù
 
exãnsive
 
vÆid©i⁄
 
≥rf‹m™˚
, 
ªly
 
⁄
 
h¨dw¨e
 validation

3052 ; 
Quick
 
∑ømëî
 
vÆid©i⁄


3053 
ã°
 
cx
, cx ; 
Zîo
 
Àngth
?

3054 
jz
 .
Á°_£nd_îr‹


3055 
cmp
 
cx
, 1514 ; 
Too
 
œrge
?

3056 
ja
 .
Á°_£nd_îr‹


3058 ; 
CÆl
 
›timized
 
£nd
 
routöe
 
dúe˘ly


3059 
ˇŒ
 
≠i_£nd_∑ckë_Á°


3060 
jmp
 .
Á°_£nd_com∂ëe


3062 .
Á°_£nd_îr‹
:

3063 
mov
 
dh
, 
PKT_ERROR_CANT_SEND


3064 
°c


3065 
jmp
 .
Á°_£nd_com∂ëe


3067 .
Á°_£nd_com∂ëe
:

3068 
öc
 
dw‹d
 
±r
 [
Á°_∑th_hôs
]

3069 
mov
 
byã
 
±r
 [
œ°_fun˘i⁄
], 
API_SEND_PKT


3070 
mov
 
ax
, 0 ; 
Sig«l
 
h™dÀd


3071 
jmp
 .
Á°_di•©ch_exô


3073 .
Á°_ac˚ss_ty≥
:

3074 ; 
Fa°
 
∑th
 
ty≥
 
	`ac˚ss
 (
£c⁄d
 
mo°
 
comm⁄
)

3076 ; 
Quick
 
vÆid©i⁄


3077 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

3078 
j´
 .
Á°_ac˚ss_îr‹


3080 ; 
CÆl
 
Á°
 
ac˚ss
 
ty≥
 
routöe


3081 
ˇŒ
 
≠i_ac˚ss_ty≥_Á°


3082 
jmp
 .
Á°_ac˚ss_com∂ëe


3084 .
Á°_ac˚ss_îr‹
:

3085 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


3086 
°c


3087 
jmp
 .
Á°_ac˚ss_com∂ëe


3089 .
Á°_ac˚ss_com∂ëe
:

3090 
öc
 
dw‹d
 
±r
 [
Á°_∑th_hôs
]

3091 
mov
 
byã
 
±r
 [
œ°_fun˘i⁄
], 
API_ACCESS_TYPE


3092 
mov
 
ax
, 0 ; 
Sig«l
 
h™dÀd


3093 
jmp
 .
Á°_di•©ch_exô


3095 .
Á°_drivî_öfo
:

3096 ; 
Fa°
 
∑th
 
drivî
 
	$öfo
 (
thúd
 
mo°
 
comm⁄
)

3097 
ˇŒ
 
≠i_drivî_öfo_Á°


3099 
öc
 
dw‹d
 
±r
 [
Á°_∑th_hôs
]

3100 
mov
 
byã
 
±r
 [
œ°_fun˘i⁄
], 
API_DRIVER_INFO


3101 
mov
 
ax
, 0 ; 
Sig«l
 
h™dÀd


3102 
jmp
 .
Á°_di•©ch_exô


3104 .
Á°_ªÀa£_ty≥
:

3105 ; 
Fa°
 
∑th
 
ty≥
 
ªÀa£


3106 
ˇŒ
 
≠i_ªÀa£_ty≥_Á°


3108 
öc
 
dw‹d
 
±r
 [
Á°_∑th_hôs
]

3109 
mov
 
byã
 
±r
 [
œ°_fun˘i⁄
], 
API_RELEASE_TYPE


3110 
mov
 
ax
, 0 ; 
Sig«l
 
h™dÀd


3112 .
Á°_di•©ch_exô
:

3113 
p›
 
cx


3114 
p›
 
bx


3115 
ªt


3116 
Á°_≠i_di•©ch
 
ENDP


3119 ; 
Á°_ªgi°î_ª°‹e
 - 
MöimÆ
 
ª°‹e
 
Á°
 
∑th
 
fun˘i⁄s


3121 ; 
I≈ut
: 
N⁄e


3122 ; 
Ouçut
: 
Es£¡ül
 
ªgi°îs
 
ª°‹ed


3123 ; 
U£s
: 
Sèck


3125 
Á°_ªgi°î_ª°‹e
 
PROC


3126 ; 
Fa°
 
∑th
 
fun˘i⁄s
 
u£
 
möimÆ
 
ªgi°îs
, 
so
 
ª°‹e
 
›timÆly


3127 ; 
O∆y
 
ª°‹e
 
wh©
 
was
 
ßved
 
by
 
›timÆ_ªgi°î_ßve


3129 
mov
 
Æ
, [
≠i_˝u_ty≥
]

3130 
cmp
 
Æ
, 1 ; 286+?

3131 
j´
 .
Á°_p›a


3133 ; 8086 - 
ödividuÆ
 
p›s


3134 
p›
 
ds


3135 
p›
 
es


3136 
add
 
•
, 14 ; 
Skù
 
the
 7 
gíîÆ
 
puΩo£
 
	$ªgi°îs
 (2 
byãs
 
óch
)

3137 
ªt


3139 .
Á°_p›a
:

3140 ; 286+ - 
u£
 
POPA


3141 
p›
 
ds


3142 
p›
 
es


3143 
add
 
•
, 16 ; 
Skù
 
PUSHA
 
ßved
 
	`ªgi°îs
 (8 
ªgi°îs
 √ó 2 
byãs
)

3144 
ªt


3145 
Á°_ªgi°î_ª°‹e
 
ENDP


3148 ; 
Fa°
 
P©h
 
API
 
Fun˘i⁄
 
Im∂emíèti⁄s


3152 ; 
≠i_£nd_∑ckë_Á°
 - 
Fa°
 
∑th
 
∑ckë
 
£ndög
 
wôh
 
möimÆ
 
ovîhód


3154 ; 
I≈ut
: 
DS
:
SI
 = 
∑ckë
, 
CX
 = 
	`Àngth
 (
Æªady
 
vÆid©ed
)

3155 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


3156 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
	`DX
 (
möimÆ
 
ußge
)

3158 
≠i_£nd_∑ckë_Á°
 
PROC


3159 ; 
MöimÆ
 
vÆid©i⁄
 - 
assume
 
∑ømëîs
 
¨e
 
good


3160 ; 
U£
 
dúe˘
 
h¨dw¨e
 
ˇŒ
 
to
 
by∑ss
 
C
 
œyî
 
ovîhód


3162 
push
 
si


3163 
push
 
di


3165 ; 
Quick
 
NIC
 
	$£À˘i⁄
 (
assume
 
NIC
 0 
Á°
 
∑th
)

3166 
mov
 
Æ
, 0 ; 
U£
 
¥im¨y
 
NIC


3168 ; 
CÆl
 
h¨dw¨e
 
£nd
 
dúe˘ly
 
wôh
 
möimÆ
 
£tup


3169 
ˇŒ
 
h¨dw¨e_£nd_∑ckë_asm


3170 
ã°
 
ax
,áx

3171 
jnz
 .
Á°_£nd_Áûed


3173 
mov
 
dh
, 
PKT_SUCCESS


3174 
jmp
 .
Á°_£nd_d⁄e


3176 .
Á°_£nd_Áûed
:

3177 
mov
 
dh
, 
PKT_ERROR_CANT_SEND


3179 .
Á°_£nd_d⁄e
:

3180 
p›
 
di


3181 
p›
 
si


3182 
ªt


3183 
≠i_£nd_∑ckë_Á°
 
ENDP


3186 ; 
≠i_ac˚ss_ty≥_Á°
 - 
Fa°
 
∑th
 
ty≥
 
ac˚ss
 
wôh
 
möimÆ
 
vÆid©i⁄


3188 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
, 
BX
 = 
∑ckë
 
ty≥
, 
ES
:
DI
 = 
ª˚ivî


3189 ; 
Ouçut
: 
AX
 = 
h™dÀ
, 
DH
 = 
îr‹
 
code


3190 ; 
U£s
: 
AX
, 
BX
, 
	`SI
 (
möimÆ
 
ußge
)

3192 
≠i_ac˚ss_ty≥_Á°
 
PROC


3193 
push
 
si


3195 ; 
Föd
 
‰ì
 
h™dÀ
 
	$quickly
 (
löór
 
£¨ch
)

3196 
mov
 
si
, 
OFFSET
 
h™dÀ_èbÀ


3197 
mov
 
ax
, 1 ; 
Sèπ
 
wôh
 
h™dÀ
 1

3199 .
Á°_föd_h™dÀ
:

3200 
cmp
 
w‹d
 
±r
 [
si
], 0 ; 
Fªe
 
¶Ÿ
?

3201 
je
 .
Á°_found_h™dÀ


3202 
add
 
si
, 2

3203 
öc
 
ax


3204 
cmp
 
ax
, 
MAX_HANDLES


3205 
ja
 .
Á°_no_h™dÀs


3206 
jmp
 .
Á°_föd_h™dÀ


3208 .
Á°_no_h™dÀs
:

3209 
mov
 
dh
, 
PKT_ERROR_NO_SPACE


3210 
jmp
 .
Á°_ac˚ss_d⁄e


3212 .
Á°_found_h™dÀ
:

3213 ; 
AŒoˇã
 
h™dÀ
 
wôh
 
möimÆ
 
£tup


3214 
mov
 [
si
], 
bx
 ; 
St‹e
 
∑ckë
 
ty≥


3216 ; 
St‹e
 
	$ˇŒback
 (
möimÆ
 
vÆid©i⁄
)

3217 
dec
 
ax
 ; 
C⁄vît
 
to
 0-
ba£d
 
ödex


3218 
push
 
ax


3219 
shl
 
ax
, 2 ; 
Dw‹d
 
off£t


3220 
mov
 
si
, 
ax


3222 ; 
Basic
 
ˇŒback
 
vÆid©i⁄


3223 
ã°
 
di
, di

3224 
jz
 .
Á°_övÆid_ˇŒback


3225 
mov
 
cx
, 
es


3226 
ã°
 
cx
, cx

3227 
jz
 .
Á°_övÆid_ˇŒback


3229 ; 
St‹e
 
ˇŒback


3230 
mov
 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
si
], 
di


3231 
mov
 
w‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
si
 + 2], 
es


3233 
p›
 
ax


3234 
öc
 
ax
 ; 
C⁄vît
 
back
 
to
 1-
ba£d
 
h™dÀ


3235 
öc
 
w‹d
 
±r
 [
a˘ive_h™dÀs
]

3236 
mov
 
dh
, 
PKT_SUCCESS


3237 
jmp
 .
Á°_ac˚ss_d⁄e


3239 .
Á°_övÆid_ˇŒback
:

3240 
p›
 
ax
 ; 
CÀ™
 
up
 
°ack


3241 
mov
 
dh
, 
PKT_ERROR_BAD_ADDRESS


3243 .
Á°_ac˚ss_d⁄e
:

3244 
p›
 
si


3245 
ªt


3246 
≠i_ac˚ss_ty≥_Á°
 
ENDP


3249 ; 
≠i_drivî_öfo_Á°
 - 
Fa°
 
∑th
 
drivî
 
öfo
 
wôh
 
möimÆ
 
¥o˚ssög


3251 ; 
I≈ut
: 
AL
 = 
öãrÁ˚
 
numbî


3252 ; 
Ouçut
: 
BX
, 
CH
, 
CL
, 
DL
, 
DS
:
SI
 
≥r
 
•ec
, 
DH
 = 
îr‹
 
code


3253 ; 
U£s
: 
AX
, 
BX
, 
CX
, 
DX
, 
	`SI
 (
°™d¨d
 
£t
)

3255 
≠i_drivî_öfo_Á°
 
PROC


3256 ; 
Quick
 
öãrÁ˚
 
vÆid©i⁄


3257 
cmp
 
Æ
, [
öãrÁ˚_cou¡
]

3258 
j´
 .
Á°_öfo_bad_numbî


3260 ; 
Rëu∫
 
°™d¨d
 
drivî
 
öfo
 
quickly


3261 
mov
 
bx
, 0100
h
 ; 
Vîsi⁄
 1.0

3262 
mov
 
ch
, 1 ; 
Cœss
 1 (
DIX
 
Ethî√t
)

3263 
mov
 
˛
, 1 ; 
Ty≥
 1

3264 
mov
 
dl
, 
Æ
 ; 
I¡îÁ˚
 
numbî


3265 
mov
 
si
, 
OFFSET
 
drivî_«me
 ; 
Drivî
 
«me


3266 
mov
 
dh
, 
PKT_SUCCESS


3267 
ªt


3269 .
Á°_öfo_bad_numbî
:

3270 
mov
 
dh
, 
PKT_ERROR_NO_NUMBER


3271 
ªt


3272 
≠i_drivî_öfo_Á°
 
ENDP


3275 ; 
≠i_ªÀa£_ty≥_Á°
 - 
Fa°
 
∑th
 
ty≥
 
ªÀa£
 
wôh
 
möimÆ
 
˛ónup


3277 ; 
I≈ut
: 
BX
 = 
h™dÀ


3278 ; 
Ouçut
: 
DH
 = 
îr‹
 
code


3279 ; 
U£s
: 
AX
, 
BX
, 
	`SI
 (
möimÆ
 
ußge
)

3281 
≠i_ªÀa£_ty≥_Á°
 
PROC


3282 
push
 
si


3284 ; 
Quick
 
h™dÀ
 
vÆid©i⁄


3285 
cmp
 
bx
, 1

3286 
jb
 .
Á°_ªl_bad_h™dÀ


3287 
cmp
 
bx
, 
MAX_HANDLES


3288 
ja
 .
Á°_ªl_bad_h™dÀ


3290 ; 
Check
 
h™dÀ
 
is
 
Æloˇãd


3291 
dec
 
bx
 ; 
C⁄vît
 
to
 0-
ba£d


3292 
mov
 
si
, 
bx


3293 
shl
 
si
, 1 ; 
W‹d
 
off£t


3294 
cmp
 
w‹d
 
±r
 [
h™dÀ_èbÀ
 + 
si
], 0

3295 
je
 .
Á°_ªl_bad_h™dÀ


3297 ; 
Fªe
 
the
 
h™dÀ
 
quickly


3298 
mov
 
w‹d
 
±r
 [
h™dÀ_èbÀ
 + 
si
], 0

3300 ; 
CÀ¨
 
ˇŒback


3301 
shl
 
bx
, 2 ; 
Dw‹d
 
off£t
 
ˇŒback
 
èbÀ


3302 
mov
 
dw‹d
 
±r
 [
h™dÀ_ˇŒbacks
 + 
bx
], 0

3304 ; 
De¸emít
 
cou¡


3305 
cmp
 
w‹d
 
±r
 [
a˘ive_h™dÀs
], 0

3306 
je
 .
Á°_ªl_cou¡_ok


3307 
dec
 
w‹d
 
±r
 [
a˘ive_h™dÀs
]

3309 .
Á°_ªl_cou¡_ok
:

3310 
mov
 
dh
, 
PKT_SUCCESS


3311 
jmp
 .
Á°_ªl_d⁄e


3313 .
Á°_ªl_bad_h™dÀ
:

3314 
mov
 
dh
, 
PKT_ERROR_BAD_HANDLE


3316 .
Á°_ªl_d⁄e
:

3317 
p›
 
si


3318 
ªt


3319 
≠i_ªÀa£_ty≥_Á°
 
ENDP


3322 ; 
≠i_≥rf‹m™˚_mërics
 - 
Gë
 
API
 
≥rf‹m™˚
 
mërics


3324 ; 
I≈ut
: 
ES
:
DI
 = 
buf„r
 
mërics


3325 ; 
Ouçut
: 
Buf„r
 
fûÀd
 
wôh
 
≥rf‹m™˚
 
d©a


3326 ; 
U£s
: 
AX
, 
CX
, 
SI
, 
DI


3328 
≠i_≥rf‹m™˚_mërics
 
PROC


3329 
push
 
si


3330 
push
 
cx


3332 ; 
C›y
 
≥rf‹m™˚
 
mërics


3333 
mov
 
óx
, [
Á°_∑th_hôs
]

3334 
°osd


3335 
mov
 
óx
, [
Á°_∑th_mis£s
]

3336 
°osd


3338 ; 
Add
 
CPU
 
›timiz©i⁄
 
öfo


3339 
mov
 
Æ
, [
≠i_˝u_ty≥
]

3340 
°osb


3341 
mov
 
Æ
, [
≠i_pusha_thªshﬁd
]

3342 
°osb


3343 
mov
 
Æ
, [
œ°_fun˘i⁄
]

3344 
°osb


3346 ; 
CÆcuœã
 
hô
 
	`øtio
 (
hôs
 * 100 / (hô†+ 
mis£s
))

3347 
mov
 
óx
, [
Á°_∑th_hôs
]

3348 
mov
 
ecx
, 100

3349 
mul
 
ecx
 ; 
hôs
 * 100

3350 
mov
 
ecx
, [
Á°_∑th_hôs
]

3351 
add
 
ecx
, [
Á°_∑th_mis£s
] ; 
tŸÆ
 
ˇŒs


3352 
ã°
 
ecx
,Écx

3353 
jz
 .
no_ˇŒs


3354 
div
 
ecx
 ; 
hô
 
øtio
 
≥r˚¡age


3355 
jmp
 .
°‹e_øtio


3357 .
no_ˇŒs
:

3358 
x‹
 
óx
,Éax

3360 .
°‹e_øtio
:

3361 
°osw
 ; 
St‹e
 
hô
 
øtio
 
as
 
w‹d


3363 
p›
 
cx


3364 
p›
 
si


3365 
ªt


3366 
≠i_≥rf‹m™˚_mërics
 
ENDP


3369 ; 
H¨dw¨e
 
ª£t
 
hñ≥r
 
fun˘i⁄s


3372 
ª£t_3c509b_h¨dw¨e
 
PROC


3373 ; 
Re£t
 3C509B 
NIC
 
h¨dw¨e


3374 
push
 
ax


3376 ; 
Issue
 
globÆ
 
ª£t
 
comm™d


3377 
mov
 
ax
, 0x0000 ; 
GLOBAL_RESET
 
comm™d


3378 
add
 
dx
, 0x0E ; 
Comm™d
 

3379 
out
 
dx
, 
ax


3381 ; 
Waô
 
ª£t
 
to
 
	$com∂ëe
 (
möimum
 1
ms
)

3382 
mov
 
cx
, 1000

3383 .
ª£t_dñay
:

3384 
ö
 
Æ
, 0x80 ; 
I
/
O
 
dñay


3385 
lo›
 .
ª£t_dñay


3387 ; 
Re
-
íabÀ
 
ad≠ãr


3388 
mov
 
ax
, 0x0100 ; 
RX_ENABLE


3389 
out
 
dx
, 
ax


3390 
mov
 
ax
, 0x0200 ; 
TX_ENABLE


3391 
out
 
dx
, 
ax


3393 
p›
 
ax


3394 
ªt


3395 
ª£t_3c509b_h¨dw¨e
 
ENDP


3397 
ª£t_3c515_h¨dw¨e
 
PROC


3398 ; 
Re£t
 3C515-
TX
 
ISA
 
NIC
 
h¨dw¨e


3399 
push
 
ax


3400 
push
 
cx


3402 ; 
Issue
 
globÆ
 
ª£t
 
comm™d


3403 
mov
 
ax
, 0x0000 ; 
GLOBAL_RESET


3404 
add
 
dx
, 0x0E ; 
Comm™d
 

3405 
out
 
dx
, 
ax


3407 ; 
ISA
 
timög
 
	`dñay
 (~10
ms
 
ª£t
)

3408 
mov
 
cx
, 10000 ; 10
ms
 
dñay


3409 .
ª£t_dñay
:

3410 
out
 80
h
, 
Æ
 ; 
ISA
 
I
/
O
 
	`dñay
 (~1u
s
)

3411 
lo›
 .
ª£t_dñay


3413 ; 
Re
-
íabÀ
 
	$ad≠ãr
 (
ISA
 
bus
 
ma°î
 
mode
)

3414 
sub
 
dx
, 0x0E ; 
Back
 
to
 
ba£


3415 
add
 
dx
, 0x0E ; 
Comm™d
 

3417 ; 
E«bÀ
 
RX


3418 
mov
 
ax
, 0x0100 ; 
RX_ENABLE


3419 
out
 
dx
, 
ax


3421 ; 
E«bÀ
 
TX


3422 
mov
 
ax
, 0x0200 ; 
TX_ENABLE


3423 
out
 
dx
, 
ax


3425 ; 
E«bÀ
 
ISA
 
bus
 
ma°îög
 
suµ‹ãd


3426 
mov
 
ax
, 0x2000 ; 
BUS_MASTER_ENABLE


3427 
out
 
dx
, 
ax


3429 
p›
 
cx


3430 
p›
 
ax


3431 
ªt


3432 
ª£t_3c515_h¨dw¨e
 
ENDP


3434 
˛ór_öãrÁ˚_buf„rs
 
PROC


3435 ; 
CÀ¨
 
Æl
 
buf„rs
 
assocüãd
 
wôh
 
™
 
öãrÁ˚


3436 
push
 
cx


3437 
push
 
si


3438 
push
 
di


3440 ; 
CÀ¨
 
RX
 
buf„rs


3441 
mov
 
cx
, 32 ; 
Assume
 32 
RX
 
buf„rs


3442 
x‹
 
si
, si

3443 .
˛ór_rx
:

3444 ; 
M¨k
 
buf„r
 
as
 
‰ì


3445 
mov
 
byã
 
±r
 [
rx_buf„r_°©us
 + 
si
], 0

3446 
öc
 
si


3447 
lo›
 .
˛ór_rx


3449 ; 
CÀ¨
 
TX
 
buf„rs


3450 
mov
 
cx
, 16 ; 
Assume
 16 
TX
 
buf„rs


3451 
x‹
 
si
, si

3452 .
˛ór_tx
:

3453 
mov
 
byã
 
±r
 [
tx_buf„r_°©us
 + 
si
], 0

3454 
öc
 
si


3455 
lo›
 .
˛ór_tx


3457 
p›
 
di


3458 
p›
 
si


3459 
p›
 
cx


3460 
ªt


3461 
˛ór_öãrÁ˚_buf„rs
 
ENDP


3464 ; 
Mu…iˇ°
 
h¨dw¨e
 
¥ogømmög


3467 
£t_h¨dw¨e_mu…iˇ°
 
PROC


3468 ; 
Progøm
 
h¨dw¨e
 
wôh
 
mu…iˇ°
 
addªs£s


3469 
push
 
ax


3470 
push
 
cx


3471 
push
 
dx


3472 
push
 
si


3474 ; 
Sñe˘
 
≠¥›rüã
 
wödow
 
mu…iˇ°
 
ªgi°îs


3475 
mov
 
dx
, 0x300 ; 
Ba£
 
I
/
O


3476 
mov
 
ax
, 0x0803 ; 
SELECT_WINDOW
 3

3477 
add
 
dx
, 0x0E

3478 
out
 
dx
, 
ax


3480 ; 
Progøm
 
mu…iˇ°
 
hash
 
	`èbÀ
 (
sim∂ifõd
)

3481 ; 
Ról
 
im∂emíèti⁄
 
would
 
ˇlcuœã
 
hash
 
óch
 
addªss


3482 
mov
 
cx
, [
mu…iˇ°_cou¡
]

3483 
ã°
 
cx
, cx

3484 
jz
 .
˛ór_Æl


3486 ; 
E«bÀ
 
Æl
 
mu…iˇ°
 
sim∂icôy


3487 
mov
 
ax
, 0xFFFF

3488 
sub
 
dx
, 0x0E

3489 
add
 
dx
, 0x06 ; 
Mu…iˇ°
 
fûãr
 

3490 
out
 
dx
, 
ax


3491 
jmp
 .
d⁄e


3493 .
˛ór_Æl
:

3494 ; 
DißbÀ
 
mu…iˇ°


3495 
x‹
 
ax
,áx

3496 
sub
 
dx
, 0x0E

3497 
add
 
dx
, 0x06

3498 
out
 
dx
, 
ax


3500 .
d⁄e
:

3501 
p›
 
si


3502 
p›
 
dx


3503 
p›
 
cx


3504 
p›
 
ax


3505 
ªt


3506 
£t_h¨dw¨e_mu…iˇ°
 
ENDP


3508 
˛ór_h¨dw¨e_mu…iˇ°
 
PROC


3509 ; 
CÀ¨
 
Æl
 
mu…iˇ°
 
addªs£s
 
‰om
 
h¨dw¨e


3510 
push
 
ax


3511 
push
 
dx


3513 
mov
 
dx
, 0x300 ; 
Ba£
 
I
/
O


3514 
mov
 
ax
, 0x0803 ; 
SELECT_WINDOW
 3

3515 
add
 
dx
, 0x0E

3516 
out
 
dx
, 
ax


3518 ; 
CÀ¨
 
mu…iˇ°
 
fûãr


3519 
x‹
 
ax
,áx

3520 
sub
 
dx
, 0x0E

3521 
add
 
dx
, 0x06

3522 
out
 
dx
, 
ax


3524 
p›
 
dx


3525 
p›
 
ax


3526 
ªt


3527 
˛ór_h¨dw¨e_mu…iˇ°
 
ENDP


3530 ; 
Pri‹ôy
 
queue
 
m™agemít


3533 
s‹t_¥i‹ôy_queue
 
PROC


3534 ; 
Sim∂e
 
bubbÀ
 
s‹t
 
smÆl
 
¥i‹ôy
 
queue


3535 
push
 
ax


3536 
push
 
bx


3537 
push
 
cx


3538 
push
 
dx


3539 
push
 
si


3540 
push
 
di


3542 
mov
 
cx
, [
¥i‹ôy_queue_èû
]

3543 
sub
 
cx
, [
¥i‹ôy_queue_hód
]

3544 
™d
 
cx
, 
PRIORITY_QUEUE_MASK


3545 
cmp
 
cx
, 1

3546 
jbe
 .
d⁄e
 ; 0 
‹
 1 
ôems
, 
Æªady
 
s‹ãd


3548 .
ouãr_lo›
:

3549 
x‹
 
dx
, dx ; 
No
 
sw≠s
 
Êag


3550 
mov
 
si
, [
¥i‹ôy_queue_hód
]

3552 .
ö√r_lo›
:

3553 
mov
 
di
, 
si


3554 
öc
 
di


3555 
™d
 
di
, 
PRIORITY_QUEUE_MASK


3557 
cmp
 
di
, [
¥i‹ôy_queue_èû
]

3558 
je
 .
check_sw≠≥d


3560 ; 
Com∑ª
 
¥i‹ôõs


3561 
shl
 
si
, 3 ; 8 
byãs
 
≥r
 
íåy


3562 
shl
 
di
, 3

3563 
mov
 
Æ
, [
¥i‹ôy_queue
 + 
si
 + 2] ; 
Pri‹ôy
 
of
 
fú°


3564 
cmp
 
Æ
, [
¥i‹ôy_queue
 + 
di
 + 2] ; 
Pri‹ôy
 
of
 
£c⁄d


3565 
jbe
 .
no_sw≠


3567 ; 
Sw≠
 
	$íåõs
 (8 
byãs
 
óch
)

3568 
push
 
cx


3569 
mov
 
cx
, 4 ; 4 
w‹ds
 = 8 
byãs


3570 
Àa
 
si
, [
¥i‹ôy_queue
 + si]

3571 
Àa
 
di
, [
¥i‹ôy_queue
 + di]

3572 .
sw≠_lo›
:

3573 
mov
 
ax
, [
si
]

3574 
xchg
 
ax
, [
di
]

3575 
mov
 [
si
], 
ax


3576 
add
 
si
, 2

3577 
add
 
di
, 2

3578 
lo›
 .
sw≠_lo›


3579 
p›
 
cx


3581 
mov
 
dx
, 1 ; 
Së
 
sw≠≥d
 
Êag


3583 .
no_sw≠
:

3584 
shr
 
si
, 3 ; 
Back
 
to
 
ödex


3585 
öc
 
si


3586 
™d
 
si
, 
PRIORITY_QUEUE_MASK


3587 
jmp
 .
ö√r_lo›


3589 .
check_sw≠≥d
:

3590 
ã°
 
dx
, dx

3591 
jnz
 .
ouãr_lo›
 ; 
If
 
sw≠≥d
, dÿ
™Ÿhî
 
∑ss


3593 .
d⁄e
:

3594 
p›
 
di


3595 
p›
 
si


3596 
p›
 
dx


3597 
p›
 
cx


3598 
p›
 
bx


3599 
p›
 
ax


3600 
ªt


3601 
s‹t_¥i‹ôy_queue
 
ENDP


3603 
¥o˚ss_¥i‹ôy_queue
 
PROC


3604 ; 
Pro˚ss
 
∑ckës
 
‰om
 
¥i‹ôy
 
queue


3605 
push
 
ax


3606 
push
 
bx


3607 
push
 
cx


3608 
push
 
si


3610 ; 
Check
 
queue
 
has
 
∑ckës


3611 
mov
 
ax
, [
¥i‹ôy_queue_hód
]

3612 
cmp
 
ax
, [
¥i‹ôy_queue_èû
]

3613 
je
 .
em±y


3615 ; 
Gë
 
highe°
 
¥i‹ôy
 
	$∑ckë
 (
©
 
hód
 
a·î
 
s‹tög
)

3616 
mov
 
si
, 
ax


3617 
shl
 
si
, 3 ; 8 
byãs
 
≥r
 
íåy


3618 
Àa
 
si
, [
¥i‹ôy_queue
 + si]

3620 ; 
Lﬂd
 
∑ckë
 
öfo


3621 
mov
 
bx
, [
si
] ; 
H™dÀ


3622 
mov
 
Æ
, [
si
 + 2] ; 
Pri‹ôy


3623 
mov
 
cx
, [
si
 + 4] ; 
Lígth


3624 
push
 
w‹d
 
±r
 [
si
 + 6] ; 
Segmít


3625 
p›
 
ds


3627 ; 
Pro˚ss
 
	`∑ckë
 (
sim∂ifõd
 - 
would
 
ˇŒ
 
a˘uÆ
 
h™dÀr
)

3630 ; 
Remove
 
‰om
 
queue


3631 
öc
 
w‹d
 
±r
 [
¥i‹ôy_queue_hód
]

3632 
™d
 
w‹d
 
±r
 [
¥i‹ôy_queue_hód
], 
PRIORITY_QUEUE_MASK


3634 .
em±y
:

3635 
p›
 
si


3636 
p›
 
cx


3637 
p›
 
bx


3638 
p›
 
ax


3639 
ªt


3640 
¥o˚ss_¥i‹ôy_queue
 
ENDP


3643 ; 
Buf„r
 
°©us
 
	`¨øys
 (
should
 
be
 
ö
 
d©a
 
£˘i⁄
 
but
 
addög
 
hîe
 
com∂ëíess
)

3645 
rx_buf„r_°©us
 
db
 32 
	`dup
(0Ë; 
RX
 
buf„r
 
°©us
 
Êags


3646 
tx_buf„r_°©us
 
db
 16 
	`dup
(0Ë; 
TX
 
buf„r
 
°©us
 
Êags


3648 
_TEXT
 
ENDS


	@/Users/jvindahl/Development/3com-packet-driver/src/c/3c509b.c

11 
	~"../ö˛ude/3c509b.h
"

12 
	~"../ö˛ude/h¨dw¨e.h
"

13 
	~"../ö˛ude/loggög.h
"

14 
	~"../ö˛ude/mem‹y.h
"

15 
	~"../ö˛ude/comm⁄.h
"

16 
	~"../ö˛ude/buf„r_Æloc.h
"

17 
	~"../ö˛ude/∑ckë_›s.h
"

18 
	~"../ö˛ude/medü_c⁄åﬁ.h
"

19 
	~"../ö˛ude/nic_defs.h
"

20 
	~"../ö˛ude/öãºu±_môig©i⁄.h
"

21 
	~"../ö˛ude/hw_checksum.h
"

22 
	~"../ö˛ude/dúe˘_pio_íh™˚d.h
"

23 
	~<°rög.h
>

26 
_3c509b_öô
(
nic_öfo_t
 *
nic
);

27 
_3c509b_˛ónup
(
nic_öfo_t
 *
nic
);

28 
_3c509b_ª£t
(
nic_öfo_t
 *
nic
);

29 
_3c509b_c⁄figuª
(
nic_öfo_t
 *
nic
, c⁄° *
c⁄fig
);

30 
_3c509b_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
);

31 
_3c509b_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àngth
);

32 
boﬁ
 
_3c509b_check_öãºu±
(
nic_öfo_t
 *
nic
);

33 
_3c509b_h™dÀ_öãºu±
(
nic_öfo_t
 *
nic
);

34 
_3c509b_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

35 
_3c509b_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

36 
boﬁ
 
_3c509b_gë_lök_°©us
(
nic_öfo_t
 *
nic
);

37 
_3c509b_gë_lök_•ìd
(
nic_öfo_t
 *
nic
);

38 
_3c509b_£t_¥omiscuous
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ
);

39 
_3c509b_£t_mu…iˇ°
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
mc_li°
, 
cou¡
);

40 
_3c509b_£lf_ã°
(
nic_öfo_t
 *
nic
);

43 
_3c509b_£À˘_wödow
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
wödow
);

44 
_3c509b_waô_f‹_cmd_busy
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
);

45 
uöt16_t
 
_3c509b_ªad_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
addªss
);

46 
_3c509b_wrôe_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
addªss
, 
uöt16_t
 
d©a
);

47 
_3c509b_ªad_mac_‰om_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
mac
);

48 
_3c509b_£tup_medü
(
nic_öfo_t
 *
nic
);

49 
_3c509b_£tup_rx_fûãr
(
nic_öfo_t
 *
nic
);

52 
nic_›s_t
 
	g_3c509b_›s
 = {

53 .
öô
 = 
_3c509b_öô
,

54 .
	g˛ónup
 = 
_3c509b_˛ónup
,

55 .
	gª£t
 = 
_3c509b_ª£t
,

56 .
	gc⁄figuª
 = ((*)(
nic_öfo
 *, c⁄° *))
	g_3c509b_c⁄figuª
,

57 .
	g£nd_∑ckë
 = 
_3c509b_£nd_∑ckë_dúe˘_pio
,

58 .
	gª˚ive_∑ckë
 = 
_3c509b_ª˚ive_∑ckë
,

59 .
	gcheck_öãºu±
 = 
_3c509b_check_öãºu±
,

60 .
	gh™dÀ_öãºu±
 = 
_3c509b_h™dÀ_öãºu±
,

61 .
	gíabÀ_öãºu±s
 = 
_3c509b_íabÀ_öãºu±s
,

62 .
	gdißbÀ_öãºu±s
 = 
_3c509b_dißbÀ_öãºu±s
,

63 .
	ggë_lök_°©us
 = 
_3c509b_gë_lök_°©us
,

64 .
	ggë_lök_•ìd
 = 
_3c509b_gë_lök_•ìd
,

65 .
	g£t_¥omiscuous
 = 
_3c509b_£t_¥omiscuous
,

66 .
	g£t_mu…iˇ°
 = 
_3c509b_£t_mu…iˇ°
,

67 .
	g£lf_ã°
 = 
_3c509b_£lf_ã°


71 
uöt16_t
 
_3c509b_ªad_ªg
(
nic_öfo_t
 *
nic
, uöt16_à
ªg
);

72 
_3c509b_wrôe_ªg
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
ªg
, uöt16_à
vÆue
);

73 
_3c509b_wrôe_comm™d
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
comm™d
);

74 
_3c509b_waô_f‹_comm™d
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
);

77 
nic_›s_t
* 
	$gë_3c509b_›s
() {

78  &
_3c509b_›s
;

79 
	}
}

82 
	$_3c509b_öô
(
nic_öfo_t
 *
nic
) {

83 i‡(!
nic
) {

84  
ERROR_INVALID_PARAM
;

87 
	`LOG_DEBUG
("Inôülizög 3C509BáàI/O 0x%X", 
nic
->
io_ba£
);

90 
ªsu…
 = 
	`_3c509b_ª£t
(
nic
);

91 i‡(
ªsu…
 !
SUCCESS
) {

92 
	`LOG_ERROR
("3C509BÑe£àÁûed: %d", 
ªsu…
);

93  
ªsu…
;

97 
ªsu…
 = 
	`_3c509b_ªad_mac_‰om_ì¥om
(
nic
,Çic->
mac
);

98 i‡(
ªsu…
 !
SUCCESS
) {

99 
	`LOG_ERROR
("FaûedÅÿªad MACáddªs†‰om EEPROM: %d", 
ªsu…
);

100  
ªsu…
;

104 
	`mem˝y
(
nic
->
≥rm_mac
,Çic->
mac
, 
ETH_ALEN
);

107 
ªsu…
 = 
	`_3c509b_£tup_medü
(
nic
);

108 i‡(
ªsu…
 !
SUCCESS
) {

109 
	`LOG_ERROR
("FaûedÅÿ£tu∞medü: %d", 
ªsu…
);

110  
ªsu…
;

114 
ªsu…
 = 
	`_3c509b_£tup_rx_fûãr
(
nic
);

115 i‡(
ªsu…
 !
SUCCESS
) {

116 
	`LOG_ERROR
("FaûedÅÿ£tu∞RX fûãr: %d", 
ªsu…
);

117  
ªsu…
;

121 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

124 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_INTR_ENB
 |

125 (
_3C509B_IMASK_TX_COMPLETE
 | 
_3C509B_IMASK_RX_COMPLETE
 | 
_3C509B_IMASK_ADAPTER_FAILURE
));

128 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_ENABLE
);

129 
ªsu…
 = 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 1000);

130 i‡(
ªsu…
 !
SUCCESS
) {

131 
	`LOG_ERROR
("RXÉnable commandÅimeout");

132  
ªsu…
;

135 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_TX_ENABLE
);

136 
ªsu…
 = 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 1000);

137 i‡(
ªsu…
 !
SUCCESS
) {

138 
	`LOG_ERROR
("TXÉnable commandÅimeout");

139  
ªsu…
;

144 
nic
->
lök_up
 = 
	`_3c509b_gë_lök_°©us
(nic);

145 
nic
->
•ìd
 = 
	`_3c509b_gë_lök_•ìd
(nic);

148 
	`dúe˘_pio_öô_˝u_dëe˘i⁄
();

149 
	`LOG_DEBUG
("CPU-optimized PIO initialized:Üevel %d, 32-bit support: %s",

150 
	`dúe˘_pio_gë_›timiz©i⁄_Àvñ
(),

151 
	`dúe˘_pio_gë_˝u_suµ‹t_öfo
() ? "Yes" : "No");

154 
ªsu…
 = 
	`hw_checksum_öô
();

155 i‡(
ªsu…
 !
SUCCESS
) {

156 
	`LOG_WARNING
("H¨dw¨êchecksum inôüliz©i⁄ faûed: %d, c⁄töuög wôhouà›timiz©i⁄", 
ªsu…
);

159 
	`LOG_DEBUG
("Hardware checksum module initialized with CPU optimization");

162 
	`LOG_INFO
("3C509B initialized successfully,Üink %s, speed %d Mbps",

163 
nic
->
lök_up
 ? "UP" : "DOWN",Çic->
•ìd
);

165  
SUCCESS
;

166 
	}
}

168 
	$_3c509b_˛ónup
(
nic_öfo_t
 *
nic
) {

169 i‡(!
nic
) {

170  
ERROR_INVALID_PARAM
;

173 
	`LOG_DEBUG
("CÀ™ög u∞3C509BáàI/O 0x%X", 
nic
->
io_ba£
);

176 
	`_3c509b_dißbÀ_öãºu±s
(
nic
);

179 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISABLE
);

180 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 500);

182 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_TX_DISABLE
);

183 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 500);

186 
	`medü_c⁄åﬁ_˛ónup
(
nic
);

188  
SUCCESS
;

189 
	}
}

191 
	$_3c509b_ª£t
(
nic_öfo_t
 *
nic
) {

192 i‡(!
nic
) {

193  
ERROR_INVALID_PARAM
;

196 
	`LOG_DEBUG
("Re£âög 3C509BáàI/O 0x%X", 
nic
->
io_ba£
);

199 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_TOTAL_RESET
);

202 
	`mdñay
(1);

205  
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 5000);

206 
	}
}

208 
	$_3c509b_c⁄figuª
(
nic_öfo_t
 *
nic
, c⁄° *
c⁄fig
) {

209 i‡(!
nic
) {

210  
ERROR_INVALID_PARAM
;

214 
	`LOG_DEBUG
("Configuring 3C509B");

217 
nic
->
•ìd
 = 10;

218 
nic
->
fuŒ_du∂ex
 = 
Ál£
;

219 
nic
->
mtu
 = 
_3C509B_MAX_MTU
;

221  
SUCCESS
;

222 
	}
}

224 
	$_3c509b_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
) {

225 i‡(!
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

226  
ERROR_INVALID_PARAM
;

229 i‡(
Àngth
 > 
nic
->
mtu
) {

230 
	`LOG_ERROR
("PackëÅoÿœrge: %zu > %d", 
Àngth
, 
nic
->
mtu
);

231  
ERROR_INVALID_PARAM
;

235 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

238 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

239 i‡(!(
°©us
 & 
_3C509B_STATUS_TX_AVAILABLE
)) {

240 
	`LOG_DEBUG
("TXÇŸávaûabÀ, sètus=0x%X", 
°©us
);

241  
ERROR_BUSY
;

245 
uöt16_t
 
tx_‰ì
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_TX_FREE
);

246 i‡(
tx_‰ì
 < (
uöt16_t
)
Àngth
) {

247 
	`LOG_DEBUG
("Insufficõ¡ TX FIFO s∑˚:Çìd %zu, havê%d", 
Àngth
, 
tx_‰ì
);

248  
ERROR_BUSY
;

252 
uöt16_t
 
tx_fifo
 = 
nic
->
io_ba£
 + 
_3C509B_TX_FIFO
;

253 
	`outw
(
tx_fifo
, (
uöt16_t
)
Àngth
);

256 
size_t
 
w‹ds
 = 
Àngth
 / 2;

257 c⁄° 
uöt16_t
 *
∑ckë_w‹ds
 = (c⁄° uöt16_t*)
∑ckë
;

259 
size_t
 
i
 = 0; i < 
w‹ds
; i++) {

260 
	`outw
(
tx_fifo
, 
∑ckë_w‹ds
[
i
]);

264 i‡(
Àngth
 & 1) {

265 
	`outb
(
tx_fifo
, 
∑ckë
[
Àngth
 - 1]);

269 
nic
->
tx_∑ckës
++;

270 
nic
->
tx_byãs
 +
Àngth
;

272 
	`LOG_TRACE
("Síà∑ckë o‡%zu byãs", 
Àngth
);

274  
SUCCESS
;

275 
	}
}

277 
	$_3c509b_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àngth
) {

278 i‡(!
nic
 || !
buf„r
 || !
Àngth
) {

279  
ERROR_INVALID_PARAM
;

283 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

286 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

287 i‡(!(
°©us
 & 
_3C509B_STATUS_RX_COMPLETE
)) {

288 *
Àngth
 = 0;

289  
ERROR_NO_DATA
;

293 
uöt16_t
 
rx_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_RX_STATUS
);

294 
uöt16_t
 
∑ckë_Àngth
 = 
rx_°©us
 & 
_3C509B_RXSTAT_LEN_MASK
;

297 i‡(
rx_°©us
 & (
_3C509B_RXSTAT_ERROR
 | 
_3C509B_RXSTAT_INCOMPLETE
)) {

298 
	`LOG_DEBUG
("RXÉº‹: sètus=0x%X", 
rx_°©us
);

301 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

303 
nic
->
rx_îr‹s
++;

304 *
Àngth
 = 0;

305  
ERROR_IO
;

309 i‡(
∑ckë_Àngth
 > *
Àngth
) {

310 
	`LOG_WARNING
("RX buf„∏toÿsmÆl:Çìd %d, havê%zu", 
∑ckë_Àngth
, *
Àngth
);

313 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

315 *
Àngth
 = 
∑ckë_Àngth
;

316  
ERROR_NO_MEMORY
;

320 
uöt16_t
 
rx_fifo
 = 
nic
->
io_ba£
 + 
_3C509B_RX_FIFO
;

323 
size_t
 
w‹ds
 = 
∑ckë_Àngth
 / 2;

324 
uöt16_t
 *
buf„r_w‹ds
 = (uöt16_t*)
buf„r
;

326 
size_t
 
i
 = 0; i < 
w‹ds
; i++) {

327 
buf„r_w‹ds
[
i
] = 
	`öw
(
rx_fifo
);

331 i‡(
∑ckë_Àngth
 & 1) {

332 
buf„r
[
∑ckë_Àngth
 - 1] = 
	`öb
(
rx_fifo
);

336 
nic
->
rx_∑ckës
++;

337 
nic
->
rx_byãs
 +
∑ckë_Àngth
;

339 *
Àngth
 = 
∑ckë_Àngth
;

341 
	`LOG_TRACE
("Re˚ivedÖackë o‡%d byãs", 
∑ckë_Àngth
);

343  
SUCCESS
;

344 
	}
}

349 
	$_3c509b_ª˚ive_∑ckë_buf„ªd
(
nic_öfo_t
 *
nic
) {

350 
buf„r_desc_t
 *
rx_buf„r
 = 
NULL
;

351 
uöt16_t
 
°©us
, 
rx_°©us
, 
∑ckë_Àngth
;

352 
uöt16_t
 
rx_fifo
;

353 
size_t
 
w‹ds
;

354 
ªsu…
 = 
SUCCESS
;

356 i‡(!
nic
) {

357  
ERROR_INVALID_PARAM
;

361 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

364 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

365 i‡(!(
°©us
 & 
_3C509B_STATUS_RX_COMPLETE
)) {

366  
ERROR_NO_DATA
;

370 
rx_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_RX_STATUS
);

371 
∑ckë_Àngth
 = 
rx_°©us
 & 
_3C509B_RXSTAT_LEN_MASK
;

374 i‡(
rx_°©us
 & (
_3C509B_RXSTAT_ERROR
 | 
_3C509B_RXSTAT_INCOMPLETE
)) {

375 
	`LOG_DEBUG
("RXÉº‹: sètus=0x%X", 
rx_°©us
);

378 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

380 
nic
->
rx_îr‹s
++;

381  
ERROR_IO
;

385 
rx_buf„r
 = 
	`rx_c›ybªak_Æloc
(
∑ckë_Àngth
);

386 i‡(!
rx_buf„r
) {

387 
	`LOG_ERROR
("FaûedÅÿÆloˇã RX buf„∏f‹ %d byãÖackë", 
∑ckë_Àngth
);

390 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

392 
nic
->
rx_dr›≥d
++;

393  
ERROR_NO_MEMORY
;

397 
rx_fifo
 = 
nic
->
io_ba£
 + 
_3C509B_RX_FIFO
;

400 
w‹ds
 = 
∑ckë_Àngth
 / 2;

401 
uöt16_t
 *
buf„r_w‹ds
 = (uöt16_t*)
rx_buf„r
->
d©a
;

403 
size_t
 
i
 = 0; i < 
w‹ds
; i++) {

404 
buf„r_w‹ds
[
i
] = 
	`öw
(
rx_fifo
);

408 i‡(
∑ckë_Àngth
 & 1) {

409 ((
uöt8_t
*)
rx_buf„r
->
d©a
)[
∑ckë_Àngth
 - 1] = 
	`öb
(
rx_fifo
);

413 
rx_buf„r
->
u£d
 = 
∑ckë_Àngth
;

414 
	`buf„r_£t_°©e
(
rx_buf„r
, 
BUFFER_STATE_IN_USE
);

417 i‡(
∑ckë_Àngth
 >= 34) {

418 
checksum_ªsu…
 = 
	`hw_checksum_vîify_öbound_∑ckë
((
uöt8_t
*)
rx_buf„r
->
d©a
, 
∑ckë_Àngth
);

419 i‡(
checksum_ªsu…
 < 0) {

420 
	`LOG_DEBUG
("Checksum verification failed for inboundÖacket");

422 } i‡(
checksum_ªsu…
 > 0) {

423 
	`LOG_DEBUG
("Checksum verificationÖassed for inboundÖacket");

428 
ªsu…
 = 
	`∑ckë_¥o˚ss_ª˚ived
((
uöt8_t
*)
rx_buf„r
->
d©a
, 
∑ckë_Àngth
, 
nic
->
ödex
);

429 i‡(
ªsu…
 !
SUCCESS
) {

430 
	`LOG_WARNING
("PackëÖro˚ssög faûed: %d", 
ªsu…
);

431 
nic
->
rx_dr›≥d
++;

434 
nic
->
rx_∑ckës
++;

435 
nic
->
rx_byãs
 +
∑ckë_Àngth
;

437 
	`LOG_TRACE
("Pro˚s£dÑe˚ivedÖackë o‡%d byãs", 
∑ckë_Àngth
);

441 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

443  
ªsu…
;

444 
	}
}

446 
boﬁ
 
	$_3c509b_check_öãºu±
(
nic_öfo_t
 *
nic
) {

447 i‡(!
nic
) {

448  
Ál£
;

452 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

455  (
°©us
 & 
_3C509B_STATUS_INT_LATCH
) != 0;

456 
	}
}

458 
	$_3c509b_h™dÀ_öãºu±
(
nic_öfo_t
 *
nic
) {

459 i‡(!
nic
) {

464 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

466 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

468 
	`LOG_TRACE
("3C509B i¡îru±: sètus=0x%X", 
°©us
);

471 i‡(
°©us
 & 
_3C509B_STATUS_TX_COMPLETE
) {

473 
	`LOG_TRACE
("TX complete");

476 
uöt16_t
 
tx_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_TX_STATUS
);

479 i‡(
tx_°©us
 & (
_3C509B_TXSTAT_JABBER
 | 
_3C509B_TXSTAT_UNDERRUN
 | 
_3C509B_TXSTAT_MAXCOLL
)) {

480 
	`LOG_DEBUG
("TXÉº‹: sètus=0x%X", 
tx_°©us
);

481 
nic
->
tx_îr‹s
++;

486 i‡(
°©us
 & 
_3C509B_STATUS_RX_COMPLETE
) {

487 
	`LOG_TRACE
("RX complete -Örocessing buffered");

490 
rx_ªsu…
 = 
	`_3c509b_ª˚ive_∑ckë_buf„ªd
(
nic
);

491 i‡(
rx_ªsu…
 !
SUCCESS
 &&Ñx_ªsu… !
ERROR_NO_DATA
) {

492 
	`LOG_DEBUG
("RXÖro˚ssög faûed: %d", 
rx_ªsu…
);

497 i‡(
°©us
 & 
_3C509B_STATUS_ADAPTER_FAILURE
) {

498 
	`LOG_ERROR
("3C509Bádapter failure detected");

501 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

505 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_ACK_INTR
 | (
°©us
 & 0x00FF));

506 
	}
}

514 
	$_3c509b_¥o˚ss_sögÀ_evít
(
nic_öfo_t
 *
nic
, 
öãºu±_evít_ty≥_t
 *
evít_ty≥
) {

515 i‡(!
nic
 || !
evít_ty≥
) {

516  
ERROR_INVALID_PARAM
;

520 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

522 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

527 i‡(
°©us
 & 
_3C509B_STATUS_ADAPTER_FAILURE
) {

528 *
evít_ty≥
 = 
EVENT_TYPE_RX_ERROR
;

529 
	`LOG_ERROR
("3C509Bádapter failure detected");

531 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

534 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_ACK_INTR
 | 
_3C509B_STATUS_ADAPTER_FAILURE
);

540 i‡(
°©us
 & 
_3C509B_STATUS_TX_COMPLETE
) {

541 *
evít_ty≥
 = 
EVENT_TYPE_TX_COMPLETE
;

544 
uöt16_t
 
tx_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_TX_STATUS
);

546 i‡(
tx_°©us
 & (
_3C509B_TXSTAT_JABBER
 | 
_3C509B_TXSTAT_UNDERRUN
 | 
_3C509B_TXSTAT_MAXCOLL
)) {

547 
	`LOG_DEBUG
("TXÉº‹: sètus=0x%X", 
tx_°©us
);

548 
nic
->
tx_îr‹s
++;

549 *
evít_ty≥
 = 
EVENT_TYPE_TX_ERROR
;

553 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_ACK_INTR
 | 
_3C509B_STATUS_TX_COMPLETE
);

559 i‡(
°©us
 & 
_3C509B_STATUS_RX_COMPLETE
) {

560 *
evít_ty≥
 = 
EVENT_TYPE_RX_COMPLETE
;

563 
rx_ªsu…
 = 
	`_3c509b_ª˚ive_∑ckë_buf„ªd
(
nic
);

564 i‡(
rx_ªsu…
 !
SUCCESS
 &&Ñx_ªsu… !
ERROR_NO_DATA
) {

565 
	`LOG_DEBUG
("RXÖro˚ssög faûed: %d", 
rx_ªsu…
);

566 *
evít_ty≥
 = 
EVENT_TYPE_RX_ERROR
;

570 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_ACK_INTR
 | 
_3C509B_STATUS_RX_COMPLETE
);

577 
	}
}

584 
	$_3c509b_check_öãºu±_b©ched
(
nic_öfo_t
 *
nic
) {

585 i‡(!
nic
) {

586  
ERROR_INVALID_PARAM
;

590 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

592 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

595 i‡(
°©us
 & (
_3C509B_STATUS_TX_COMPLETE
 |

596 
_3C509B_STATUS_RX_COMPLETE
 |

597 
_3C509B_STATUS_ADAPTER_FAILURE
)) {

602 
	}
}

609 
	$_3c509b_h™dÀ_öãºu±_b©ched
(
nic_öfo_t
 *
nic
) {

610 
öãºu±_môig©i⁄_c⁄ãxt_t
 *
im_˘x
;

612 i‡(!
nic
 || !nic->
¥iv©e_d©a
) {

613  
ERROR_INVALID_PARAM
;

619 
im_˘x
 = (
öãºu±_môig©i⁄_c⁄ãxt_t
 *)
nic
->
¥iv©e_d©a
;

621 i‡(!
	`is_öãºu±_môig©i⁄_íabÀd
(
im_˘x
)) {

623 
	`_3c509b_h™dÀ_öãºu±
(
nic
);

628  
	`¥o˚ss_b©ched_öãºu±s_3c509b
(
im_˘x
);

629 
	}
}

631 
	$_3c509b_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
) {

632 i‡(!
nic
) {

633  
ERROR_INVALID_PARAM
;

637 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

638 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_INTR_ENB
 |

639 (
_3C509B_IMASK_TX_COMPLETE
 | 
_3C509B_IMASK_RX_COMPLETE
 | 
_3C509B_IMASK_ADAPTER_FAILURE
));

641  
SUCCESS
;

642 
	}
}

644 
	$_3c509b_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
) {

645 i‡(!
nic
) {

646  
ERROR_INVALID_PARAM
;

650 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

651 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_INTR_ENB
 | 0);

653  
SUCCESS
;

654 
	}
}

656 
boﬁ
 
	$_3c509b_gë_lök_°©us
(
nic_öfo_t
 *
nic
) {

657 i‡(!
nic
) {

658  
Ál£
;

662 
lök_°©us
 = 
	`check_medü_lök_°©us
(
nic
);

663 i‡(
lök_°©us
 < 0) {

664 
	`LOG_DEBUG
("Link status check failed, falling backÅo basic detection");

667 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
);

668 
uöt16_t
 
medü_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_W4_NETDIAG
);

671  (
medü_°©us
 & 0x0800) != 0;

674  
lök_°©us
 ? 
åue
 : 
Ál£
;

675 
	}
}

677 
	$_3c509b_gë_lök_•ìd
(
nic_öfo_t
 *
nic
) {

678 i‡(!
nic
) {

684 
	}
}

686 
	$_3c509b_£t_¥omiscuous
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ
) {

687 i‡(!
nic
) {

688  
ERROR_INVALID_PARAM
;

692 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

694 
uöt16_t
 
fûãr
 = 
_3C509B_RX_FILTER_STATION
 | 
_3C509B_RX_FILTER_BROADCAST
;

695 i‡(
íabÀ
) {

696 
fûãr
 |
_3C509B_RX_FILTER_PROM
;

699 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_RX_FILTER
 | 
fûãr
);

701 
	`LOG_DEBUG
("3C509BÖromiscuou†modê%s", 
íabÀ
 ? "enabled" : "disabled");

703  
SUCCESS
;

704 
	}
}

706 
	$_3c509b_£t_mu…iˇ°
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
mc_li°
, 
cou¡
) {

707 i‡(!
nic
) {

708  
ERROR_INVALID_PARAM
;

712 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

714 
uöt16_t
 
fûãr
 = 
_3C509B_RX_FILTER_STATION
 | 
_3C509B_RX_FILTER_BROADCAST
;

715 i‡(
cou¡
 > 0) {

716 
fûãr
 |
_3C509B_RX_FILTER_MULTICAST
;

719 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_RX_FILTER
 | 
fûãr
);

721 
	`LOG_DEBUG
("3C509B mu…iˇ° fûã∏upd©ed wôh %dáddªs£s", 
cou¡
);

723  
SUCCESS
;

724 
	}
}

726 
	$_3c509b_£lf_ã°
(
nic_öfo_t
 *
nic
) {

727 i‡(!
nic
) {

728  
ERROR_INVALID_PARAM
;

731 
	`LOG_DEBUG
("Running 3C509B self-test");

736 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_0
);

738 
uöt16_t
 
‹igöÆ_vÆue
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_W0_CONFIG_CTRL
);

739 
	`_3c509b_wrôe_ªg
(
nic
, 
_3C509B_W0_CONFIG_CTRL
, 0x5AA5);

740 
uöt16_t
 
ã°_vÆue
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_W0_CONFIG_CTRL
);

741 
	`_3c509b_wrôe_ªg
(
nic
, 
_3C509B_W0_CONFIG_CTRL
, 
‹igöÆ_vÆue
);

743 i‡(
ã°_vÆue
 != 0x5AA5) {

744 
	`LOG_ERROR
("3C509BÑegi°îÅe° faûed: wrŸê0x5AA5,Ñód 0x%X", 
ã°_vÆue
);

745  
ERROR_HARDWARE
;

748 
	`LOG_INFO
("3C509B self-testÖassed");

750  
SUCCESS
;

751 
	}
}

754 
uöt16_t
 
	$_3c509b_ªad_ªg
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
ªg
) {

755  
	`öw
(
nic
->
io_ba£
 + 
ªg
);

756 
	}
}

758 
	$_3c509b_wrôe_ªg
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
ªg
, uöt16_à
vÆue
) {

759 
	`outw
(
nic
->
io_ba£
 + 
ªg
, 
vÆue
);

760 
	}
}

762 
	$_3c509b_waô_f‹_comm™d
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
) {

763 
timeout_ms
 > 0) {

764 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

766 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

767  
SUCCESS
;

770 
	`udñay
(1000);

771 
timeout_ms
--;

774 
	`LOG_ERROR
("3C509B commandÅimeout");

775  
ERROR_TIMEOUT
;

776 
	}
}

783 
	$_3c509b_£À˘_wödow
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
wödow
) {

785 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 100);

788 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SELECT_WINDOW
 | 
wödow
);

789 
	}
}

794 
	$_3c509b_waô_f‹_cmd_busy
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
) {

795 
timeout_ms
 > 0) {

796 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

797 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

798  
SUCCESS
;

800 
	`udñay
(1000);

801 
timeout_ms
--;

803  
ERROR_TIMEOUT
;

804 
	}
}

809 
	$_3c509b_wrôe_comm™d
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
comm™d
) {

811 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 100);

814 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
comm™d
);

815 
	}
}

820 
uöt16_t
 
	$_3c509b_ªad_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
addªss
) {

822 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_0
);

825 
	`_3c509b_wrôe_ªg
(
nic
, 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_READ
 | 
addªss
);

828 
	`udñay
(
_3C509B_EEPROM_READ_DELAY
);

831  
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_EEPROM_DATA
);

832 
	}
}

837 
	$_3c509b_wrôe_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
addªss
, 
uöt16_t
 
d©a
) {

839 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_0
);

842 
	`_3c509b_wrôe_ªg
(
nic
, 
_3C509B_EEPROM_DATA
, 
d©a
);

845 
	`_3c509b_wrôe_ªg
(
nic
, 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_WRITE
 | 
addªss
);

848 
	`udñay
(
_3C509B_EEPROM_READ_DELAY
 * 10);

849 
	}
}

854 
	$_3c509b_ªad_mac_‰om_ì¥om
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
mac
) {

855 i‡(!
nic
 || !
mac
) {

856  
ERROR_INVALID_PARAM
;

860 
i
 = 0; i < 3; i++) {

861 
uöt16_t
 
w‹d
 = 
	`_3c509b_ªad_ì¥om
(
nic
, 
i
);

862 
mac
[
i
 * 2] = 
w‹d
 & 0xFF;

863 
mac
[
i
 * 2 + 1] = (
w‹d
 >> 8) & 0xFF;

866 
	`LOG_INFO
("3C509B MACáddress: %02X:%02X:%02X:%02X:%02X:%02X",

867 
mac
[0], mac[1], mac[2], mac[3], mac[4], mac[5]);

869  
SUCCESS
;

870 
	}
}

875 
	$_3c509b_£tup_medü
(
nic_öfo_t
 *
nic
) {

876 i‡(!
nic
) {

877  
ERROR_INVALID_PARAM
;

880 
	`LOG_DEBUG
("Setting up media for 3C509B usingÉnhanced media control");

883 
ªsu…
 = 
	`medü_c⁄åﬁ_öô
(
nic
);

884 i‡(
ªsu…
 !
SUCCESS
) {

885 
	`LOG_ERROR
("FaûedÅÿöôülizêmedü c⁄åﬁ: %d", 
ªsu…
);

886  
ªsu…
;

890 
	`NIC_INFO_INIT_DEFAULTS
(
nic
);

893 
nic
->
medü_ˇ∑bûôõs
 = 
MEDIA_CAPS_3C509B_COMBO
;

894 
nic
->
v¨ü¡_id
 = 
VARIANT_3C509B_COMBO
;

897 i‡(
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_AUTO_SELECT
) {

898 
	`LOG_INFO
("Attemptingáuto-detection for combo card");

900 
medü_dëe˘_c⁄fig_t
 
dëe˘_c⁄fig
 = 
MEDIA_DETECT_CONFIG_DEFAULT
;

901 
medü_ty≥_t
 
dëe˘ed
 = 
	`auto_dëe˘_medü
(
nic
, &
dëe˘_c⁄fig
);

903 i‡(
dëe˘ed
 !
MEDIA_TYPE_UNKNOWN
) {

904 
	`LOG_INFO
("Auto-dëe˘ed medü: %s", 
	`medü_ty≥_to_°rög
(
dëe˘ed
));

905 
nic
->
cuºít_medü
 = 
dëe˘ed
;

906 
nic
->
medü_c⁄fig_sour˚
 = 
MEDIA_CONFIG_AUTO_DETECT
;

908 
	`LOG_WARNING
("Auto-detection failed, using default media");

909 
nic
->
cuºít_medü
 = 
MEDIA_TYPE_10BASE_T
;

910 
nic
->
medü_c⁄fig_sour˚
 = 
MEDIA_CONFIG_DEFAULT
;

914 
nic
->
cuºít_medü
 = 
	`gë_deÁu…_medü_f‹_nic
(nic);

915 
nic
->
medü_c⁄fig_sour˚
 = 
MEDIA_CONFIG_DEFAULT
;

916 
	`LOG_INFO
("Usög deÁu… medü: %s", 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
));

920 i‡(
nic
->
cuºít_medü
 !
MEDIA_TYPE_UNKNOWN
) {

921 
ªsu…
 = 
	`£À˘_medü_å™s˚ivî
(
nic
,Çic->
cuºít_medü
, 0);

922 i‡(
ªsu…
 !
SUCCESS
) {

923 
	`LOG_ERROR
("FailedÅo configure media %s: %d",

924 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
), 
ªsu…
);

927 i‡(
nic
->
cuºít_medü
 !
MEDIA_TYPE_10BASE_T
 &&

928 
	`is_medü_suµ‹ãd_by_nic
(
nic
, 
MEDIA_TYPE_10BASE_T
)) {

929 
	`LOG_INFO
("Falling backÅo 10BaseT");

930 
ªsu…
 = 
	`£À˘_medü_å™s˚ivî
(
nic
, 
MEDIA_TYPE_10BASE_T
,

931 
MEDIA_CTRL_FLAG_FORCE
);

932 i‡(
ªsu…
 =
SUCCESS
) {

933 
nic
->
cuºít_medü
 = 
MEDIA_TYPE_10BASE_T
;

934 
nic
->
medü_c⁄fig_sour˚
 = 
MEDIA_CONFIG_DRIVER_FORCED
;

940 i‡(
ªsu…
 !
SUCCESS
) {

941 
	`LOG_ERROR
("Media setup failed completely");

942  
ªsu…
;

946 
lök_ã°_ªsu…_t
 
ã°_ªsu…
;

947 
ªsu…
 = 
	`ã°_lök_bót
(
nic
,Çic->
cuºít_medü
, 2000, &
ã°_ªsu…
);

948 i‡(
ªsu…
 =
SUCCESS
) {

949 
	`LOG_INFO
("MedüÜökÅe°Öas£d: quÆôy=%d%%", 
ã°_ªsu…
.
sig«l_quÆôy
);

950 
nic
->
medü_dëe˘i⁄_°©e
 |
MEDIA_DETECT_COMPLETED
;

952 
	`LOG_WARNING
("MediaÜinkÅest failed, but continuing");

953 
nic
->
medü_dëe˘i⁄_°©e
 |
MEDIA_DETECT_FAILED
;

956 
	`LOG_INFO
("3C509B medü sëu∞com∂ëe: %s", 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
));

957  
SUCCESS
;

958 
	}
}

963 
	$_3c509b_£tup_rx_fûãr
(
nic_öfo_t
 *
nic
) {

964 i‡(!
nic
) {

965  
ERROR_INVALID_PARAM
;

969 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

972 
uöt16_t
 
fûãr
 = 
_3C509B_RX_FILTER_STATION
 | 
_3C509B_RX_FILTER_BROADCAST
;

973 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_SET_RX_FILTER
 | 
fûãr
);

976 
	`_3c509b_waô_f‹_cmd_busy
(
nic
, 1000);

979 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_2
);

982 
i
 = 0; i < 
ETH_ALEN
; i++) {

983 
	`_3c509b_wrôe_ªg
(
nic
, 
i
,Çic->
mac
[i]);

986 
	`LOG_DEBUG
("3C509B RX filteránd stationáddress configured");

988  
SUCCESS
;

989 
	}
}

997 
dúe˘_pio_outsw
(c⁄° * 
§c_buf„r
, 
uöt16_t
 
d°_p‹t
, uöt16_à
w‹d_cou¡
);

998 
£nd_∑ckë_dúe˘_pio_asm
(c⁄° * 
°ack_buf„r
, 
uöt16_t
 
Àngth
, uöt16_à
io_ba£
);

999 
dúe˘_pio_hódî_™d_∑ylﬂd
(
uöt16_t
 
io_p‹t
, c⁄° 
uöt8_t
* 
de°_mac
,

1000 c⁄° 
uöt8_t
* 
§c_mac
, 
uöt16_t
 
ëhîty≥
,

1001 c⁄° * 
∑ylﬂd
, 
uöt16_t
 
∑ylﬂd_Àn
);

1010 
	$£nd_∑ckë_dúe˘_pio
(c⁄° * 
°ack_buf„r
, 
uöt16_t
 
Àngth
, uöt16_à
io_ba£
) {

1011 
uöt16_t
 
tx_fifo
;

1013 i‡(!
°ack_buf„r
 || 
Àngth
 =0 ||Üígth > 
_3C509B_MAX_MTU
) {

1014 
	`LOG_ERROR
("InvalidÖarameters for direct PIO send");

1015  
ERROR_INVALID_PARAM
;

1019 
tx_fifo
 = 
io_ba£
 + 
_3C509B_TX_FIFO
;

1022 
	`outw
(
tx_fifo
, 
Àngth
);

1025 i‡(
	`should_u£_íh™˚d_pio
(
Àngth
)) {

1027  
	`£nd_∑ckë_dúe˘_pio_íh™˚d
(
°ack_buf„r
, 
Àngth
, 
io_ba£
);

1028 } i‡(
Àngth
 >= 32) {

1030  
	`£nd_∑ckë_dúe˘_pio_asm
(
°ack_buf„r
, 
Àngth
, 
io_ba£
);

1033 
size_t
 
w‹ds
 = 
Àngth
 / 2;

1034 c⁄° 
uöt16_t
 *
∑ckë_w‹ds
 = (c⁄° uöt16_t*)
°ack_buf„r
;

1036 
size_t
 
i
 = 0; i < 
w‹ds
; i++) {

1037 
	`outw
(
tx_fifo
, 
∑ckë_w‹ds
[
i
]);

1041 i‡(
Àngth
 & 1) {

1042 c⁄° 
uöt8_t
 *
∑ckë_byãs
 = (c⁄° uöt8_t*)
°ack_buf„r
;

1043 
	`outb
(
tx_fifo
, 
∑ckë_byãs
[
Àngth
 - 1]);

1046  
SUCCESS
;

1048 
	}
}

1059 
	$£nd_∑ckë_dúe˘_pio_wôh_hódî
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
de°_mac
,

1060 
uöt16_t
 
ëhîty≥
, c⁄° * 
∑ylﬂd
, uöt16_à
∑ylﬂd_Àn
) {

1061 
uöt16_t
 
tŸÆ_Àngth
, 
tx_fifo
;

1063 i‡(!
nic
 || !
de°_mac
 || !
∑ylﬂd
 || 
∑ylﬂd_Àn
 == 0) {

1064  
ERROR_INVALID_PARAM
;

1068 
tŸÆ_Àngth
 = 
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
;

1069 i‡(
tŸÆ_Àngth
 > 
nic
->
mtu
) {

1070 
	`LOG_ERROR
("Fømêtoÿœrge: %d > %d", 
tŸÆ_Àngth
, 
nic
->
mtu
);

1071  
ERROR_INVALID_PARAM
;

1075 i‡(
tŸÆ_Àngth
 < 
ETH_MIN_FRAME
) {

1076 
tŸÆ_Àngth
 = 
ETH_MIN_FRAME
;

1080 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

1083 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

1084 i‡(!(
°©us
 & 
_3C509B_STATUS_TX_AVAILABLE
)) {

1085 
	`LOG_DEBUG
("TXÇŸávaûabÀ, sètus=0x%X", 
°©us
);

1086  
ERROR_BUSY
;

1090 
uöt16_t
 
tx_‰ì
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_TX_FREE
);

1091 i‡(
tx_‰ì
 < 
tŸÆ_Àngth
) {

1092 
	`LOG_DEBUG
("Insufficõ¡ TX FIFO s∑˚:Çìd %d, havê%d", 
tŸÆ_Àngth
, 
tx_‰ì
);

1093  
ERROR_BUSY
;

1097 
tx_fifo
 = 
nic
->
io_ba£
 + 
_3C509B_TX_FIFO
;

1100 
	`outw
(
tx_fifo
, 
tŸÆ_Àngth
);

1103 
	`dúe˘_pio_hódî_™d_∑ylﬂd
(
tx_fifo
, 
de°_mac
, 
nic
->
mac
, 
ëhîty≥
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1106 
uöt16_t
 
a˘uÆ_Àngth
 = 
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
;

1107 i‡(
a˘uÆ_Àngth
 < 
ETH_MIN_FRAME
) {

1108 
uöt16_t
 
∑d_byãs
 = 
ETH_MIN_FRAME
 - 
a˘uÆ_Àngth
;

1109 
uöt16_t
 
∑d_w‹ds
 = 
∑d_byãs
 / 2;

1112 
uöt16_t
 
i
 = 0; i < 
∑d_w‹ds
; i++) {

1113 
	`outw
(
tx_fifo
, 0);

1117 i‡(
∑d_byãs
 & 1) {

1118 
	`outb
(
tx_fifo
, 0);

1123 
nic
->
tx_∑ckës
++;

1124 
nic
->
tx_byãs
 +
tŸÆ_Àngth
;

1126 
	`LOG_TRACE
("Síà∑ckë o‡%d byã†vü dúe˘ PIO wôh hódî", 
tŸÆ_Àngth
);

1128  
SUCCESS
;

1129 
	}
}

1138 
	$_3c509b_£nd_∑ckë_dúe˘_pio
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
) {

1139 i‡(!
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

1140  
ERROR_INVALID_PARAM
;

1143 i‡(
Àngth
 > 
nic
->
mtu
) {

1144 
	`LOG_ERROR
("PackëÅoÿœrge: %zu > %d", 
Àngth
, 
nic
->
mtu
);

1145  
ERROR_INVALID_PARAM
;

1149 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

1152 
uöt16_t
 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

1153 i‡(!(
°©us
 & 
_3C509B_STATUS_TX_AVAILABLE
)) {

1154 
	`LOG_DEBUG
("TXÇŸávaûabÀ, sètus=0x%X", 
°©us
);

1155  
ERROR_BUSY
;

1159 
uöt16_t
 
tx_‰ì
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_TX_FREE
);

1160 i‡(
tx_‰ì
 < (
uöt16_t
)
Àngth
) {

1161 
	`LOG_DEBUG
("Insufficõ¡ TX FIFO s∑˚:Çìd %zu, havê%d", 
Àngth
, 
tx_‰ì
);

1162  
ERROR_BUSY
;

1166 
uöt8_t
 *
tx_∑ckë
 = (uöt8_à*)
∑ckë
;

1167 i‡(
Àngth
 >= 34) {

1168 
checksum_ªsu…
 = 
	`hw_checksum_¥o˚ss_outbound_∑ckë
(
tx_∑ckë
, 
Àngth
);

1169 i‡(
checksum_ªsu…
 != 0) {

1170 
	`LOG_DEBUG
("Checksum calculation completed for outboundÖacket");

1179 
ªsu…
 = 
	`£nd_∑ckë_dúe˘_pio
(
∑ckë
, (
uöt16_t
)
Àngth
, 
nic
->
io_ba£
);

1180 i‡(
ªsu…
 !
SUCCESS
) {

1181 
	`LOG_ERROR
("Dúe˘ PIOÅønsmissi⁄ faûed: %d", 
ªsu…
);

1182  
ªsu…
;

1186 
nic
->
tx_∑ckës
++;

1187 
nic
->
tx_byãs
 +
Àngth
;

1189 
	`LOG_TRACE
("Síà∑ckë o‡%zu byã†vü dúe˘ PIO", 
Àngth
);

1191  
SUCCESS
;

1192 
	}
}

1204 
	$_3c509b_öôülize_ˇche_cohîícy
(
nic_öfo_t
 *
nic
) {

1205 
cohîícy_™Æysis_t
 
™Æysis
;

1206 
chù£t_dëe˘i⁄_ªsu…_t
 
chù£t_ªsu…
;

1208 i‡(!
nic
) {

1209 
	`LOG_ERROR
("Invalid NICÖointer for cache coherency initialization");

1210  
ERROR_INVALID_PARAM
;

1213 
	`LOG_INFO
("Initializing cache coherency management for 3C509B...");

1216 
™Æysis
 = 
	`≥rf‹m_com∂ëe_cohîícy_™Æysis
();

1218 i‡(
™Æysis
.
£À˘ed_tõr
 =
TIER_DISABLE_BUS_MASTER
) {

1219 
	`LOG_WARNING
("Cache coherencyánalysisÑecommends disabling bus mastering");

1220 
	`LOG_WARNING
("3C509B uses PIO-only operation -Åhis is optimal forÅhis system");

1221 
nic
->
°©us
 |
NIC_STATUS_CACHE_COHERENCY_OK
;

1222  
SUCCESS
;

1226 
chù£t_ªsu…
 = 
	`dëe˘_sy°em_chù£t
();

1229 
boﬁ
 
ˇche_öô_ªsu…
 = 
	`öôülize_ˇche_m™agemít
(
™Æysis
.
£À˘ed_tõr
);

1230 i‡(!
ˇche_öô_ªsu…
) {

1231 
	`LOG_ERROR
("FailedÅo initialize cache management system");

1232  
ERROR_HARDWARE
;

1236 
boﬁ
 
ªc‹d_ªsu…
 = 
	`ªc‹d_chù£t_ã°_ªsu…
(&
™Æysis
, &
chù£t_ªsu…
);

1237 i‡(!
ªc‹d_ªsu…
) {

1238 
	`LOG_WARNING
("FailedÅoÑecordÅestÑesults in chipset database");

1242 
nic
->
ˇche_cohîícy_tõr
 = 
™Æysis
.
£À˘ed_tõr
;

1243 
nic
->
ˇche_m™agemít_avaûabÀ
 = 
åue
;

1244 
nic
->
°©us
 |
NIC_STATUS_CACHE_COHERENCY_OK
;

1246 
	`LOG_INFO
("Cache coherency initialized:Åier %d, confidence %d%%",

1247 
™Æysis
.
£À˘ed_tõr
,á«lysis.
c⁄fidí˚
);

1250 i‡(
	`should_of„r_≥rf‹m™˚_guid™˚
(&
™Æysis
)) {

1251 
	`di•œy_≥rf‹m™˚_›p‹tunôy_™Æysis
();

1254  
SUCCESS
;

1255 
	}
}

1262 
	$_3c509b_dma_¥ï¨e_buf„rs
(*
buf„r
, 
size_t
 
Àngth
) {

1263 
dma_›î©i⁄_t
 
›î©i⁄
;

1265 i‡(!
buf„r
 || 
Àngth
 == 0) {

1270 
›î©i⁄
.
buf„r
 = buffer;

1271 
›î©i⁄
.
Àngth
 =Üength;

1272 
›î©i⁄
.
dúe˘i⁄
 = 
DMA_DIRECTION_FROM_DEVICE
;

1273 
›î©i⁄
.
devi˚_ty≥
 = 
DMA_DEVICE_NETWORK
;

1276 
	`ˇche_m™agemít_dma_¥ï¨e
(&
›î©i⁄
);

1277 
	}
}

1284 
	$_3c509b_dma_com∂ëe_buf„rs
(*
buf„r
, 
size_t
 
Àngth
) {

1285 
dma_›î©i⁄_t
 
›î©i⁄
;

1287 i‡(!
buf„r
 || 
Àngth
 == 0) {

1292 
›î©i⁄
.
buf„r
 = buffer;

1293 
›î©i⁄
.
Àngth
 =Üength;

1294 
›î©i⁄
.
dúe˘i⁄
 = 
DMA_DIRECTION_FROM_DEVICE
;

1295 
›î©i⁄
.
devi˚_ty≥
 = 
DMA_DEVICE_NETWORK
;

1298 
	`ˇche_m™agemít_dma_com∂ëe
(&
›î©i⁄
);

1299 
	}
}

1310 
	$_3c509b_ª˚ive_∑ckë_ˇche_ß„
(
nic_öfo_t
 *
nic
) {

1311 
buf„r_desc_t
 *
rx_buf„r
 = 
NULL
;

1312 
uöt16_t
 
°©us
, 
rx_°©us
, 
∑ckë_Àngth
;

1313 
uöt16_t
 
rx_fifo
;

1314 
size_t
 
w‹ds
;

1315 
ªsu…
 = 
SUCCESS
;

1317 i‡(!
nic
) {

1318  
ERROR_INVALID_PARAM
;

1322 i‡(!
nic
->
ˇche_m™agemít_avaûabÀ
) {

1323 
	`LOG_DEBUG
("Cache managementÇotávailable, usingÜegacyÑeceive");

1324  
	`_3c509b_ª˚ive_∑ckë_buf„ªd
(
nic
);

1328 
	`_3c509b_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_1
);

1331 
°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_STATUS_REG
);

1332 i‡(!(
°©us
 & 
_3C509B_STATUS_RX_COMPLETE
)) {

1333  
ERROR_NO_DATA
;

1337 
rx_°©us
 = 
	`_3c509b_ªad_ªg
(
nic
, 
_3C509B_RX_STATUS
);

1338 
∑ckë_Àngth
 = 
rx_°©us
 & 
_3C509B_RXSTAT_LEN_MASK
;

1341 i‡(
rx_°©us
 & (
_3C509B_RXSTAT_ERROR
 | 
_3C509B_RXSTAT_INCOMPLETE
)) {

1342 
	`LOG_DEBUG
("RXÉº‹: sètus=0x%X", 
rx_°©us
);

1343 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

1344 
nic
->
rx_îr‹s
++;

1345  
ERROR_IO
;

1349 
rx_buf„r
 = 
	`rx_c›ybªak_Æloc
(
∑ckë_Àngth
);

1350 i‡(!
rx_buf„r
) {

1351 
	`LOG_ERROR
("FaûedÅÿÆloˇã cache-ß„ RX buf„∏f‹ %d byãÖackë", 
∑ckë_Àngth
);

1352 
	`_3c509b_wrôe_comm™d
(
nic
, 
_3C509B_CMD_RX_DISCARD
);

1353 
nic
->
rx_dr›≥d
++;

1354  
ERROR_NO_MEMORY
;

1358 
	`_3c509b_dma_¥ï¨e_buf„rs
(
rx_buf„r
->
d©a
, 
∑ckë_Àngth
);

1361 
rx_fifo
 = 
nic
->
io_ba£
 + 
_3C509B_RX_FIFO
;

1362 
w‹ds
 = 
∑ckë_Àngth
 / 2;

1363 
uöt16_t
 *
buf„r_w‹ds
 = (uöt16_t*)
rx_buf„r
->
d©a
;

1365 
size_t
 
i
 = 0; i < 
w‹ds
; i++) {

1366 
buf„r_w‹ds
[
i
] = 
	`öw
(
rx_fifo
);

1369 i‡(
∑ckë_Àngth
 & 1) {

1370 ((
uöt8_t
*)
rx_buf„r
->
d©a
)[
∑ckë_Àngth
 - 1] = 
	`öb
(
rx_fifo
);

1374 
	`_3c509b_dma_com∂ëe_buf„rs
(
rx_buf„r
->
d©a
, 
∑ckë_Àngth
);

1377 
rx_buf„r
->
u£d
 = 
∑ckë_Àngth
;

1378 
	`buf„r_£t_°©e
(
rx_buf„r
, 
BUFFER_STATE_IN_USE
);

1381 i‡(
∑ckë_Àngth
 >= 34) {

1382 
checksum_ªsu…
 = 
	`hw_checksum_vîify_öbound_∑ckë
((
uöt8_t
*)
rx_buf„r
->
d©a
, 
∑ckë_Àngth
);

1383 i‡(
checksum_ªsu…
 < 0) {

1384 
	`LOG_DEBUG
("Checksum verification failed for inboundÖacket");

1389 
ªsu…
 = 
	`∑ckë_¥o˚ss_ª˚ived
((
uöt8_t
*)
rx_buf„r
->
d©a
, 
∑ckë_Àngth
, 
nic
->
ödex
);

1390 i‡(
ªsu…
 !
SUCCESS
) {

1391 
	`LOG_WARNING
("PackëÖro˚ssög faûed: %d", 
ªsu…
);

1392 
nic
->
rx_dr›≥d
++;

1394 
nic
->
rx_∑ckës
++;

1395 
nic
->
rx_byãs
 +
∑ckë_Àngth
;

1396 
	`LOG_TRACE
("Pro˚s£d cache-ß„Ñe˚ivedÖackë o‡%d byãs", 
∑ckë_Àngth
);

1400 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

1402  
ªsu…
;

1403 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/3c515.c

23 
	~"3c515.h
"

24 
	~"ì¥om.h
"

25 
	~"medü_c⁄åﬁ.h
"

26 
	~"íh™˚d_rög_c⁄ãxt.h
"

27 
	~"îr‹_h™dlög.h
"

28 
	~"loggög.h
"

29 
	~"öãºu±_môig©i⁄.h
"

30 
	~"../ö˛ude/hw_checksum.h
"

31 
	~"../ö˛ude/dma.h
"

32 
	~"../ö˛ude/ˇche_cohîícy.h
"

33 
	~"../ö˛ude/ˇche_m™agemít.h
"

34 
	~"../ö˛ude/chù£t_dëe˘.h
"

35 
	~"../ö˛ude/chù£t_d©aba£.h
"

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

39 
	#TX_RING_SIZE
 16

40 
	#RX_RING_SIZE
 16

41 
	#BUFFER_SIZE
 1600

42 
	#EEPROM_SIZE
 0x40

43 

	)

45 
	#RESET_TIMEOUT_MS
 1000

	)

46 
	#CONFIG_STABILIZATION_MS
 100

	)

47 
	#LINK_CHECK_INTERVAL_MS
 500

	)

48 
	#STATS_UPDATE_INTERVAL_MS
 1000

	)

49 
	#CONFIG_VALIDATION_INTERVAL_MS
 5000

	)

52 
	#DUPLEX_HALF
 0

	)

53 
	#DUPLEX_FULL
 1

	)

54 
	#DUPLEX_AUTO
 2

	)

57 
	#SPEED_10MBPS
 10

	)

58 
	#SPEED_100MBPS
 100

	)

59 
	#SPEED_AUTO
 0

	)

65 
uöt8_t
 
	mmedü_ty≥
;

66 
uöt8_t
 
	mdu∂ex_mode
;

67 
uöt8_t
 
	må™s˚ivî_ty≥
;

68 
uöt16_t
 
	mlök_•ìd
;

69 
uöt8_t
 
	mlök_a˘ive
;

70 
uöt8_t
 
	mauto_√gŸüti⁄
;

71 
uöt16_t
 
	madvîti£d_modes
;

72 } 
	tmedü_c⁄fig_t
;

79 
uöt16_t
 
	mio_ba£
;

80 
uöt8_t
 
	múq
;

83 
_3c515_tx_tx_desc_t
 *
	mtx_desc_rög
;

84 
_3c515_tx_rx_desc_t
 *
	mrx_desc_rög
;

85 
uöt32_t
 
	mtx_ödex
;

86 
uöt32_t
 
	mrx_ödex
;

87 
uöt8_t
 *
	mbuf„rs
;

90 
ì¥om_c⁄fig_t
 
	mì¥om_c⁄fig
;

91 
medü_c⁄fig_t
 
	mmedü_c⁄fig
;

94 
uöt8_t
 
	mh¨dw¨e_ªady
;

95 
uöt8_t
 
	mdrivî_a˘ive
;

96 
uöt32_t
 
	mœ°_c⁄fig_vÆid©i⁄
;

97 
uöt32_t
 
	mœ°_°©s_upd©e
;

98 
uöt32_t
 
	mœ°_lök_check
;

101 
uöt32_t
 
	mtx_∑ckës
;

102 
uöt32_t
 
	mrx_∑ckës
;

103 
uöt32_t
 
	mtx_byãs
;

104 
uöt32_t
 
	mrx_byãs
;

105 
uöt32_t
 
	mtx_îr‹s
;

106 
uöt32_t
 
	mrx_îr‹s
;

107 
uöt32_t
 
	mlök_ch™ges
;

108 
uöt32_t
 
	mc⁄fig_îr‹s
;

111 
uöt16_t
 
	möãºu±_mask
;

112 
uöt8_t
 
	mfuŒ_du∂ex_íabÀd
;

113 
uöt8_t
 
	mdma_íabÀd
;

114 
uöt8_t
 
	m°©s_íabÀd
;

115 
uöt8_t
 
	mlök_m⁄ô‹ög_íabÀd
;

118 
nic_c⁄ãxt_t
 *
	mîr‹_c⁄ãxt
;

121 
uöt8_t
 
	mˇche_cohîícy_tõr
;

122 
uöt8_t
 
	mˇche_m™agemít_avaûabÀ
;

123 
cohîícy_™Æysis_t
 
	mcohîícy_™Æysis
;

124 } 
	tnic_c⁄ãxt_t
;

127 
ªad_™d_∑r£_ì¥om
(
nic_c⁄ãxt_t
 *
˘x
);

128 
c⁄figuª_medü_ty≥
(
nic_c⁄ãxt_t
 *
˘x
, 
medü_c⁄fig_t
 *
medü
);

129 
c⁄figuª_fuŒ_du∂ex
(
nic_c⁄ãxt_t
 *
˘x
);

130 
£tup_öãºu±_mask
(
nic_c⁄ãxt_t
 *
˘x
);

131 
c⁄figuª_bus_ma°î_dma
(
nic_c⁄ãxt_t
 *
˘x
);

132 
íabÀ_h¨dw¨e_°©i°ics
(
nic_c⁄ãxt_t
 *
˘x
);

133 
£tup_lök_m⁄ô‹ög
(
nic_c⁄ãxt_t
 *
˘x
);

134 
vÆid©e_h¨dw¨e_c⁄figuøti⁄
(
nic_c⁄ãxt_t
 *
˘x
);

135 
ª£t_nic_h¨dw¨e
(
nic_c⁄ãxt_t
 *
˘x
);

136 
dñay_mûli£c⁄ds
(
uöt32_t
 
ms
);

137 
uöt32_t
 
gë_sy°em_time_ms
();

140 
mii_ªad_ªgi°î
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt8_t
 
phy_addr
, uöt8_à
ªg_addr
);

141 
mii_wrôe_ªgi°î
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt8_t
 
phy_addr
, uöt8_à
ªg_addr
, 
uöt16_t
 
vÆue
);

142 
°¨t_aut⁄egŸüti⁄
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
advîti£d_modes
);

143 
check_aut⁄egŸüti⁄_com∂ëe
(
nic_c⁄ãxt_t
 *
˘x
);

144 
gë_aut⁄egŸüti⁄_ªsu…
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
•ìd
, 
boﬁ
 *
fuŒ_du∂ex
);

145 
c⁄figuª_mii_å™s˚ivî
(
nic_c⁄ãxt_t
 *
˘x
);

148 
_3c515_öôülize_ˇche_cohîícy
(
nic_c⁄ãxt_t
 *
˘x
);

149 
_3c515_dma_¥ï¨e_buf„rs
(*
buf„r
, 
size_t
 
Àngth
, 
boﬁ
 
is_ª˚ive
);

150 
_3c515_dma_com∂ëe_buf„rs
(*
buf„r
, 
size_t
 
Àngth
, 
boﬁ
 
is_ª˚ive
);

153 
	#MII_CONTROL_REG
 0x00

	)

154 
	#MII_STATUS_REG
 0x01

	)

155 
	#MII_PHY_ID1_REG
 0x02

	)

156 
	#MII_PHY_ID2_REG
 0x03

	)

157 
	#MII_AUTONEG_ADV_REG
 0x04

	)

158 
	#MII_AUTONEG_LINK_REG
 0x05

	)

159 
	#MII_AUTONEG_EXP_REG
 0x06

	)

162 
	#MII_CTRL_RESET
 0x8000

	)

163 
	#MII_CTRL_LOOPBACK
 0x4000

	)

164 
	#MII_CTRL_SPEED_100
 0x2000

	)

165 
	#MII_CTRL_AUTONEG_EN
 0x1000

	)

166 
	#MII_CTRL_POWER_DOWN
 0x0800

	)

167 
	#MII_CTRL_ISOLATE
 0x0400

	)

168 
	#MII_CTRL_RESTART_AN
 0x0200

	)

169 
	#MII_CTRL_FULL_DUPLEX
 0x0100

	)

170 
	#MII_CTRL_COLLISION_TEST
 0x0080

	)

173 
	#MII_STAT_100_T4
 0x8000

	)

174 
	#MII_STAT_100_TX_FD
 0x4000

	)

175 
	#MII_STAT_100_TX_HD
 0x2000

	)

176 
	#MII_STAT_10_FD
 0x1000

	)

177 
	#MII_STAT_10_HD
 0x0800

	)

178 
	#MII_STAT_AUTONEG_COMP
 0x0020

	)

179 
	#MII_STAT_REMOTE_FAULT
 0x0010

	)

180 
	#MII_STAT_AUTONEG_CAP
 0x0008

	)

181 
	#MII_STAT_LINK_UP
 0x0004

	)

182 
	#MII_STAT_JABBER
 0x0002

	)

183 
	#MII_STAT_EXTENDED
 0x0001

	)

186 
	#MII_ADV_NEXT_PAGE
 0x8000

	)

187 
	#MII_ADV_REMOTE_FAULT
 0x2000

	)

188 
	#MII_ADV_PAUSE
 0x0400

	)

189 
	#MII_ADV_100_T4
 0x0200

	)

190 
	#MII_ADV_100_TX_FD
 0x0100

	)

191 
	#MII_ADV_100_TX_HD
 0x0080

	)

192 
	#MII_ADV_10_FD
 0x0040

	)

193 
	#MII_ADV_10_HD
 0x0020

	)

194 
	#MII_ADV_SELECTOR_FIELD
 0x001F

	)

197 
	#_3C515_W4_PHY_CTRL
 0x08

	)

198 
	#_3C515_W4_PHY_STATUS
 0x0A

	)

199 
	#_3C515_W4_PHY_ID_LOW
 0x0C

	)

200 
	#_3C515_W4_PHY_ID_HIGH
 0x0E

	)

203 
	#PHY_CTRL_MGMT_CLK
 0x0001

	)

204 
	#PHY_CTRL_MGMT_DATA
 0x0002

	)

205 
	#PHY_CTRL_MGMT_DIR
 0x0004

	)

206 
	#PHY_CTRL_MGMT_OE
 0x0008

	)

209 
	#DMA_DESC_ALIGNMENT
 16

	)

210 
	#DMA_BUFFER_ALIGNMENT
 4

	)

211 
	#MAX_DMA_FRAGMENT_SIZE
 1536

	)

212 
	#DMA_COHERENCY_SYNC
 0x0001

	)

215 
nic_c⁄ãxt_t
 
	gg_nic_c⁄ãxt
;

216 
boﬁ
 
	gg_drivî_öôülized
 = 
Ál£
;

219 *
	$Æloˇã_des¸ùt‹_rög
(
size
, 
size_t
 
desc_size
) {

220 *
rög
 = 
	`mÆloc
(
size
 * 
desc_size
);

221 i‡(
rög
) {

222 
	`mem£t
(
rög
, 0, 
size
 * 
desc_size
);

224  
rög
;

225 
	}
}

237 
	$com∂ëe_3c515_öôüliz©i⁄
(
nic_c⁄ãxt_t
 *
˘x
) {

238 
ªsu…
;

239 
medü_c⁄fig_t
 
medü
;

241 i‡(!
˘x
) {

242 
	`LOG_ERROR
("Invalid NIC context for initialization");

246 
	`LOG_INFO
("Starting complete 3C515-TX hardware initialization");

249 
	`mem£t
(&
medü
, 0, (
medü_c⁄fig_t
));

252 
	`LOG_DEBUG
("Step 1: Reading EEPROM configuration");

253 
ªsu…
 = 
	`ªad_™d_∑r£_ì¥om
(
˘x
);

254 i‡(
ªsu…
 < 0) {

255 
	`LOG_ERROR
("FaûedÅÿªad EEPROM c⁄figuøti⁄: %d", 
ªsu…
);

256 
˘x
->
c⁄fig_îr‹s
++;

257  
ªsu…
;

261 
	`LOG_DEBUG
("Step 2: Resetting hardware");

262 
ªsu…
 = 
	`ª£t_nic_h¨dw¨e
(
˘x
);

263 i‡(
ªsu…
 < 0) {

264 
	`LOG_ERROR
("FaûedÅÿª£àNIC h¨dw¨e: %d", 
ªsu…
);

265 
˘x
->
c⁄fig_îr‹s
++;

266  
ªsu…
;

270 
	`LOG_DEBUG
("Step 3: Configuring MIIÅransceiverándáuto-negotiation");

271 
ªsu…
 = 
	`c⁄figuª_mii_å™s˚ivî
(
˘x
);

272 i‡(
ªsu…
 < 0) {

273 
	`LOG_ERROR
("FaûedÅÿc⁄figuª MIIÅøns˚ivî: %d", 
ªsu…
);

274 
˘x
->
c⁄fig_îr‹s
++;

275  
ªsu…
;

279 
	`LOG_DEBUG
("Step 4: Configuring mediaÅype");

280 
ªsu…
 = 
	`c⁄figuª_medü_ty≥
(
˘x
, &
medü
);

281 i‡(
ªsu…
 < 0) {

282 
	`LOG_ERROR
("FaûedÅÿc⁄figuª medüÅy≥: %d", 
ªsu…
);

283 
˘x
->
c⁄fig_îr‹s
++;

284  
ªsu…
;

288 
	`LOG_DEBUG
("Step 4: Configuring full-duplex support");

289 i‡(
medü
.
du∂ex_mode
 =
DUPLEX_FULL
) {

290 
ªsu…
 = 
	`c⁄figuª_fuŒ_du∂ex
(
˘x
);

291 i‡(
ªsu…
 < 0) {

292 
	`LOG_WARNING
("FaûedÅÿc⁄figuª fuŒ-du∂ex: %d", 
ªsu…
);

294 
medü
.
du∂ex_mode
 = 
DUPLEX_HALF
;

299 
	`LOG_DEBUG
("Step 5: Setting up interrupt mask");

300 
ªsu…
 = 
	`£tup_öãºu±_mask
(
˘x
);

301 i‡(
ªsu…
 < 0) {

302 
	`LOG_ERROR
("FaûedÅÿ£tu∞öãºu± mask: %d", 
ªsu…
);

303 
˘x
->
c⁄fig_îr‹s
++;

304  
ªsu…
;

308 
	`LOG_DEBUG
("Step 6: Configuring bus master DMA");

309 
ªsu…
 = 
	`c⁄figuª_bus_ma°î_dma
(
˘x
);

310 i‡(
ªsu…
 < 0) {

311 
	`LOG_ERROR
("FaûedÅÿc⁄figuª bu†ma°î DMA: %d", 
ªsu…
);

312 
˘x
->
c⁄fig_îr‹s
++;

313  
ªsu…
;

317 
	`LOG_DEBUG
("Step 7: Enabling hardware statistics");

318 
ªsu…
 = 
	`íabÀ_h¨dw¨e_°©i°ics
(
˘x
);

319 i‡(
ªsu…
 < 0) {

320 
	`LOG_WARNING
("FaûedÅÿíabÀ h¨dw¨ê°©i°ics: %d", 
ªsu…
);

325 
	`LOG_DEBUG
("Step 8: Setting upÜink monitoring");

326 
ªsu…
 = 
	`£tup_lök_m⁄ô‹ög
(
˘x
);

327 i‡(
ªsu…
 < 0) {

328 
	`LOG_WARNING
("FaûedÅÿ£tu∞lök m⁄ô‹ög: %d", 
ªsu…
);

333 
	`LOG_DEBUG
("Step 9: Initializing cache coherency management");

334 
ªsu…
 = 
	`_3c515_öôülize_ˇche_cohîícy
(
˘x
);

335 i‡(
ªsu…
 < 0) {

336 
	`LOG_ERROR
("Cachêcohîícy inôüliz©i⁄ faûed: %d", 
ªsu…
);

337 
˘x
->
c⁄fig_îr‹s
++;

338  
ªsu…
;

342 
	`LOG_DEBUG
("Step 10: Validating hardware configuration");

343 
ªsu…
 = 
	`vÆid©e_h¨dw¨e_c⁄figuøti⁄
(
˘x
);

344 i‡(
ªsu…
 < 0) {

345 
	`LOG_ERROR
("H¨dw¨êc⁄figuøti⁄ vÆid©i⁄ faûed: %d", 
ªsu…
);

346 
˘x
->
c⁄fig_îr‹s
++;

347  
ªsu…
;

351 
˘x
->
medü_c⁄fig
 = 
medü
;

352 
˘x
->
h¨dw¨e_ªady
 = 1;

353 
˘x
->
drivî_a˘ive
 = 1;

354 
˘x
->
œ°_c⁄fig_vÆid©i⁄
 = 
	`gë_sy°em_time_ms
();

356 
	`LOG_INFO
("Complete 3C515-TX hardware initialization successful");

357 
	`LOG_INFO
(" Media: %s, Speed: %d Mbps, Duplex: %s",

358 (
medü
.
medü_ty≥
 =
XCVR_10ba£T
) ? "10BaseT" :

359 (
medü
.
medü_ty≥
 =
XCVR_100ba£Tx
) ? "100BaseTX" : "Auto",

360 
medü
.
lök_•ìd
,

361 (
medü
.
du∂ex_mode
 =
DUPLEX_FULL
) ? "Full" : "Half");

362 
	`LOG_INFO
(" Full Duplex: %s, DMA: %s, Statistics: %s",

363 
˘x
->
fuŒ_du∂ex_íabÀd
 ? "Enabled" : "Disabled",

364 
˘x
->
dma_íabÀd
 ? "Enabled" : "Disabled",

365 
˘x
->
°©s_íabÀd
 ? "Enabled" : "Disabled");

368 
	}
}

373 
	$ªad_™d_∑r£_ì¥om
(
nic_c⁄ãxt_t
 *
˘x
) {

374 
ªsu…
;

377 
ªsu…
 = 
	`ªad_3c515_ì¥om
(
˘x
->
io_ba£
, &˘x->
ì¥om_c⁄fig
);

378 i‡(
ªsu…
 !
EEPROM_SUCCESS
) {

379 
	`LOG_ERROR
("FaûedÅÿªad 3C515-TX EEPROM: %s", 
	`ì¥om_îr‹_to_°rög
(
ªsu…
));

384 i‡(!
˘x
->
ì¥om_c⁄fig
.
d©a_vÆid
) {

385 
	`LOG_ERROR
("EEPROM data validation failed");

389 
	`LOG_DEBUG
("EEPROM configurationÑead successfully");

390 
	`LOG_DEBUG
(" MAC: %02X:%02X:%02X:%02X:%02X:%02X",

391 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[0], ctx->eeprom_config.mac_address[1],

392 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[2], ctx->eeprom_config.mac_address[3],

393 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[4], ctx->eeprom_config.mac_address[5]);

394 
	`LOG_DEBUG
(" Medü Ty≥: %s", 
	`ì¥om_medü_ty≥_to_°rög
(
˘x
->
ì¥om_c⁄fig
.
medü_ty≥
));

395 
	`LOG_DEBUG
(" Capabilities: 100Mbps=%s, FullDuplex=%s, AutoSelect=%s",

396 
˘x
->
ì¥om_c⁄fig
.
•ìd_100mbps_ˇp
 ? "Yes" : "No",

397 
˘x
->
ì¥om_c⁄fig
.
fuŒ_du∂ex_ˇp
 ? "Yes" : "No",

398 
˘x
->
ì¥om_c⁄fig
.
auto_£À˘
 ? "Yes" : "No");

401 
	}
}

406 
	$c⁄figuª_medü_ty≥
(
nic_c⁄ãxt_t
 *
˘x
, 
medü_c⁄fig_t
 *
medü
) {

407 i‡(!
medü
) {

412 
medü
->
medü_ty≥
 = 
˘x
->
ì¥om_c⁄fig
.media_type;

413 
medü
->
auto_√gŸüti⁄
 = 
˘x
->
ì¥om_c⁄fig
.
auto_£À˘
;

416 i‡(
˘x
->
ì¥om_c⁄fig
.
•ìd_100mbps_ˇp
) {

417 
medü
->
lök_•ìd
 = 
˘x
->
ì¥om_c⁄fig
.
auto_£À˘
 ? 
SPEED_AUTO
 : 
SPEED_100MBPS
;

419 
medü
->
lök_•ìd
 = 
SPEED_10MBPS
;

423 i‡(
˘x
->
ì¥om_c⁄fig
.
fuŒ_du∂ex_ˇp
) {

424 
medü
->
du∂ex_mode
 = 
˘x
->
ì¥om_c⁄fig
.
auto_£À˘
 ? 
DUPLEX_AUTO
 : 
DUPLEX_FULL
;

426 
medü
->
du∂ex_mode
 = 
DUPLEX_HALF
;

430 
medü
->
medü_ty≥
) {

431 
EEPROM_MEDIA_10BASE_T
:

432 
medü
->
å™s˚ivî_ty≥
 = 
XCVR_10ba£T
;

434 
EEPROM_MEDIA_100BASE_TX
:

435 
medü
->
å™s˚ivî_ty≥
 = 
XCVR_100ba£Tx
;

437 
EEPROM_MEDIA_AUI
:

438 
medü
->
å™s˚ivî_ty≥
 = 
XCVR_AUI
;

440 
EEPROM_MEDIA_BNC
:

441 
medü
->
å™s˚ivî_ty≥
 = 
XCVR_10ba£2
;

444 
medü
->
å™s˚ivî_ty≥
 = 
XCVR_DeÁu…
;

449 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_4
);

450 
	`dñay_mûli£c⁄ds
(10);

453 
uöt16_t
 
medü_˘æ
 = 0;

454 
medü
->
å™s˚ivî_ty≥
) {

455 
XCVR_10ba£T
:

456 
medü_˘æ
 = 
_3C515_TX_MEDIA_10TP
 | 
_3C515_TX_MEDIA_LNK
;

458 
XCVR_AUI
:

459 
medü_˘æ
 = 
_3C515_TX_MEDIA_SQE
;

462 
medü_˘æ
 = 
_3C515_TX_MEDIA_10TP
;

466 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_W4_MEDIA
, 
medü_˘æ
);

467 
	`dñay_mûli£c⁄ds
(
CONFIG_STABILIZATION_MS
);

469 
	`LOG_DEBUG
("MediaÅype configured: Type=%d, Speed=%d, Duplex=%d",

470 
medü
->
medü_ty≥
, medü->
lök_•ìd
, medü->
du∂ex_mode
);

473 
	}
}

478 
	$c⁄figuª_fuŒ_du∂ex
(
nic_c⁄ãxt_t
 *
˘x
) {

479 i‡(!
˘x
->
ì¥om_c⁄fig
.
fuŒ_du∂ex_ˇp
) {

480 
	`LOG_DEBUG
("Full-duplexÇot supported by hardware");

485 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_3
);

486 
	`dñay_mûli£c⁄ds
(10);

489 
uöt16_t
 
mac_˘æ
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W3_MAC_CTRL
);

492 
mac_˘æ
 |
_3C515_TX_FULL_DUPLEX_BIT
;

495 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_W3_MAC_CTRL
, 
mac_˘æ
);

496 
	`dñay_mûli£c⁄ds
(
CONFIG_STABILIZATION_MS
);

499 
uöt16_t
 
vîify_˘æ
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W3_MAC_CTRL
);

500 i‡(!(
vîify_˘æ
 & 
_3C515_TX_FULL_DUPLEX_BIT
)) {

501 
	`LOG_ERROR
("FailedÅoÉnable full-duplex mode");

505 
˘x
->
fuŒ_du∂ex_íabÀd
 = 1;

506 
	`LOG_DEBUG
("Full-duplex modeÉnabled successfully");

509 
	}
}

514 
	$£tup_öãºu±_mask
(
nic_c⁄ãxt_t
 *
˘x
) {

516 
uöt16_t
 
öt_mask
 = 
_3C515_TX_IMASK_TX_COMPLETE
 |

517 
_3C515_TX_IMASK_RX_COMPLETE
 |

518 
_3C515_TX_IMASK_ADAPTER_FAILURE
 |

519 
_3C515_TX_IMASK_UP_COMPLETE
 |

520 
_3C515_TX_IMASK_DOWN_COMPLETE
 |

521 
_3C515_TX_IMASK_DMA_DONE
 |

522 
_3C515_TX_IMASK_STATS_FULL
;

525 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

526 
	`dñay_mûli£c⁄ds
(10);

529 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

530 
_3C515_TX_CMD_SET_INTR_ENB
 | 
öt_mask
);

533 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

534 
_3C515_TX_CMD_SET_STATUS_ENB
 | 
öt_mask
);

536 
˘x
->
öãºu±_mask
 = 
öt_mask
;

538 
	`LOG_DEBUG
("I¡îru± mask c⁄figuªd: 0x%04X", 
öt_mask
);

541 
	}
}

546 
	$c⁄figuª_bus_ma°î_dma
(
nic_c⁄ãxt_t
 *
˘x
) {

548 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

549 
	`dñay_mûli£c⁄ds
(10);

552 i‡(!
˘x
->
tx_desc_rög
) {

553 
˘x
->
tx_desc_rög
 = 
	`Æloˇã_des¸ùt‹_rög
(
TX_RING_SIZE
, (
_3c515_tx_tx_desc_t
));

554 i‡(!
˘x
->
tx_desc_rög
) {

555 
	`LOG_ERROR
("FailedÅoállocate TX descriptorÑing");

560 i‡(!
˘x
->
rx_desc_rög
) {

561 
˘x
->
rx_desc_rög
 = 
	`Æloˇã_des¸ùt‹_rög
(
RX_RING_SIZE
, (
_3c515_tx_rx_desc_t
));

562 i‡(!
˘x
->
rx_desc_rög
) {

563 
	`LOG_ERROR
("FailedÅoállocate RX descriptorÑing");

569 i‡(!
˘x
->
buf„rs
) {

570 
˘x
->
buf„rs
 = 
	`mÆloc
((
TX_RING_SIZE
 + 
RX_RING_SIZE
Ë* 
BUFFER_SIZE
);

571 i‡(!
˘x
->
buf„rs
) {

572 
	`LOG_ERROR
("FailedÅoállocate buffer memory");

575 
	`mem£t
(
˘x
->
buf„rs
, 0, (
TX_RING_SIZE
 + 
RX_RING_SIZE
Ë* 
BUFFER_SIZE
);

579 
i
 = 0; i < 
TX_RING_SIZE
; i++) {

580 
˘x
->
tx_desc_rög
[
i
].
√xt
 = (ò+ 1 < 
TX_RING_SIZE
) ?

581 (
uöt32_t
)&
˘x
->
tx_desc_rög
[
i
 + 1] : 0;

582 
˘x
->
tx_desc_rög
[
i
].
addr
 = (
uöt32_t
)(˘x->
buf„rs
 + i * 
BUFFER_SIZE
);

583 
˘x
->
tx_desc_rög
[
i
].
°©us
 = 0;

584 
˘x
->
tx_desc_rög
[
i
].
Àngth
 = 
BUFFER_SIZE
;

587 
i
 = 0; i < 
RX_RING_SIZE
; i++) {

588 
˘x
->
rx_desc_rög
[
i
].
√xt
 = (ò+ 1 < 
RX_RING_SIZE
) ?

589 (
uöt32_t
)&
˘x
->
rx_desc_rög
[
i
 + 1] : 0;

590 
˘x
->
rx_desc_rög
[
i
].
addr
 = (
uöt32_t
)(˘x->
buf„rs
 + (
TX_RING_SIZE
 + iË* 
BUFFER_SIZE
);

591 
˘x
->
rx_desc_rög
[
i
].
°©us
 = 0;

592 
˘x
->
rx_desc_rög
[
i
].
Àngth
 = 
BUFFER_SIZE
;

596 
	`oué
(
˘x
->
io_ba£
 + 
_3C515_TX_DOWN_LIST_PTR
, (
uöt32_t
)˘x->
tx_desc_rög
);

597 
	`oué
(
˘x
->
io_ba£
 + 
_3C515_TX_UP_LIST_PTR
, (
uöt32_t
)˘x->
rx_desc_rög
);

599 
˘x
->
dma_íabÀd
 = 1;

600 
˘x
->
tx_ödex
 = 0;

601 
˘x
->
rx_ödex
 = 0;

603 
	`LOG_DEBUG
("Bus master DMA configured successfully");

604 
	`LOG_DEBUG
(" TX Rög: 0x%08X (%d des¸ùt‹s)", (
uöt32_t
)
˘x
->
tx_desc_rög
, 
TX_RING_SIZE
);

605 
	`LOG_DEBUG
(" RX Rög: 0x%08X (%d des¸ùt‹s)", (
uöt32_t
)
˘x
->
rx_desc_rög
, 
RX_RING_SIZE
);

608 
	}
}

613 
	$íabÀ_h¨dw¨e_°©i°ics
(
nic_c⁄ãxt_t
 *
˘x
) {

615 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_6
);

616 
	`dñay_mûli£c⁄ds
(10);

619 
i
 = 0; i <
_3C515_TX_W6_BADSSD
; i++) {

620 ()
	`öb
(
˘x
->
io_ba£
 + 
i
);

624 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_STATS_ENABLE
);

626 
˘x
->
°©s_íabÀd
 = 1;

627 
˘x
->
œ°_°©s_upd©e
 = 
	`gë_sy°em_time_ms
();

629 
	`LOG_DEBUG
("Hardware statistics collectionÉnabled");

632 
	}
}

637 
	$£tup_lök_m⁄ô‹ög
(
nic_c⁄ãxt_t
 *
˘x
) {

639 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_4
);

640 
	`dñay_mûli£c⁄ds
(10);

643 
uöt16_t
 
medü_°©us
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W4_MEDIA
);

644 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 = (
medü_°©us
 & 
_3C515_TX_MEDIA_LNKBEAT
) ? 1 : 0;

646 
˘x
->
lök_m⁄ô‹ög_íabÀd
 = 1;

647 
˘x
->
œ°_lök_check
 = 
	`gë_sy°em_time_ms
();

649 
	`LOG_DEBUG
("Link monitoringÉnabled, current status: %s",

650 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 ? "Up" : "Down");

653 
	}
}

658 
	$vÆid©e_h¨dw¨e_c⁄figuøti⁄
(
nic_c⁄ãxt_t
 *
˘x
) {

659 
uöt16_t
 
ßved_wödow
;

662 
ßved_wödow
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_STATUS_REG
) >> 13;

665 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_0
);

666 
	`dñay_mûli£c⁄ds
(5);

669 
uöt16_t
 
ì¥om_ã°
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W0_EEPROM_DATA
);

670 i‡(
ì¥om_ã°
 == 0xFFFF ||Éeprom_test == 0x0000) {

671 
	`LOG_WARNING
("EEPROM d©®ªgi°î vÆid©i⁄ su•icious: 0x%04X", 
ì¥om_ã°
);

675 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_3
);

676 
	`dñay_mûli£c⁄ds
(5);

678 
uöt16_t
 
mac_˘æ
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W3_MAC_CTRL
);

679 i‡(
˘x
->
fuŒ_du∂ex_íabÀd
 && !(
mac_˘æ
 & 
_3C515_TX_FULL_DUPLEX_BIT
)) {

680 
	`LOG_ERROR
("Full-duplex validation failed");

685 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

686 
	`dñay_mûli£c⁄ds
(5);

688 
uöt32_t
 
tx_±r
 = 
	`öl
(
˘x
->
io_ba£
 + 
_3C515_TX_DOWN_LIST_PTR
);

689 
uöt32_t
 
rx_±r
 = 
	`öl
(
˘x
->
io_ba£
 + 
_3C515_TX_UP_LIST_PTR
);

691 i‡(
tx_±r
 !(
uöt32_t
)
˘x
->
tx_desc_rög
 || 
rx_±r
 !(uöt32_t)˘x->
rx_desc_rög
) {

692 
	`LOG_ERROR
("DMA descriptor validation failed: TX=0x%08X (exp 0x%08X), RX=0x%08X (exp 0x%08X)",

693 
tx_±r
, (
uöt32_t
)
˘x
->
tx_desc_rög
, 
rx_±r
, (uöt32_t)˘x->
rx_desc_rög
);

698 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
ßved_wödow
);

700 
	`LOG_DEBUG
("Hardware configuration validationÖassed");

703 
	}
}

708 
	$ª£t_nic_h¨dw¨e
(
nic_c⁄ãxt_t
 *
˘x
) {

709 
uöt32_t
 
timeout_°¨t
 = 
	`gë_sy°em_time_ms
();

712 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TOTAL_RESET
);

715 (
	`gë_sy°em_time_ms
(Ë- 
timeout_°¨t
Ë< 
RESET_TIMEOUT_MS
) {

716 
uöt16_t
 
°©us
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

717 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

718 
	`LOG_DEBUG
("HardwareÑeset completed in %u ms",

719 
	`gë_sy°em_time_ms
(Ë- 
timeout_°¨t
);

720 
	`dñay_mûli£c⁄ds
(
CONFIG_STABILIZATION_MS
);

723 
	`dñay_mûli£c⁄ds
(10);

726 
	`LOG_ERROR
("H¨dw¨êª£àtimeouàa·î %d ms", 
RESET_TIMEOUT_MS
);

728 
	}
}

733 
	$dñay_mûli£c⁄ds
(
uöt32_t
 
ms
) {

735 
uöt32_t
 
i
 = 0; i < 
ms
; i++) {

736 vﬁ©ûê
uöt32_t
 
j
 = 0; j < 1000; j++) {

740 
	}
}

745 
uöt32_t
 
	$gë_sy°em_time_ms
() {

747 
uöt32_t
 
cou¡î
 = 0;

748  ++
cou¡î
;

749 
	}
}

754 
	$≥riodic_c⁄figuøti⁄_vÆid©i⁄
(
nic_c⁄ãxt_t
 *
˘x
) {

755 
uöt32_t
 
cuºít_time
 = 
	`gë_sy°em_time_ms
();

757 i‡(!
˘x
 || !˘x->
h¨dw¨e_ªady
) {

762 i‡((
cuºít_time
 - 
˘x
->
œ°_c⁄fig_vÆid©i⁄
Ë< 
CONFIG_VALIDATION_INTERVAL_MS
) {

766 
	`LOG_DEBUG
("PerformingÖeriodic configuration validation");

769 
ªsu…
 = 
	`vÆid©e_h¨dw¨e_c⁄figuøti⁄
(
˘x
);

770 i‡(
ªsu…
 < 0) {

771 
	`LOG_ERROR
("Periodic configuration validation failed");

772 
˘x
->
c⁄fig_îr‹s
++;

773  
ªsu…
;

777 i‡(
˘x
->
lök_m⁄ô‹ög_íabÀd
) {

778 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_4
);

779 
uöt16_t
 
medü_°©us
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_TX_W4_MEDIA
);

780 
uöt8_t
 
√w_lök_°©us
 = (
medü_°©us
 & 
_3C515_TX_MEDIA_LNKBEAT
) ? 1 : 0;

782 i‡(
√w_lök_°©us
 !
˘x
->
medü_c⁄fig
.
lök_a˘ive
) {

783 
	`LOG_INFO
("Link status changed: %s -> %s",

784 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 ? "Up" : "Down",

785 
√w_lök_°©us
 ? "Up" : "Down");

786 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 = 
√w_lök_°©us
;

787 
˘x
->
lök_ch™ges
++;

792 i‡(
˘x
->
°©s_íabÀd
 &&

793 (
cuºít_time
 - 
˘x
->
œ°_°©s_upd©e
Ë>
STATS_UPDATE_INTERVAL_MS
) {

795 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_6
);

798 
˘x
->
tx_îr‹s
 +
	`öb
(˘x->
io_ba£
 + 
_3C515_TX_W6_TX_CARR_ERRS
);

799 
˘x
->
tx_îr‹s
 +
	`öb
(˘x->
io_ba£
 + 
_3C515_TX_W6_TX_HRTBT_ERRS
);

800 
˘x
->
rx_îr‹s
 +
	`öb
(˘x->
io_ba£
 + 
_3C515_TX_W6_RX_FIFO_ERRS
);

802 
˘x
->
œ°_°©s_upd©e
 = 
cuºít_time
;

805 
˘x
->
œ°_c⁄fig_vÆid©i⁄
 = 
cuºít_time
;

807 
	`LOG_DEBUG
("Periodic configuration validation completed successfully");

810 
	}
}

815 
	$_3c515_íh™˚d_öô
(
uöt16_t
 
io_ba£
, 
uöt8_t
 
úq
) {

816 
nic_c⁄ãxt_t
 *
˘x
 = &
g_nic_c⁄ãxt
;

817 
ªsu…
;

819 i‡(
g_drivî_öôülized
) {

820 
	`LOG_WARNING
("Driverálready initialized, cleaning up first");

821 
	`_3c515_íh™˚d_˛ónup
();

824 
	`LOG_INFO
("InitializingÉnhanced 3C515-TX driver");

827 
	`mem£t
(
˘x
, 0, (
nic_c⁄ãxt_t
));

830 
˘x
->
io_ba£
 = io_base;

831 
˘x
->
úq
 = irq;

834 
ªsu…
 = 
	`com∂ëe_3c515_öôüliz©i⁄
(
˘x
);

835 i‡(
ªsu…
 < 0) {

836 
	`LOG_ERROR
("Com∂ëêh¨dw¨êöôüliz©i⁄ faûed: %d", 
ªsu…
);

837  
ªsu…
;

841 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TX_ENABLE
);

842 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_ENABLE
);

845 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_START_DMA_UP
);

847 
g_drivî_öôülized
 = 
åue
;

849 
	`LOG_INFO
("Enhanced 3C515-TX driver initialized successfully");

850 
	`LOG_INFO
(" I/O Ba£: 0x%04X, IRQ: %d", 
io_ba£
, 
úq
);

851 
	`LOG_INFO
(" MAC: %02X:%02X:%02X:%02X:%02X:%02X",

852 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[0], ctx->eeprom_config.mac_address[1],

853 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[2], ctx->eeprom_config.mac_address[3],

854 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[4], ctx->eeprom_config.mac_address[5]);

857 
	}
}

862 
	$_3c515_íh™˚d_˛ónup
() {

863 
nic_c⁄ãxt_t
 *
˘x
 = &
g_nic_c⁄ãxt
;

865 i‡(!
g_drivî_öôülized
) {

869 
	`LOG_INFO
("Cleaning upÉnhanced 3C515-TX driver");

872 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TX_DISABLE
);

873 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_DISABLE
);

876 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_DOWN_STALL
);

877 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_UP_STALL
);

880 i‡(
˘x
->
tx_desc_rög
) {

881 
	`‰ì
(
˘x
->
tx_desc_rög
);

882 
˘x
->
tx_desc_rög
 = 
NULL
;

885 i‡(
˘x
->
rx_desc_rög
) {

886 
	`‰ì
(
˘x
->
rx_desc_rög
);

887 
˘x
->
rx_desc_rög
 = 
NULL
;

890 i‡(
˘x
->
buf„rs
) {

891 
	`‰ì
(
˘x
->
buf„rs
);

892 
˘x
->
buf„rs
 = 
NULL
;

896 
	`LOG_INFO
("Final driver statistics:");

897 
	`LOG_INFO
(" TX: %uÖackets, %u bytes, %uÉrrors",

898 
˘x
->
tx_∑ckës
, ctx->
tx_byãs
, ctx->
tx_îr‹s
);

899 
	`LOG_INFO
(" RX: %uÖackets, %u bytes, %uÉrrors",

900 
˘x
->
rx_∑ckës
, ctx->
rx_byãs
, ctx->
rx_îr‹s
);

901 
	`LOG_INFO
(" Link changes: %u, ConfigÉrrors: %u",

902 
˘x
->
lök_ch™ges
, ctx->
c⁄fig_îr‹s
);

904 
˘x
->
drivî_a˘ive
 = 0;

905 
˘x
->
h¨dw¨e_ªady
 = 0;

906 
g_drivî_öôülized
 = 
Ál£
;

908 
	`LOG_INFO
("Enhanced 3C515-TX driver cleanup completed");

909 
	}
}

914 
	$gë_h¨dw¨e_c⁄fig_öfo
(
nic_c⁄ãxt_t
 *
˘x
, *
buf„r
, 
size_t
 
buf„r_size
) {

915 i‡(!
˘x
 || !
buf„r
 || 
buf„r_size
 < 512) {

919 
wrôãn
 = 0;

921 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

924 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

925 "I/O Ba£: 0x%04X\n", 
˘x
->
io_ba£
);

926 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

927 "IRQ: %d\n", 
˘x
->
úq
);

928 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

930 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[0], ctx->eeprom_config.mac_address[1],

931 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[2], ctx->eeprom_config.mac_address[3],

932 
˘x
->
ì¥om_c⁄fig
.
mac_addªss
[4], ctx->eeprom_config.mac_address[5]);

934 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

936 
	`ì¥om_medü_ty≥_to_°rög
(
˘x
->
medü_c⁄fig
.
medü_ty≥
));

937 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

938 "Lök S≥ed: %d Mbps\n", 
˘x
->
medü_c⁄fig
.
lök_•ìd
);

939 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

941 (
˘x
->
medü_c⁄fig
.
du∂ex_mode
 =
DUPLEX_FULL
) ? "Full" : "Half");

942 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

944 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 ? "Up" : "Down");

946 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

947 "FuŒ Du∂ex: %s\n", 
˘x
->
fuŒ_du∂ex_íabÀd
 ? "Enabled" : "Disabled");

948 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

949 "DMA: %s\n", 
˘x
->
dma_íabÀd
 ? "Enabled" : "Disabled");

950 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

951 "Sèti°ics: %s\n", 
˘x
->
°©s_íabÀd
 ? "Enabled" : "Disabled");

952 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

953 "Lök M⁄ô‹ög: %s\n", 
˘x
->
lök_m⁄ô‹ög_íabÀd
 ? "Enabled" : "Disabled");

955 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

956 "I¡îru± Mask: 0x%04X\n", 
˘x
->
öãºu±_mask
);

958 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

960 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

961 "TX Packës: %u\n", 
˘x
->
tx_∑ckës
);

962 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

963 "RX Packës: %u\n", 
˘x
->
rx_∑ckës
);

964 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

965 "TX Eº‹s: %u\n", 
˘x
->
tx_îr‹s
);

966 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

967 "RX Eº‹s: %u\n", 
˘x
->
rx_îr‹s
);

968 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

969 "Lök Ch™ges: %u\n", 
˘x
->
lök_ch™ges
);

970 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

971 "C⁄fig Eº‹s: %u\n", 
˘x
->
c⁄fig_îr‹s
);

973  
wrôãn
;

974 
	}
}

979 
nic_c⁄ãxt_t
 *
	$gë_3c515_c⁄ãxt
() {

980  
g_drivî_öôülized
 ? &
g_nic_c⁄ãxt
 : 
NULL
;

981 
	}
}

988 
	$_3c515_öô
(
nic_öfo_t
 *
nic
) {

989 
i
;

992 
nic
->
tx_desc_rög
 = 
	`Æloˇã_des¸ùt‹_rög
(
TX_RING_SIZE
, (
_3c515_tx_tx_desc_t
));

993 i‡(!
nic
->
tx_desc_rög
)  -1;

996 
nic
->
rx_desc_rög
 = 
	`Æloˇã_des¸ùt‹_rög
(
RX_RING_SIZE
, (
_3c515_tx_rx_desc_t
));

997 i‡(!
nic
->
rx_desc_rög
)  -1;

1000 
nic
->
buf„rs
 = 
	`mÆloc
((
TX_RING_SIZE
 + 
RX_RING_SIZE
Ë* 
BUFFER_SIZE
);

1001 i‡(!
nic
->
buf„rs
)  -1;

1004 
i
 = 0; i < 
TX_RING_SIZE
; i++) {

1005 
nic
->
tx_desc_rög
[
i
].
√xt
 = (ò+ 1 < 
TX_RING_SIZE
) ?

1006 (
uöt32_t
)&
nic
->
tx_desc_rög
[
i
 + 1] : 0;

1007 
nic
->
tx_desc_rög
[
i
].
addr
 = (
uöt32_t
)“ic->
buf„rs
 + i * 
BUFFER_SIZE
);

1008 
nic
->
tx_desc_rög
[
i
].
°©us
 = 0;

1009 
nic
->
tx_desc_rög
[
i
].
Àngth
 = 
BUFFER_SIZE
;

1013 
i
 = 0; i < 
RX_RING_SIZE
; i++) {

1014 
nic
->
rx_desc_rög
[
i
].
√xt
 = (ò+ 1 < 
RX_RING_SIZE
) ?

1015 (
uöt32_t
)&
nic
->
rx_desc_rög
[
i
 + 1] : 0;

1016 
nic
->
rx_desc_rög
[
i
].
addr
 = (
uöt32_t
)“ic->
buf„rs
 + (
TX_RING_SIZE
 + iË* 
BUFFER_SIZE
);

1017 
nic
->
rx_desc_rög
[
i
].
°©us
 = 0;

1018 
nic
->
rx_desc_rög
[
i
].
Àngth
 = 
BUFFER_SIZE
;

1022 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TOTAL_RESET
);

1025 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

1026 
	`oué
(
nic
->
io_ba£
 + 
_3C515_TX_DOWN_LIST_PTR
, (
uöt32_t
Íic->
tx_desc_rög
);

1027 
	`oué
(
nic
->
io_ba£
 + 
_3C515_TX_UP_LIST_PTR
, (
uöt32_t
Íic->
rx_desc_rög
);

1030 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TX_ENABLE
);

1031 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_ENABLE
);

1033 
nic
->
tx_ödex
 = 0;

1034 
nic
->
rx_ödex
 = 0;

1037 
ªsu…
 = 
	`hw_checksum_öô
();

1038 i‡(
ªsu…
 != 0) {

1039 
	`LOG_WARNING
("H¨dw¨êchecksum inôüliz©i⁄ faûed: %d, c⁄töuög wôhouà›timiz©i⁄", 
ªsu…
);

1042 
	`LOG_DEBUG
("Hardware checksum module initialized with CPU optimization");

1046 
ªsu…
 = 
	`dma_öô
();

1047 i‡(
ªsu…
 != 0) {

1048 
	`LOG_WARNING
("DMA subsy°em inôüliz©i⁄ faûed: %d, usög sögÀ-buf„∏mode", 
ªsu…
);

1051 
	`LOG_DEBUG
("DMA subsystem initialized with CPU-aware memory management");

1054 
dma_buf„r_poﬁ_c⁄fig_t
 
poﬁ_c⁄fig
 = {

1055 .
max_buf„rs
 = 32,

1056 .
buf„r_size
 = 
BUFFER_SIZE
,

1057 .
Æignmít
 = 16,

1058 .
u£_locked_mem‹y
 = 
åue


1061 
ªsu…
 = 
	`dma_ªgi°î_buf„r_poﬁ
(0, &
poﬁ_c⁄fig
);

1062 i‡(
ªsu…
 != 0) {

1063 
	`LOG_WARNING
("DMA buf„∏poﬁÑegi°øti⁄ faûed: %d", 
ªsu…
);

1068 
	}
}

1077 
	$_3c515_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àn
) {

1078 
_3c515_tx_tx_desc_t
 *
desc
 = &
nic
->
tx_desc_rög
[nic->
tx_ödex
];

1081 i‡(
desc
->
°©us
 & 
_3C515_TX_TX_DESC_COMPLETE
)  -1;

1084 
dma_‰agmít_t
 
‰agmíts
[4];

1085 
‰ag_cou¡
 = 
	`dma_™Æyze_∑ckë_‰agmíèti⁄
(
∑ckë
, 
Àn
, 
‰agmíts
, 4);

1087 i‡(
‰ag_cou¡
 > 1) {

1089 
	`LOG_DEBUG
("Usög sˇâî-g©hî DMA f‹ %d føgmíts", 
‰ag_cou¡
);

1091 
sg_ªsu…
 = 
	`dma_£nd_sˇâî_g©hî
(
nic
->
ödex
, 
∑ckë
, 
Àn
, 
‰agmíts
, 
‰ag_cou¡
);

1092 i‡(
sg_ªsu…
 == 0) {

1094 
nic
->
tx_ödex
 = (nic->tx_ödex + 1Ë% 
TX_RING_SIZE
;

1097 
	`LOG_DEBUG
("Sˇâî-g©hî faûed (%d), fÆlög backÅÿc⁄sﬁid©i⁄", 
sg_ªsu…
);

1104 
	`_3c515_dma_¥ï¨e_buf„rs
((*)
desc
->
addr
, 
Àn
, 
Ál£
);

1107 
	`mem˝y
((*)
desc
->
addr
, 
∑ckë
, 
Àn
);

1110 
	`_3c515_dma_com∂ëe_buf„rs
((*)
desc
->
addr
, 
Àn
, 
Ál£
);

1113 
uöt8_t
 *
tx_buf„r
 = (uöt8_à*)
desc
->
addr
;

1114 i‡(
Àn
 >= 34) {

1115 
checksum_ªsu…
 = 
	`hw_checksum_¥o˚ss_outbound_∑ckë
(
tx_buf„r
, 
Àn
);

1116 i‡(
checksum_ªsu…
 != 0) {

1117 
	`LOG_DEBUG
("Checksum calculation completed for outboundÖacket");

1122 
desc
->
Àngth
 = 
Àn
;

1123 
desc
->
°©us
 = 
_3C515_TX_TX_INTR_BIT
;

1126 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_START_DMA_DOWN
);

1129 
nic
->
tx_ödex
 = (nic->tx_ödex + 1Ë% 
TX_RING_SIZE
;

1132 
	}
}

1141 
	$_3c515_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àn
) {

1142 
_3c515_tx_rx_desc_t
 *
desc
 = &
nic
->
rx_desc_rög
[nic->
rx_ödex
];

1145 i‡(!(
desc
->
°©us
 & 
_3C515_TX_RX_DESC_COMPLETE
))  -1;

1147 i‡(
desc
->
°©us
 & 
_3C515_TX_RX_DESC_ERROR
) {

1148 
desc
->
°©us
 = 0;

1149 
nic
->
rx_ödex
 = (nic->rx_ödex + 1Ë% 
RX_RING_SIZE
;

1154 *
Àn
 = 
desc
->
Àngth
 & 
_3C515_TX_RX_DESC_LEN_MASK
;

1155 
	`_3c515_dma_¥ï¨e_buf„rs
((*)
desc
->
addr
, *
Àn
, 
åue
);

1158 
	`mem˝y
(
buf„r
, (*)
desc
->
addr
, *
Àn
);

1161 
	`_3c515_dma_com∂ëe_buf„rs
((*)
desc
->
addr
, *
Àn
, 
åue
);

1164 i‡(*
Àn
 >= 34) {

1165 
checksum_ªsu…
 = 
	`hw_checksum_vîify_öbound_∑ckë
(
buf„r
, *
Àn
);

1166 i‡(
checksum_ªsu…
 < 0) {

1167 
	`LOG_DEBUG
("Checksum verification failed for inboundÖacket");

1169 } i‡(
checksum_ªsu…
 > 0) {

1170 
	`LOG_DEBUG
("Checksum verificationÖassed for inboundÖacket");

1175 
desc
->
°©us
 = 0;

1178 
nic
->
rx_ödex
 = (nic->rx_ödex + 1Ë% 
RX_RING_SIZE
;

1181 
	}
}

1187 
	$_3c515_h™dÀ_öãºu±
(
nic_öfo_t
 *
nic
) {

1188 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

1190 i‡(
°©us
 & 
_3C515_TX_STATUS_UP_COMPLETE
) {

1194 i‡(
°©us
 & 
_3C515_TX_STATUS_DOWN_COMPLETE
) {

1196 
i
 = 0; i < 
TX_RING_SIZE
; i++) {

1197 i‡(
nic
->
tx_desc_rög
[
i
].
°©us
 & 
_3C515_TX_TX_DESC_COMPLETE
) {

1198 
nic
->
tx_desc_rög
[
i
].
°©us
 = 0;

1204 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_ACK_INTR
 | 
°©us
);

1205 
	}
}

1212 
	$_3c515_check_öãºu±
(
nic_öfo_t
 *
nic
) {

1213 i‡(!
nic
) {

1214  
ERROR_INVALID_PARAM
;

1217 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

1220 i‡(
°©us
 & (
_3C515_TX_STATUS_UP_COMPLETE
 |

1221 
_3C515_TX_STATUS_DOWN_COMPLETE
 |

1222 
_3C515_TX_STATUS_TX_COMPLETE
 |

1223 
_3C515_TX_STATUS_RX_COMPLETE
 |

1224 
_3C515_TX_STATUS_ADAPTER_FAILURE
 |

1225 
_3C515_TX_STATUS_STATS_FULL
)) {

1230 
	}
}

1238 
	$_3c515_¥o˚ss_sögÀ_evít
(
nic_öfo_t
 *
nic
, 
öãºu±_evít_ty≥_t
 *
evít_ty≥
) {

1239 i‡(!
nic
 || !
evít_ty≥
) {

1240  
ERROR_INVALID_PARAM
;

1243 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

1248 i‡(
°©us
 & 
_3C515_TX_STATUS_ADAPTER_FAILURE
) {

1249 *
evít_ty≥
 = 
EVENT_TYPE_RX_ERROR
;

1250 
	`LOG_ERROR
("3C515ádapter failure detected");

1253 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1254 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_ADAPTER_FAILURE
);

1260 i‡(
°©us
 & 
_3C515_TX_STATUS_UP_COMPLETE
) {

1261 *
evít_ty≥
 = 
EVENT_TYPE_DMA_COMPLETE
;

1264 
nic_3c515_c⁄ãxt_t
 *
˘x
 = (nic_3c515_c⁄ãxt_à*)
nic
->
c⁄ãxt
;

1265 i‡(
˘x
 && ctx->
rög_m™agî
.
öôülized
) {

1267 
	`nic_3c515_h™dÀ_rx_com∂ëi⁄
(
˘x
) > 0) {

1273 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1274 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_UP_COMPLETE
);

1280 i‡(
°©us
 & 
_3C515_TX_STATUS_DOWN_COMPLETE
) {

1281 *
evít_ty≥
 = 
EVENT_TYPE_TX_COMPLETE
;

1284 
i
 = 0; i < 
TX_RING_SIZE
; i++) {

1285 i‡(
nic
->
tx_desc_rög
 &&

1286 (
nic
->
tx_desc_rög
[
i
].
°©us
 & 
_3C515_TX_TX_DESC_COMPLETE
)) {

1287 
nic
->
tx_desc_rög
[
i
].
°©us
 = 0;

1292 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1293 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_DOWN_COMPLETE
);

1299 i‡(
°©us
 & 
_3C515_TX_STATUS_RX_COMPLETE
) {

1300 *
evít_ty≥
 = 
EVENT_TYPE_RX_COMPLETE
;

1303 i‡(
nic
->
›s
 &&Çic->›s->
ª˚ive_∑ckë
) {

1304 
uöt8_t
 
rx_buf„r
[1514];

1305 
size_t
 
rx_Àngth
 = (
rx_buf„r
);

1306 i‡(
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, 
rx_buf„r
, &
rx_Àngth
) == 0) {

1308 
	`≠i_¥o˚ss_ª˚ived_∑ckë
(
rx_buf„r
, 
rx_Àngth
, 
nic
->
ödex
);

1313 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1314 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_RX_COMPLETE
);

1320 i‡(
°©us
 & 
_3C515_TX_STATUS_TX_COMPLETE
) {

1321 *
evít_ty≥
 = 
EVENT_TYPE_TX_COMPLETE
;

1324 
nic_3c515_c⁄ãxt_t
 *
˘x
 = (nic_3c515_c⁄ãxt_à*)
nic
->
c⁄ãxt
;

1325 i‡(
˘x
 && ctx->
rög_m™agî
.
öôülized
) {

1327 
	`nic_3c515_h™dÀ_tx_com∂ëi⁄
(
˘x
) > 0) {

1333 
	`°©s_ö¸emít_tx_∑ckës
();

1334 
	`°©s_add_tx_byãs
(1514);

1337 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1338 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_TX_COMPLETE
);

1344 i‡(
°©us
 & 
_3C515_TX_STATUS_STATS_FULL
) {

1345 *
evít_ty≥
 = 
EVENT_TYPE_COUNTER_OVERFLOW
;

1348 i‡(
nic
->
›s
 &&Çic->›s->
gë_°©i°ics
) {

1349 
pd_°©i°ics_t
 
hw_°©s
;

1350 i‡(
nic
->
›s
->
	`gë_°©i°ics
“ic, &
hw_°©s
) == 0) {

1353 
	`°©s_add_rx_byãs
(
hw_°©s
.
byãs_ö
);

1354 
	`°©s_add_tx_byãs
(
hw_°©s
.
byãs_out
);

1356 i‡(
hw_°©s
.
∑ckës_ö
 > 0) {

1357 
	`°©s_ö¸emít_rx_∑ckës
();

1359 i‡(
hw_°©s
.
∑ckës_out
 > 0) {

1360 
	`°©s_ö¸emít_tx_∑ckës
();

1362 i‡(
hw_°©s
.
îr‹s_ö
 > 0 || hw_°©s.
îr‹s_out
 > 0) {

1363 
	`°©s_ö¸emít_rx_îr‹s
();

1369 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

1370 
_3C515_TX_CMD_ACK_INTR
 | 
_3C515_TX_STATUS_STATS_FULL
);

1377 
	}
}

1384 
	$_3c515_h™dÀ_öãºu±_b©ched
(
nic_öfo_t
 *
nic
) {

1385 
öãºu±_môig©i⁄_c⁄ãxt_t
 *
im_˘x
;

1387 i‡(!
nic
 || !nic->
¥iv©e_d©a
) {

1388  
ERROR_INVALID_PARAM
;

1394 
im_˘x
 = (
öãºu±_môig©i⁄_c⁄ãxt_t
 *)
nic
->
¥iv©e_d©a
;

1396 i‡(!
	`is_öãºu±_môig©i⁄_íabÀd
(
im_˘x
)) {

1398 
	`_3c515_h™dÀ_öãºu±
(
nic
);

1403  
	`¥o˚ss_b©ched_öãºu±s_3c515
(
im_˘x
);

1404 
	}
}

1416 
	$_3c515_öôülize_ˇche_cohîícy
(
nic_c⁄ãxt_t
 *
˘x
) {

1417 
cohîícy_™Æysis_t
 
™Æysis
;

1418 
chù£t_dëe˘i⁄_ªsu…_t
 
chù£t_ªsu…
;

1420 i‡(!
˘x
) {

1421 
	`LOG_ERROR
("Invalid NIC context for cache coherency initialization");

1425 
	`LOG_INFO
("Initializing cache coherency management for 3C515-TX...");

1428 
™Æysis
 = 
	`≥rf‹m_com∂ëe_cohîícy_™Æysis
();

1430 i‡(
™Æysis
.
£À˘ed_tõr
 =
TIER_DISABLE_BUS_MASTER
) {

1431 
	`LOG_ERROR
("Cache coherencyánalysisÑecommends disabling bus mastering");

1432 
	`LOG_ERROR
("3C515-TXÑequires DMA operation - system incompatible");

1437 
chù£t_ªsu…
 = 
	`dëe˘_sy°em_chù£t
();

1440 
boﬁ
 
ˇche_öô_ªsu…
 = 
	`öôülize_ˇche_m™agemít
(
™Æysis
.
£À˘ed_tõr
);

1441 i‡(!
ˇche_öô_ªsu…
) {

1442 
	`LOG_ERROR
("FailedÅo initialize cache management system");

1447 
boﬁ
 
ªc‹d_ªsu…
 = 
	`ªc‹d_chù£t_ã°_ªsu…
(&
™Æysis
, &
chù£t_ªsu…
);

1448 i‡(!
ªc‹d_ªsu…
) {

1449 
	`LOG_WARNING
("FailedÅoÑecordÅestÑesults in chipset database");

1453 
˘x
->
ˇche_cohîícy_tõr
 = 
™Æysis
.
£À˘ed_tõr
;

1454 
˘x
->
ˇche_m™agemít_avaûabÀ
 = 1;

1455 
˘x
->
cohîícy_™Æysis
 = 
™Æysis
;

1457 
	`LOG_INFO
("Cache coherency initialized:Åier %d, confidence %d%%",

1458 
™Æysis
.
£À˘ed_tõr
,á«lysis.
c⁄fidí˚
);

1461 i‡(
	`should_of„r_≥rf‹m™˚_guid™˚
(&
™Æysis
)) {

1462 
	`di•œy_≥rf‹m™˚_›p‹tunôy_™Æysis
();

1466 
	}
}

1474 
	$_3c515_dma_¥ï¨e_buf„rs
(*
buf„r
, 
size_t
 
Àngth
, 
boﬁ
 
is_ª˚ive
) {

1475 
dma_›î©i⁄_t
 
›î©i⁄
;

1477 i‡(!
buf„r
 || 
Àngth
 == 0) {

1482 
›î©i⁄
.
buf„r
 = buffer;

1483 
›î©i⁄
.
Àngth
 =Üength;

1484 
›î©i⁄
.
dúe˘i⁄
 = 
is_ª˚ive
 ? 
DMA_DIRECTION_FROM_DEVICE
 : 
DMA_DIRECTION_TO_DEVICE
;

1485 
›î©i⁄
.
devi˚_ty≥
 = 
DMA_DEVICE_NETWORK
;

1488 
	`ˇche_m™agemít_dma_¥ï¨e
(&
›î©i⁄
);

1489 
	}
}

1497 
	$_3c515_dma_com∂ëe_buf„rs
(*
buf„r
, 
size_t
 
Àngth
, 
boﬁ
 
is_ª˚ive
) {

1498 
dma_›î©i⁄_t
 
›î©i⁄
;

1500 i‡(!
buf„r
 || 
Àngth
 == 0) {

1505 
›î©i⁄
.
buf„r
 = buffer;

1506 
›î©i⁄
.
Àngth
 =Üength;

1507 
›î©i⁄
.
dúe˘i⁄
 = 
is_ª˚ive
 ? 
DMA_DIRECTION_FROM_DEVICE
 : 
DMA_DIRECTION_TO_DEVICE
;

1508 
›î©i⁄
.
devi˚_ty≥
 = 
DMA_DEVICE_NETWORK
;

1511 
	`ˇche_m™agemít_dma_com∂ëe
(&
›î©i⁄
);

1512 
	}
}

1519 
	~"../ö˛ude/dma_des¸ùt‹s.h
"

1522 
adv™˚d_dma_c⁄ãxt_t
 
	gg_adv™˚d_dma_c⁄ãxt
;

1523 
boﬁ
 
	gg_adv™˚d_dma_öôülized
 = 
Ál£
;

1532 
	$adv™˚d_dma_öô
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
io_ba£
, 
uöt8_t
 
úq
) {

1533 i‡(!
˘x
) {

1534 
	`LOG_ERROR
("Invalid DMA context for initialization");

1538 
	`LOG_INFO
("Initializingádvanced DMA system for 3C515-TX");

1541 
	`mem£t
(
˘x
, 0, (
adv™˚d_dma_c⁄ãxt_t
));

1544 
˘x
->
io_ba£
 = io_base;

1545 
˘x
->
úq
 = irq;

1548 
ªsu…
 = 
	`dma_öô_des¸ùt‹_rögs
(
˘x
);

1549 i‡(
ªsu…
 != 0) {

1550 
	`LOG_ERROR
("FaûedÅÿöôülizêdes¸ùt‹Ñögs: %d", 
ªsu…
);

1551  
ªsu…
;

1555 
˘x
->
com∂ëi⁄_åackî
.
tx_com∂ëi⁄_≥ndög
 = 
Ál£
;

1556 
˘x
->
com∂ëi⁄_åackî
.
rx_com∂ëi⁄_≥ndög
 = 
Ál£
;

1557 
˘x
->
com∂ëi⁄_åackî
.
œ°_tx_a˘ivôy
 = 
	`gë_sy°em_time_ms
();

1558 
˘x
->
com∂ëi⁄_åackî
.
œ°_rx_a˘ivôy
 = 
	`gë_sy°em_time_ms
();

1561 
˘x
->
bus_ma°îög_íabÀd
 = 
åue
;

1562 
˘x
->
sˇâî_g©hî_íabÀd
 = 
åue
;

1563 
˘x
->
zîo_c›y_íabÀd
 = 
åue
;

1564 
˘x
->
ˇche_cohîícy_íabÀd
 = 
åue
;

1567 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

1568 
˘x
->
ˇche_c⁄ãxt
 = 
	`gë_ˇche_cohîícy_c⁄ãxt
();

1569 i‡(!
˘x
->
ˇche_c⁄ãxt
) {

1570 
	`LOG_WARNING
("Cache coherency contextÇotávailable");

1571 
˘x
->
ˇche_cohîícy_íabÀd
 = 
Ál£
;

1576 
	`dma_ª£t_≥rf‹m™˚_°©s
(
˘x
);

1578 
	`LOG_INFO
("Advanced DMA system initialized successfully");

1579 
	`LOG_INFO
(" Bus mastering: %s, Scatter-gather: %s",

1580 
˘x
->
bus_ma°îög_íabÀd
 ? "Enabled" : "Disabled",

1581 
˘x
->
sˇâî_g©hî_íabÀd
 ? "Enabled" : "Disabled");

1582 
	`LOG_INFO
(" Zero-copy: %s, Cache coherency: %s",

1583 
˘x
->
zîo_c›y_íabÀd
 ? "Enabled" : "Disabled",

1584 
˘x
->
ˇche_cohîícy_íabÀd
 ? "Enabled" : "Disabled");

1587 
	}
}

1594 
	$dma_öô_des¸ùt‹_rögs
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
) {

1595 i‡(!
˘x
) {

1599 
	`LOG_DEBUG
("Initializing DMA descriptorÑings");

1602 
˘x
->
rög_m™agî
.
tx_hód
 = 0;

1603 
˘x
->
rög_m™agî
.
tx_èû
 = 0;

1604 
˘x
->
rög_m™agî
.
tx_cou¡
 = 0;

1606 
i
 = 0; i < 
DMA_TX_RING_SIZE
; i++) {

1607 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
i
];

1610 
	`mem£t
(
desc
, 0, (
íh™˚d_tx_desc_t
));

1613 i‡(
i
 =
DMA_TX_RING_SIZE
 - 1) {

1614 
desc
->
√xt
 = (
uöt32_t
)&
˘x
->
rög_m™agî
.
tx_rög
[0];

1616 
desc
->
√xt
 = (
uöt32_t
)&
˘x
->
rög_m™agî
.
tx_rög
[
i
 + 1];

1620 
desc
->
‰agmíts
 = 
NULL
;

1621 
desc
->
‰agmít_cou¡
 = 0;

1622 
desc
->
cohîít_mem‹y
 = 
˘x
->
ˇche_cohîícy_íabÀd
;

1626 
˘x
->
rög_m™agî
.
rx_hód
 = 0;

1627 
˘x
->
rög_m™agî
.
rx_èû
 = 0;

1628 
˘x
->
rög_m™agî
.
rx_cou¡
 = 0;

1630 
i
 = 0; i < 
DMA_RX_RING_SIZE
; i++) {

1631 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
i
];

1634 
	`mem£t
(
desc
, 0, (
íh™˚d_rx_desc_t
));

1637 i‡(
i
 =
DMA_RX_RING_SIZE
 - 1) {

1638 
desc
->
√xt
 = (
uöt32_t
)&
˘x
->
rög_m™agî
.
rx_rög
[0];

1640 
desc
->
√xt
 = (
uöt32_t
)&
˘x
->
rög_m™agî
.
rx_rög
[
i
 + 1];

1644 
desc
->
cohîít_mem‹y
 = 
˘x
->
ˇche_cohîícy_íabÀd
;

1645 
desc
->
zîo_c›y_ñigibÀ
 = 
˘x
->
zîo_c›y_íabÀd
;

1649 
˘x
->
rög_m™agî
.
buf„r_size
 = 
DMA_MAX_FRAGMENT_SIZE
;

1651 
˘x
->
rög_m™agî
.
tx_buf„rs
 = 
	`mÆloc
(
DMA_TX_RING_SIZE
 * ctx->rög_m™agî.
buf„r_size
);

1652 i‡(!
˘x
->
rög_m™agî
.
tx_buf„rs
) {

1653 
	`LOG_ERROR
("FailedÅoállocate TX bufferÖool");

1657 
˘x
->
rög_m™agî
.
rx_buf„rs
 = 
	`mÆloc
(
DMA_RX_RING_SIZE
 * ctx->rög_m™agî.
buf„r_size
);

1658 i‡(!
˘x
->
rög_m™agî
.
rx_buf„rs
) {

1659 
	`‰ì
(
˘x
->
rög_m™agî
.
tx_buf„rs
);

1660 
	`LOG_ERROR
("FailedÅoállocate RX bufferÖool");

1665 
	`mem£t
(
˘x
->
rög_m™agî
.
tx_buf„rs
, 0, 
DMA_TX_RING_SIZE
 * ctx->rög_m™agî.
buf„r_size
);

1666 
	`mem£t
(
˘x
->
rög_m™agî
.
rx_buf„rs
, 0, 
DMA_RX_RING_SIZE
 * ctx->rög_m™agî.
buf„r_size
);

1669 
i
 = 0; i < 
DMA_TX_RING_SIZE
; i++) {

1670 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
i
];

1671 
desc
->
addr
 = (
uöt32_t
)((
uöt8_t
 *)
˘x
->
rög_m™agî
.
tx_buf„rs
 +

1672 (
i
 * 
˘x
->
rög_m™agî
.
buf„r_size
));

1673 
desc
->
Àngth
 = 
˘x
->
rög_m™agî
.
buf„r_size
;

1676 
i
 = 0; i < 
DMA_RX_RING_SIZE
; i++) {

1677 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
i
];

1678 
desc
->
addr
 = (
uöt32_t
)((
uöt8_t
 *)
˘x
->
rög_m™agî
.
rx_buf„rs
 +

1679 (
i
 * 
˘x
->
rög_m™agî
.
buf„r_size
));

1680 
desc
->
Àngth
 = 
˘x
->
rög_m™agî
.
buf„r_size
;

1681 
desc
->
buf„r_vútuÆ
 = (
uöt8_t
 *)
˘x
->
rög_m™agî
.
rx_buf„rs
 +

1682 (
i
 * 
˘x
->
rög_m™agî
.
buf„r_size
);

1686 
˘x
->
rög_m™agî
.
tx_rög_physiˇl
 = (
uöt32_t
)˘x->rög_m™agî.
tx_rög
;

1687 
˘x
->
rög_m™agî
.
rx_rög_physiˇl
 = (
uöt32_t
)˘x->rög_m™agî.
rx_rög
;

1690 
˘x
->
rög_m™agî
.
öôülized
 = 
åue
;

1691 
˘x
->
rög_m™agî
.
gíî©i⁄
 = 1;

1693 
	`LOG_DEBUG
("DMA descriptorÑings initialized successfully");

1694 
	`LOG_DEBUG
(" TXÑög: %d des¸ùt‹†© 0x%08X", 
DMA_TX_RING_SIZE
, 
˘x
->
rög_m™agî
.
tx_rög_physiˇl
);

1695 
	`LOG_DEBUG
(" RXÑög: %d des¸ùt‹†© 0x%08X", 
DMA_RX_RING_SIZE
, 
˘x
->
rög_m™agî
.
rx_rög_physiˇl
);

1698 
	}
}

1706 
íh™˚d_tx_desc_t
 *
	$dma_Æloc_tx_des¸ùt‹
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
desc_ödex
) {

1707 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || !
desc_ödex
) {

1708  
NULL
;

1712 i‡(
˘x
->
rög_m™agî
.
tx_cou¡
 >
DMA_TX_RING_SIZE
) {

1713 
˘x
->
≥rf‹m™˚_°©s
.
tx_ªåõs
++;

1714  
NULL
;

1718 
uöt16_t
 
ödex
 = 
˘x
->
rög_m™agî
.
tx_hód
;

1719 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
ödex
];

1722 i‡(
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) {

1723 
˘x
->
≥rf‹m™˚_°©s
.
tx_ªåõs
++;

1724  
NULL
;

1728 *
desc_ödex
 = 
ödex
;

1729 
˘x
->
rög_m™agî
.
tx_hód
 = (˘x->rög_m™agî.tx_hód + 1Ë% 
DMA_TX_RING_SIZE
;

1730 
˘x
->
rög_m™agî
.
tx_cou¡
++;

1733 
desc
->
°©us
 = 
DMA_DESC_OWNED_BY_HOST
;

1734 
desc
->
‰agmít_cou¡
 = 0;

1735 
desc
->
tŸÆ_Àngth
 = 0;

1736 
desc
->
time°amp_°¨t
 = 
	`gë_sy°em_time_ms
();

1737 
desc
->
ªåy_cou¡
 = 0;

1738 
desc
->
îr‹_Êags
 = 0;

1740 
˘x
->
≥rf‹m™˚_°©s
.
tx_des¸ùt‹s_u£d
++;

1742 
	`LOG_TRACE
("Allocated TX descriptor %d (headÇow %d, count %d)",

1743 
ödex
, 
˘x
->
rög_m™agî
.
tx_hód
, ctx->rög_m™agî.
tx_cou¡
);

1745  
desc
;

1746 
	}
}

1756 
	$dma_£tup_sg_tx
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
íh™˚d_tx_desc_t
 *
desc
,

1757 
dma_‰agmít_desc_t
 *
‰agmíts
, 
uöt16_t
 
‰agmít_cou¡
) {

1758 i‡(!
˘x
 || !
desc
 || !
‰agmíts
 || 
‰agmít_cou¡
 == 0) {

1762 i‡(
‰agmít_cou¡
 > 
DMA_MAX_FRAGMENTS
) {

1763 
	`LOG_ERROR
("Toÿm™y føgmíts: %d (max %d)", 
‰agmít_cou¡
, 
DMA_MAX_FRAGMENTS
);

1767 
	`LOG_DEBUG
("Sëtög u∞sˇâî-g©hî TX wôh %d føgmíts", 
‰agmít_cou¡
);

1770 
uöt32_t
 
tŸÆ_Àngth
 = 0;

1771 
uöt16_t
 
i
 = 0; i < 
‰agmít_cou¡
; i++) {

1772 
tŸÆ_Àngth
 +
‰agmíts
[
i
].
Àngth
;

1775 i‡(
tŸÆ_Àngth
 > 
_3C515_TX_MAX_MTU
) {

1776 
	`LOG_ERROR
("TŸÆÖackëÜígth %dÉx˚ed†MTU %d", 
tŸÆ_Àngth
, 
_3C515_TX_MAX_MTU
);

1781 
desc
->
addr
 = 
‰agmíts
[0].
physiˇl_addr
;

1782 
desc
->
Àngth
 = 
‰agmíts
[0].length;

1783 
desc
->
tŸÆ_Àngth
 =Åotal_length;

1784 
desc
->
‰agmít_cou¡
 = fragment_count;

1786 i‡(
‰agmít_cou¡
 == 1) {

1788 
desc
->
°©us
 |
DMA_DESC_FIRST_FRAG
 | 
DMA_DESC_LAST_FRAG
;

1789 
desc
->
‰agmíts
 = 
NULL
;

1792 
desc
->
°©us
 |
DMA_DESC_FIRST_FRAG
;

1795 
desc
->
‰agmíts
 = 
	`mÆloc
((
dma_‰agmít_desc_t
Ë* (
‰agmít_cou¡
 - 1));

1796 i‡(!
desc
->
‰agmíts
) {

1797 
	`LOG_ERROR
("FailedÅoállocate fragment storage");

1801 
uöt16_t
 
i
 = 1; i < 
‰agmít_cou¡
; i++) {

1802 
desc
->
‰agmíts
[
i
-1] = fragments[i];

1803 i‡(
i
 =
‰agmít_cou¡
 - 1) {

1804 
desc
->
‰agmíts
[
i
-1].
Êags
 |
DMA_DESC_LAST_FRAG
;

1805 
desc
->
‰agmíts
[
i
-1].
√xt
 = 
NULL
;

1807 
desc
->
‰agmíts
[
i
-1].
√xt
 = &desc->fragments[i];

1811 
˘x
->
≥rf‹m™˚_°©s
.
sg_tx_∑ckës
++;

1812 
˘x
->
≥rf‹m™˚_°©s
.
tŸÆ_‰agmíts
 +
‰agmít_cou¡
;

1816 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

1817 
cohîícy_ªsu…
 = 
	`dma_¥ï¨e_cohîít_buf„r
(
˘x
, (*)
desc
->
addr
,

1818 
desc
->
Àngth
, 0);

1819 i‡(
cohîícy_ªsu…
 != 0) {

1820 
	`LOG_WARNING
("CachêcohîícyÖª∑øti⁄ faûed: %d", 
cohîícy_ªsu…
);

1825 
desc
->
°©us
 |
DMA_DESC_OWNED_BY_NIC
 | 
DMA_DESC_INTERRUPT
;

1827 
˘x
->
≥rf‹m™˚_°©s
.
tx_byãs_å™s„ºed
 +
tŸÆ_Àngth
;

1829 
	`LOG_TRACE
("Scatter-gather TX setup complete: %d fragments, %dÅotal bytes",

1830 
‰agmít_cou¡
, 
tŸÆ_Àngth
);

1833 
	}
}

1841 
	$dma_check_tx_com∂ëi⁄
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
com∂ëed_mask
) {

1842 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || !
com∂ëed_mask
) {

1846 
com∂ëed_cou¡
 = 0;

1847 *
com∂ëed_mask
 = 0;

1850 
uöt16_t
 
check_ödex
 = 
˘x
->
rög_m™agî
.
tx_èû
;

1851 
i
 = 0; i < 
˘x
->
rög_m™agî
.
tx_cou¡
; i++) {

1852 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
check_ödex
];

1855 i‡((
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) == 0) {

1857 *
com∂ëed_mask
 |(1 << 
check_ödex
);

1858 
com∂ëed_cou¡
++;

1861 
desc
->
time°amp_com∂ëe
 = 
	`gë_sy°em_time_ms
();

1864 i‡(
desc
->
°©us
 & 
DMA_DESC_ERROR_MASK
) {

1865 
desc
->
îr‹_Êags
 = desc->
°©us
;

1866 
˘x
->
≥rf‹m™˚_°©s
.
dma_îr‹s
++;

1867 
	`LOG_WARNING
("TX descriptor %d completed withÉrrors: 0x%08X",

1868 
check_ödex
, 
desc
->
°©us
);

1872 
check_ödex
 = (check_ödex + 1Ë% 
DMA_TX_RING_SIZE
;

1875 i‡(
com∂ëed_cou¡
 > 0) {

1876 
˘x
->
com∂ëi⁄_åackî
.
œ°_tx_a˘ivôy
 = 
	`gë_sy°em_time_ms
();

1877 
	`LOG_TRACE
("Found %d com∂ëed TX des¸ùt‹s", 
com∂ëed_cou¡
);

1880  
com∂ëed_cou¡
;

1881 
	}
}

1889 
	$dma_h™dÀ_tx_com∂ëi⁄
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
desc_ödex
) {

1890 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || 
desc_ödex
 >
DMA_TX_RING_SIZE
) {

1894 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
desc_ödex
];

1896 
	`LOG_TRACE
("H™dlög TX com∂ëi⁄ f‹ des¸ùt‹ %d", 
desc_ödex
);

1899 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

1900 
cohîícy_ªsu…
 = 
	`dma_com∂ëe_cohîít_buf„r
(
˘x
, (*)
desc
->
addr
,

1901 
desc
->
Àngth
, 0);

1902 i‡(
cohîícy_ªsu…
 != 0) {

1903 
	`LOG_WARNING
("Cachêcohîícy com∂ëi⁄ faûed: %d", 
cohîícy_ªsu…
);

1908 i‡(
desc
->
‰agmíts
) {

1909 
	`‰ì
(
desc
->
‰agmíts
);

1910 
desc
->
‰agmíts
 = 
NULL
;

1914 i‡(
desc
->
‰agmít_cou¡
 > 1) {

1915 
˘x
->
≥rf‹m™˚_°©s
.
avg_‰agmíts_≥r_∑ckë
 =

1916 (
˘x
->
≥rf‹m™˚_°©s
.
avg_‰agmíts_≥r_∑ckë
 + 
desc
->
‰agmít_cou¡
) / 2;

1920 i‡(
˘x
->
com∂ëi⁄_åackî
.
tx_com∂ëi⁄_h™dÀr
) {

1921 
˘x
->
com∂ëi⁄_åackî
.
	`tx_com∂ëi⁄_h™dÀr
(
desc
);

1925 i‡(
desc_ödex
 =
˘x
->
rög_m™agî
.
tx_èû
) {

1926 
˘x
->
rög_m™agî
.
tx_èû
 = (˘x->rög_m™agî.tx_èû + 1Ë% 
DMA_TX_RING_SIZE
;

1927 
˘x
->
rög_m™agî
.
tx_cou¡
--;

1930 
	`LOG_TRACE
("TX descriptor %d completion handled (tailÇow %d, count %d)",

1931 
desc_ödex
, 
˘x
->
rög_m™agî
.
tx_èû
, ctx->rög_m™agî.
tx_cou¡
);

1934 
	}
}

1941 
uöt32_t
 
	$dma_check_timeouts
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
) {

1942 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
) {

1946 
uöt32_t
 
timeout_mask
 = 0;

1947 
uöt32_t
 
cuºít_time
 = 
	`gë_sy°em_time_ms
();

1950 
uöt16_t
 
check_ödex
 = 
˘x
->
rög_m™agî
.
tx_èû
;

1951 
i
 = 0; i < 
˘x
->
rög_m™agî
.
tx_cou¡
; i++) {

1952 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
check_ödex
];

1955 i‡((
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) &&

1956 ((
cuºít_time
 - 
desc
->
time°amp_°¨t
Ë> 
DMA_TIMEOUT_TX
)) {

1957 
timeout_mask
 |(1 << 
check_ödex
);

1958 
desc
->
îr‹_Êags
 |
DMA_COMPLETION_TIMEOUT
;

1959 
˘x
->
≥rf‹m™˚_°©s
.
tx_timeouts
++;

1961 
	`LOG_WARNING
("TX descriptor %dÅimed out (startedát %d,Çow %d)",

1962 
check_ödex
, 
desc
->
time°amp_°¨t
, 
cuºít_time
);

1965 
check_ödex
 = (check_ödex + 1Ë% 
DMA_TX_RING_SIZE
;

1969 
check_ödex
 = 
˘x
->
rög_m™agî
.
rx_èû
;

1970 
i
 = 0; i < 
˘x
->
rög_m™agî
.
rx_cou¡
; i++) {

1971 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
check_ödex
];

1974 i‡((
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) &&

1975 ((
cuºít_time
 - 
desc
->
ª˚ive_time°amp
Ë> 
DMA_TIMEOUT_RX
)) {

1976 
timeout_mask
 |(1 << (16 + 
check_ödex
));

1977 
desc
->
îr‹_Êags
 |
DMA_COMPLETION_TIMEOUT
;

1978 
˘x
->
≥rf‹m™˚_°©s
.
rx_timeouts
++;

1980 
	`LOG_WARNING
("RX des¸ùt‹ %dÅimed out", 
check_ödex
);

1983 
check_ödex
 = (check_ödex + 1Ë% 
DMA_RX_RING_SIZE
;

1987 i‡(
timeout_mask
 & 0xFFFF) {

1988 
˘x
->
com∂ëi⁄_åackî
.
tx_timeout_cou¡
++;

1990 i‡(
timeout_mask
 & 0xFFFF0000) {

1991 
˘x
->
com∂ëi⁄_åackî
.
rx_timeout_cou¡
++;

1994  
timeout_mask
;

1995 
	}
}

2003 
	$dma_ªcovî_tx_timeout
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
desc_ödex
) {

2004 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || 
desc_ödex
 >
DMA_TX_RING_SIZE
) {

2008 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
desc_ödex
];

2010 
	`LOG_WARNING
("Recovîög from TXÅimeouà⁄ des¸ùt‹ %d", 
desc_ödex
);

2013 
°Æl_ªsu…
 = 
	`dma_°Æl_ígöes
(
˘x
, 
åue
, 
Ál£
);

2014 i‡(
°Æl_ªsu…
 != 0) {

2015 
	`LOG_ERROR
("FaûedÅÿ°Æ»TXÉngöêf‹Åimeouàªcovîy: %d", 
°Æl_ªsu…
);

2016  
°Æl_ªsu…
;

2020 
desc
->
°©us
 &~
DMA_DESC_OWNED_BY_NIC
;

2021 
desc
->
îr‹_Êags
 |
DMA_COMPLETION_ABORTED
;

2022 
desc
->
ªåy_cou¡
++;

2025 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

2026 
	`dma_com∂ëe_cohîít_buf„r
(
˘x
, (*)
desc
->
addr
, desc->
Àngth
, 0);

2030 i‡(
desc
->
‰agmíts
) {

2031 
	`‰ì
(
desc
->
‰agmíts
);

2032 
desc
->
‰agmíts
 = 
NULL
;

2036 
˘x
->
≥rf‹m™˚_°©s
.
tx_ªåõs
++;

2039 
un°Æl_ªsu…
 = 
	`dma_un°Æl_ígöes
(
˘x
, 
åue
, 
Ál£
);

2040 i‡(
un°Æl_ªsu…
 != 0) {

2041 
	`LOG_ERROR
("FaûedÅÿun°Æ»TXÉngöêa·îÅimeouàªcovîy: %d", 
un°Æl_ªsu…
);

2045 i‡(
desc_ödex
 =
˘x
->
rög_m™agî
.
tx_èû
) {

2046 
˘x
->
rög_m™agî
.
tx_èû
 = (˘x->rög_m™agî.tx_èû + 1Ë% 
DMA_TX_RING_SIZE
;

2047 
˘x
->
rög_m™agî
.
tx_cou¡
--;

2050 
	`LOG_INFO
("TXÅimeouàªcovîy com∂ëed f‹ des¸ùt‹ %d", 
desc_ödex
);

2053 
	}
}

2062 
boﬁ
 
	$dma_is_zîo_c›y_tx_ñigibÀ
(c⁄° *
∑ckë_d©a
, 
uöt32_t
 
∑ckë_Àngth
,

2063 
uöt32_t
 
Æignmít_ªquúemít
) {

2064 i‡(!
∑ckë_d©a
 || 
∑ckë_Àngth
 == 0) {

2065  
Ál£
;

2069 i‡(((
uöt32_t
)
∑ckë_d©a
 % 
Æignmít_ªquúemít
) != 0) {

2070  
Ál£
;

2074 i‡(
∑ckë_Àngth
 < 
_3C515_TX_MIN_PACKET_SIZE
 ||Öackë_Àngth > 
_3C515_TX_MAX_MTU
) {

2075  
Ál£
;

2079 
uöt32_t
 
addr
 = (uöt32_t)
∑ckë_d©a
;

2080 i‡(
addr
 > 0xFFFFFF) {

2081  
Ál£
;

2084  
åue
;

2085 
	}
}

2095 
	$dma_£tup_zîo_c›y_tx
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
íh™˚d_tx_desc_t
 *
desc
,

2096 c⁄° *
∑ckë_d©a
, 
uöt32_t
 
∑ckë_Àngth
) {

2097 i‡(!
˘x
 || !
desc
 || !
∑ckë_d©a
 || 
∑ckë_Àngth
 == 0) {

2101 i‡(!
	`dma_is_zîo_c›y_tx_ñigibÀ
(
∑ckë_d©a
, 
∑ckë_Àngth
, 
DMA_BUFFER_ALIGN
)) {

2102 
	`LOG_DEBUG
("PacketÇotÉligible for zero-copy TX");

2106 
	`LOG_DEBUG
("Setting up zero-copy TX operation");

2109 
desc
->
addr
 = (
uöt32_t
)
∑ckë_d©a
;

2110 
desc
->
Àngth
 = 
∑ckë_Àngth
;

2111 
desc
->
tŸÆ_Àngth
 = 
∑ckë_Àngth
;

2112 
desc
->
‰agmít_cou¡
 = 1;

2113 
desc
->
‰agmíts
 = 
NULL
;

2116 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

2117 
cohîícy_ªsu…
 = 
	`dma_¥ï¨e_cohîít_buf„r
(
˘x
, (*)
∑ckë_d©a
,

2118 
∑ckë_Àngth
, 0);

2119 i‡(
cohîícy_ªsu…
 != 0) {

2120 
	`LOG_WARNING
("Cache coherencyÖreparation failed for zero-copy TX: %d",

2121 
cohîícy_ªsu…
);

2126 
desc
->
°©us
 |
DMA_DESC_OWNED_BY_NIC
 | 
DMA_DESC_INTERRUPT
 |

2127 
DMA_DESC_FIRST_FRAG
 | 
DMA_DESC_LAST_FRAG
;

2130 
˘x
->
≥rf‹m™˚_°©s
.
zîo_c›y_tx
++;

2131 
˘x
->
≥rf‹m™˚_°©s
.
tx_byãs_å™s„ºed
 +
∑ckë_Àngth
;

2133 
	`LOG_TRACE
("Zîo-c›y TX sëu∞com∂ëe: %d byã†© 0x%08X", 
∑ckë_Àngth
, 
desc
->
addr
);

2136 
	}
}

2144 
	$dma_upd©e_≥rf‹m™˚_°©s
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
,

2145 
uöt32_t
 
tx_byãs
, uöt32_à
rx_byãs
) {

2146 i‡(!
˘x
) {

2150 
˘x
->
≥rf‹m™˚_°©s
.
tx_byãs_å™s„ºed
 +
tx_byãs
;

2151 
˘x
->
≥rf‹m™˚_°©s
.
rx_byãs_å™s„ºed
 +
rx_byãs
;

2154 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

2155 
˘x
->
≥rf‹m™˚_°©s
.
˝u_cy˛es_ßved
 +(
tx_byãs
 + 
rx_byãs
) / 4;

2159 
˘x
->
≥rf‹m™˚_°©s
.
bus_utûiz©i⁄
 =

2160 ((
˘x
->
≥rf‹m™˚_°©s
.
tx_byãs_å™s„ºed
 + ctx->≥rf‹m™˚_°©s.
rx_byãs_å™s„ºed
) * 100) /

2162 
	}
}

2168 
	$dma_ª£t_≥rf‹m™˚_°©s
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
) {

2169 i‡(!
˘x
) {

2173 
	`mem£t
(&
˘x
->
≥rf‹m™˚_°©s
, 0, (
dma_≥rf‹m™˚_°©s_t
));

2174 
	`LOG_DEBUG
("DMAÖerformance statisticsÑeset");

2175 
	}
}

2184 
	$dma_gë_≥rf‹m™˚_ªp‹t
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, *
buf„r
, 
size_t
 
buf„r_size
) {

2185 i‡(!
˘x
 || !
buf„r
 || 
buf„r_size
 < 512) {

2189 
wrôãn
 = 0;

2191 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2194 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2195 "TX Des¸ùt‹†U£d: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
tx_des¸ùt‹s_u£d
);

2196 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2197 "RX Des¸ùt‹†U£d: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
rx_des¸ùt‹s_u£d
);

2198 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2199 "TX Byã†Tøns„ºed: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
tx_byãs_å™s„ºed
);

2200 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2201 "RX Byã†Tøns„ºed: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
rx_byãs_å™s„ºed
);

2203 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2205 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2206 "SG TX Packës: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
sg_tx_∑ckës
);

2207 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2208 "SG RX Packës: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
sg_rx_∑ckës
);

2209 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2210 "TŸÆ Føgmíts: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
tŸÆ_‰agmíts
);

2211 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2212 "Avg Føgmíts/Packë: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
avg_‰agmíts_≥r_∑ckë
);

2214 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2216 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2217 "Zîo-C›y TX: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
zîo_c›y_tx
);

2218 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2219 "Zîo-C›y RX: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
zîo_c›y_rx
);

2221 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2223 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2224 "TX Timeouts: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
tx_timeouts
);

2225 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2226 "RX Timeouts: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
rx_timeouts
);

2227 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2228 "TX Rërõs: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
tx_ªåõs
);

2229 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2230 "RX Rërõs: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
rx_ªåõs
);

2231 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2232 "DMA Eº‹s: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
dma_îr‹s
);

2234 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2236 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2237 "Bu†Utûiz©i⁄: %u%%\n", 
˘x
->
≥rf‹m™˚_°©s
.
bus_utûiz©i⁄
);

2238 
wrôãn
 +
	`¢¥ötf
(
buf„r
 + wrôãn, 
buf„r_size
 - written,

2239 "CPU Cy˛e†Saved: %u\n", 
˘x
->
≥rf‹m™˚_°©s
.
˝u_cy˛es_ßved
);

2241  
wrôãn
;

2242 
	}
}

2252 
	$adv™˚d_dma_˛ónup
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
) {

2253 i‡(!
˘x
) {

2257 
	`LOG_INFO
("Cleaning upádvanced DMA system");

2260 
	`dma_°›_å™s„r
(
˘x
, 
åue
,Årue);

2263 i‡(
˘x
->
rög_m™agî
.
tx_buf„rs
) {

2264 
	`‰ì
(
˘x
->
rög_m™agî
.
tx_buf„rs
);

2265 
˘x
->
rög_m™agî
.
tx_buf„rs
 = 
NULL
;

2268 i‡(
˘x
->
rög_m™agî
.
rx_buf„rs
) {

2269 
	`‰ì
(
˘x
->
rög_m™agî
.
rx_buf„rs
);

2270 
˘x
->
rög_m™agî
.
rx_buf„rs
 = 
NULL
;

2274 
i
 = 0; i < 
DMA_TX_RING_SIZE
; i++) {

2275 
íh™˚d_tx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
tx_rög
[
i
];

2276 i‡(
desc
->
‰agmíts
) {

2277 
	`‰ì
(
desc
->
‰agmíts
);

2278 
desc
->
‰agmíts
 = 
NULL
;

2283 
˘x
->
rög_m™agî
.
öôülized
 = 
Ál£
;

2284 
˘x
->
bus_ma°îög_íabÀd
 = 
Ál£
;

2285 
˘x
->
sˇâî_g©hî_íabÀd
 = 
Ál£
;

2286 
˘x
->
zîo_c›y_íabÀd
 = 
Ál£
;

2287 
˘x
->
ˇche_cohîícy_íabÀd
 = 
Ál£
;

2289 
	`LOG_INFO
("Advanced DMA system cleanup completed");

2290 
	}
}

2298 
íh™˚d_rx_desc_t
 *
	$dma_Æloc_rx_des¸ùt‹
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
desc_ödex
) {

2299 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || !
desc_ödex
) {

2300  
NULL
;

2304 i‡(
˘x
->
rög_m™agî
.
rx_cou¡
 >
DMA_RX_RING_SIZE
) {

2305 
˘x
->
≥rf‹m™˚_°©s
.
rx_ªåõs
++;

2306  
NULL
;

2310 
uöt16_t
 
ödex
 = 
˘x
->
rög_m™agî
.
rx_hód
;

2311 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
ödex
];

2314 i‡(
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) {

2315 
˘x
->
≥rf‹m™˚_°©s
.
rx_ªåõs
++;

2316  
NULL
;

2320 *
desc_ödex
 = 
ödex
;

2321 
˘x
->
rög_m™agî
.
rx_hód
 = (˘x->rög_m™agî.rx_hód + 1Ë% 
DMA_RX_RING_SIZE
;

2322 
˘x
->
rög_m™agî
.
rx_cou¡
++;

2325 
desc
->
°©us
 = 
DMA_DESC_OWNED_BY_HOST
;

2326 
desc
->
ª˚ived_Àngth
 = 0;

2327 
desc
->
ª˚ive_time°amp
 = 
	`gë_sy°em_time_ms
();

2328 
desc
->
îr‹_Êags
 = 0;

2329 
desc
->
ªåy_cou¡
 = 0;

2331 
˘x
->
≥rf‹m™˚_°©s
.
rx_des¸ùt‹s_u£d
++;

2333 
	`LOG_TRACE
("Allocated RX descriptor %d (headÇow %d, count %d)",

2334 
ödex
, 
˘x
->
rög_m™agî
.
rx_hód
, ctx->rög_m™agî.
rx_cou¡
);

2336  
desc
;

2337 
	}
}

2345 
	$dma_check_rx_com∂ëi⁄
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
com∂ëed_mask
) {

2346 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || !
com∂ëed_mask
) {

2350 
com∂ëed_cou¡
 = 0;

2351 *
com∂ëed_mask
 = 0;

2354 
uöt16_t
 
check_ödex
 = 
˘x
->
rög_m™agî
.
rx_èû
;

2355 
i
 = 0; i < 
˘x
->
rög_m™agî
.
rx_cou¡
; i++) {

2356 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
check_ödex
];

2359 i‡((
desc
->
°©us
 & 
DMA_DESC_OWNED_BY_NIC
) == 0) {

2361 *
com∂ëed_mask
 |(1 << 
check_ödex
);

2362 
com∂ëed_cou¡
++;

2365 
desc
->
ª˚ived_Àngth
 = desc->
°©us
 & 
_3C515_TX_RX_DESC_LEN_MASK
;

2368 i‡(
desc
->
°©us
 & 
DMA_DESC_ERROR_MASK
) {

2369 
desc
->
îr‹_Êags
 = desc->
°©us
;

2370 
˘x
->
≥rf‹m™˚_°©s
.
dma_îr‹s
++;

2371 
	`LOG_WARNING
("RX descriptor %d completed withÉrrors: 0x%08X",

2372 
check_ödex
, 
desc
->
°©us
);

2376 
check_ödex
 = (check_ödex + 1Ë% 
DMA_RX_RING_SIZE
;

2379 i‡(
com∂ëed_cou¡
 > 0) {

2380 
˘x
->
com∂ëi⁄_åackî
.
œ°_rx_a˘ivôy
 = 
	`gë_sy°em_time_ms
();

2381 
	`LOG_TRACE
("Found %d com∂ëed RX des¸ùt‹s", 
com∂ëed_cou¡
);

2384  
com∂ëed_cou¡
;

2385 
	}
}

2393 
	$dma_h™dÀ_rx_com∂ëi⁄
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
desc_ödex
) {

2394 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || 
desc_ödex
 >
DMA_RX_RING_SIZE
) {

2398 
íh™˚d_rx_desc_t
 *
desc
 = &
˘x
->
rög_m™agî
.
rx_rög
[
desc_ödex
];

2400 
	`LOG_TRACE
("H™dlög RX com∂ëi⁄ f‹ des¸ùt‹ %d", 
desc_ödex
);

2403 i‡(
˘x
->
ˇche_cohîícy_íabÀd
) {

2404 
cohîícy_ªsu…
 = 
	`dma_com∂ëe_cohîít_buf„r
(
˘x
, 
desc
->
buf„r_vútuÆ
,

2405 
desc
->
ª˚ived_Àngth
, 1);

2406 i‡(
cohîícy_ªsu…
 != 0) {

2407 
	`LOG_WARNING
("Cachêcohîícy com∂ëi⁄ faûed: %d", 
cohîícy_ªsu…
);

2412 
˘x
->
≥rf‹m™˚_°©s
.
rx_byãs_å™s„ºed
 +
desc
->
ª˚ived_Àngth
;

2415 i‡(
˘x
->
com∂ëi⁄_åackî
.
rx_com∂ëi⁄_h™dÀr
) {

2416 
˘x
->
com∂ëi⁄_åackî
.
	`rx_com∂ëi⁄_h™dÀr
(
desc
);

2420 
desc
->
°©us
 = 
DMA_DESC_OWNED_BY_NIC
;

2423 i‡(
desc_ödex
 =
˘x
->
rög_m™agî
.
rx_èû
) {

2424 
˘x
->
rög_m™agî
.
rx_èû
 = (˘x->rög_m™agî.rx_èû + 1Ë% 
DMA_RX_RING_SIZE
;

2425 
˘x
->
rög_m™agî
.
rx_cou¡
--;

2428 
	`LOG_TRACE
("RX descriptor %d completion handled (tailÇow %d, count %d)",

2429 
desc_ödex
, 
˘x
->
rög_m™agî
.
rx_èû
, ctx->rög_m™agî.
rx_cou¡
);

2432 
	}
}

2435 
dma_°Æl_ígöes
(
uöt16_t
 
io_ba£
, 
boﬁ
 
tx_°Æl
, boﬁ 
rx_°Æl
);

2436 
dma_un°Æl_ígöes
(
uöt16_t
 
io_ba£
, 
boﬁ
 
tx_un°Æl
, boﬁ 
rx_un°Æl
);

2437 
dma_°¨t_å™s„r
(
uöt16_t
 
io_ba£
, 
boﬁ
 
tx_°¨t
, boﬁ 
rx_°¨t
);

2438 
dma_°›_å™s„r
(
uöt16_t
 
io_ba£
, 
boﬁ
 
tx_°›
, boﬁ 
rx_°›
);

2439 
dma_gë_ígöe_°©us
(
uöt16_t
 
io_ba£
, 
uöt32_t
 *
tx_°©us
, uöt32_à*
rx_°©us
);

2440 
dma_¥ï¨e_cohîít_buf„r
(*
buf„r
, 
uöt32_t
 
Àngth
, 
dúe˘i⁄
);

2441 
dma_com∂ëe_cohîít_buf„r
(*
buf„r
, 
uöt32_t
 
Àngth
, 
dúe˘i⁄
);

2450 
	$dma_°Æl_ígöes
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
tx_°Æl
, boﬁ 
rx_°Æl
) {

2451 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
) {

2455  
	`dma_°Æl_ígöes
(
˘x
->
io_ba£
, 
tx_°Æl
, 
rx_°Æl
);

2456 
	}
}

2465 
	$dma_un°Æl_ígöes
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
tx_un°Æl
, boﬁ 
rx_un°Æl
) {

2466 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
) {

2470  
	`dma_un°Æl_ígöes
(
˘x
->
io_ba£
, 
tx_un°Æl
, 
rx_un°Æl
);

2471 
	}
}

2480 
	$dma_°¨t_å™s„r
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
tx_°¨t
, boﬁ 
rx_°¨t
) {

2481 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
) {

2485  
	`dma_°¨t_å™s„r
(
˘x
->
io_ba£
, 
tx_°¨t
, 
rx_°¨t
);

2486 
	}
}

2495 
	$dma_°›_å™s„r
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
tx_°›
, boﬁ 
rx_°›
) {

2496 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
) {

2501 
	`_3C515_TX_SELECT_WINDOW
(
˘x
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

2503 i‡(
tx_°›
) {

2504 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TX_DISABLE
);

2507 i‡(
rx_°›
) {

2508 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_DISABLE
);

2512 
	}
}

2521 
	$dma_gë_ígöe_°©us
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, 
uöt32_t
 *
tx_°©us
, uöt32_à*
rx_°©us
) {

2522 i‡(!
˘x
 || !˘x->
rög_m™agî
.
öôülized
 || !
tx_°©us
 || !
rx_°©us
) {

2526  
	`dma_gë_ígöe_°©us
(
˘x
->
io_ba£
, 
tx_°©us
, 
rx_°©us
);

2527 
	}
}

2537 
	$dma_¥ï¨e_cohîít_buf„r
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, *
buf„r
,

2538 
uöt32_t
 
Àngth
, 
dúe˘i⁄
) {

2539 i‡(!
˘x
 || !
buf„r
 || 
Àngth
 == 0) {

2543 i‡(!
˘x
->
ˇche_cohîícy_íabÀd
) {

2547  
	`dma_¥ï¨e_cohîít_buf„r
(
buf„r
, 
Àngth
, 
dúe˘i⁄
);

2548 
	}
}

2558 
	$dma_com∂ëe_cohîít_buf„r
(
adv™˚d_dma_c⁄ãxt_t
 *
˘x
, *
buf„r
,

2559 
uöt32_t
 
Àngth
, 
dúe˘i⁄
) {

2560 i‡(!
˘x
 || !
buf„r
 || 
Àngth
 == 0) {

2564 i‡(!
˘x
->
ˇche_cohîícy_íabÀd
) {

2568  
	`dma_com∂ëe_cohîít_buf„r
(
buf„r
, 
Àngth
, 
dúe˘i⁄
);

2569 
	}
}

2579 
	$dma_c⁄sﬁid©e_‰agmíts
(
dma_‰agmít_desc_t
 *
‰agmíts
, 
uöt16_t
 
‰agmít_cou¡
,

2580 *
de°_buf„r
, 
uöt32_t
 
de°_size
) {

2581 i‡(!
‰agmíts
 || 
‰agmít_cou¡
 =0 || !
de°_buf„r
 || 
de°_size
 == 0) {

2585 
uöt32_t
 
tŸÆ_byãs
 = 0;

2586 
uöt8_t
 *
de°
 = (uöt8_à*)
de°_buf„r
;

2588 
uöt16_t
 
i
 = 0; i < 
‰agmít_cou¡
; i++) {

2589 i‡(
tŸÆ_byãs
 + 
‰agmíts
[
i
].
Àngth
 > 
de°_size
) {

2590 
	`LOG_WARNING
("Fragment consolidation wouldÉxceed buffer size");

2595 
	`mem˝y
(
de°
 + 
tŸÆ_byãs
, (*)
‰agmíts
[
i
].
physiˇl_addr
, føgmíts[i].
Àngth
);

2596 
tŸÆ_byãs
 +
‰agmíts
[
i
].
Àngth
;

2599 
	`LOG_TRACE
("C⁄sﬁid©ed %d føgmít†ötÿ%d byãs", 
‰agmít_cou¡
, 
tŸÆ_byãs
);

2601  
tŸÆ_byãs
;

2602 
	}
}

2608 
adv™˚d_dma_c⁄ãxt_t
 *
	$gë_adv™˚d_dma_c⁄ãxt
() {

2609  
g_adv™˚d_dma_öôülized
 ? &
g_adv™˚d_dma_c⁄ãxt
 : 
NULL
;

2610 
	}
}

2618 
	$öôülize_globÆ_adv™˚d_dma
(
uöt16_t
 
io_ba£
, 
uöt8_t
 
úq
) {

2619 i‡(
g_adv™˚d_dma_öôülized
) {

2620 
	`LOG_WARNING
("Advanced DMAálready initialized, cleaning up first");

2621 
	`adv™˚d_dma_˛ónup
(&
g_adv™˚d_dma_c⁄ãxt
);

2622 
g_adv™˚d_dma_öôülized
 = 
Ál£
;

2625 
ªsu…
 = 
	`adv™˚d_dma_öô
(&
g_adv™˚d_dma_c⁄ãxt
, 
io_ba£
, 
úq
);

2626 i‡(
ªsu…
 == 0) {

2627 
g_adv™˚d_dma_öôülized
 = 
åue
;

2628 
	`LOG_INFO
("Globaládvanced DMA system initialized");

2631  
ªsu…
;

2632 
	}
}

2646 
	$mii_ªad_ªgi°î
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt8_t
 
phy_addr
, uöt8_à
ªg_addr
) {

2647 
uöt16_t
 
vÆue
 = 0;

2648 
i
;

2650 i‡(!
˘x
) {

2651 
	`LOG_ERROR
("Invalid context for MIIÑead");

2656 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SELECT_WINDOW
 | 
_3C515_TX_WINDOW_4
);

2657 
	`dñay_mûli£c⁄ds
(1);

2660 
i
 = 0; i < 32; i++) {

2661 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2662 
	`udñay
(1);

2663 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2664 
	`udñay
(1);

2665 }\
n


2666  \
n
 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
);

2667 
	`udñay
(1);

2668 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2669 
	`udñay
(1);

2671 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2672 
	`udñay
(1);

2673 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2674 
	`udñay
(1);

2677 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2678 
	`udñay
(1);

2679 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2680 
	`udñay
(1);

2682 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
);

2683 
	`udñay
(1);

2684 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2685 
	`udñay
(1);

2688 
i
 = 4; i >= 0; i--) {

2689 
uöt16_t
 
bô
 = (
phy_addr
 & (1 << 
i
)Ë? 
PHY_CTRL_MGMT_DATA
 : 0;

2690 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
);

2691 
	`udñay
(1);

2692 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2693 
	`udñay
(1);

2697 
i
 = 4; i >= 0; i--) {

2698 
uöt16_t
 
bô
 = (
ªg_addr
 & (1 << 
i
)Ë? 
PHY_CTRL_MGMT_DATA
 : 0;

2699 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
);

2700 
	`udñay
(1);

2701 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2702 
	`udñay
(1);

2706 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 0);

2707 
	`udñay
(1);

2708 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_CLK
);

2709 
	`udñay
(1);

2711 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 0);

2712 
	`udñay
(1);

2713 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_CLK
);

2714 
	`udñay
(1);

2717 
i
 = 15; i >= 0; i--) {

2718 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 0);

2719 
	`udñay
(1);

2721 
uöt16_t
 
°©us
 = 
	`öw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_STATUS
);

2722 i‡(
°©us
 & 
PHY_CTRL_MGMT_DATA
) {

2723 
vÆue
 |(1 << 
i
);

2726 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_CLK
);

2727 
	`udñay
(1);

2731 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 0);

2733 
	`LOG_DEBUG
("MIIÑód: PHY=0x%02X, Reg=0x%02X, VÆue=0x%04X", 
phy_addr
, 
ªg_addr
, 
vÆue
);

2735  
vÆue
;

2736 
	}
}

2746 
	$mii_wrôe_ªgi°î
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt8_t
 
phy_addr
, uöt8_à
ªg_addr
, 
uöt16_t
 
vÆue
) {

2747 
i
;

2749 i‡(!
˘x
) {

2750 
	`LOG_ERROR
("Invalid context for MII write");

2755 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SELECT_WINDOW
 | 
_3C515_TX_WINDOW_4
);

2756 
	`dñay_mûli£c⁄ds
(1);

2759 
i
 = 0; i < 32; i++) {

2760 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2761 
	`udñay
(1);

2762 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2763 
	`udñay
(1);

2767 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
);

2768 
	`udñay
(1);

2769 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2770 
	`udñay
(1);

2772 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2773 
	`udñay
(1);

2774 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2775 
	`udñay
(1);

2778 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
);

2779 
	`udñay
(1);

2780 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2781 
	`udñay
(1);

2783 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2784 
	`udñay
(1);

2785 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2786 
	`udñay
(1);

2789 
i
 = 4; i >= 0; i--) {

2790 
uöt16_t
 
bô
 = (
phy_addr
 & (1 << 
i
)Ë? 
PHY_CTRL_MGMT_DATA
 : 0;

2791 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
);

2792 
	`udñay
(1);

2793 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2794 
	`udñay
(1);

2798 
i
 = 4; i >= 0; i--) {

2799 
uöt16_t
 
bô
 = (
ªg_addr
 & (1 << 
i
)Ë? 
PHY_CTRL_MGMT_DATA
 : 0;

2800 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
);

2801 
	`udñay
(1);

2802 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2803 
	`udñay
(1);

2807 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
);

2808 
	`udñay
(1);

2809 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_DATA
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2810 
	`udñay
(1);

2812 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
);

2813 
	`udñay
(1);

2814 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2815 
	`udñay
(1);

2818 
i
 = 15; i >= 0; i--) {

2819 
uöt16_t
 
bô
 = (
vÆue
 & (1 << 
i
)Ë? 
PHY_CTRL_MGMT_DATA
 : 0;

2820 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
);

2821 
	`udñay
(1);

2822 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 
bô
 | 
PHY_CTRL_MGMT_OE
 | 
PHY_CTRL_MGMT_CLK
);

2823 
	`udñay
(1);

2827 
	`outw
(
˘x
->
io_ba£
 + 
_3C515_W4_PHY_CTRL
, 0);

2829 
	`LOG_DEBUG
("MII wrôe: PHY=0x%02X, Reg=0x%02X, VÆue=0x%04X", 
phy_addr
, 
ªg_addr
, 
vÆue
);

2832 
	}
}

2840 
	$°¨t_aut⁄egŸüti⁄
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 
advîti£d_modes
) {

2841 
ªsu…
;

2842 
uöt16_t
 
c⁄åﬁ_ªg
;

2844 i‡(!
˘x
) {

2845 
	`LOG_ERROR
("Invalid context foráuto-negotiation start");

2849 
	`LOG_DEBUG
("Sèπögáuto-√gŸüti⁄ wôh modes: 0x%04X", 
advîti£d_modes
);

2852 
ªsu…
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_CONTROL_REG
);

2853 i‡(
ªsu…
 < 0) {

2854 
	`LOG_ERROR
("FailedÅoÑead MII controlÑegister");

2855  
ªsu…
;

2857 
c⁄åﬁ_ªg
 = 
ªsu…
;

2860 
ªsu…
 = 
	`mii_wrôe_ªgi°î
(
˘x
, 0x18, 
MII_AUTONEG_ADV_REG
, 
advîti£d_modes
);

2861 i‡(
ªsu…
 < 0) {

2862 
	`LOG_ERROR
("FailedÅo writeáuto-negotiationádvertisement");

2863  
ªsu…
;

2867 
c⁄åﬁ_ªg
 |
MII_CTRL_AUTONEG_EN
 | 
MII_CTRL_RESTART_AN
;

2868 
ªsu…
 = 
	`mii_wrôe_ªgi°î
(
˘x
, 0x18, 
MII_CONTROL_REG
, 
c⁄åﬁ_ªg
);

2869 i‡(
ªsu…
 < 0) {

2870 
	`LOG_ERROR
("FailedÅo startáuto-negotiation");

2871  
ªsu…
;

2874 
	`LOG_DEBUG
("Auto-negotiation started successfully");

2876 
	}
}

2883 
	$check_aut⁄egŸüti⁄_com∂ëe
(
nic_c⁄ãxt_t
 *
˘x
) {

2884 
ªsu…
;

2886 i‡(!
˘x
) {

2890 
ªsu…
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_STATUS_REG
);

2891 i‡(
ªsu…
 < 0) {

2892  
ªsu…
;

2895  (
ªsu…
 & 
MII_STAT_AUTONEG_COMP
) ? 1 : 0;

2896 
	}
}

2905 
	$gë_aut⁄egŸüti⁄_ªsu…
(
nic_c⁄ãxt_t
 *
˘x
, 
uöt16_t
 *
•ìd
, 
boﬁ
 *
fuŒ_du∂ex
) {

2906 
adv_ªg
, 
lök_ªg
, 
comm⁄_modes
;

2908 i‡(!
˘x
 || !
•ìd
 || !
fuŒ_du∂ex
) {

2913 
adv_ªg
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_AUTONEG_ADV_REG
);

2914 i‡(
adv_ªg
 < 0) {

2915 
	`LOG_ERROR
("FailedÅoÑeadádvertisementÑegister");

2916  
adv_ªg
;

2919 
lök_ªg
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_AUTONEG_LINK_REG
);

2920 i‡(
lök_ªg
 < 0) {

2921 
	`LOG_ERROR
("FailedÅoÑeadÜinkÖartnerÑegister");

2922  
lök_ªg
;

2926 
comm⁄_modes
 = 
adv_ªg
 & 
lök_ªg
;

2929 i‡(
comm⁄_modes
 & 
MII_ADV_100_TX_FD
) {

2930 *
•ìd
 = 100;

2931 *
fuŒ_du∂ex
 = 
åue
;

2932 } i‡(
comm⁄_modes
 & 
MII_ADV_100_TX_HD
) {

2933 *
•ìd
 = 100;

2934 *
fuŒ_du∂ex
 = 
Ál£
;

2935 } i‡(
comm⁄_modes
 & 
MII_ADV_10_FD
) {

2936 *
•ìd
 = 10;

2937 *
fuŒ_du∂ex
 = 
åue
;

2938 } i‡(
comm⁄_modes
 & 
MII_ADV_10_HD
) {

2939 *
•ìd
 = 10;

2940 *
fuŒ_du∂ex
 = 
Ál£
;

2942 
	`LOG_ERROR
("No commonáuto-negotiation modes found");

2946 
	`LOG_INFO
("Auto-negotiation complete: %d Mbps %s-duplex",

2947 *
•ìd
, *
fuŒ_du∂ex
 ? "Full" : "Half");

2950 
	}
}

2957 
	$c⁄figuª_mii_å™s˚ivî
(
nic_c⁄ãxt_t
 *
˘x
) {

2958 
ªsu…
, 
timeout
;

2959 
uöt16_t
 
phy_id1
, 
phy_id2
, 
•ìd
 = 100;

2960 
boﬁ
 
fuŒ_du∂ex
 = 
åue
;

2961 
uöt16_t
 
advîti£_modes
;

2963 i‡(!
˘x
) {

2964 
	`LOG_ERROR
("Invalid context for MII configuration");

2968 
	`LOG_DEBUG
("Configuring MIIÅransceiver for 3C515-TX");

2971 
ªsu…
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_PHY_ID1_REG
);

2972 i‡(
ªsu…
 < 0) {

2973 
	`LOG_ERROR
("FailedÅoÑead PHY ID1");

2974  
ªsu…
;

2976 
phy_id1
 = 
ªsu…
;

2978 
ªsu…
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_PHY_ID2_REG
);

2979 i‡(
ªsu…
 < 0) {

2980 
	`LOG_ERROR
("FailedÅoÑead PHY ID2");

2981  
ªsu…
;

2983 
phy_id2
 = 
ªsu…
;

2985 
	`LOG_INFO
("MII PHY dëe˘ed: ID1=0x%04X, ID2=0x%04X", 
phy_id1
, 
phy_id2
);

2988 
ªsu…
 = 
	`mii_wrôe_ªgi°î
(
˘x
, 0x18, 
MII_CONTROL_REG
, 
MII_CTRL_RESET
);

2989 i‡(
ªsu…
 < 0) {

2990 
	`LOG_ERROR
("FailedÅoÑeset PHY");

2991  
ªsu…
;

2995 
timeout
 = 1000;

2997 
	`dñay_mûli£c⁄ds
(10);

2998 
ªsu…
 = 
	`mii_ªad_ªgi°î
(
˘x
, 0x18, 
MII_CONTROL_REG
);

2999 i‡(
ªsu…
 < 0) {

3000 
	`LOG_ERROR
("FailedÅoÑead controlÑegister duringÑeset");

3001  
ªsu…
;

3003 } (
ªsu…
 & 
MII_CTRL_RESET
Ë&& --
timeout
 > 0);

3005 i‡(
timeout
 <= 0) {

3006 
	`LOG_ERROR
("PHYÑesetÅimeout");

3010 
	`LOG_DEBUG
("PHYÑeset complete");

3013 
advîti£_modes
 = 
MII_ADV_SELECTOR_FIELD
 | 
MII_ADV_10_HD
 | 
MII_ADV_10_FD
 |

3014 
MII_ADV_100_TX_HD
 | 
MII_ADV_100_TX_FD
 | 
MII_ADV_PAUSE
;

3017 
ªsu…
 = 
	`°¨t_aut⁄egŸüti⁄
(
˘x
, 
advîti£_modes
);

3018 i‡(
ªsu…
 < 0) {

3019 
	`LOG_ERROR
("FailedÅo startáuto-negotiation");

3020  
ªsu…
;

3024 
timeout
 = 3000;

3026 
	`dñay_mûli£c⁄ds
(10);

3027 
ªsu…
 = 
	`check_aut⁄egŸüti⁄_com∂ëe
(
˘x
);

3028 i‡(
ªsu…
 < 0) {

3029 
	`LOG_ERROR
("FailedÅo checkáuto-negotiation status");

3030  
ªsu…
;

3032 } 
ªsu…
 =0 && --
timeout
 > 0);

3034 i‡(
timeout
 <= 0) {

3035 
	`LOG_WARNING
("Auto-negotiationÅimeout, using fallback configuration");

3036 
•ìd
 = 100;

3037 
fuŒ_du∂ex
 = 
åue
;

3040 
ªsu…
 = 
	`gë_aut⁄egŸüti⁄_ªsu…
(
˘x
, &
•ìd
, &
fuŒ_du∂ex
);

3041 i‡(
ªsu…
 < 0) {

3042 
	`LOG_WARNING
("FailedÅo getáuto-negotiationÑesults, using fallback");

3043 
•ìd
 = 100;

3044 
fuŒ_du∂ex
 = 
åue
;

3049 
˘x
->
medü_c⁄fig
.
lök_•ìd
 = 
•ìd
;

3050 
˘x
->
medü_c⁄fig
.
du∂ex_mode
 = 
fuŒ_du∂ex
 ? 
DUPLEX_FULL
 : 
DUPLEX_HALF
;

3051 
˘x
->
medü_c⁄fig
.
auto_√gŸüti⁄
 = 1;

3052 
˘x
->
medü_c⁄fig
.
lök_a˘ive
 = 1;

3054 
	`LOG_INFO
("MIIÅransceiver configured: %d Mbps %s-duplex",

3055 
•ìd
, 
fuŒ_du∂ex
 ? "Full" : "Half");

3058 
	}
}

3063 
	$˛ónup_globÆ_adv™˚d_dma
() {

3064 i‡(
g_adv™˚d_dma_öôülized
) {

3065 
	`adv™˚d_dma_˛ónup
(&
g_adv™˚d_dma_c⁄ãxt
);

3066 
g_adv™˚d_dma_öôülized
 = 
Ál£
;

3067 
	`LOG_INFO
("Globaládvanced DMA system cleaned up");

3069 
	}
}

3082 
	$_3c515_£nd_∑ckë_ˇche_ß„
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àn
) {

3083 
_3c515_tx_tx_desc_t
 *
desc
;

3085 i‡(!
nic
 || !
∑ckë
 || 
Àn
 == 0) {

3090 
nic_c⁄ãxt_t
 *
˘x
 = &
g_nic_c⁄ãxt
;

3091 i‡(!
˘x
->
ˇche_m™agemít_avaûabÀ
) {

3092 
	`LOG_DEBUG
("Cache managementÇotávailable, usingÜegacy send");

3093  
	`_3c515_£nd_∑ckë
(
nic
, 
∑ckë
, 
Àn
);

3096 
desc
 = &
nic
->
tx_desc_rög
[nic->
tx_ödex
];

3099 i‡(
desc
->
°©us
 & 
_3C515_TX_TX_DESC_COMPLETE
) {

3104 
	`_3c515_dma_¥ï¨e_buf„rs
((*)
desc
->
addr
, 
Àn
, 
Ál£
);

3107 
	`mem˝y
((*)
desc
->
addr
, 
∑ckë
, 
Àn
);

3110 
	`_3c515_dma_com∂ëe_buf„rs
((*)
desc
->
addr
, 
Àn
, 
Ál£
);

3113 
uöt8_t
 *
tx_buf„r
 = (uöt8_à*)
desc
->
addr
;

3114 i‡(
Àn
 >= 34) {

3115 
checksum_ªsu…
 = 
	`hw_checksum_¥o˚ss_outbound_∑ckë
(
tx_buf„r
, 
Àn
);

3116 i‡(
checksum_ªsu…
 != 0) {

3117 
	`LOG_DEBUG
("Checksum calculation completed for cache-safe outboundÖacket");

3122 
desc
->
Àngth
 = 
Àn
;

3123 
desc
->
°©us
 = 
_3C515_TX_TX_INTR_BIT
;

3126 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_START_DMA_DOWN
);

3129 
nic
->
tx_ödex
 = (nic->tx_ödex + 1Ë% 
TX_RING_SIZE
;

3131 
	`LOG_TRACE
("Síàˇche-ß„Öackë o‡%zu byã†vü DMA", 
Àn
);

3134 
	}
}

3143 
	$_3c515_ª˚ive_∑ckë_ˇche_ß„
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àn
) {

3144 
_3c515_tx_rx_desc_t
 *
desc
;

3146 i‡(!
nic
 || !
buf„r
 || !
Àn
) {

3151 
nic_c⁄ãxt_t
 *
˘x
 = &
g_nic_c⁄ãxt
;

3152 i‡(!
˘x
->
ˇche_m™agemít_avaûabÀ
) {

3153 
	`LOG_DEBUG
("Cache managementÇotávailable, usingÜegacyÑeceive");

3154  
	`_3c515_ª˚ive_∑ckë
(
nic
, 
buf„r
, 
Àn
);

3157 
desc
 = &
nic
->
rx_desc_rög
[nic->
rx_ödex
];

3160 i‡(!(
desc
->
°©us
 & 
_3C515_TX_RX_DESC_COMPLETE
)) {

3164 i‡(
desc
->
°©us
 & 
_3C515_TX_RX_DESC_ERROR
) {

3165 
desc
->
°©us
 = 0;

3166 
nic
->
rx_ödex
 = (nic->rx_ödex + 1Ë% 
RX_RING_SIZE
;

3170 *
Àn
 = 
desc
->
Àngth
 & 
_3C515_TX_RX_DESC_LEN_MASK
;

3173 
	`_3c515_dma_¥ï¨e_buf„rs
((*)
desc
->
addr
, *
Àn
, 
åue
);

3176 
	`mem˝y
(
buf„r
, (*)
desc
->
addr
, *
Àn
);

3179 
	`_3c515_dma_com∂ëe_buf„rs
((*)
desc
->
addr
, *
Àn
, 
åue
);

3182 i‡(*
Àn
 >= 34) {

3183 
checksum_ªsu…
 = 
	`hw_checksum_vîify_öbound_∑ckë
(
buf„r
, *
Àn
);

3184 i‡(
checksum_ªsu…
 < 0) {

3185 
	`LOG_DEBUG
("Checksum verification failed for cache-safe inboundÖacket");

3190 
desc
->
°©us
 = 0;

3193 
nic
->
rx_ödex
 = (nic->rx_ödex + 1Ë% 
RX_RING_SIZE
;

3195 
	`LOG_TRACE
("Re˚ived cache-ß„Öackë o‡%zu byã†vü DMA", *
Àn
);

3198 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/api.c

11 
	~<dos.h
>

12 
	~<°dio.h
>

13 
	~<°rög.h
>

14 
	~"../ö˛ude/≠i.h
"

15 
	~"../ö˛ude/h¨dw¨e.h
"

16 
	~"../ö˛ude/∑ckë_›s.h
"

17 
	~"../ö˛ude/loggög.h
"

18 
	~"../ö˛ude/°©s.h
"

19 
	~"../ö˛ude/routög.h
"

20 
	~"../ö˛ude/¥odu˘i⁄.h
"

23 
	#PD_MAX_HANDLES
 16

	)

24 
	#PD_MAX_TYPES
 8

	)

25 
	#PD_INVALID_HANDLE
 0xFFFF

	)

28 
	#PD_MAX_EXTENDED_HANDLES
 16

	)

29 
	#PD_DEFAULT_PRIORITY
 128

	)

30 
	#PD_MAX_BANDWIDTH
 0

	)

31 
	#PD_QOS_BUFFER_SIZE
 64

	)

32 
	#PD_FLOW_TIMEOUT_MS
 30000

	)

36 
uöt16_t
 
	mh™dÀ
;

37 
uöt16_t
 
	m∑ckë_ty≥
;

38 
uöt8_t
 
	m˛ass
;

39 
uöt8_t
 
	mnumbî
;

40 
uöt8_t
 
	mty≥
;

41 
uöt8_t
 
	mÊags
;

42 
Ár
 *
	mª˚ivî
;

43 
uöt32_t
 
	m∑ckës_ª˚ived
;

44 
uöt32_t
 
	m∑ckës_dr›≥d
;

45 
uöt32_t
 
	m∑ckës_£¡
;

46 
uöt32_t
 
	mbyãs_ª˚ived
;

47 
uöt32_t
 
	mbyãs_£¡
;

48 } 
	tpd_h™dÀ_t
;

51 
pd_h™dÀ_t
 
	gh™dÀs
[
PD_MAX_HANDLES
];

52 
exãnded_∑ckë_h™dÀ_t
 
	gexãnded_h™dÀs
[
PD_MAX_EXTENDED_HANDLES
];

53 
	g√xt_h™dÀ
 = 1;

54 
	g≠i_öôülized
 = 0;

55 
	gexãnded_≠i_öôülized
 = 0;

56 
uöt16_t
 
	gdrivî_sig«tuª
 = 0x3C0D;

59 
boﬁ
 
	glﬂd_bÆ™cög_íabÀd
 = 
Ál£
;

60 
boﬁ
 
	gqos_íabÀd
 = 
Ál£
;

61 
boﬁ
 
	gvútuÆ_öãºu±s_íabÀd
 = 
Ál£
;

62 
uöt32_t
 
	gglobÆ_b™dwidth_limô
 = 0;

63 
pd_lﬂd_bÆ™˚_∑øms_t
 
	gglobÆ_lb_c⁄fig
;

64 
pd_qos_∑øms_t
 
	gdeÁu…_qos_∑øms
;

67 
uöt32_t
 
	gnic_weights
[
MAX_NICS
] = {100, 100};

68 
uöt32_t
 
	gnic_utûiz©i⁄
[
MAX_NICS
] = {0, 0};

69 
uöt32_t
 
	gnic_îr‹_cou¡s
[
MAX_NICS
] = {0, 0};

70 
uöt32_t
 
	gœ°_nic_u£d
 = 0;

74 
uöt8_t
 *
	m∑ckë_d©a
[
PD_QOS_BUFFER_SIZE
];

75 
uöt16_t
 
	m∑ckë_Àngths
[
PD_QOS_BUFFER_SIZE
];

76 
uöt16_t
 
	mh™dÀ_ids
[
PD_QOS_BUFFER_SIZE
];

77 
uöt8_t
 
	m¥i‹ôõs
[
PD_QOS_BUFFER_SIZE
];

78 
uöt8_t
 
	mhód
;

79 
uöt8_t
 
	mèû
;

80 
uöt8_t
 
	mcou¡
;

81 } 
	gqos_∑ckë_queue
;

84 
should_dñivî_∑ckë
(c⁄° 
pd_h™dÀ_t
 *
h™dÀ
, 
uöt16_t
 
ëh_ty≥
, c⁄° 
uöt8_t
 *
∑ckë
);

85 
dñivî_∑ckë_to_h™dÀr
(
pd_h™dÀ_t
 *
h™dÀ
, 
buf„r_desc_t
 *
buf„r
, 
uöt16_t
 
ëh_ty≥
);

86 
uöt32_t
 
ˇlcuœã_avîage_œãncy
(
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
);

87 
uöt32_t
 
ˇlcuœã_jôãr
(
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
);

90 
∑ckë_dñivî_to_h™dÀr
(
uöt16_t
 
h™dÀ
, uöt16_à
Àngth
,

91 c⁄° 
Ár
 *
∑ckë_d©a
,

92 
Ár
 *
ª˚ivî_func
);

95 #¥agm®
code_£g
("COLD_TEXT", "CODE")

102 
	$≠i_öô
(c⁄° 
c⁄fig_t
 *
c⁄fig
) {

103 
i
;

105 i‡(!
c⁄fig
) {

106 
	`log_îr‹
("api_init: NULL configÖarameter");

107  
API_ERR_INVALID_PARAM
;

110 
	`log_öfo
("Initializing Packet Driver API");

113 i‡(
c⁄fig
->
magic
 !
CONFIG_MAGIC
) {

114 
	`log_îr‹
("InvÆid c⁄figuøti⁄ magic: 0x%04X", 
c⁄fig
->
magic
);

115  
API_ERR_INVALID_PARAM
;

119 
	`mem£t
(
h™dÀs
, 0, (handles));

120 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

121 
h™dÀs
[
i
].
h™dÀ
 = 
PD_INVALID_HANDLE
;

124 
√xt_h™dÀ
 = 1;

125 
≠i_öôülized
 = 1;

128 
ªsu…
 = 
	`≠i_öô_exãnded_h™dÀs
();

129 i‡(
ªsu…
 !
API_SUCCESS
) {

130 
	`log_w¨nög
("Exãnded API inôüliz©i⁄ faûed: %d", 
ªsu…
);

134 
	`log_öfo
("Packet Driver API initialized successfully");

135 
	`log_öfo
("Phase 3 Extended API: %s",

136 
exãnded_≠i_öôülized
 ? "enabled" : "disabled");

138 
	}
}

144 
	$≠i_˛ónup
() {

145 
i
;

147 i‡(!
≠i_öôülized
) {

151 
	`log_öfo
("Cleaning up Packet Driver API");

154 i‡(
qos_íabÀd
) {

155 
qos_íabÀd
 = 
Ál£
;

156 
	`mem£t
(&
qos_∑ckë_queue
, 0, (qos_packet_queue));

159 i‡(
lﬂd_bÆ™cög_íabÀd
) {

160 
lﬂd_bÆ™cög_íabÀd
 = 
Ál£
;

161 
	`mem£t
(&
globÆ_lb_c⁄fig
, 0, (global_lb_config));

165 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

166 i‡(
h™dÀs
[
i
].
h™dÀ
 !
PD_INVALID_HANDLE
) {

167 
	`pd_ªÀa£_h™dÀ
(
h™dÀs
[
i
].
h™dÀ
);

172 
	`≠i_˛ónup_exãnded_h™dÀs
();

174 
≠i_öôülized
 = 0;

175 
	`log_öfo
("Packet Driver API cleanup completed");

178 
	}
}

187 
	$pd_ac˚ss_ty≥
(
uöt8_t
 
fun˘i⁄
, 
uöt16_t
 
h™dÀ
, *
∑øms
) {

188 
	`log_debug
("PD Ac˚ss: fun˘i⁄=0x%04X, h™dÀ=%04X", 
fun˘i⁄
, 
h™dÀ
);

191 i‡(
fun˘i⁄
 < 
PD_FUNC_DRIVER_INFO
 ||

192 (
fun˘i⁄
 > 
PD_FUNC_SET_ADDRESS
 && fun˘i⁄ < 
PD_FUNC_SET_HANDLE_PRIORITY
) ||

193 
fun˘i⁄
 > 
PD_FUNC_GET_ERROR_INFO
) {

194 
	`log_îr‹
("InvÆid fun˘i⁄Çumbî: 0x%04X", 
fun˘i⁄
);

195  
API_ERR_BAD_FUNCTION
;

198 i‡(!
≠i_öôülized
) {

199 
	`log_îr‹
("APIÇot initialized");

200  
API_ERR_NOT_INITIALIZED
;

203 
fun˘i⁄
) {

204 
PD_FUNC_DRIVER_INFO
:

205  
	`pd_gë_drivî_öfo
(
∑øms
);

206 
PD_FUNC_ACCESS_TYPE
:

207  
	`pd_h™dÀ_ac˚ss_ty≥
(
∑øms
);

208 
PD_FUNC_RELEASE_TYPE
:

209  
	`pd_ªÀa£_h™dÀ
(
h™dÀ
);

210 
PD_FUNC_SEND_PKT
:

211  
	`pd_£nd_∑ckë
(
h™dÀ
, 
∑øms
);

212 
PD_FUNC_TERMINATE
:

213  
	`pd_ãrmö©e
(
h™dÀ
);

214 
PD_FUNC_GET_ADDRESS
:

215  
	`pd_gë_addªss
(
h™dÀ
, 
∑øms
);

216 
PD_FUNC_RESET_INTERFACE
:

217  
	`pd_ª£t_öãrÁ˚
(
h™dÀ
);

218 
PD_FUNC_GET_PARAMETERS
:

219  
	`pd_gë_∑ømëîs
(
h™dÀ
, 
∑øms
);

220 
PD_FUNC_SET_RCV_MODE
:

221  
	`pd_£t_rcv_mode
(
h™dÀ
, 
∑øms
);

222 
PD_FUNC_GET_RCV_MODE
:

223  
	`pd_gë_rcv_mode
(
h™dÀ
, 
∑øms
);

224 
PD_FUNC_GET_STATISTICS
:

225  
	`pd_gë_°©i°ics
(
h™dÀ
, 
∑øms
);

226 
PD_FUNC_SET_ADDRESS
:

227  
	`pd_£t_addªss
(
h™dÀ
, 
∑øms
);

230 
PD_FUNC_SET_HANDLE_PRIORITY
:

231  
	`pd_£t_h™dÀ_¥i‹ôy
(
h™dÀ
, 
∑øms
);

232 
PD_FUNC_GET_ROUTING_INFO
:

233  
	`pd_gë_routög_öfo
(
h™dÀ
, 
∑øms
);

234 
PD_FUNC_SET_LOAD_BALANCE
:

235  
	`pd_£t_lﬂd_bÆ™˚
(
h™dÀ
, 
∑øms
);

236 
PD_FUNC_GET_NIC_STATUS
:

237  
	`pd_gë_nic_°©us
(
h™dÀ
, 
∑øms
);

238 
PD_FUNC_SET_QOS_PARAMS
:

239  
	`pd_£t_qos_∑øms
(
h™dÀ
, 
∑øms
);

240 
PD_FUNC_GET_FLOW_STATS
:

241  
	`pd_gë_Êow_°©s
(
h™dÀ
, 
∑øms
);

242 
PD_FUNC_SET_NIC_PREFERENCE
:

243  
	`pd_£t_nic_¥e„ªn˚
(
h™dÀ
, 
∑øms
);

244 
PD_FUNC_GET_HANDLE_INFO
:

245  
	`pd_gë_h™dÀ_öfo
(
h™dÀ
, 
∑øms
);

246 
PD_FUNC_SET_BANDWIDTH_LIMIT
:

247  
	`pd_£t_b™dwidth_limô
(
h™dÀ
, 
∑øms
);

248 
PD_FUNC_GET_ERROR_INFO
:

249  
	`pd_gë_îr‹_öfo
(
h™dÀ
, 
∑øms
);

252 
	`log_îr‹
("Unknow¿∑ckë drivî fun˘i⁄: %d", 
fun˘i⁄
);

253  
API_ERR_BAD_FUNCTION
;

255 
	}
}

262 
	$pd_gë_drivî_öfo
(*
öfo_±r
) {

263 
pd_drivî_öfo_t
 *
öfo
 = (pd_drivî_öfo_à*)
öfo_±r
;

265 i‡(!
öfo_±r
) {

266  
API_ERR_INVALID_PARAM
;

270 
öfo
->
vîsi⁄
 = 0x0100;

271 
öfo
->
˛ass
 = 
PD_CLASS_ETHERNET
;

272 
öfo
->
ty≥
 = 
PD_TYPE_3COM
;

273 
öfo
->
numbî
 = 0;

274 
öfo
->
basic
 = 1;

275 
öfo
->
exãnded
 = 1;

276 
öfo
->
high_≥rf‹m™˚
 = 0;

278 
	`°∫˝y
(
öfo
->
«me
, "3Com Packet Driver", (info->name) - 1);

279 
öfo
->
«me
[(info->name) - 1] = '\0';

281 
	`log_debug
("Driver infoÑequested");

283 
	}
}

290 
	$pd_h™dÀ_ac˚ss_ty≥
(*
∑øms
) {

291 
pd_ac˚ss_∑øms_t
 *
ac˚ss
 = (pd_ac˚ss_∑øms_à*)
∑øms
;

292 
i
, 
h™dÀ_idx
 = -1;

294 i‡(!
∑øms
) {

295  
API_ERR_INVALID_PARAM
;

298 
	`log_debug
("Ac˚s†ty≥: cœss=%d,Åy≥=%04X", 
ac˚ss
->
˛ass
,ác˚ss->
ty≥
);

301 i‡(
ac˚ss
->
˛ass
 !
PD_CLASS_ETHERNET
) {

302 
	`log_îr‹
("Unsuµ‹ãdÖackë cœss: %d", 
ac˚ss
->
˛ass
);

303  
API_ERR_INVALID_PARAM
;

307 i‡(
ac˚ss
->
numbî
 >
	`h¨dw¨e_gë_nic_cou¡
()) {

308 
	`log_îr‹
("InvÆid i¡îÁ˚Çumbî: %d", 
ac˚ss
->
numbî
);

309  
API_ERR_NO_INTERFACE
;

313 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

314 i‡(
h™dÀs
[
i
].
h™dÀ
 =
PD_INVALID_HANDLE
) {

315 
h™dÀ_idx
 = 
i
;

320 i‡(
h™dÀ_idx
 < 0) {

321 
	`log_îr‹
("No free handlesávailable");

322  
API_ERR_NO_HANDLES
;

326 
h™dÀs
[
h™dÀ_idx
].
h™dÀ
 = 
√xt_h™dÀ
++;

327 
h™dÀs
[
h™dÀ_idx
].
∑ckë_ty≥
 = 
ac˚ss
->
ty≥
;

328 
h™dÀs
[
h™dÀ_idx
].
˛ass
 = 
ac˚ss
->class;

329 
h™dÀs
[
h™dÀ_idx
].
numbî
 = 
ac˚ss
->number;

330 
h™dÀs
[
h™dÀ_idx
].
ty≥
 = 
ac˚ss
->
basic
;

331 
h™dÀs
[
h™dÀ_idx
].
ª˚ivî
 = 
ac˚ss
->receiver;

332 
h™dÀs
[
h™dÀ_idx
].
∑ckës_ª˚ived
 = 0;

333 
h™dÀs
[
h™dÀ_idx
].
∑ckës_dr›≥d
 = 0;

334 
h™dÀs
[
h™dÀ_idx
].
∑ckës_£¡
 = 0;

335 
h™dÀs
[
h™dÀ_idx
].
byãs_ª˚ived
 = 0;

336 
h™dÀs
[
h™dÀ_idx
].
byãs_£¡
 = 0;

338 
	`log_öfo
("Allocated handle %04X forÅype %04X",

339 
h™dÀs
[
h™dÀ_idx
].
h™dÀ
, 
ac˚ss
->
ty≥
);

341  
h™dÀs
[
h™dÀ_idx
].
h™dÀ
;

342 
	}
}

349 
	$pd_ªÀa£_h™dÀ
(
uöt16_t
 
h™dÀ
) {

350 
i
;

352 
	`log_debug
("Rñósög h™dÀ %04X", 
h™dÀ
);

355 
j
 = 0; j < 
PD_MAX_EXTENDED_HANDLES
; j++) {

356 i‡(
exãnded_h™dÀs
[
j
].
h™dÀ_id
 =
h™dÀ
) {

357 
exãnded_h™dÀs
[
j
].
h™dÀ_id
 = 
PD_INVALID_HANDLE
;

358 
	`mem£t
(&
exãnded_h™dÀs
[
j
], 0, (extended_handles[j]));

359 
exãnded_h™dÀs
[
j
].
h™dÀ_id
 = 
PD_INVALID_HANDLE
;

360 
exãnded_h™dÀs
[
j
].
¥i‹ôy
 = 
PD_DEFAULT_PRIORITY
;

361 
exãnded_h™dÀs
[
j
].
¥e„ºed_nic
 = 0xFF;

367 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

368 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

369 
	`log_öfo
("Released handle %04X (rx=%lu, dropped=%lu)",

370 
h™dÀ
, 
h™dÀs
[
i
].
∑ckës_ª˚ived
,

371 
h™dÀs
[
i
].
∑ckës_dr›≥d
);

373 
h™dÀs
[
i
].
h™dÀ
 = 
PD_INVALID_HANDLE
;

374 
	`mem£t
(&
h™dÀs
[
i
], 0, (handles[i]));

375 
h™dÀs
[
i
].
h™dÀ
 = 
PD_INVALID_HANDLE
;

380 
	`log_îr‹
("H™dÀ %04XÇŸ found", 
h™dÀ
);

381  
API_ERR_BAD_HANDLE
;

382 
	}
}

390 
	$pd_£nd_∑ckë
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

391 
pd_£nd_∑øms_t
 *
£nd
 = (pd_£nd_∑øms_à*)
∑øms
;

392 
buf„r_desc_t
 *
tx_buf„r
 = 
NULL
;

393 
ªsu…
;

394 
i
, 
h™dÀ_idx
 = -1;

395 
uöt8_t
 
öãrÁ˚_num
 = 0;

397 i‡(!
∑øms
 || !
£nd
->
buf„r
) {

398  
API_ERR_INVALID_PARAM
;

401 
	`log_debug
("SídÖackë: h™dÀ=%04X,Üí=%d", 
h™dÀ
, 
£nd
->
Àngth
);

404 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

405 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

406 
h™dÀ_idx
 = 
i
;

407 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

412 i‡(
h™dÀ_idx
 < 0) {

413 
	`log_îr‹
("InvÆid h™dÀ %04X", 
h™dÀ
);

414  
API_ERR_BAD_HANDLE
;

418 i‡(
£nd
->
Àngth
 < 60 || send->length > 1514) {

419 
	`log_îr‹
("InvÆidÖackëÜígth: %d", 
£nd
->
Àngth
);

420  
API_ERR_INVALID_PARAM
;

424 
tx_buf„r
 = 
	`buf„r_Æloc_ëhî√t_‰ame
(
£nd
->
Àngth
, 
BUFFER_TYPE_TX
);

425 i‡(!
tx_buf„r
) {

426 
	`log_îr‹
("FailedÅoállocate TX buffer");

427  
API_ERR_INVALID_PARAM
;

431 
ªsu…
 = 
	`buf„r_£t_d©a
(
tx_buf„r
, 
£nd
->
buf„r
, síd->
Àngth
);

432 i‡(
ªsu…
 < 0) {

433 
	`log_îr‹
("FailedÅo copyÖacket dataÅo TX buffer");

434 
	`buf„r_‰ì_™y
(
tx_buf„r
);

435  
API_ERR_INVALID_PARAM
;

441 
ªsu…
 = 
	`≠i_check_b™dwidth_limô
(
h™dÀ
, 
£nd
->
Àngth
);

442 i‡(
ªsu…
 !
API_SUCCESS
) {

443 
	`log_debug
("B™dwidthÜimôÉx˚eded f‹ h™dÀ %04X", 
h™dÀ
);

444 
	`buf„r_‰ì_™y
(
tx_buf„r
);

445  
ªsu…
;

449 
uöt8_t
 
£À˘ed_nic
 = 
öãrÁ˚_num
;

450 
ªsu…
 = 
	`≠i_£À˘_›timÆ_nic
(
h™dÀ
, 
£nd
->
buf„r
, &
£À˘ed_nic
);

451 i‡(
ªsu…
 =
API_SUCCESS
 && 
£À˘ed_nic
 !
öãrÁ˚_num
) {

453 
öãrÁ˚_num
 = 
£À˘ed_nic
;

456 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

457 i‡(
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
Ë=
API_SUCCESS
) {

458 
ext_h™dÀ
->
nic_swôches
++;

459 
ext_h™dÀ
->
öãrÁ˚_num
 = 
£À˘ed_nic
;

462 
	`log_debug
("I¡ñligíàroutög sñe˘ed NIC %d f‹ h™dÀ %04X", 
£À˘ed_nic
, 
h™dÀ
);

466 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

467 i‡(!
nic
 || !nic->
›s
 || !nic->›s->
£nd_∑ckë
) {

468 
	`buf„r_‰ì_™y
(
tx_buf„r
);

469  
API_ERR_FUNCTION_NOT_SUPPORTED
;

472 
ªsu…
 = 
nic
->
›s
->
	`£nd_∑ckë
“ic, 
	`buf„r_gë_d©a_±r
(
tx_buf„r
), 
£nd
->
Àngth
);

475 
	`≠i_upd©e_nic_utûiz©i⁄
(
öãrÁ˚_num
, 
£nd
->
Àngth
);

478 
	`buf„r_‰ì_™y
(
tx_buf„r
);

480 i‡(
ªsu…
 < 0) {

481 
	`log_îr‹
("H¨dw¨ê£nd faûed: %d", 
ªsu…
);

482  
ªsu…
;

486 
	`°©s_ö¸emít_tx_∑ckës
();

487 
	`°©s_add_tx_byãs
(
£nd
->
Àngth
);

489 
	`log_debug
("Packë síàsuc˚ssfuŒyÅhrough i¡îÁ˚ %d", 
öãrÁ˚_num
);

491 
	}
}

498 
	$pd_ãrmö©e
(
uöt16_t
 
h™dÀ
) {

499 
	`log_öfo
("DrivîÅîmö©i⁄Ñeque°ed (h™dÀ=%04X)", 
h™dÀ
);

503 i‡(
h™dÀ
 !
PD_INVALID_HANDLE
 && 
	`pd_vÆid©e_h™dÀ
(handle)) {

505  
	`pd_ªÀa£_h™dÀ
(
h™dÀ
);

509  
API_ERR_FUNCTION_NOT_SUPPORTED
;

510 
	}
}

518 
	$pd_gë_addªss
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

519 
pd_addªss_∑øms_t
 *
addr
 = (pd_addªss_∑øms_à*)
∑øms
;

520 
nic_öfo_t
 *
nic
;

522 i‡(!
∑øms
) {

523  
API_ERR_INVALID_PARAM
;

526 
	`log_debug
("Gëáddªss: h™dÀ=%04X", 
h™dÀ
);

529 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

530  
API_ERR_BAD_HANDLE
;

534 
i
, 
öãrÁ˚_num
 = 0;

535 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

536 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

537 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

543 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

544 i‡(!
nic
) {

545  
API_ERR_NO_INTERFACE
;

548 i‡(!
nic
->
›s
 || !nic->›s->
gë_mac_addªss
) {

549  
API_ERR_FUNCTION_NOT_SUPPORTED
;

552  
nic
->
›s
->
	`gë_mac_addªss
“ic, 
addr
->
addªss
);

553 
	}
}

560 
	$pd_ª£t_öãrÁ˚
(
uöt16_t
 
h™dÀ
) {

561 
nic_öfo_t
 *
nic
;

563 
	`log_debug
("Re£àöãrÁ˚: h™dÀ=%04X", 
h™dÀ
);

566 
i
, 
öãrÁ˚_num
 = 0;

567 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

568 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

569 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

574 i‡(
i
 >
PD_MAX_HANDLES
) {

575  
API_ERR_BAD_HANDLE
;

579 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

580  
API_ERR_BAD_HANDLE
;

584 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

585 i‡(!
nic
 || !nic->
›s
 || !nic->›s->
öô
) {

586  
API_ERR_NO_INTERFACE
;

589  
nic
->
›s
->
	`öô
(nic);

590 
	}
}

598 
	$pd_gë_∑ømëîs
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

599 
	`log_debug
("GëÖ¨amëîs: h™dÀ=%04X", 
h™dÀ
);

602 
pd_drivî_öfo_t
 *
drivî_∑øms
 = (pd_drivî_öfo_à*)
∑øms
;

603 
drivî_∑øms
->
vîsi⁄
 = 0x0100;

604 
drivî_∑øms
->
˛ass
 = 
PD_CLASS_ETHERNET
;

605 
drivî_∑øms
->
ty≥
 = 
PD_TYPE_3COM
;

606 
drivî_∑øms
->
basic
 = 1;

607 
drivî_∑øms
->
exãnded
 = 
exãnded_≠i_öôülized
 ? 1 : 0;

608 
drivî_∑øms
->
high_≥rf‹m™˚
 = 0;

610 i‡(!
∑øms
) {

611  
API_ERR_INVALID_PARAM
;

615 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

616  
API_ERR_BAD_HANDLE
;

621 
	}
}

629 
	$pd_£t_rcv_mode
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

630 
uöt16_t
 *
mode
 = (uöt16_à*)
∑øms
;

631 
i
, 
öãrÁ˚_num
 = 0;

632 
nic_öfo_t
 *
nic
;

634 
	`log_debug
("SëÑe˚ivêmode: h™dÀ=%04X", 
h™dÀ
);

636 i‡(!
∑øms
) {

637  
API_ERR_INVALID_PARAM
;

641 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

642  
API_ERR_BAD_HANDLE
;

646 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

647 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

648 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

653 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

654 i‡(!
nic
) {

655  
API_ERR_NO_INTERFACE
;

658 i‡(!
nic
->
›s
 || !nic->›s->
£t_ª˚ive_mode
) {

659  
API_ERR_FUNCTION_NOT_SUPPORTED
;

662  
nic
->
›s
->
	`£t_ª˚ive_mode
“ic, (
uöt8_t
)*
mode
);

663 
	}
}

671 
	$pd_gë_rcv_mode
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

672 
	`log_debug
("GëÑe˚ivêmode: h™dÀ=%04X", 
h™dÀ
);

675 
i
, 
öãrÁ˚_num
 = 0;

676 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

677 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

678 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

683 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

684 i‡(
nic
 &&Çic->
›s
 &&Çic->›s->
gë_ª˚ive_mode
) {

685 
uöt8_t
 
mode
;

686 
ªsu…
 = 
nic
->
›s
->
	`gë_ª˚ive_mode
“ic, &
mode
);

687 i‡(
ªsu…
 == 0) {

688 *(
uöt16_t
 *)
∑øms
 = 
mode
;

690  
ªsu…
;

693 i‡(!
∑øms
) {

694  
API_ERR_INVALID_PARAM
;

698 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

699  
API_ERR_BAD_HANDLE
;

703 
	}
}

711 
	$pd_gë_°©i°ics
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

712 
pd_°©i°ics_t
 *
°©s
 = (pd_°©i°ics_à*)
∑øms
;

713 
i
, 
öãrÁ˚_num
 = 0;

714 
nic_öfo_t
 *
nic
;

716 i‡(!
∑øms
) {

717  
API_ERR_INVALID_PARAM
;

720 
	`log_debug
("Gë sèti°ics: h™dÀ=%04X", 
h™dÀ
);

723 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

724  
API_ERR_BAD_HANDLE
;

728 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

729 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

730 
öãrÁ˚_num
 = 
h™dÀs
[
i
].
numbî
;

733 
°©s
->
∑ckës_ö
 = 
h™dÀs
[
i
].
∑ckës_ª˚ived
;

734 
°©s
->
∑ckës_out
 = 
h™dÀs
[
i
].
∑ckës_£¡
;

735 
°©s
->
byãs_ö
 = 
h™dÀs
[
i
].
byãs_ª˚ived
;

736 
°©s
->
byãs_out
 = 
h™dÀs
[
i
].
byãs_£¡
;

737 
°©s
->
îr‹s_ö
 = 
h™dÀs
[
i
].
∑ckës_dr›≥d
;

738 
°©s
->
îr‹s_out
 = 0;

739 
°©s
->
∑ckës_lo°
 = 
h™dÀs
[
i
].
∑ckës_dr›≥d
;

742 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

743 i‡(
nic
 &&Çic->
›s
 &&Çic->›s->
gë_°©i°ics
) {

745 
nic
->
›s
->
	`gë_°©i°ics
“ic, 
°©s
);

752  
API_ERR_BAD_HANDLE
;

753 
	}
}

761 
	$pd_£t_addªss
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

762 
	`log_debug
("Sëáddªss: h™dÀ=%04X", 
h™dÀ
);

766 
	`log_w¨nög
("Aâem±Åÿ£àMACáddªs†⁄ h™dÀ %04X (nŸáŒowed)", 
h™dÀ
);

768 i‡(!
∑øms
) {

769  
API_ERR_INVALID_PARAM
;

773 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

774  
API_ERR_BAD_HANDLE
;

778  
API_ERR_FUNCTION_NOT_SUPPORTED
;

779 
	}
}

786 
	$pd_vÆid©e_h™dÀ
(
uöt16_t
 
h™dÀ
) {

787 
i
;

789 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

790 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

796 
	}
}

799 #¥agm®
code_£g
()

802 #¥agm®
code_£g
("_TEXT", "CODE")

811 
	$≠i_¥o˚ss_ª˚ived_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
nic_id
) {

812 
i
, 
dñivîed
 = 0;

813 
uöt16_t
 
ëh_ty≥
;

814 
buf„r_desc_t
 *
rx_buf„r
 = 
NULL
;

816 i‡(!
∑ckë
 || 
Àngth
 < 14) {

817  
API_ERR_INVALID_PARAM
;

820 i‡(!
≠i_öôülized
) {

821 
	`log_debug
("APIÇot initialized, droppingÖacket");

822  
API_ERR_NOT_INITIALIZED
;

825 
	`log_debug
("Pro˚ssögÑe˚ivedÖackë,Üígth=%d,Çic=%d", 
Àngth
, 
nic_id
);

828 
ëh_ty≥
 = (
∑ckë
[12] << 8) |Öacket[13];

831 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

832 i‡(
h™dÀs
[
i
].
h™dÀ
 !
PD_INVALID_HANDLE
) {

834 i‡(
	`should_dñivî_∑ckë
(&
h™dÀs
[
i
], 
ëh_ty≥
, 
∑ckë
)) {

836 i‡(!
rx_buf„r
) {

837 
rx_buf„r
 = 
	`buf„r_Æloc_ëhî√t_‰ame
(
Àngth
, 
BUFFER_TYPE_RX
);

838 i‡(!
rx_buf„r
) {

839 
	`log_îr‹
("FailedÅoállocate RX buffer forÖacket delivery");

840  
API_ERR_INVALID_PARAM
;

843 
	`buf„r_£t_d©a
(
rx_buf„r
, 
∑ckë
, 
Àngth
);

847 i‡(
	`dñivî_∑ckë_to_h™dÀr
(&
h™dÀs
[
i
], 
rx_buf„r
, 
ëh_ty≥
)) {

848 
h™dÀs
[
i
].
∑ckës_ª˚ived
++;

849 
dñivîed
 = 1;

850 
	`log_debug
("DñivîedÖackëÅÿh™dÀ %04X", 
h™dÀs
[
i
].
h™dÀ
);

852 
h™dÀs
[
i
].
∑ckës_dr›≥d
++;

853 
	`log_debug
("FaûedÅÿdñivîÖackëÅÿh™dÀ %04X", 
h™dÀs
[
i
].
h™dÀ
);

860 i‡(
rx_buf„r
) {

861 
	`buf„r_‰ì_™y
(
rx_buf„r
);

864 i‡(!
dñivîed
) {

865 
	`log_debug
("Nÿh™dÀr†f‹ÖackëÅy≥ %04X", 
ëh_ty≥
);

869 
	`°©s_ö¸emít_rx_∑ckës
();

870 
	`°©s_add_rx_byãs
(
Àngth
);

872  
dñivîed
 ? 0 : 
API_ERR_NO_HANDLERS
;

873 
	}
}

882 
	$should_dñivî_∑ckë
(c⁄° 
pd_h™dÀ_t
 *
h™dÀ
, 
uöt16_t
 
ëh_ty≥
, c⁄° 
uöt8_t
 *
∑ckë
) {

883 i‡(!
h™dÀ
 || h™dÀ->h™dÀ =
PD_INVALID_HANDLE
) {

888 i‡(
h™dÀ
->
∑ckë_ty≥
 !0 && h™dÀ->∑ckë_ty≥ !
ëh_ty≥
) {

894 i‡(
h™dÀ
->
Êags
 & 0x01) {

901 
	}
}

910 
	$dñivî_∑ckë_to_h™dÀr
(
pd_h™dÀ_t
 *
h™dÀ
, 
buf„r_desc_t
 *
buf„r
, 
uöt16_t
 
ëh_ty≥
) {

911 
Ár
 *
ª˚ivî
;

912 
uöt16_t
 
Àngth
;

913 
Ár
 *
d©a_±r
;

914 
ªsu…
;

916 i‡(!
h™dÀ
 || !
buf„r
) {

920 
ª˚ivî
 = 
h™dÀ
->receiver;

921 i‡(!
ª˚ivî
) {

922 
	`log_debug
("H™dÀ %04X ha†nÿª˚ivî fun˘i⁄", 
h™dÀ
->handle);

926 
Àngth
 = (
uöt16_t
)
	`buf„r_gë_u£d_size
(
buf„r
);

927 
d©a_±r
 = 
	`buf„r_gë_d©a_±r
(
buf„r
);

930 
ªsu…
 = 
	`∑ckë_dñivî_to_h™dÀr
(
h™dÀ
->h™dÀ, 
Àngth
, 
d©a_±r
, 
ª˚ivî
);

932 i‡(
ªsu…
 == 0) {

933 
	`log_debug
("Suc˚ssfuŒy dñivîedÖackëÅÿª˚ivîáà%Fp", 
ª˚ivî
);

936 
	`log_debug
("FaûedÅÿdñivîÖackëÅÿª˚ivîáà%Fp", 
ª˚ivî
);

939 
	}
}

942 #¥agm®
code_£g
()

945 #¥agm®
code_£g
("COLD_TEXT", "CODE")

953 
	$≠i_öô_exãnded_h™dÀs
() {

954 
i
;

956 i‡(
exãnded_≠i_öôülized
) {

957  
API_SUCCESS
;

961 
	`mem£t
(
exãnded_h™dÀs
, 0, (extended_handles));

962 
i
 = 0; i < 
PD_MAX_EXTENDED_HANDLES
; i++) {

963 
exãnded_h™dÀs
[
i
].
h™dÀ_id
 = 
PD_INVALID_HANDLE
;

964 
exãnded_h™dÀs
[
i
].
¥i‹ôy
 = 
PD_DEFAULT_PRIORITY
;

965 
exãnded_h™dÀs
[
i
].
¥e„ºed_nic
 = 0xFF;

966 
exãnded_h™dÀs
[
i
].
b™dwidth_limô
 = 
PD_MAX_BANDWIDTH
;

967 
exãnded_h™dÀs
[
i
].
Êags
 = 0;

971 
globÆ_lb_c⁄fig
.
mode
 = 
LB_MODE_ROUND_ROBIN
;

972 
globÆ_lb_c⁄fig
.
¥im¨y_nic
 = 0;

973 
globÆ_lb_c⁄fig
.
£c⁄d¨y_nic
 = 1;

974 
globÆ_lb_c⁄fig
.
swôch_thªshﬁd
 = 1000;

975 
globÆ_lb_c⁄fig
.
weight_¥im¨y
 = 100;

976 
globÆ_lb_c⁄fig
.
weight_£c⁄d¨y
 = 100;

979 
deÁu…_qos_∑øms
.
¥i‹ôy_˛ass
 = 
QOS_CLASS_STANDARD
;

980 
deÁu…_qos_∑øms
.
mö_b™dwidth
 = 0;

981 
deÁu…_qos_∑øms
.
max_b™dwidth
 = 0;

982 
deÁu…_qos_∑øms
.
max_œãncy
 = 1000;

983 
deÁu…_qos_∑øms
.
dr›_pﬁicy
 = 0;

986 
	`mem£t
(&
qos_∑ckë_queue
, 0, (qos_packet_queue));

988 
exãnded_≠i_öôülized
 = 1;

989 
	`log_öfo
("Extended API initialized successfully");

991  
API_SUCCESS
;

992 
	}
}

998 
	$≠i_˛ónup_exãnded_h™dÀs
() {

999 
i
;

1001 i‡(!
exãnded_≠i_öôülized
) {

1002  
API_SUCCESS
;

1006 
i
 = 0; i < 
PD_MAX_EXTENDED_HANDLES
; i++) {

1007 
exãnded_h™dÀs
[
i
].
h™dÀ_id
 = 
PD_INVALID_HANDLE
;

1008 
	`mem£t
(&
exãnded_h™dÀs
[
i
], 0, (extended_handles[i]));

1012 
lﬂd_bÆ™cög_íabÀd
 = 
Ál£
;

1013 
qos_íabÀd
 = 
Ál£
;

1014 
vútuÆ_öãºu±s_íabÀd
 = 
Ál£
;

1015 
	`mem£t
(&
globÆ_lb_c⁄fig
, 0, (global_lb_config));

1016 
	`mem£t
(&
deÁu…_qos_∑øms
, 0, (default_qos_params));

1017 
	`mem£t
(&
qos_∑ckë_queue
, 0, (qos_packet_queue));

1019 
exãnded_≠i_öôülized
 = 0;

1020 
	`log_öfo
("Extended API cleanup completed");

1022  
API_SUCCESS
;

1023 
	}
}

1031 
	$≠i_gë_exãnded_h™dÀ
(
uöt16_t
 
h™dÀ
, 
exãnded_∑ckë_h™dÀ_t
 **
ext_h™dÀ
) {

1032 
i
;

1034 i‡(!
ext_h™dÀ
) {

1035  
API_ERR_INVALID_PARAM
;

1038 *
ext_h™dÀ
 = 
NULL
;

1041 
i
 = 0; i < 
PD_MAX_EXTENDED_HANDLES
; i++) {

1042 i‡(
exãnded_h™dÀs
[
i
].
h™dÀ_id
 =
h™dÀ
) {

1043 *
ext_h™dÀ
 = &
exãnded_h™dÀs
[
i
];

1044  
API_SUCCESS
;

1048  
API_ERR_BAD_HANDLE
;

1049 
	}
}

1056 
	$≠i_upgøde_h™dÀ
(
uöt16_t
 
h™dÀ
) {

1057 
i
, 
basic_idx
 = -1, 
ext_idx
 = -1;

1059 i‡(!
exãnded_≠i_öôülized
) {

1060 
ªsu…
 = 
	`≠i_öô_exãnded_h™dÀs
();

1061 i‡(
ªsu…
 !
API_SUCCESS
) {

1062  
ªsu…
;

1067 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

1068 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

1069 
basic_idx
 = 
i
;

1074 i‡(
basic_idx
 < 0) {

1075  
API_ERR_BAD_HANDLE
;

1079 
i
 = 0; i < 
PD_MAX_EXTENDED_HANDLES
; i++) {

1080 i‡(
exãnded_h™dÀs
[
i
].
h™dÀ_id
 =
PD_INVALID_HANDLE
) {

1081 
ext_idx
 = 
i
;

1086 i‡(
ext_idx
 < 0) {

1087  
API_ERR_NO_HANDLES
;

1091 
exãnded_h™dÀs
[
ext_idx
].
h™dÀ_id
 = 
h™dÀs
[
basic_idx
].
h™dÀ
;

1092 
exãnded_h™dÀs
[
ext_idx
].
∑ckë_ty≥
 = 
h™dÀs
[
basic_idx
].packet_type;

1093 
exãnded_h™dÀs
[
ext_idx
].
öãrÁ˚_num
 = 
h™dÀs
[
basic_idx
].
numbî
;

1094 
exãnded_h™dÀs
[
ext_idx
].
ª˚ivî_func
 = 
h™dÀs
[
basic_idx
].
ª˚ivî
;

1097 
exãnded_h™dÀs
[
ext_idx
].
¥i‹ôy
 = 
PD_DEFAULT_PRIORITY
;

1098 
exãnded_h™dÀs
[
ext_idx
].
¥e„ºed_nic
 = 0xFF;

1099 
exãnded_h™dÀs
[
ext_idx
].
b™dwidth_limô
 = 
PD_MAX_BANDWIDTH
;

1100 
exãnded_h™dÀs
[
ext_idx
].
Êags
 = 
HANDLE_FLAG_ROUTING_AWARE
;

1101 
exãnded_h™dÀs
[
ext_idx
].
routög_¥e„ªn˚s
 = 0;

1104 
exãnded_h™dÀs
[
ext_idx
].
∑ckës_rouãd
 = 0;

1105 
exãnded_h™dÀs
[
ext_idx
].
routög_Áûuªs
 = 0;

1106 
exãnded_h™dÀs
[
ext_idx
].
qos_dr›s
 = 0;

1107 
exãnded_h™dÀs
[
ext_idx
].
b™dwidth_dr›s
 = 0;

1108 
exãnded_h™dÀs
[
ext_idx
].
nic_swôches
 = 0;

1109 
exãnded_h™dÀs
[
ext_idx
].
œ°_∑ckë_time
 = 0;

1110 
exãnded_h™dÀs
[
ext_idx
].
byãs_this_£c⁄d
 = 0;

1111 
exãnded_h™dÀs
[
ext_idx
].
time_wödow_°¨t
 = 0;

1113 
	`log_öfo
("Upgøded h™dÀ %04XÅÿexãnded h™dÀ", 
h™dÀ
);

1114  
API_SUCCESS
;

1115 
	}
}

1123 
	$pd_£t_h™dÀ_¥i‹ôy
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1124 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1125 
uöt8_t
 *
¥i‹ôy
 = (uöt8_à*)
∑øms
;

1126 
ªsu…
;

1128 i‡(!
∑øms
) {

1129  
API_ERR_INVALID_PARAM
;

1132 
	`log_debug
("Së h™dÀÖri‹ôy: h™dÀ=%04X,Öri‹ôy=%d", 
h™dÀ
, *
¥i‹ôy
);

1135 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1136 i‡(
ªsu…
 !
API_SUCCESS
) {

1137 
ªsu…
 = 
	`≠i_upgøde_h™dÀ
(
h™dÀ
);

1138 i‡(
ªsu…
 !
API_SUCCESS
) {

1139  
ªsu…
;

1141 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1142 i‡(
ªsu…
 !
API_SUCCESS
) {

1143  
ªsu…
;

1147 
ext_h™dÀ
->
¥i‹ôy
 = *priority;

1148 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_PRIORITY_ENABLED
;

1150 
	`log_öfo
("SëÖri‹ôy %d f‹ h™dÀ %04X", *
¥i‹ôy
, 
h™dÀ
);

1151  
API_SUCCESS
;

1152 
	}
}

1160 
	$pd_gë_routög_öfo
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1161 
pd_routög_öfo_t
 *
öfo
 = (pd_routög_öfo_à*)
∑øms
;

1162 c⁄° 
routög_°©s_t
 *
routög_°©s
;

1164 i‡(!
∑øms
) {

1165  
API_ERR_INVALID_PARAM
;

1168 
	`log_debug
("GëÑoutög info: h™dÀ=%04X", 
h™dÀ
);

1171 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

1172  
API_ERR_BAD_HANDLE
;

1176 
routög_°©s
 = 
	`routög_gë_°©s
();

1177 i‡(!
routög_°©s
) {

1178  
API_ERR_ROUTING_FAILED
;

1182 
öfo
->
rouã_cou¡
 = 
g_routög_èbÀ
.
íåy_cou¡
;

1183 
öfo
->
¨p_íåõs
 = 
g_¨p_ˇche
.
íåy_cou¡
;

1184 
öfo
->
∑ckës_rouãd
 = 
routög_°©s
->packets_routed;

1185 
öfo
->
routög_îr‹s
 = 
routög_°©s
->routing_errors;

1186 
öfo
->
deÁu…_nic
 = 
g_routög_èbÀ
.default_nic;

1187 
öfo
->
routög_mode
 = 
	`routög_is_íabÀd
() ? 1 : 0;

1188 
öfo
->
ª£rved
 = 0;

1190  
API_SUCCESS
;

1191 
	}
}

1199 
	$pd_£t_lﬂd_bÆ™˚
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1200 
pd_lﬂd_bÆ™˚_∑øms_t
 *
lb_∑øms
 = (pd_lﬂd_bÆ™˚_∑øms_à*)
∑øms
;

1201 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1202 
ªsu…
;

1204 i‡(!
∑øms
) {

1205  
API_ERR_INVALID_PARAM
;

1208 
	`log_debug
("SëÜﬂd bÆ™˚: h™dÀ=%04X, mode=%d", 
h™dÀ
, 
lb_∑øms
->
mode
);

1211 i‡(
lb_∑øms
->
mode
 > 
LB_MODE_FLOW_AWARE
) {

1212  
API_ERR_INVALID_PARAM
;

1216 i‡(!
	`routög_vÆid©e_nic
(
lb_∑øms
->
¥im¨y_nic
) ||

1217 !
	`routög_vÆid©e_nic
(
lb_∑øms
->
£c⁄d¨y_nic
)) {

1218  
API_ERR_NIC_UNAVAILABLE
;

1222 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1223 i‡(
ªsu…
 !
API_SUCCESS
) {

1224 
ªsu…
 = 
	`≠i_upgøde_h™dÀ
(
h™dÀ
);

1225 i‡(
ªsu…
 !
API_SUCCESS
) {

1226  
ªsu…
;

1228 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1229 i‡(
ªsu…
 !
API_SUCCESS
) {

1230  
ªsu…
;

1235 
	`mem˝y
(&
globÆ_lb_c⁄fig
, 
lb_∑øms
, (
pd_lﬂd_bÆ™˚_∑øms_t
));

1237 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_LOAD_BALANCE
;

1238 
lﬂd_bÆ™cög_íabÀd
 = 
åue
;

1240 
	`log_öfo
("Lﬂd bÆ™cögÉ«bÀd f‹ h™dÀ %04X (mode=%d)", 
h™dÀ
, 
lb_∑øms
->
mode
);

1241  
API_SUCCESS
;

1242 
	}
}

1250 
	$pd_gë_nic_°©us
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1251 
pd_nic_°©us_t
 *
°©us
 = (pd_nic_°©us_à*)
∑øms
;

1252 
nic_öfo_t
 *
nic
;

1254 i‡(!
∑øms
) {

1255  
API_ERR_INVALID_PARAM
;

1258 
	`log_debug
("Gë NIC sètus: h™dÀ=%04X,Çic=%d", 
h™dÀ
, 
°©us
->
nic_ödex
);

1261 i‡(!
	`routög_vÆid©e_nic
(
°©us
->
nic_ödex
)) {

1262  
API_ERR_NIC_UNAVAILABLE
;

1266 
nic
 = 
	`h¨dw¨e_gë_nic
(
°©us
->
nic_ödex
);

1267 i‡(!
nic
) {

1268  
API_ERR_NIC_UNAVAILABLE
;

1272 
°©us
->°©u†
nic
->status;

1273 
°©us
->
lök_•ìd
 = 
nic
->link_speed;

1274 
°©us
->
utûiz©i⁄
 = 
nic_utûiz©i⁄
[°©us->
nic_ödex
];

1275 
°©us
->
îr‹_cou¡
 = 
nic_îr‹_cou¡s
[°©us->
nic_ödex
];

1276 
°©us
->
œ°_îr‹_time
 = 
	`h¨dw¨e_gë_œ°_îr‹_time
(°©us->
nic_ödex
);

1278 
°©us
->status) {

1279 
NIC_STATUS_UP
:

1280 
	`°r˝y
(
°©us
->
°©us_ãxt
, "Link Up");

1282 
NIC_STATUS_DOWN
:

1283 
	`°r˝y
(
°©us
->
°©us_ãxt
, "Link Down");

1285 
NIC_STATUS_ERROR
:

1286 
	`°r˝y
(
°©us
->
°©us_ãxt
, "Error");

1288 
NIC_STATUS_DEGRADED
:

1289 
	`°r˝y
(
°©us
->
°©us_ãxt
, "Degraded");

1292 
	`°r˝y
(
°©us
->
°©us_ãxt
, "Unknown");

1296  
API_SUCCESS
;

1297 
	}
}

1305 
	$pd_£t_qos_∑øms
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1306 
pd_qos_∑øms_t
 *
qos_∑øms
 = (pd_qos_∑øms_à*)
∑øms
;

1307 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1308 
ªsu…
;

1310 i‡(!
∑øms
) {

1311  
API_ERR_INVALID_PARAM
;

1314 
	`log_debug
("Së QoSÖ¨ams: h™dÀ=%04X, cœss=%d", 
h™dÀ
, 
qos_∑øms
->
¥i‹ôy_˛ass
);

1317 i‡(
qos_∑øms
->
¥i‹ôy_˛ass
 > 
QOS_CLASS_NETWORK
) {

1318  
API_ERR_INVALID_PARAM
;

1322 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1323 i‡(
ªsu…
 !
API_SUCCESS
) {

1324 
ªsu…
 = 
	`≠i_upgøde_h™dÀ
(
h™dÀ
);

1325 i‡(
ªsu…
 !
API_SUCCESS
) {

1326  
ªsu…
;

1328 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1329 i‡(
ªsu…
 !
API_SUCCESS
) {

1330  
ªsu…
;

1335 i‡(
qos_∑øms
->
max_b™dwidth
 > 0) {

1336 
ext_h™dÀ
->
b™dwidth_limô
 = 
qos_∑øms
->
max_b™dwidth
;

1337 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_BANDWIDTH_LIMIT
;

1341 
ext_h™dÀ
->
¥i‹ôy
 = (
qos_∑øms
->
¥i‹ôy_˛ass
 + 1) * 32;

1342 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_QOS_ENABLED
;

1344 
qos_íabÀd
 = 
åue
;

1346 
	`log_öfo
("QoSÉnabled for handle %04X (class=%d,Öriority=%d)",

1347 
h™dÀ
, 
qos_∑øms
->
¥i‹ôy_˛ass
, 
ext_h™dÀ
->
¥i‹ôy
);

1348  
API_SUCCESS
;

1349 
	}
}

1357 
	$pd_gë_Êow_°©s
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1358 
pd_Êow_°©s_t
 *
Êow_°©s
 = (pd_Êow_°©s_à*)
∑øms
;

1359 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1360 
ªsu…
;

1362 i‡(!
∑øms
) {

1363  
API_ERR_INVALID_PARAM
;

1366 
	`log_debug
("Gë flow sèts: h™dÀ=%04X", 
h™dÀ
);

1369 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1370 i‡(
ªsu…
 !
API_SUCCESS
) {

1372 
i
 = 0; i < 
PD_MAX_HANDLES
; i++) {

1373 i‡(
h™dÀs
[
i
].
h™dÀ
 == handle) {

1374 
Êow_°©s
->
h™dÀ
 = handle;

1375 
Êow_°©s
->
Êow_id
 = 
h™dÀ
;

1376 
Êow_°©s
->
∑ckës_£¡
 = 
h™dÀs
[
i
].packets_sent;

1377 
Êow_°©s
->
byãs_£¡
 = 0;

1378 
Êow_°©s
->
avg_œãncy
 = 0;

1379 
Êow_°©s
->
jôãr
 = 0;

1380 
Êow_°©s
->
a˘ive_nic
 = 
h™dÀs
[
i
].
numbî
;

1381 
Êow_°©s
->
Êow_°©e
 = 
FLOW_STATE_ACTIVE
;

1382  
API_SUCCESS
;

1385  
API_ERR_BAD_HANDLE
;

1389 
Êow_°©s
->
h™dÀ
 = handle;

1390 
Êow_°©s
->
Êow_id
 = 
h™dÀ
;

1391 
Êow_°©s
->
∑ckës_£¡
 = 
ext_h™dÀ
->
∑ckës_rouãd
;

1392 
Êow_°©s
->
byãs_£¡
 = 
ext_h™dÀ
->
byãs_this_£c⁄d
;

1393 
Êow_°©s
->
avg_œãncy
 = 
	`ˇlcuœã_avîage_œãncy
(
ext_h™dÀ
);

1394 
Êow_°©s
->
jôãr
 = 
	`ˇlcuœã_jôãr
(
ext_h™dÀ
);

1395 
Êow_°©s
->
a˘ive_nic
 = 
ext_h™dÀ
->
öãrÁ˚_num
;

1396 
Êow_°©s
->
Êow_°©e
 = (
ext_h™dÀ
->
Êags
 & 
HANDLE_FLAG_ROUTING_AWARE
) ?

1397 
FLOW_STATE_ACTIVE
 : 
FLOW_STATE_INACTIVE
;

1399  
API_SUCCESS
;

1400 
	}
}

1408 
	$pd_£t_nic_¥e„ªn˚
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1409 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1410 
uöt8_t
 *
¥e„ºed_nic
 = (uöt8_à*)
∑øms
;

1411 
ªsu…
;

1413 i‡(!
∑øms
) {

1414  
API_ERR_INVALID_PARAM
;

1417 
	`log_debug
("Së NICÖª„ªn˚: h™dÀ=%04X,Çic=%d", 
h™dÀ
, *
¥e„ºed_nic
);

1420 i‡(*
¥e„ºed_nic
 !0xFF && !
	`routög_vÆid©e_nic
(*preferred_nic)) {

1421  
API_ERR_NIC_UNAVAILABLE
;

1425 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1426 i‡(
ªsu…
 !
API_SUCCESS
) {

1427 
ªsu…
 = 
	`≠i_upgøde_h™dÀ
(
h™dÀ
);

1428 i‡(
ªsu…
 !
API_SUCCESS
) {

1429  
ªsu…
;

1431 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1432 i‡(
ªsu…
 !
API_SUCCESS
) {

1433  
ªsu…
;

1437 
ext_h™dÀ
->
¥e„ºed_nic
 = *preferred_nic;

1438 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_NIC_PREFERENCE
;

1440 
	`log_öfo
("Së NICÖª„ªn˚ %d f‹ h™dÀ %04X", *
¥e„ºed_nic
, 
h™dÀ
);

1441  
API_SUCCESS
;

1442 
	}
}

1450 
	$pd_gë_h™dÀ_öfo
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1451 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1452 
exãnded_∑ckë_h™dÀ_t
 *
öfo
 = (exãnded_∑ckë_h™dÀ_à*)
∑øms
;

1453 
ªsu…
;

1455 i‡(!
∑øms
) {

1456  
API_ERR_INVALID_PARAM
;

1459 
	`log_debug
("Gë h™dÀ info: h™dÀ=%04X", 
h™dÀ
);

1462 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1463 i‡(
ªsu…
 !
API_SUCCESS
) {

1464  
API_ERR_BAD_HANDLE
;

1468 
	`mem˝y
(
öfo
, 
ext_h™dÀ
, (
exãnded_∑ckë_h™dÀ_t
));

1470  
API_SUCCESS
;

1471 
	}
}

1479 
	$pd_£t_b™dwidth_limô
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1480 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1481 
uöt32_t
 *
b™dwidth_limô
 = (uöt32_à*)
∑øms
;

1482 
ªsu…
;

1484 i‡(!
∑øms
) {

1485  
API_ERR_INVALID_PARAM
;

1488 
	`log_debug
("Së b™dwidthÜimô: h™dÀ=%04X,Üimô=%lu", 
h™dÀ
, *
b™dwidth_limô
);

1491 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1492 i‡(
ªsu…
 !
API_SUCCESS
) {

1493 
ªsu…
 = 
	`≠i_upgøde_h™dÀ
(
h™dÀ
);

1494 i‡(
ªsu…
 !
API_SUCCESS
) {

1495  
ªsu…
;

1497 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1498 i‡(
ªsu…
 !
API_SUCCESS
) {

1499  
ªsu…
;

1503 
ext_h™dÀ
->
b™dwidth_limô
 = *bandwidth_limit;

1504 i‡(*
b™dwidth_limô
 > 0) {

1505 
ext_h™dÀ
->
Êags
 |
HANDLE_FLAG_BANDWIDTH_LIMIT
;

1507 
ext_h™dÀ
->
Êags
 &~
HANDLE_FLAG_BANDWIDTH_LIMIT
;

1510 
	`log_öfo
("Së b™dwidthÜimô %lu byãs/£¯f‹ h™dÀ %04X", *
b™dwidth_limô
, 
h™dÀ
);

1511  
API_SUCCESS
;

1512 
	}
}

1520 
	$pd_gë_îr‹_öfo
(
uöt16_t
 
h™dÀ
, *
∑øms
) {

1521 
pd_îr‹_öfo_t
 *
îr‹_öfo
 = (pd_îr‹_öfo_à*)
∑øms
;

1523 i‡(!
∑øms
) {

1524  
API_ERR_INVALID_PARAM
;

1527 
	`log_debug
("GëÉº‹ info: h™dÀ=%04X", 
h™dÀ
);

1530 i‡(!
	`pd_vÆid©e_h™dÀ
(
h™dÀ
)) {

1531  
API_ERR_BAD_HANDLE
;

1535 
îr‹_öfo
->
îr‹_code
 = 0;

1536 
îr‹_öfo
->
îr‹_time
 = 0;

1537 
îr‹_öfo
->
af„˘ed_nic
 = 0xFF;

1538 
îr‹_öfo
->
îr‹_£vîôy
 = 
ERROR_SEVERITY_INFO
;

1539 
îr‹_öfo
->
ªcovîy_a˘i⁄
 = 0;

1540 
	`°r˝y
(
îr‹_öfo
->
îr‹_des¸ùti⁄
, "NoÉrrors");

1542  
API_SUCCESS
;

1543 
	}
}

1554 
	$≠i_£À˘_›timÆ_nic
(
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
∑ckë
, uöt8_à*
£À˘ed_nic
) {

1555 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1556 
uöt8_t
 
de°_nic
;

1557 
ªsu…
;

1559 i‡(!
∑ckë
 || !
£À˘ed_nic
) {

1560  
API_ERR_INVALID_PARAM
;

1563 *
£À˘ed_nic
 = 0;

1566 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1567 i‡(
ªsu…
 =
API_SUCCESS
) {

1569 i‡((
ext_h™dÀ
->
Êags
 & 
HANDLE_FLAG_NIC_PREFERENCE
) &&

1570 
ext_h™dÀ
->
¥e„ºed_nic
 != 0xFF &&

1571 
	`routög_vÆid©e_nic
(
ext_h™dÀ
->
¥e„ºed_nic
)) {

1572 *
£À˘ed_nic
 = 
ext_h™dÀ
->
¥e„ºed_nic
;

1573  
API_SUCCESS
;

1577 i‡((
ext_h™dÀ
->
Êags
 & 
HANDLE_FLAG_LOAD_BALANCE
Ë&& 
lﬂd_bÆ™cög_íabÀd
) {

1578  
	`≠i_lﬂd_bÆ™˚_£À˘_nic
(
h™dÀ
, 
∑ckë
, 
£À˘ed_nic
);

1583 i‡(
	`routög_is_íabÀd
(Ë&& 
∑ckë
) {

1584 
∑ckë_buf„r_t
 
routög_∑ckë
;

1585 
routög_∑ckë
.
d©a
 = (
uöt8_t
 *)
∑ckë
;

1586 
routög_∑ckë
.
Àngth
 = 60;

1588 
rouã_decisi⁄_t
 
decisi⁄
 = 
	`routög_decide
(&
routög_∑ckë
, 0, &
de°_nic
);

1589 i‡(
decisi⁄
 =
ROUTE_DECISION_FORWARD
 && 
	`routög_vÆid©e_nic
(
de°_nic
)) {

1590 *
£À˘ed_nic
 = 
de°_nic
;

1593 i‡(
ext_h™dÀ
) {

1594 
ext_h™dÀ
->
∑ckës_rouãd
++;

1596  
API_SUCCESS
;

1601  
	`≠i_round_robö_£À˘_nic
(
£À˘ed_nic
);

1602 
	}
}

1610 
	$≠i_check_b™dwidth_limô
(
uöt16_t
 
h™dÀ
, 
uöt32_t
 
∑ckë_size
) {

1611 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1612 
uöt32_t
 
cuºít_time
;

1613 
ªsu…
;

1616 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1617 i‡(
ªsu…
 !
API_SUCCESS
) {

1618  
API_SUCCESS
;

1622 i‡(!(
ext_h™dÀ
->
Êags
 & 
HANDLE_FLAG_BANDWIDTH_LIMIT
) ||

1623 
ext_h™dÀ
->
b™dwidth_limô
 == 0) {

1624  
API_SUCCESS
;

1629 
cuºít_time
 = 
	`gë_sy°em_time°amp
();

1632 i‡(
cuºít_time
 - 
ext_h™dÀ
->
time_wödow_°¨t
 >= 1000) {

1633 
ext_h™dÀ
->
byãs_this_£c⁄d
 = 0;

1634 
ext_h™dÀ
->
time_wödow_°¨t
 = 
cuºít_time
;

1638 i‡(
ext_h™dÀ
->
byãs_this_£c⁄d
 + 
∑ckë_size
 >Éxt_h™dÀ->
b™dwidth_limô
) {

1639 
ext_h™dÀ
->
b™dwidth_dr›s
++;

1640  
API_ERR_BANDWIDTH_EXCEEDED
;

1644 
ext_h™dÀ
->
byãs_this_£c⁄d
 +
∑ckë_size
;

1646  
API_SUCCESS
;

1647 
	}
}

1654 
	$≠i_h™dÀ_nic_Áûuª
(
uöt8_t
 
Áûed_nic
) {

1655 
h™dÀs_af„˘ed
 = 0;

1657 i‡(!
	`routög_vÆid©e_nic
(
Áûed_nic
)) {

1658  
API_ERR_INVALID_PARAM
;

1661 
	`log_îr‹
("NIC %d faûed, inôütögÑecovîy", 
Áûed_nic
);

1664 i‡(
Áûed_nic
 < 
MAX_NICS
) {

1665 
nic_îr‹_cou¡s
[
Áûed_nic
]++;

1669 
i
 = 0; i < 
PD_MAX_EXTENDED_HANDLES
; i++) {

1670 i‡(
exãnded_h™dÀs
[
i
].
h™dÀ_id
 !
PD_INVALID_HANDLE
) {

1672 i‡(
exãnded_h™dÀs
[
i
].
¥e„ºed_nic
 =
Áûed_nic
 ||

1673 
exãnded_h™dÀs
[
i
].
öãrÁ˚_num
 =
Áûed_nic
) {

1676 
uöt8_t
 
Æã∫©e_nic
;

1677 
ªsu…
 = 
	`≠i_£À˘_›timÆ_nic
(
exãnded_h™dÀs
[
i
].
h™dÀ_id
, 
NULL
, &
Æã∫©e_nic
);

1678 i‡(
ªsu…
 =
API_SUCCESS
 && 
Æã∫©e_nic
 !
Áûed_nic
) {

1679 
exãnded_h™dÀs
[
i
].
öãrÁ˚_num
 = 
Æã∫©e_nic
;

1680 
exãnded_h™dÀs
[
i
].
nic_swôches
++;

1681 
h™dÀs_af„˘ed
++;

1683 
	`log_öfo
("Switched handle %04X from NIC %dÅo NIC %d",

1684 
exãnded_h™dÀs
[
i
].
h™dÀ_id
, 
Áûed_nic
, 
Æã∫©e_nic
);

1691 
	`≠i_co‹dö©e_ªcovîy_wôh_routög
(
Áûed_nic
);

1693 
	`log_öfo
("NIC faûuªÑecovîy com∂ëed, %d h™dÀ†af„˘ed", 
h™dÀs_af„˘ed
);

1694  
API_SUCCESS
;

1695 
	}
}

1702 
	$≠i_co‹dö©e_ªcovîy_wôh_routög
(
uöt8_t
 
Áûed_nic
) {

1704 i‡(
	`routög_is_íabÀd
()) {

1707 
	`log_öfo
("Co‹dö©ög wôhÑoutög sy°em f‹ NIC %d faûuª", 
Áûed_nic
);

1710 i‡(
g_routög_èbÀ
.
deÁu…_nic
 =
Áûed_nic
) {

1712 
i
 = 0; i < 
	`h¨dw¨e_gë_nic_cou¡
(); i++) {

1713 i‡(
i
 !
Áûed_nic
 && 
	`routög_vÆid©e_nic
(i)) {

1714 
	`routög_£t_deÁu…_rouã
(
i
, 
g_routög_èbÀ
.
deÁu…_decisi⁄
);

1715 
	`log_öfo
("Upd©ed deÁu…ÑouãÅÿu£ NIC %d", 
i
);

1722  
API_SUCCESS
;

1723 
	}
}

1726 
	$≠i_lﬂd_bÆ™˚_£À˘_nic
(
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
∑ckë
, uöt8_à*
£À˘ed_nic
) {

1727 
globÆ_lb_c⁄fig
.
mode
) {

1728 
LB_MODE_ROUND_ROBIN
:

1729  
	`≠i_round_robö_£À˘_nic
(
£À˘ed_nic
);

1731 
LB_MODE_WEIGHTED
:

1732  
	`≠i_weighãd_£À˘_nic
(
£À˘ed_nic
);

1734 
LB_MODE_PERFORMANCE
:

1735  
	`≠i_≥rf‹m™˚_£À˘_nic
(
£À˘ed_nic
);

1737 
LB_MODE_APPLICATION
:

1738  
	`≠i_≠∂iˇti⁄_£À˘_nic
(
h™dÀ
, 
£À˘ed_nic
);

1740 
LB_MODE_FLOW_AWARE
:

1741  
	`≠i_Êow_aw¨e_£À˘_nic
(
h™dÀ
, 
∑ckë
, 
£À˘ed_nic
);

1744  
	`≠i_round_robö_£À˘_nic
(
£À˘ed_nic
);

1746 
	}
}

1748 
	$≠i_round_robö_£À˘_nic
(
uöt8_t
 *
£À˘ed_nic
) {

1749 
nic_cou¡
 = 
	`h¨dw¨e_gë_nic_cou¡
();

1751 i‡(
nic_cou¡
 <= 0) {

1752  
API_ERR_NIC_UNAVAILABLE
;

1756 
œ°_nic_u£d
 = (œ°_nic_u£d + 1Ë% 
nic_cou¡
;

1759 i‡(
	`routög_vÆid©e_nic
(
œ°_nic_u£d
)) {

1760 *
£À˘ed_nic
 = 
œ°_nic_u£d
;

1761  
API_SUCCESS
;

1765 
i
 = 0; i < 
nic_cou¡
; i++) {

1766 i‡(
	`routög_vÆid©e_nic
(
i
)) {

1767 *
£À˘ed_nic
 = 
i
;

1768 
œ°_nic_u£d
 = 
i
;

1769  
API_SUCCESS
;

1773  
API_ERR_NIC_UNAVAILABLE
;

1774 
	}
}

1776 
	$≠i_weighãd_£À˘_nic
(
uöt8_t
 *
£À˘ed_nic
) {

1777 
uöt32_t
 
tŸÆ_weight
 = 
globÆ_lb_c⁄fig
.
weight_¥im¨y
 + globÆ_lb_c⁄fig.
weight_£c⁄d¨y
;

1778 
uöt32_t
 
£À˘i⁄_poöt
 = (
œ°_nic_u£d
 * 100Ë% 
tŸÆ_weight
;

1780 i‡(
£À˘i⁄_poöt
 < 
globÆ_lb_c⁄fig
.
weight_¥im¨y
) {

1781 i‡(
	`routög_vÆid©e_nic
(
globÆ_lb_c⁄fig
.
¥im¨y_nic
)) {

1782 *
£À˘ed_nic
 = 
globÆ_lb_c⁄fig
.
¥im¨y_nic
;

1783  
API_SUCCESS
;

1787 i‡(
	`routög_vÆid©e_nic
(
globÆ_lb_c⁄fig
.
£c⁄d¨y_nic
)) {

1788 *
£À˘ed_nic
 = 
globÆ_lb_c⁄fig
.
£c⁄d¨y_nic
;

1789  
API_SUCCESS
;

1793  
	`≠i_round_robö_£À˘_nic
(
£À˘ed_nic
);

1794 
	}
}

1796 
	$≠i_≥rf‹m™˚_£À˘_nic
(
uöt8_t
 *
£À˘ed_nic
) {

1797 
uöt8_t
 
be°_nic
 = 0;

1798 
uöt32_t
 
be°_sc‹e
 = 0xFFFFFFFF;

1800 
i
 = 0; i < 
	`h¨dw¨e_gë_nic_cou¡
(); i++) {

1801 i‡(!
	`routög_vÆid©e_nic
(
i
)) {

1806 
uöt32_t
 
sc‹e
 = 
nic_utûiz©i⁄
[
i
] + (
nic_îr‹_cou¡s
[i] * 10);

1808 i‡(
sc‹e
 < 
be°_sc‹e
) {

1809 
be°_sc‹e
 = 
sc‹e
;

1810 
be°_nic
 = 
i
;

1814 i‡(
	`routög_vÆid©e_nic
(
be°_nic
)) {

1815 *
£À˘ed_nic
 = 
be°_nic
;

1816  
API_SUCCESS
;

1819  
API_ERR_NIC_UNAVAILABLE
;

1820 
	}
}

1822 
	$≠i_≠∂iˇti⁄_£À˘_nic
(
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
£À˘ed_nic
) {

1823 
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
;

1824 
ªsu…
;

1827 
ªsu…
 = 
	`≠i_gë_exãnded_h™dÀ
(
h™dÀ
, &
ext_h™dÀ
);

1828 i‡(
ªsu…
 !
API_SUCCESS
) {

1830  
	`≠i_round_robö_£À˘_nic
(
£À˘ed_nic
);

1834 i‡(
ext_h™dÀ
->
¥i‹ôy
 > 192) {

1835 i‡(
	`routög_vÆid©e_nic
(
globÆ_lb_c⁄fig
.
¥im¨y_nic
)) {

1836 *
£À˘ed_nic
 = 
globÆ_lb_c⁄fig
.
¥im¨y_nic
;

1837  
API_SUCCESS
;

1839 } i‡(
ext_h™dÀ
->
¥i‹ôy
 < 64) {

1840 i‡(
	`routög_vÆid©e_nic
(
globÆ_lb_c⁄fig
.
£c⁄d¨y_nic
)) {

1841 *
£À˘ed_nic
 = 
globÆ_lb_c⁄fig
.
£c⁄d¨y_nic
;

1842  
API_SUCCESS
;

1847  
	`≠i_≥rf‹m™˚_£À˘_nic
(
£À˘ed_nic
);

1848 
	}
}

1850 
	$≠i_Êow_aw¨e_£À˘_nic
(
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
∑ckë
, uöt8_à*
£À˘ed_nic
) {

1851 i‡(!
∑ckë
 || !
£À˘ed_nic
) {

1852  
API_ERR_INVALID_PARAM
;

1856 c⁄° 
uöt8_t
 *
de°_mac
 = 
∑ckë
;

1859 
bridge_íåy_t
 *
bridge_íåy
 = 
	`bridge_lookup_mac
(
de°_mac
);

1860 i‡(
bridge_íåy
 && 
	`routög_vÆid©e_nic
(bridge_íåy->
nic_ödex
)) {

1861 *
£À˘ed_nic
 = 
bridge_íåy
->
nic_ödex
;

1862  
API_SUCCESS
;

1866 
ªsu…
 = 
	`≠i_≥rf‹m™˚_£À˘_nic
(
£À˘ed_nic
);

1869 i‡(
ªsu…
 =
API_SUCCESS
 && 
	`routög_is_íabÀd
()) {

1870 
	`bridge_À¨n_mac
(
de°_mac
, *
£À˘ed_nic
);

1873  
ªsu…
;

1874 
	}
}

1882 
	$≠i_upd©e_nic_utûiz©i⁄
(
uöt8_t
 
nic_ödex
, 
uöt32_t
 
∑ckë_size
) {

1883 i‡(
nic_ödex
 >
MAX_NICS
) {

1884  
API_ERR_INVALID_PARAM
;

1889 
nic_utûiz©i⁄
[
nic_ödex
] = (nic_utûiz©i⁄[nic_ödex] + 
∑ckë_size
) / 2;

1892 i‡(
nic_utûiz©i⁄
[
nic_ödex
] > 100) {

1893 
nic_utûiz©i⁄
[
nic_ödex
] = 100;

1896  
API_SUCCESS
;

1897 
	}
}

1900 
uöt32_t
 
	$ˇlcuœã_avîage_œãncy
(
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
) {

1901 i‡(!
ext_h™dÀ
 ||Éxt_h™dÀ->
∑ckës_rouãd
 == 0) {

1906 
	}
}

1908 
uöt32_t
 
	$ˇlcuœã_jôãr
(
exãnded_∑ckë_h™dÀ_t
 *
ext_h™dÀ
) {

1909 i‡(!
ext_h™dÀ
) {

1914 
	}
}

1916 
uöt32_t
 
	$gë_sy°em_time°amp
() {

1918 
uöt32_t
 
ticks
;

1920 
__asm__
 
	`__vﬁ©ûe__
(

1925 : "=c" (
ticks
)

1930  
ticks
;

1931 
	}
}

1934 #¥agm®
code_£g
()

	@/Users/jvindahl/Development/3com-packet-driver/src/c/buffer_alloc.c

11 
	~"../ö˛ude/buf„r_Æloc.h
"

12 
	~"../ö˛ude/nic_buf„r_poﬁs.h
"

13 
	~"../ö˛ude/loggög.h
"

16 
buf„r_poﬁ_t
 
	gg_tx_buf„r_poﬁ
;

17 
buf„r_poﬁ_t
 
	gg_rx_buf„r_poﬁ
;

18 
buf„r_poﬁ_t
 
	gg_dma_buf„r_poﬁ
;

19 
buf„r_°©s_t
 
	gg_buf„r_°©s
;

22 
buf„r_poﬁ_t
 
	gg_buf„r_poﬁ_64
;

23 
buf„r_poﬁ_t
 
	gg_buf„r_poﬁ_128
;

24 
buf„r_poﬁ_t
 
	gg_buf„r_poﬁ_512
;

25 
buf„r_poﬁ_t
 
	gg_buf„r_poﬁ_1518
;

28 
rx_c›ybªak_poﬁ_t
 
	gg_rx_c›ybªak_poﬁ
 = {0};

31 
uöt32_t
 
	gg_Á°_∑th_Æloˇti⁄s
 = 0;

32 
uöt32_t
 
	gg_Á°_∑th_ˇche_hôs
 = 0;

33 
uöt32_t
 
	gg_ÁŒback_Æloˇti⁄s
 = 0;

36 
boﬁ
 
	gg_buf„r_sy°em_öôülized
 = 
Ál£
;

37 
buf„r_îr‹_t
 
	gg_œ°_îr‹
 = 
BUFFER_ERROR_NONE
;

38 (*
g_îr‹_h™dÀr
)(
buf„r_îr‹_t
 
îr‹
, c⁄° * 
mesßge
Ë
NULL
;

41 
	#BUFFER_MAGIC_VALID
 0xBEEFCAFE

	)

42 
	#BUFFER_MAGIC_FREE
 0xDEADBEEF

	)

45 
	`buf„r_£t_œ°_îr‹
(
buf„r_îr‹_t
 
îr‹
);

46 
buf„r_desc_t
* 
	`buf„r_desc_¸óã
(
uöt32_t
 
size
, 
buf„r_ty≥_t
 
ty≥
, uöt32_à
Êags
);

47 
	`buf„r_desc_de°roy
(
buf„r_desc_t
 *
buf„r
);

48 
boﬁ
 
	`buf„r_poﬁ_has_•a˚
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
);

49 
	`buf„r_upd©e_°©s_Æloc
(
uöt32_t
 
size
);

50 
	`buf„r_upd©e_°©s_‰ì
(
uöt32_t
 
size
);

53 
	$buf„r_sy°em_öô
() {

54 i‡(
g_buf„r_sy°em_öôülized
) {

55  
SUCCESS
;

59 
	`buf„r_°©s_öô
(&
g_buf„r_°©s
);

62 
uöt32_t
 
tŸÆ_mem‹y
 = 
	`mem‹y_xms_avaûabÀ
(Ë? (
	`mem‹y_gë_xms_size
() * 1024) : (512 * 1024);

63 
ªsu…
 = 
	`nic_buf„r_poﬁ_m™agî_öô
(
tŸÆ_mem‹y
, 
MEMORY_TIER_AUTO
);

64 i‡(
ªsu…
 !
SUCCESS
) {

65 
	`log_w¨nög
("FaûedÅÿöôülizê≥r-NIC buf„∏poﬁs: %d, usögÜegacyÖoﬁs", 
ªsu…
);

69 
ªsu…
 = 
	`buf„r_öô_deÁu…_poﬁs
();

70 i‡(
ªsu…
 !
SUCCESS
) {

71  
ªsu…
;

74 
g_buf„r_sy°em_öôülized
 = 
åue
;

75 
g_œ°_îr‹
 = 
BUFFER_ERROR_NONE
;

77 
	`log_öfo
("Buffer system initialized withÖer-NIC bufferÖool support");

78  
SUCCESS
;

79 
	}
}

81 
	$buf„r_sy°em_˛ónup
() {

82 i‡(!
g_buf„r_sy°em_öôülized
) {

87 
	`nic_buf„r_poﬁ_m™agî_˛ónup
();

90 
	`buf„r_˛ónup_deÁu…_poﬁs
();

93 
	`buf„r_°©s_öô
(&
g_buf„r_°©s
);

95 
g_buf„r_sy°em_öôülized
 = 
Ál£
;

96 
	}
}

98 
	$buf„r_öô_deÁu…_poﬁs
() {

99 
ªsu…
;

100 
˝u_öfo_t
 
g_˝u_öfo
;

103 
uöt32_t
 
tx_buf„rs
 = 16;

104 
uöt32_t
 
rx_buf„rs
 = 32;

105 
uöt32_t
 
dma_buf„rs
 = 8;

108 
uöt32_t
 
poﬁ_64_cou¡
 = 32;

109 
uöt32_t
 
poﬁ_128_cou¡
 = 24;

110 
uöt32_t
 
poﬁ_512_cou¡
 = 16;

111 
uöt32_t
 
poﬁ_1518_cou¡
 = 12;

114 i‡(
	`mem‹y_xms_avaûabÀ
()) {

115 
uöt32_t
 
xms_kb
 = 
	`mem‹y_gë_xms_size
();

116 i‡(
xms_kb
 > 1024) {

118 
tx_buf„rs
 = 32;

119 
rx_buf„rs
 = 64;

120 
dma_buf„rs
 = 16;

123 
poﬁ_64_cou¡
 = 48;

124 
poﬁ_128_cou¡
 = 36;

125 
poﬁ_512_cou¡
 = 24;

126 
poﬁ_1518_cou¡
 = 18;

129 i‡(
xms_kb
 > 4096) {

131 
poﬁ_64_cou¡
 = 64;

132 
poﬁ_128_cou¡
 = 48;

133 
poﬁ_512_cou¡
 = 32;

134 
poﬁ_1518_cou¡
 = 24;

139 
uöt32_t
 
tx_Êags
 = 
BUFFER_FLAG_ALIGNED
;

140 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

141 
tx_Êags
 |
BUFFER_FLAG_ZERO_INIT
;

144 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_tx_buf„r_poﬁ
, 
BUFFER_TYPE_TX
,

145 
TX_BUFFER_SIZE
, 
tx_buf„rs
, 
tx_Êags
);

146 i‡(
ªsu…
 !
SUCCESS
) {

147 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

148  
ªsu…
;

152 
uöt32_t
 
rx_Êags
 = 
BUFFER_FLAG_ALIGNED
 | 
BUFFER_FLAG_ZERO_INIT
;

154 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_rx_buf„r_poﬁ
, 
BUFFER_TYPE_RX
,

155 
RX_BUFFER_SIZE
, 
rx_buf„rs
, 
rx_Êags
);

156 i‡(
ªsu…
 !
SUCCESS
) {

157 
	`buf„r_poﬁ_˛ónup
(&
g_tx_buf„r_poﬁ
);

158 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

159  
ªsu…
;

163 
uöt32_t
 
dma_Êags
 = 
BUFFER_FLAG_DMA_CAPABLE
 | 
BUFFER_FLAG_ALIGNED
;

164 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

165 
dma_Êags
 |
BUFFER_FLAG_PERSISTENT
;

168 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_dma_buf„r_poﬁ
, 
BUFFER_TYPE_DMA_TX
,

169 
DMA_BUFFER_SIZE
, 
dma_buf„rs
, 
dma_Êags
);

170 i‡(
ªsu…
 !
SUCCESS
) {

171 
	`buf„r_poﬁ_˛ónup
(&
g_tx_buf„r_poﬁ
);

172 
	`buf„r_poﬁ_˛ónup
(&
g_rx_buf„r_poﬁ
);

173 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

174  
ªsu…
;

178 
uöt32_t
 
size_poﬁ_Êags
 = 
BUFFER_FLAG_ALIGNED
;

179 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

180 
size_poﬁ_Êags
 |
BUFFER_FLAG_ZERO_INIT
;

184 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_buf„r_poﬁ_64
, 
BUFFER_TYPE_TX
,

185 64, 
poﬁ_64_cou¡
, 
size_poﬁ_Êags
);

186 i‡(
ªsu…
 !
SUCCESS
) {

187 
	`log_w¨nög
("FailedÅo initialize 64-byte bufferÖool, using fallback");

189 
	`log_öfo
("Inôülized 64-byã buf„∏poﬁ wôh %d buf„rs", 
poﬁ_64_cou¡
);

193 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_buf„r_poﬁ_128
, 
BUFFER_TYPE_TX
,

194 128, 
poﬁ_128_cou¡
, 
size_poﬁ_Êags
);

195 i‡(
ªsu…
 !
SUCCESS
) {

196 
	`log_w¨nög
("FailedÅo initialize 128-byte bufferÖool, using fallback");

198 
	`log_öfo
("Inôülized 128-byã buf„∏poﬁ wôh %d buf„rs", 
poﬁ_128_cou¡
);

202 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_buf„r_poﬁ_512
, 
BUFFER_TYPE_TX
,

203 512, 
poﬁ_512_cou¡
, 
size_poﬁ_Êags
);

204 i‡(
ªsu…
 !
SUCCESS
) {

205 
	`log_w¨nög
("FailedÅo initialize 512-byte bufferÖool, using fallback");

207 
	`log_öfo
("Inôülized 512-byã buf„∏poﬁ wôh %d buf„rs", 
poﬁ_512_cou¡
);

211 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_buf„r_poﬁ_1518
, 
BUFFER_TYPE_TX
,

212 1518, 
poﬁ_1518_cou¡
, 
size_poﬁ_Êags
);

213 i‡(
ªsu…
 !
SUCCESS
) {

214 
	`log_w¨nög
("FailedÅo initialize 1518-byte bufferÖool, using fallback");

216 
	`log_öfo
("Inôülized 1518-byã buf„∏poﬁ wôh %d buf„rs", 
poﬁ_1518_cou¡
);

219 
	`log_öfo
("Initialized bufferÖools: TX=%d, RX=%d, DMA=%d",

220 
tx_buf„rs
, 
rx_buf„rs
, 
dma_buf„rs
);

221 
	`log_öfo
("Size-specificÖools: 64=%d, 128=%d, 512=%d, 1518=%d",

222 
poﬁ_64_cou¡
, 
poﬁ_128_cou¡
, 
poﬁ_512_cou¡
, 
poﬁ_1518_cou¡
);

224  
SUCCESS
;

225 
	}
}

227 
	$buf„r_˛ónup_deÁu…_poﬁs
() {

229 
	`buf„r_poﬁ_˛ónup
(&
g_buf„r_poﬁ_1518
);

230 
	`buf„r_poﬁ_˛ónup
(&
g_buf„r_poﬁ_512
);

231 
	`buf„r_poﬁ_˛ónup
(&
g_buf„r_poﬁ_128
);

232 
	`buf„r_poﬁ_˛ónup
(&
g_buf„r_poﬁ_64
);

235 
	`buf„r_poﬁ_˛ónup
(&
g_dma_buf„r_poﬁ
);

236 
	`buf„r_poﬁ_˛ónup
(&
g_rx_buf„r_poﬁ
);

237 
	`buf„r_poﬁ_˛ónup
(&
g_tx_buf„r_poﬁ
);

240 
	`log_öfo
("Bufferállocation statistics:");

241 
	`log_öfo
(" Fa°Ö©háŒoˇti⁄s: %lu", 
g_Á°_∑th_Æloˇti⁄s
);

242 
	`log_öfo
(" Fa°Ö©h cachêhôs: %lu", 
g_Á°_∑th_ˇche_hôs
);

243 
	`log_öfo
(" FÆlbackáŒoˇti⁄s: %lu", 
g_ÁŒback_Æloˇti⁄s
);

244 
	}
}

247 
	$buf„r_poﬁ_öô
(
buf„r_poﬁ_t
 *
poﬁ
, 
buf„r_ty≥_t
 
ty≥
,

248 
uöt32_t
 
buf„r_size
, uöt32_à
buf„r_cou¡
, uöt32_à
Êags
) {

249 i‡(!
poﬁ
) {

250 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

251  
ERROR_INVALID_PARAM
;

255 
poﬁ
->
‰ì_li°
 = 
NULL
;

256 
poﬁ
->
u£d_li°
 = 
NULL
;

257 
poﬁ
->
buf„r_size
 = buffer_size;

258 
poﬁ
->
buf„r_cou¡
 = buffer_count;

259 
poﬁ
->
‰ì_cou¡
 = 0;

260 
poﬁ
->
u£d_cou¡
 = 0;

261 
poﬁ
->
≥ak_ußge
 = 0;

262 
poﬁ
->
ty≥
 =Åype;

263 
poﬁ
->
Êags
 = flags;

264 
poﬁ
->
mem‹y_ba£
 = 
NULL
;

265 
poﬁ
->
mem‹y_size
 = 0;

266 
poﬁ
->
öôülized
 = 
Ál£
;

269 
uöt32_t
 
tŸÆ_size
 = 
buf„r_cou¡
 * (
buf„r_size
 + (
buf„r_desc_t
));

270 
uöt32_t
 
mem_Êags
 = 0;

273 i‡(
Êags
 & 
BUFFER_FLAG_ALIGNED
) {

274 
mem_Êags
 |
MEM_FLAG_ALIGNED
;

276 i‡(
Êags
 & 
BUFFER_FLAG_DMA_CAPABLE
) {

277 
mem_Êags
 |
MEM_FLAG_DMA_CAPABLE
;

279 i‡(
Êags
 & 
BUFFER_FLAG_ZERO_INIT
) {

280 
mem_Êags
 |
MEM_FLAG_ZERO
;

282 i‡(
Êags
 & 
BUFFER_FLAG_PERSISTENT
) {

283 
mem_Êags
 |
MEM_FLAG_PERSISTENT
;

287 i‡(
Êags
 & 
BUFFER_FLAG_DMA_CAPABLE
) {

288 
poﬁ
->
mem‹y_ba£
 = 
	`mem‹y_Æloc_dma
(
tŸÆ_size
);

291 
poﬁ
->
mem‹y_ba£
 = 
	`mem‹y_Æloc
(
tŸÆ_size
, 
MEM_TYPE_PACKET_BUFFER
, 
mem_Êags
);

294 i‡(!
poﬁ
->
mem‹y_ba£
) {

295 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

296  
ERROR_NO_MEMORY
;

299 
poﬁ
->
mem‹y_size
 = 
tŸÆ_size
;

302 
uöt8_t
 *
cuºít_±r
 = (uöt8_t*)
poﬁ
->
mem‹y_ba£
;

304 
uöt32_t
 
i
 = 0; i < 
buf„r_cou¡
; i++) {

305 
buf„r_desc_t
 *
desc
 = (buf„r_desc_t*)
cuºít_±r
;

306 
cuºít_±r
 +(
buf„r_desc_t
);

309 i‡(
Êags
 & 
BUFFER_FLAG_ALIGNED
) {

310 
˝u_öfo_t
 
g_˝u_öfo
;

311 
uöt32_t
 
Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) ? 4 : 2;

312 
cuºít_±r
 = (
uöt8_t
*)
	`ALIGN_UP
((
uöt32_t
)cuºít_±r, 
Æignmít
);

316 
desc
->
d©a
 = 
cuºít_±r
;

317 
desc
->
size
 = 
buf„r_size
;

318 
desc
->
u£d
 = 0;

319 
desc
->
ty≥
 =Åype;

320 
desc
->
°©e
 = 
BUFFER_STATE_FREE
;

321 
desc
->
Êags
 = flags;

322 
desc
->
time°amp
 = 0;

323 
desc
->
magic
 = 
BUFFER_MAGIC_FREE
;

324 
desc
->
√xt
 = 
poﬁ
->
‰ì_li°
;

325 
desc
->
¥ev
 = 
NULL
;

326 
desc
->
¥iv©e_d©a
 = 
NULL
;

329 i‡(
poﬁ
->
‰ì_li°
) {

330 
poﬁ
->
‰ì_li°
->
¥ev
 = 
desc
;

332 
poﬁ
->
‰ì_li°
 = 
desc
;

333 
poﬁ
->
‰ì_cou¡
++;

335 
cuºít_±r
 +
buf„r_size
;

338 i‡(
Êags
 & 
BUFFER_FLAG_ALIGNED
) {

339 
˝u_öfo_t
 
g_˝u_öfo
;

340 
uöt32_t
 
Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) ? 4 : 2;

341 
cuºít_±r
 = (
uöt8_t
*)
	`ALIGN_UP
((
uöt32_t
)cuºít_±r, 
Æignmít
);

345 
poﬁ
->
öôülized
 = 
åue
;

346  
SUCCESS
;

347 
	}
}

349 
	$buf„r_poﬁ_˛ónup
(
buf„r_poﬁ_t
 *
poﬁ
) {

350 i‡(!
poﬁ
 || !poﬁ->
öôülized
) {

355 i‡(
poﬁ
->
mem‹y_ba£
) {

356 i‡(
poﬁ
->
Êags
 & 
BUFFER_FLAG_DMA_CAPABLE
) {

357 
	`mem‹y_‰ì_dma
(
poﬁ
->
mem‹y_ba£
);

360 
	`mem‹y_‰ì
(
poﬁ
->
mem‹y_ba£
);

362 
poﬁ
->
mem‹y_ba£
 = 
NULL
;

366 
poﬁ
->
‰ì_li°
 = 
NULL
;

367 
poﬁ
->
u£d_li°
 = 
NULL
;

368 
poﬁ
->
‰ì_cou¡
 = 0;

369 
poﬁ
->
u£d_cou¡
 = 0;

370 
poﬁ
->
mem‹y_size
 = 0;

371 
poﬁ
->
öôülized
 = 
Ál£
;

372 
	}
}

375 
buf„r_desc_t
* 
	$buf„r_Æloc
(
buf„r_poﬁ_t
 *
poﬁ
) {

376 i‡(!
poﬁ
 || !poﬁ->
öôülized
) {

377 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

378  
NULL
;

381 i‡(!
poﬁ
->
‰ì_li°
) {

382 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_POOL_FULL
);

383  
NULL
;

387 
buf„r_desc_t
 *
buf„r
 = 
poﬁ
->
‰ì_li°
;

388 
poﬁ
->
‰ì_li°
 = 
buf„r
->
√xt
;

389 i‡(
poﬁ
->
‰ì_li°
) {

390 
poﬁ
->
‰ì_li°
->
¥ev
 = 
NULL
;

392 
poﬁ
->
‰ì_cou¡
--;

395 
buf„r
->
√xt
 = 
poﬁ
->
u£d_li°
;

396 
buf„r
->
¥ev
 = 
NULL
;

397 i‡(
poﬁ
->
u£d_li°
) {

398 
poﬁ
->
u£d_li°
->
¥ev
 = 
buf„r
;

400 
poﬁ
->
u£d_li°
 = 
buf„r
;

401 
poﬁ
->
u£d_cou¡
++;

404 i‡(
poﬁ
->
u£d_cou¡
 >Öoﬁ->
≥ak_ußge
) {

405 
poﬁ
->
≥ak_ußge
 =Öoﬁ->
u£d_cou¡
;

409 
buf„r
->
°©e
 = 
BUFFER_STATE_ALLOCATED
;

410 
buf„r
->
magic
 = 
BUFFER_MAGIC_VALID
;

411 
buf„r
->
u£d
 = 0;

412 
buf„r
->
time°amp
 = 0;

415 i‡(
buf„r
->
Êags
 & 
BUFFER_FLAG_ZERO_INIT
) {

416 
	`mem‹y_£t_›timized
(
buf„r
->
d©a
, 0, buf„r->
size
);

419 
	`buf„r_upd©e_°©s_Æloc
(
buf„r
->
size
);

421  
buf„r
;

422 
	}
}

424 
	$buf„r_‰ì
(
buf„r_poﬁ_t
 *
poﬁ
, 
buf„r_desc_t
 *
buf„r
) {

425 i‡(!
poﬁ
 || !
buf„r
 || !poﬁ->
öôülized
) {

426 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

430 i‡(!
	`buf„r_is_vÆid
(
buf„r
)) {

431 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

436 i‡(
buf„r
->
¥ev
) {

437 
buf„r
->
¥ev
->
√xt
 = buffer->next;

439 
poﬁ
->
u£d_li°
 = 
buf„r
->
√xt
;

442 i‡(
buf„r
->
√xt
) {

443 
buf„r
->
√xt
->
¥ev
 = buffer->prev;

445 
poﬁ
->
u£d_cou¡
--;

448 
buf„r
->
√xt
 = 
poﬁ
->
‰ì_li°
;

449 
buf„r
->
¥ev
 = 
NULL
;

450 i‡(
poﬁ
->
‰ì_li°
) {

451 
poﬁ
->
‰ì_li°
->
¥ev
 = 
buf„r
;

453 
poﬁ
->
‰ì_li°
 = 
buf„r
;

454 
poﬁ
->
‰ì_cou¡
++;

457 
buf„r
->
°©e
 = 
BUFFER_STATE_FREE
;

458 
buf„r
->
magic
 = 
BUFFER_MAGIC_FREE
;

459 
buf„r
->
u£d
 = 0;

460 
buf„r
->
¥iv©e_d©a
 = 
NULL
;

462 
	`buf„r_upd©e_°©s_‰ì
(
buf„r
->
size
);

463 
	}
}

465 
buf„r_desc_t
* 
	$buf„r_Æloc_ty≥
(
buf„r_ty≥_t
 
ty≥
) {

466 
ty≥
) {

467 
BUFFER_TYPE_TX
:

468 
BUFFER_TYPE_DMA_TX
:

469  
	`buf„r_Æloc
(&
g_tx_buf„r_poﬁ
);

470 
BUFFER_TYPE_RX
:

471 
BUFFER_TYPE_DMA_RX
:

472  
	`buf„r_Æloc
(&
g_rx_buf„r_poﬁ
);

473 
BUFFER_TYPE_DESCRIPTOR
:

474 
BUFFER_TYPE_TEMPORARY
:

475  
	`buf„r_Æloc
(&
g_dma_buf„r_poﬁ
);

477 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

478  
NULL
;

480 
	}
}

482 
	$buf„r_‰ì_™y
(
buf„r_desc_t
 *
buf„r
) {

483 i‡(!
buf„r
) {

488 
buf„r
->
ty≥
) {

489 
BUFFER_TYPE_TX
:

490 
BUFFER_TYPE_DMA_TX
:

491 
	`buf„r_‰ì
(&
g_tx_buf„r_poﬁ
, 
buf„r
);

493 
BUFFER_TYPE_RX
:

494 
BUFFER_TYPE_DMA_RX
:

495 
	`buf„r_‰ì
(&
g_rx_buf„r_poﬁ
, 
buf„r
);

497 
BUFFER_TYPE_DESCRIPTOR
:

498 
BUFFER_TYPE_TEMPORARY
:

499 
	`buf„r_‰ì
(&
g_dma_buf„r_poﬁ
, 
buf„r
);

502 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

505 
	}
}

508 
boﬁ
 
	$buf„r_is_vÆid
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

509 i‡(!
buf„r
) {

510  
Ál£
;

513  (
buf„r
->
magic
 =
BUFFER_MAGIC_VALID
) &&

514 (
buf„r
->
°©e
 !
BUFFER_STATE_FREE
);

515 
	}
}

517 
boﬁ
 
	$buf„r_vÆid©e_magic
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

518 i‡(!
buf„r
) {

519  
Ál£
;

522  (
buf„r
->
magic
 =
BUFFER_MAGIC_VALID
 ||

523 
buf„r
->
magic
 =
BUFFER_MAGIC_FREE
);

524 
	}
}

527 
	$buf„r_£t_°©e
(
buf„r_desc_t
 *
buf„r
, 
buf„r_°©e_t
 
°©e
) {

528 i‡(!
buf„r
 || !
	`buf„r_is_vÆid
(buffer)) {

532 
buf„r
->
°©e
 = state;

533 
	}
}

535 
buf„r_°©e_t
 
	$buf„r_gë_°©e
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

536 i‡(!
buf„r
 || !
	`buf„r_is_vÆid
(buffer)) {

537  
BUFFER_STATE_ERROR
;

540  
buf„r
->
°©e
;

541 
	}
}

543 
boﬁ
 
	$buf„r_is_‰ì
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

544  
buf„r
 && (buf„r->
°©e
 =
BUFFER_STATE_FREE
);

545 
	}
}

547 
boﬁ
 
	$buf„r_is_Æloˇãd
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

548  
buf„r
 && (buf„r->
°©e
 =
BUFFER_STATE_ALLOCATED
);

549 
	}
}

551 
boﬁ
 
	$buf„r_is_ö_u£
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

552  
buf„r
 && (buf„r->
°©e
 =
BUFFER_STATE_IN_USE
);

553 
	}
}

556 
	$buf„r_£t_d©a
(
buf„r_desc_t
 *
buf„r
, c⁄° *
d©a
, 
uöt32_t
 
size
) {

557 i‡(!
buf„r
 || !
	`buf„r_is_vÆid
(buf„rË|| !
d©a
) {

558 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

559  
ERROR_INVALID_PARAM
;

562 i‡(
size
 > 
buf„r
->size) {

563 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

564  
ERROR_INVALID_PARAM
;

567 
	`mem‹y_c›y_›timized
(
buf„r
->
d©a
, d©a, 
size
);

568 
buf„r
->
u£d
 = 
size
;

570  
SUCCESS
;

571 
	}
}

573 
	$buf„r_≠≥nd_d©a
(
buf„r_desc_t
 *
buf„r
, c⁄° *
d©a
, 
uöt32_t
 
size
) {

574 i‡(!
buf„r
 || !
	`buf„r_is_vÆid
(buf„rË|| !
d©a
) {

575 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

576  
ERROR_INVALID_PARAM
;

579 i‡(
buf„r
->
u£d
 + 
size
 > buffer->size) {

580 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

581  
ERROR_INVALID_PARAM
;

584 
	`mem‹y_c›y_›timized
((
uöt8_t
*)
buf„r
->
d©a
 + buf„r->
u£d
, d©a, 
size
);

585 
buf„r
->
u£d
 +
size
;

587  
SUCCESS
;

588 
	}
}

591 
uöt32_t
 
	$buf„r_gë_size
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

592  
buf„r
 ? buf„r->
size
 : 0;

593 
	}
}

595 
uöt32_t
 
	$buf„r_gë_u£d_size
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

596  
buf„r
 ? buf„r->
u£d
 : 0;

597 
	}
}

599 
uöt32_t
 
	$buf„r_gë_‰ì_size
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

600  
buf„r
 ? (buf„r->
size
 - buf„r->
u£d
) : 0;

601 
	}
}

603 * 
	$buf„r_gë_d©a_±r
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

604  
buf„r
 ? buf„r->
d©a
 : 
NULL
;

605 
	}
}

607 
buf„r_ty≥_t
 
	$buf„r_gë_ty≥
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

608  
buf„r
 ? buf„r->
ty≥
 : 
BUFFER_TYPE_TEMPORARY
;

609 
	}
}

612 
uöt32_t
 
	$buf„r_poﬁ_gë_‰ì_cou¡
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
) {

613  
poﬁ
 ?Öoﬁ->
‰ì_cou¡
 : 0;

614 
	}
}

616 
uöt32_t
 
	$buf„r_poﬁ_gë_u£d_cou¡
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
) {

617  
poﬁ
 ?Öoﬁ->
u£d_cou¡
 : 0;

618 
	}
}

620 
uöt32_t
 
	$buf„r_poﬁ_gë_tŸÆ_cou¡
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
) {

621  
poﬁ
 ?Öoﬁ->
buf„r_cou¡
 : 0;

622 
	}
}

624 
boﬁ
 
	$buf„r_poﬁ_is_em±y
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
) {

625  
poﬁ
 ? (poﬁ->
u£d_cou¡
 =0Ë: 
åue
;

626 
	}
}

628 
boﬁ
 
	$buf„r_poﬁ_is_fuŒ
(c⁄° 
buf„r_poﬁ_t
 *
poﬁ
) {

629  
poﬁ
 ? (poﬁ->
‰ì_cou¡
 =0Ë: 
åue
;

630 
	}
}

633 
	$buf„r_°©s_öô
(
buf„r_°©s_t
 *
°©s
) {

634 i‡(!
°©s
) {

638 
	`mem‹y_zîo
(
°©s
, (
buf„r_°©s_t
));

639 
	}
}

641 c⁄° 
buf„r_°©s_t
* 
	$buf„r_gë_°©s
() {

642  &
g_buf„r_°©s
;

643 
	}
}

645 
	$buf„r_˛ór_°©s
() {

646 
	`buf„r_°©s_öô
(&
g_buf„r_°©s
);

647 
	}
}

650 
buf„r_îr‹_t
 
	$buf„r_gë_œ°_îr‹
() {

651  
g_œ°_îr‹
;

652 
	}
}

654 c⁄° * 
	$buf„r_îr‹_to_°rög
(
buf„r_îr‹_t
 
îr‹
) {

655 
îr‹
) {

656 
BUFFER_ERROR_NONE
:  "NoÉrror";

657 
BUFFER_ERROR_INVALID_PARAM
:  "InvalidÖarameter";

658 
BUFFER_ERROR_OUT_OF_MEMORY
:  "Out of memory";

659 
BUFFER_ERROR_POOL_FULL
:  "BufferÖool full";

660 
BUFFER_ERROR_INVALID_BUFFER
:  "Invalid buffer";

661 
BUFFER_ERROR_BUFFER_IN_USE
:  "Buffer in use";

662 
BUFFER_ERROR_SIZE_MISMATCH
:  "Size mismatch";

663 
BUFFER_ERROR_ALIGNMENT
:  "AlignmentÉrror";

664 
BUFFER_ERROR_CORRUPTION
:  "Buffer corruption";

667 
	}
}

669 
buf„r_£t_îr‹_h™dÀr
((*
h™dÀr
)(
buf„r_îr‹_t
 
îr‹
, c⁄° * 
mesßge
)) {

670 
g_îr‹_h™dÀr
 = 
h™dÀr
;

671 
	}
}

674 
	$buf„r_£t_œ°_îr‹
(
buf„r_îr‹_t
 
îr‹
) {

675 
g_œ°_îr‹
 = 
îr‹
;

677 i‡(
g_îr‹_h™dÀr
) {

678 
	`g_îr‹_h™dÀr
(
îr‹
, 
	`buf„r_îr‹_to_°rög
(error));

680 
	}
}

682 
	$buf„r_upd©e_°©s_Æloc
(
uöt32_t
 
size
) {

683 
g_buf„r_°©s
.
tŸÆ_Æloˇti⁄s
++;

684 
g_buf„r_°©s
.
cuºít_Æloˇãd
++;

685 
g_buf„r_°©s
.
byãs_Æloˇãd
 +
size
;

687 i‡(
g_buf„r_°©s
.
cuºít_Æloˇãd
 > g_buf„r_°©s.
≥ak_Æloˇãd
) {

688 
g_buf„r_°©s
.
≥ak_Æloˇãd
 = g_buf„r_°©s.
cuºít_Æloˇãd
;

690 
	}
}

692 
	$buf„r_upd©e_°©s_‰ì
(
uöt32_t
 
size
) {

693 
g_buf„r_°©s
.
tŸÆ_‰ìs
++;

694 i‡(
g_buf„r_°©s
.
cuºít_Æloˇãd
 > 0) {

695 
g_buf„r_°©s
.
cuºít_Æloˇãd
--;

697 
g_buf„r_°©s
.
byãs_‰ìd
 +
size
;

698 
	}
}

708 
	$rx_c›ybªak_öô
(
uöt32_t
 
smÆl_cou¡
, uöt32_à
œrge_cou¡
) {

709 
ªsu…
;

710 
˝u_öfo_t
 
g_˝u_öfo
;

713 i‡(
smÆl_cou¡
 =0 || 
œrge_cou¡
 == 0) {

714 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

715  
ERROR_INVALID_PARAM
;

719 i‡(
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

720 
	`log_w¨nög
("RX_COPYBREAKÖoolálready initialized, cleaning up first");

721 
	`rx_c›ybªak_˛ónup
();

725 
g_rx_c›ybªak_poﬁ
.
smÆl_buf„r_cou¡
 = 
smÆl_cou¡
;

726 
g_rx_c›ybªak_poﬁ
.
œrge_buf„r_cou¡
 = 
œrge_cou¡
;

727 
g_rx_c›ybªak_poﬁ
.
c›ybªak_thªshﬁd
 = 
RX_COPYBREAK_THRESHOLD
;

730 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
 = 0;

731 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
 = 0;

732 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
 = 0;

733 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
 = 0;

736 
uöt32_t
 
poﬁ_Êags
 = 
BUFFER_FLAG_ALIGNED
;

737 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

738 
poﬁ_Êags
 |
BUFFER_FLAG_ZERO_INIT
;

742 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
, 
BUFFER_TYPE_RX
,

743 
SMALL_BUFFER_SIZE
, 
smÆl_cou¡
, 
poﬁ_Êags
);

744 i‡(
ªsu…
 !
SUCCESS
) {

745 
	`log_îr‹
("FailedÅo initialize RX_COPYBREAK small bufferÖool: %s",

746 
	`buf„r_îr‹_to_°rög
(
	`buf„r_gë_œ°_îr‹
()));

747 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

748  
ªsu…
;

752 
ªsu…
 = 
	`buf„r_poﬁ_öô
(&
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
, 
BUFFER_TYPE_RX
,

753 
LARGE_BUFFER_SIZE
, 
œrge_cou¡
, 
poﬁ_Êags
);

754 i‡(
ªsu…
 !
SUCCESS
) {

755 
	`log_îr‹
("FailedÅo initialize RX_COPYBREAKÜarge bufferÖool: %s",

756 
	`buf„r_îr‹_to_°rög
(
	`buf„r_gë_œ°_îr‹
()));

757 
	`buf„r_poﬁ_˛ónup
(&
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
);

758 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

759  
ªsu…
;

762 
	`log_öfo
("RX_COPYBREAK optimization initialized: small=%u (%u bytes),Üarge=%u (%u bytes),Åhreshold=%u",

763 
smÆl_cou¡
, 
SMALL_BUFFER_SIZE
, 
œrge_cou¡
, 
LARGE_BUFFER_SIZE
, 
RX_COPYBREAK_THRESHOLD
);

765  
SUCCESS
;

766 
	}
}

771 
	$rx_c›ybªak_˛ónup
() {

773 i‡(
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

774 
	`log_öfo
("RX_COPYBREAK statistics: small_allocs=%lu,Üarge_allocs=%lu, copy_ops=%lu, memory_saved=%lu bytes",

775 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
,

776 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
,

777 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
,

778 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
);

782 
	`buf„r_poﬁ_˛ónup
(&
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
);

783 
	`buf„r_poﬁ_˛ónup
(&
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
);

786 
	`mem‹y_zîo
(&
g_rx_c›ybªak_poﬁ
, (
rx_c›ybªak_poﬁ_t
));

787 
	}
}

794 
buf„r_desc_t
* 
	$rx_c›ybªak_Æloc
(
uöt32_t
 
∑ckë_size
) {

795 
buf„r_desc_t
 *
buf„r
 = 
NULL
;

796 
buf„r_poﬁ_t
 *
£À˘ed_poﬁ
 = 
NULL
;

797 
uöt32_t
 
mem‹y_ßved
 = 0;

800 i‡(
∑ckë_size
 == 0) {

801 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

802  
NULL
;

806 i‡(!
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || !g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

807 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

808 
	`log_îr‹
("RX_COPYBREAKÇot initialized, callÑx_copybreak_init() first");

809  
NULL
;

813 i‡(
∑ckë_size
 < 
g_rx_c›ybªak_poﬁ
.
c›ybªak_thªshﬁd
) {

815 
£À˘ed_poﬁ
 = &
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
;

818 
mem‹y_ßved
 = 
LARGE_BUFFER_SIZE
 - 
SMALL_BUFFER_SIZE
;

821 
buf„r
 = 
	`buf„r_Æloc
(
£À˘ed_poﬁ
);

822 i‡(
buf„r
) {

823 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
++;

824 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
 += memory_saved;

829 
	`log_debug
("RX_COPYBREAK:állocated small buffer (%u bytes) forÖacket size %u, saved %u bytes",

830 
SMALL_BUFFER_SIZE
, 
∑ckë_size
, 
mem‹y_ßved
);

831  
buf„r
;

833 
	`log_debug
("RX_COPYBREAK: smallÖoolÉxhausted forÖacket size %u, falling backÅoÜargeÖool",

834 
∑ckë_size
);

839 
£À˘ed_poﬁ
 = &
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
;

840 
buf„r
 = 
	`buf„r_Æloc
(
£À˘ed_poﬁ
);

842 i‡(
buf„r
) {

843 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
++;

845 
	`log_debug
("RX_COPYBREAK:állocatedÜarge buffer (%u bytes) forÖacket size %u",

846 
LARGE_BUFFER_SIZE
, 
∑ckë_size
);

847  
buf„r
;

851 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_POOL_FULL
);

852 
	`log_w¨nög
("RX_COPYBREAK:áŒÖoﬁ†exhau°ed f‹Öackë sizê%u", 
∑ckë_size
);

853  
NULL
;

854 
	}
}

860 
	$rx_c›ybªak_‰ì
(
buf„r_desc_t
* 
buf„r
) {

861 i‡(!
buf„r
) {

862 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

866 i‡(!
	`buf„r_is_vÆid
(
buf„r
)) {

867 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

868 
	`log_îr‹
("RX_COPYBREAK:áttemptingÅo free invalid buffer");

873 i‡(!
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || !g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

874 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

875 
	`log_îr‹
("RX_COPYBREAKÇot initialized, cannot determine whichÖool buffer belongsÅo");

880 i‡(
buf„r
->
size
 =
SMALL_BUFFER_SIZE
) {

882 
	`buf„r_‰ì
(&
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
, 
buf„r
);

883 
	`log_debug
("RX_COPYBREAK: fªed smÆ»buf„∏(%u byãs)", 
buf„r
->
size
);

884 } i‡(
buf„r
->
size
 =
LARGE_BUFFER_SIZE
) {

886 
	`buf„r_‰ì
(&
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
, 
buf„r
);

887 
	`log_debug
("RX_COPYBREAK: fªedÜ¨gêbuf„∏(%u byãs)", 
buf„r
->
size
);

890 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

891 
	`log_îr‹
("RX_COPYBREAK: buf„∏sizê%u d€¢'àm©chány RX_COPYBREAKÖoﬁ", 
buf„r
->
size
);

894 
	}
}

900 
	$rx_c›ybªak_gë_°©s
(
rx_c›ybªak_poﬁ_t
* 
°©s
) {

902 i‡(!
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || !g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

903 
	`log_w¨nög
("RX_COPYBREAKÇot initialized, statisticsÇotávailable");

904 i‡(
°©s
) {

905 
	`mem‹y_zîo
(
°©s
, (
rx_c›ybªak_poﬁ_t
));

911 i‡(
°©s
) {

912 
	`mem‹y_c›y_›timized
(
°©s
, &
g_rx_c›ybªak_poﬁ
, (
rx_c›ybªak_poﬁ_t
));

916 
	`log_öfo
("RX_COPYBREAK Statistics:");

917 
	`log_öfo
(" Thªshﬁd: %u byãs", 
g_rx_c›ybªak_poﬁ
.
c›ybªak_thªshﬁd
);

918 
	`log_öfo
(" SmallÖool: %u buffers (%u bytesÉach), %u free, %u used,Öeak: %u",

919 
g_rx_c›ybªak_poﬁ
.
smÆl_buf„r_cou¡
, 
SMALL_BUFFER_SIZE
,

920 
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
‰ì_cou¡
,

921 
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
u£d_cou¡
,

922 
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
≥ak_ußge
);

923 
	`log_öfo
(" LargeÖool: %u buffers (%u bytesÉach), %u free, %u used,Öeak: %u",

924 
g_rx_c›ybªak_poﬁ
.
œrge_buf„r_cou¡
, 
LARGE_BUFFER_SIZE
,

925 
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
.
‰ì_cou¡
,

926 
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
.
u£d_cou¡
,

927 
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
.
≥ak_ußge
);

928 
	`log_öfo
(" Allocations: %lu small, %luÜarge",

929 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
,

930 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
);

931 
	`log_öfo
(" C›y o≥øti⁄s: %lu", 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
);

932 
	`log_öfo
(" Mem‹y saved: %lu byãs", 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
);

935 
uöt32_t
 
tŸÆ_Æloˇti⁄s
 = 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
 + g_rx_c›ybªak_poﬁ.
œrge_Æloˇti⁄s
;

936 i‡(
tŸÆ_Æloˇti⁄s
 > 0) {

937 
uöt32_t
 
smÆl_≥r˚¡age
 = (
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
 * 100Ë/ 
tŸÆ_Æloˇti⁄s
;

938 
	`log_öfo
(" Efficiency: %u%% small buffer usage, %lu bytesáverage savedÖerállocation",

939 
smÆl_≥r˚¡age
,

940 
tŸÆ_Æloˇti⁄s
 > 0 ? 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
 /Åotal_allocations : 0);

942 
	}
}

950 
	$rx_c›ybªak_ªsize_poﬁs
(
uöt32_t
 
√w_smÆl_cou¡
, uöt32_à
√w_œrge_cou¡
) {

952 i‡(!
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || !g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

953 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

954 
	`log_îr‹
("RX_COPYBREAKÇot initialized, cannotÑesizeÖools");

955  
ERROR_INVALID_PARAM
;

959 i‡(
√w_smÆl_cou¡
 =0 || 
√w_œrge_cou¡
 == 0) {

960 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

961 
	`log_îr‹
("InvÆidÖoﬁ sizes: smÆl=%u,Ü¨ge=%u", 
√w_smÆl_cou¡
, 
√w_œrge_cou¡
);

962  
ERROR_INVALID_PARAM
;

966 i‡(
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
u£d_cou¡
 > 0 || g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.used_count > 0) {

967 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_BUFFER_IN_USE
);

968 
	`log_îr‹
("CannotÑesize RX_COPYBREAKÖools while buffersáre in use (small: %u,Üarge: %u)",

969 
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
u£d_cou¡
,

970 
g_rx_c›ybªak_poﬁ
.
œrge_poﬁ
.
u£d_cou¡
);

971  
ERROR_INVALID_PARAM
;

975 
uöt32_t
 
ﬁd_smÆl_Ælocs
 = 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
;

976 
uöt32_t
 
ﬁd_œrge_Ælocs
 = 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
;

977 
uöt32_t
 
ﬁd_c›y_›s
 = 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
;

978 
uöt32_t
 
ﬁd_mem‹y_ßved
 = 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
;

980 
	`log_öfo
("Resizing RX_COPYBREAKÖools from small=%u,Üarge=%uÅo small=%u,Üarge=%u",

981 
g_rx_c›ybªak_poﬁ
.
smÆl_buf„r_cou¡
, g_rx_c›ybªak_poﬁ.
œrge_buf„r_cou¡
,

982 
√w_smÆl_cou¡
, 
√w_œrge_cou¡
);

985 
	`rx_c›ybªak_˛ónup
();

988 
ªsu…
 = 
	`rx_c›ybªak_öô
(
√w_smÆl_cou¡
, 
√w_œrge_cou¡
);

989 i‡(
ªsu…
 !
SUCCESS
) {

990 
	`log_îr‹
("FailedÅoÑeinitialize RX_COPYBREAK withÇew sizes");

991  
ªsu…
;

995 
g_rx_c›ybªak_poﬁ
.
smÆl_Æloˇti⁄s
 = 
ﬁd_smÆl_Ælocs
;

996 
g_rx_c›ybªak_poﬁ
.
œrge_Æloˇti⁄s
 = 
ﬁd_œrge_Ælocs
;

997 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
 = 
ﬁd_c›y_›s
;

998 
g_rx_c›ybªak_poﬁ
.
mem‹y_ßved
 = 
ﬁd_mem‹y_ßved
;

1000 
	`log_öfo
("RX_COPYBREAKÖoolsÑesized successfully");

1001  
SUCCESS
;

1002 
	}
}

1010 
	$rx_c›ybªak_ªc‹d_c›y
() {

1012 i‡(
g_rx_c›ybªak_poﬁ
.
smÆl_poﬁ
.
öôülized
 || g_rx_c›ybªak_poﬁ.
œrge_poﬁ
.initialized) {

1013 
g_rx_c›ybªak_poﬁ
.
c›y_›î©i⁄s
++;

1015 
	}
}

1025 
ölöe
 
uöt16_t
 
	$úq_ßve_dißbÀ
() {

1026 
uöt16_t
 
Êags
;

1027 
__asm__
 
	`__vﬁ©ûe__
(

1031 : "Ù"(
Êags
)

1035  
Êags
;

1036 
	}
}

1042 
ölöe
 
	$úq_ª°‹e
(
uöt16_t
 
Êags
) {

1043 
__asm__
 
	`__vﬁ©ûe__
(

1047 : "r"(
Êags
)

1050 
	}
}

1056 
	~"../ö˛ude/xms_dëe˘.h
"

1059 
xms_buf„r_poﬁ_t
 
	gg_xms_poﬁ
 = {0};

1060 
°agög_buf„r_t
 *
	gg_°agög_buf„rs
 = 
NULL
;

1061 
°agög_buf„r_t
 *
	gg_°agög_‰ìli°
 = 
NULL
;

1062 
uöt32_t
 
	gg_°agög_cou¡
 = 0;

1063 
uöt32_t
 
	gg_°agög_size
 = 0;

1064 
•sc_queue_t
 
	gg_de„ºed_queue
 = {0};

1073 
	$xms_buf„r_poﬁ_öô
(
xms_buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
buf„r_size
, uöt32_à
buf„r_cou¡
) {

1074 
ªsu…
;

1075 
uöt32_t
 
tŸÆ_size_kb
;

1077 i‡(!
poﬁ
 || 
buf„r_size
 =0 || 
buf„r_cou¡
 == 0 || buffer_count > 32) {

1078 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1079  
ERROR_INVALID_PARAM
;

1083 i‡(!
	`xms_is_avaûabÀ
()) {

1084 
	`log_w¨nög
("XMSÇotávailable, cannot initialize XMS bufferÖool");

1085 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1086  
ERROR_NOT_SUPPORTED
;

1090 
tŸÆ_size_kb
 = ((
buf„r_size
 * 
buf„r_cou¡
) + 1023) / 1024;

1093 
ªsu…
 = 
	`xms_Æloˇã
(
tŸÆ_size_kb
, &
poﬁ
->
xms_h™dÀ
);

1094 i‡(
ªsu…
 !
XMS_SUCCESS
) {

1095 
	`log_îr‹
("FaûedÅÿÆloˇã %u KB o‡XMS mem‹y: %d", 
tŸÆ_size_kb
, 
ªsu…
);

1096 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1097  
ªsu…
;

1101 
poﬁ
->
tŸÆ_size
 = 
tŸÆ_size_kb
 * 1024;

1102 
poﬁ
->
buf„r_size
 = buffer_size;

1103 
poﬁ
->
buf„r_cou¡
 = buffer_count;

1104 
poﬁ
->
‰ì_m≠
 = (1UL << 
buf„r_cou¡
) - 1;

1105 
poﬁ
->
°agög_off£t
 = 0;

1108 
poﬁ
->
xms_Æloˇti⁄s
 = 0;

1109 
poﬁ
->
xms_‰ìs
 = 0;

1110 
poﬁ
->
xms_c›õs_to
 = 0;

1111 
poﬁ
->
xms_c›õs_‰om
 = 0;

1112 
poﬁ
->
≥ak_ußge
 = 0;

1114 
	`log_öfo
("Initialized XMS bufferÖool: %u buffers of %u bytes (%u KBÅotal)",

1115 
buf„r_cou¡
, 
buf„r_size
, 
tŸÆ_size_kb
);

1117  
SUCCESS
;

1118 
	}
}

1124 
	$xms_buf„r_poﬁ_˛ónup
(
xms_buf„r_poﬁ_t
 *
poﬁ
) {

1125 i‡(!
poﬁ
 ||Öoﬁ->
xms_h™dÀ
 == 0) {

1130 
	`log_öfo
("XMSÖool statistics:állocs=%lu, frees=%lu, copies_to=%lu, copies_from=%lu,Öeak=%lu",

1131 
poﬁ
->
xms_Æloˇti⁄s
,Öoﬁ->
xms_‰ìs
,

1132 
poﬁ
->
xms_c›õs_to
,Öoﬁ->
xms_c›õs_‰om
,Öoﬁ->
≥ak_ußge
);

1135 
	`xms_‰ì
(
poﬁ
->
xms_h™dÀ
);

1138 
	`mem‹y_zîo
(
poﬁ
, (
xms_buf„r_poﬁ_t
));

1139 
	}
}

1147 
	$xms_buf„r_Æloc
(
xms_buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 *
buf„r_off£t
) {

1148 
uöt32_t
 
i
;

1149 
uöt32_t
 
u£d_cou¡
;

1151 i‡(!
poﬁ
 || !
buf„r_off£t
 ||Öoﬁ->
xms_h™dÀ
 == 0) {

1152 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1153  
ERROR_INVALID_PARAM
;

1157 
i
 = 0; i < 
poﬁ
->
buf„r_cou¡
; i++) {

1158 i‡(
poﬁ
->
‰ì_m≠
 & (1UL << 
i
)) {

1160 
poﬁ
->
‰ì_m≠
 &~(1UL << 
i
);

1163 *
buf„r_off£t
 = 
i
 * 
poﬁ
->
buf„r_size
;

1166 
poﬁ
->
xms_Æloˇti⁄s
++;

1168 
u£d_cou¡
 = 0;

1169 
uöt32_t
 
j
 = 0; j < 
poﬁ
->
buf„r_cou¡
; j++) {

1170 i‡(!(
poﬁ
->
‰ì_m≠
 & (1UL << 
j
))) {

1171 
u£d_cou¡
++;

1174 i‡(
u£d_cou¡
 > 
poﬁ
->
≥ak_ußge
) {

1175 
poﬁ
->
≥ak_ußge
 = 
u£d_cou¡
;

1178 
	`log_debug
("AŒoˇãd XMS buf„∏%uáàoff£à%u", 
i
, *
buf„r_off£t
);

1179  
SUCCESS
;

1184 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_POOL_FULL
);

1185 
	`log_w¨nög
("XMS bufferÖoolÉxhausted");

1186  
ERROR_NO_MEMORY
;

1187 
	}
}

1194 
	$xms_buf„r_‰ì
(
xms_buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
buf„r_off£t
) {

1195 
uöt32_t
 
buf„r_ödex
;

1197 i‡(!
poﬁ
 ||Öoﬁ->
xms_h™dÀ
 == 0) {

1198 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1203 
buf„r_ödex
 = 
buf„r_off£t
 / 
poﬁ
->
buf„r_size
;

1204 i‡(
buf„r_ödex
 >
poﬁ
->
buf„r_cou¡
) {

1205 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

1206 
	`log_îr‹
("InvÆid XMS buf„∏off£à%u", 
buf„r_off£t
);

1211 i‡(
poﬁ
->
‰ì_m≠
 & (1UL << 
buf„r_ödex
)) {

1212 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_BUFFER
);

1213 
	`log_îr‹
("XMS buf„∏%uáÃódy fªe", 
buf„r_ödex
);

1218 
poﬁ
->
‰ì_m≠
 |(1UL << 
buf„r_ödex
);

1219 
poﬁ
->
xms_‰ìs
++;

1221 
	`log_debug
("Fªed XMS buf„∏%uáàoff£à%u", 
buf„r_ödex
, 
buf„r_off£t
);

1222 
	}
}

1232 
	$xms_c›y_to_buf„r
(
xms_buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
off£t
, *
§c
, uöt32_à
size
) {

1233 
ªsu…
;

1235 i‡(!
poﬁ
 || !
§c
 || 
size
 =0 ||Öoﬁ->
xms_h™dÀ
 == 0) {

1236 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1237  
ERROR_INVALID_PARAM
;

1241 i‡(
off£t
 + 
size
 > 
poﬁ
->
tŸÆ_size
) {

1242 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

1243  
ERROR_INVALID_PARAM
;

1248 
uöt32_t
 
§c_addr
 = ((uöt32_t)
	`FP_SEG
(
§c
Ë<< 16Ë| 
	`FP_OFF
(src);

1251 
ªsu…
 = 
	`xms_move_mem‹y
(
poﬁ
->
xms_h™dÀ
, 
off£t
, 0, 
§c_addr
, 
size
);

1252 i‡(
ªsu…
 !
XMS_SUCCESS
) {

1253 
	`log_îr‹
("FaûedÅÿc›y %u byã†tÿXMSáàoff£à%u: %d", 
size
, 
off£t
, 
ªsu…
);

1254 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1255  
ªsu…
;

1258 
poﬁ
->
xms_c›õs_to
++;

1259 
	`log_debug
("C›õd %u byã†tÿXMSáàoff£à%u", 
size
, 
off£t
);

1260  
SUCCESS
;

1261 
	}
}

1271 
	$xms_c›y_‰om_buf„r
(
xms_buf„r_poﬁ_t
 *
poﬁ
, *
de°
, 
uöt32_t
 
off£t
, uöt32_à
size
) {

1272 
ªsu…
;

1274 i‡(!
poﬁ
 || !
de°
 || 
size
 =0 ||Öoﬁ->
xms_h™dÀ
 == 0) {

1275 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1276  
ERROR_INVALID_PARAM
;

1280 i‡(
off£t
 + 
size
 > 
poﬁ
->
tŸÆ_size
) {

1281 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

1282  
ERROR_INVALID_PARAM
;

1287 
uöt32_t
 
de°_addr
 = ((uöt32_t)
	`FP_SEG
(
de°
Ë<< 16Ë| 
	`FP_OFF
(dest);

1290 
ªsu…
 = 
	`xms_move_mem‹y
(0, 
de°_addr
, 
poﬁ
->
xms_h™dÀ
, 
off£t
, 
size
);

1291 i‡(
ªsu…
 !
XMS_SUCCESS
) {

1292 
	`log_îr‹
("FaûedÅÿc›y %u byã†‰om XMSáàoff£à%u: %d", 
size
, 
off£t
, 
ªsu…
);

1293 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1294  
ªsu…
;

1297 
poﬁ
->
xms_c›õs_‰om
++;

1298 
	`log_debug
("C›õd %u byã†‰om XMSáàoff£à%u", 
size
, 
off£t
);

1299  
SUCCESS
;

1300 
	}
}

1312 
	$°agög_buf„r_öô
(
uöt32_t
 
cou¡
, uöt32_à
size
) {

1313 
uöt32_t
 
i
;

1314 
uöt8_t
 *
buf„r_d©a
;

1316 i‡(
cou¡
 =0 || 
size
 == 0) {

1317 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1318  
ERROR_INVALID_PARAM
;

1322 i‡(
g_°agög_buf„rs
) {

1323 
	`°agög_buf„r_˛ónup
();

1327 
g_°agög_buf„rs
 = (
°agög_buf„r_t
*)
	`mem‹y_Æloˇã
(

1328 
cou¡
 * (
°agög_buf„r_t
), 
MEMORY_FLAG_ZERO
);

1329 i‡(!
g_°agög_buf„rs
) {

1330 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1331  
ERROR_NO_MEMORY
;

1335 
buf„r_d©a
 = (
uöt8_t
*)
	`mem‹y_Æloˇã
(
cou¡
 * 
size
, 
MEMORY_FLAG_ZERO
);

1336 i‡(!
buf„r_d©a
) {

1337 
	`mem‹y_‰ì
(
g_°agög_buf„rs
);

1338 
g_°agög_buf„rs
 = 
NULL
;

1339 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_OUT_OF_MEMORY
);

1340  
ERROR_NO_MEMORY
;

1344 
i
 = 0; i < 
cou¡
; i++) {

1345 
g_°agög_buf„rs
[
i
].
magic
 = 
STAGING_BUFFER_MAGIC
;

1346 
g_°agög_buf„rs
[
i
].
d©a
 = 
buf„r_d©a
 + (ò* 
size
);

1347 
g_°agög_buf„rs
[
i
].
size
 = size;

1348 
g_°agög_buf„rs
[
i
].
u£d
 = 0;

1349 
g_°agög_buf„rs
[
i
].
ö_u£
 = 0;

1350 
g_°agög_buf„rs
[
i
].
nic_ödex
 = 0;

1351 
g_°agög_buf„rs
[
i
].
∑ckë_size
 = 0;

1353 
g_°agög_buf„rs
[
i
].
√xt
 = (ò< 
cou¡
 - 1Ë? &g_°agög_buf„rs[ò+ 1] : 
NULL
;

1355 
g_°agög_‰ìli°
 = &
g_°agög_buf„rs
[0];

1357 
g_°agög_cou¡
 = 
cou¡
;

1358 
g_°agög_size
 = 
size
;

1360 
	`log_öfo
("Inôülized %u sègög buf„r†o‡%u byã†óch", 
cou¡
, 
size
);

1361  
SUCCESS
;

1362 
	}
}

1367 
	$°agög_buf„r_˛ónup
() {

1368 i‡(
g_°agög_buf„rs
) {

1370 i‡(
g_°agög_buf„rs
[0].
d©a
) {

1371 
	`mem‹y_‰ì
(
g_°agög_buf„rs
[0].
d©a
);

1375 
	`mem‹y_‰ì
(
g_°agög_buf„rs
);

1376 
g_°agög_buf„rs
 = 
NULL
;

1379 
g_°agög_cou¡
 = 0;

1380 
g_°agög_size
 = 0;

1381 
	}
}

1390 
°agög_buf„r_t
* 
	$°agög_buf„r_Æloc
() {

1391 
°agög_buf„r_t
 *
buf„r
;

1393 i‡(!
g_°agög_‰ìli°
) {

1394  
NULL
;

1398 
buf„r
 = 
g_°agög_‰ìli°
;

1399 
g_°agög_‰ìli°
 = 
buf„r
->
√xt
;

1402 
buf„r
->
ö_u£
 = 1;

1403 
buf„r
->
u£d
 = 0;

1404 
buf„r
->
∑ckë_size
 = 0;

1405 
buf„r
->
nic_ödex
 = 0;

1406 
buf„r
->
√xt
 = 
NULL
;

1408  
buf„r
;

1409 
	}
}

1417 
	$°agög_buf„r_‰ì
(
°agög_buf„r_t
 *
buf„r
) {

1418 
uöt16_t
 
Êags
;

1420 i‡(!
buf„r
) {

1425 i‡(
buf„r
->
magic
 !
STAGING_BUFFER_MAGIC
) {

1426 
	`log_îr‹
("Buffer corruption detected! Magic=0x%04XÉxpected=0x%04X",

1427 
buf„r
->
magic
, 
STAGING_BUFFER_MAGIC
);

1432 i‡(
buf„r
 < 
g_°agög_buf„rs
 ||

1433 
buf„r
 >
g_°agög_buf„rs
 + 
g_°agög_cou¡
) {

1434 
	`log_îr‹
("Buf„∏%∞outsidêvÆidÑ™ge", 
buf„r
);

1439 i‡(!
buf„r
->
ö_u£
) {

1440 
	`log_îr‹
("DoubÀ-‰ì dëe˘ed o¿°agög buf„∏%p", 
buf„r
);

1445 
buf„r
->
ö_u£
 = 0;

1446 
buf„r
->
u£d
 = 0;

1447 
buf„r
->
∑ckë_size
 = 0;

1448 
buf„r
->
nic_ödex
 = 0;

1451 
Êags
 = 
	`úq_ßve_dißbÀ
();

1452 
buf„r
->
√xt
 = 
g_°agög_‰ìli°
;

1453 
g_°agög_‰ìli°
 = 
buf„r
;

1454 
	`úq_ª°‹e
(
Êags
);

1455 
	}
}

1468 
	$•sc_queue_öô
(
•sc_queue_t
 *
queue
) {

1469 i‡(!
queue
) {

1470  
ERROR_INVALID_PARAM
;

1474 
	`mem‹y_zîo
(
queue
, (
•sc_queue_t
));

1477 
queue
->
hód
 = 0;

1478 
queue
->
èû
 = 0;

1480 
	`log_debug
("SPSC queue initialized: size=%u, mask=0x%02X",

1481 
SPSC_QUEUE_SIZE
, 
SPSC_QUEUE_MASK
);

1483  
SUCCESS
;

1484 
	}
}

1490 
	$•sc_queue_˛ónup
(
•sc_queue_t
 *
queue
) {

1491 
°agög_buf„r_t
 *
buf„r
;

1493 i‡(!
queue
) {

1498 (
buf„r
 = 
	`•sc_queue_dequeue
(
queue
)Ë!
NULL
) {

1499 
	`°agög_buf„r_‰ì
(
buf„r
);

1503 
queue
->
hód
 = 0;

1504 
queue
->
èû
 = 0;

1505 
	}
}

1515 
	$•sc_queue_íqueue
(
•sc_queue_t
 *
queue
, 
°agög_buf„r_t
 *
buf„r
) {

1516 
uöt8_t
 
√xt_èû
;

1518 i‡(!
queue
 || !
buf„r
) {

1519  
ERROR_INVALID_PARAM
;

1523 
√xt_èû
 = (
queue
->
èû
 + 1Ë& 
SPSC_QUEUE_MASK
;

1526 i‡(
√xt_èû
 =
queue
->
hód
) {

1527 
queue
->
íqueue_fuŒ
++;

1528  
ERROR_QUEUE_FULL
;

1532 
queue
->
buf„rs
[queue->
èû
] = 
buf„r
;

1535 
	`compûî_b¨rõr
();

1538 
queue
->
èû
 = 
√xt_èû
;

1540 
queue
->
íqueue_suc˚ss
++;

1541  
SUCCESS
;

1542 
	}
}

1551 
°agög_buf„r_t
* 
	$•sc_queue_dequeue
(
•sc_queue_t
 *
queue
) {

1552 
°agög_buf„r_t
 *
buf„r
;

1553 
uöt8_t
 
cuºít_hód
;

1555 i‡(!
queue
) {

1556  
NULL
;

1559 
cuºít_hód
 = 
queue
->
hód
;

1562 i‡(
cuºít_hód
 =
queue
->
èû
) {

1563 
queue
->
dequeue_em±y
++;

1564  
NULL
;

1568 
buf„r
 = 
queue
->
buf„rs
[
cuºít_hód
];

1571 
	`compûî_b¨rõr
();

1574 
queue
->
hód
 = (
cuºít_hód
 + 1Ë& 
SPSC_QUEUE_MASK
;

1576 
queue
->
dequeue_suc˚ss
++;

1577  
buf„r
;

1578 
	}
}

1584 
	$buf„r_poﬁ_ex∑nd
(
buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
addôi⁄Æ_buf„rs
) {

1586  
ERROR_NOT_SUPPORTED
;

1587 
	}
}

1589 
	$buf„r_poﬁ_shrök
(
buf„r_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
ªmove_buf„rs
) {

1591  
ERROR_NOT_SUPPORTED
;

1592 
	}
}

1594 
	$buf„r_¥ïíd_d©a
(
buf„r_desc_t
 *
buf„r
, c⁄° *
d©a
, 
uöt32_t
 
size
) {

1596  
ERROR_NOT_SUPPORTED
;

1597 
	}
}

1599 
	$buf„r_c›y_d©a
(
buf„r_desc_t
 *
de°
, c⁄° buf„r_desc_à*
§c
) {

1601  
ERROR_NOT_SUPPORTED
;

1602 
	}
}

1604 
	$buf„r_move_d©a
(
buf„r_desc_t
 *
de°
, buf„r_desc_à*
§c
) {

1606  
ERROR_NOT_SUPPORTED
;

1607 
	}
}

1609 
	$buf„r_˛ór_d©a
(
buf„r_desc_t
 *
buf„r
) {

1610 i‡(
buf„r
 && 
	`buf„r_is_vÆid
(buffer)) {

1611 
	`mem‹y_£t_›timized
(
buf„r
->
d©a
, 0, buf„r->
size
);

1612 
buf„r
->
u£d
 = 0;

1614 
	}
}

1622 
buf„r_desc_t
* 
	$buf„r_Æloc_ëhî√t_‰ame
(
uöt32_t
 
‰ame_size
, 
buf„r_ty≥_t
 
ty≥
) {

1623 
buf„r_poﬁ_t
 *
poﬁ
 = 
NULL
;

1624 
buf„r_desc_t
 *
buf„r
 = 
NULL
;

1625 
boﬁ
 
u£d_Á°_∑th
 = 
Ál£
;

1628 i‡(
‰ame_size
 <64 && 
g_buf„r_poﬁ_64
.
öôülized
) {

1629 
poﬁ
 = &
g_buf„r_poﬁ_64
;

1630 
u£d_Á°_∑th
 = 
åue
;

1631 } i‡(
‰ame_size
 <128 && 
g_buf„r_poﬁ_128
.
öôülized
) {

1632 
poﬁ
 = &
g_buf„r_poﬁ_128
;

1633 
u£d_Á°_∑th
 = 
åue
;

1634 } i‡(
‰ame_size
 <512 && 
g_buf„r_poﬁ_512
.
öôülized
) {

1635 
poﬁ
 = &
g_buf„r_poﬁ_512
;

1636 
u£d_Á°_∑th
 = 
åue
;

1637 } i‡(
‰ame_size
 <1518 && 
g_buf„r_poﬁ_1518
.
öôülized
) {

1638 
poﬁ
 = &
g_buf„r_poﬁ_1518
;

1639 
u£d_Á°_∑th
 = 
åue
;

1643 i‡(
u£d_Á°_∑th
 && 
poﬁ
) {

1644 
buf„r
 = 
	`buf„r_Æloc
(
poﬁ
);

1645 i‡(
buf„r
) {

1646 
g_Á°_∑th_Æloˇti⁄s
++;

1647 
g_Á°_∑th_ˇche_hôs
++;

1648 
	`log_debug
("Fa°Ö©háŒoˇti⁄: %u byã†‰om size-•ecifi¯poﬁ", 
‰ame_size
);

1649  
buf„r
;

1652 
	`log_debug
("Fa°Ö©hÖoﬁÉm±y f‹ sizê%u, usög fÆlback", 
‰ame_size
);

1656 
g_ÁŒback_Æloˇti⁄s
++;

1658 i‡(
‰ame_size
 <= 1518) {

1660 i‡(
ty≥
 =
BUFFER_TYPE_RX
) {

1661 
poﬁ
 = &
g_rx_buf„r_poﬁ
;

1662 } i‡(
ty≥
 =
BUFFER_TYPE_DMA_TX
 ||Åy≥ =
BUFFER_TYPE_DMA_RX
) {

1663 
poﬁ
 = &
g_dma_buf„r_poﬁ
;

1665 
poﬁ
 = &
g_tx_buf„r_poﬁ
;

1668 
buf„r
 = 
	`buf„r_Æloc
(
poﬁ
);

1669 i‡(
buf„r
) {

1670 
	`log_debug
("FÆlbackáŒoˇti⁄: %u byã†‰omÑeguœ∏poﬁ", 
‰ame_size
);

1671  
buf„r
;

1675 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

1676 
	`log_îr‹
("Jumbÿ‰amêsizê%uÇŸ suµ‹ãd (max 1518)", 
‰ame_size
);

1677  
NULL
;

1681 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_POOL_FULL
);

1682 
	`log_w¨nög
("AŒ buf„∏poﬁ†exhau°ed f‹ fømêsizê%u", 
‰ame_size
);

1683  
NULL
;

1684 
	}
}

1692 
buf„r_desc_t
* 
	$buf„r_Æloc_dma
(
uöt32_t
 
size
, uöt32_à
Æignmít
) {

1693 
˝u_öfo_t
 
g_˝u_öfo
;

1696 i‡(
Æignmít
 == 0 || (alignment & (alignment - 1)) != 0) {

1697 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_ALIGNMENT
);

1698  
NULL
;

1702 i‡(
size
 <
DMA_BUFFER_SIZE
) {

1703 
buf„r_desc_t
 *
buf„r
 = 
	`buf„r_Æloc
(&
g_dma_buf„r_poﬁ
);

1704 i‡(
buf„r
) {

1706 i‡(!
	`IS_ALIGNED
((
uöt32_t
)
buf„r
->
d©a
, 
Æignmít
)) {

1707 
	`log_w¨nög
("DMA bufferÇotÖroperlyáligned: %p (need %u-byteálignment)",

1708 
buf„r
->
d©a
, 
Æignmít
);

1712 
buf„r
->
Êags
 |
BUFFER_FLAG_DMA_CAPABLE
;

1713  
buf„r
;

1718 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_POOL_FULL
);

1719  
NULL
;

1720 
	}
}

1727 
uöt32_t
 
	$buf„r_gë_›timÆ_size
(
uöt32_t
 
ªque°ed_size
) {

1728 
˝u_öfo_t
 
g_˝u_öfo
;

1729 
uöt32_t
 
Æignmít
;

1732 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1733 
Æignmít
 = 4;

1735 
Æignmít
 = 2;

1739  
	`ALIGN_UP
(
ªque°ed_size
, 
Æignmít
);

1740 
	}
}

1746 
	$buf„r_sy°em_öô_›timized
() {

1747 
ªsu…
;

1748 
˝u_öfo_t
 
g_˝u_öfo
;

1751 
ªsu…
 = 
	`buf„r_sy°em_öô
();

1752 i‡(
ªsu…
 !
SUCCESS
) {

1753  
ªsu…
;

1757 
	`log_öfo
("Optimizing buffer system for %s CPU",

1758 
	`˝u_ty≥_to_°rög
(
g_˝u_öfo
.
ty≥
));

1760 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1761 
	`log_öfo
("Enabling 32-bit buffer optimizations");

1764 i‡(
g_˝u_öfo
.
„©uªs
 & 
CPU_FEATURE_TSC
) {

1765 
	`log_öfo
("TSCávailable for bufferÅiming measurements");

1768 
	`log_öfo
("Using 16-bit buffer operations for compatibility");

1772 i‡(
	`mem‹y_xms_avaûabÀ
()) {

1773 
uöt32_t
 
xms_size
 = 
	`mem‹y_gë_xms_size
();

1774 
	`log_öfo
("XMS mem‹yávaûabÀ: %u KB f‹Ü¨gê∑ckë buf„rs", 
xms_size
);

1777  
SUCCESS
;

1778 
	}
}

1786 
	$buf„r_c›y_∑ckë_d©a
(
buf„r_desc_t
 *
de°
, c⁄° buf„r_desc_à*
§c
) {

1787 i‡(!
de°
 || !
§c
 || !
	`buf„r_is_vÆid
(dest) || !buffer_is_valid(src)) {

1788 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1789  
ERROR_INVALID_PARAM
;

1792 i‡(
§c
->
u£d
 > 
de°
->
size
) {

1793 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_SIZE_MISMATCH
);

1794  
ERROR_INVALID_PARAM
;

1798 
	`mem‹y_c›y_›timized
(
de°
->
d©a
, 
§c
->d©a, src->
u£d
);

1799 
de°
->
u£d
 = 
§c
->used;

1801  
SUCCESS
;

1802 
	}
}

1808 
	$buf„r_¥e„tch_d©a
(c⁄° 
buf„r_desc_t
 *
buf„r
) {

1809 
˝u_öfo_t
 
g_˝u_öfo
;

1811 i‡(!
buf„r
 || !
	`buf„r_is_vÆid
(buffer)) {

1816 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1818 vﬁ©ûê
uöt8_t
 *
d©a
 = (vﬁ©ûêuöt8_t*)
buf„r
->data;

1819 
uöt32_t
 
size
 = 
buf„r
->
u£d
;

1820 
uöt32_t
 
ˇche_löe
 = 32;

1823 
uöt32_t
 
off£t
 = 0; off£à< 
size
; off£à+
ˇche_löe
) {

1824 ()
d©a
[
off£t
];

1827 
	}
}

1838 
buf„r_desc_t
* 
	$buf„r_Æloc_nic_aw¨e
(
nic_id_t
 
nic_id
, 
buf„r_ty≥_t
 
ty≥
, 
uöt32_t
 
size
) {

1839 
buf„r_desc_t
* 
buf„r
 = 
NULL
;

1842 i‡(
nic_id
 !
INVALID_NIC_ID
 && 
	`nic_buf„r_is_öôülized
(nic_id)) {

1843 
buf„r
 = 
	`nic_buf„r_Æloc
(
nic_id
, 
ty≥
, 
size
);

1844 i‡(
buf„r
) {

1845 
	`log_debug
("AŒoˇãd buf„∏‰omÖî-NICÖoﬁ f‹ NIC %d", 
nic_id
);

1846  
buf„r
;

1848 
	`log_debug
("Pî-NICáŒoˇti⁄ faûed f‹ NIC %d,ÅryögÜegacyáŒoˇti⁄", 
nic_id
);

1852 
ty≥
) {

1853 
BUFFER_TYPE_TX
:

1854 
BUFFER_TYPE_DMA_TX
:

1855 
buf„r
 = 
	`buf„r_Æloc
(&
g_tx_buf„r_poﬁ
);

1857 
BUFFER_TYPE_RX
:

1858 
BUFFER_TYPE_DMA_RX
:

1859 
buf„r
 = 
	`buf„r_Æloc
(&
g_rx_buf„r_poﬁ
);

1861 
BUFFER_TYPE_DESCRIPTOR
:

1862 
BUFFER_TYPE_TEMPORARY
:

1863 
buf„r
 = 
	`buf„r_Æloc
(&
g_dma_buf„r_poﬁ
);

1866 
	`buf„r_£t_œ°_îr‹
(
BUFFER_ERROR_INVALID_PARAM
);

1867  
NULL
;

1870 i‡(
buf„r
) {

1871 
	`log_debug
("AŒoˇãd buf„∏‰omÜegacy globÆÖoﬁ (ty≥ %d)", 
ty≥
);

1873 
	`log_w¨nög
("BothÖer-NICándÜegacy bufferállocation failed");

1876  
buf„r
;

1877 
	}
}

1884 
	$buf„r_‰ì_nic_aw¨e
(
nic_id_t
 
nic_id
, 
buf„r_desc_t
* 
buf„r
) {

1885 i‡(!
buf„r
) {

1890 i‡(
nic_id
 !
INVALID_NIC_ID
 && 
	`nic_buf„r_is_öôülized
(nic_id)) {

1891 
	`nic_buf„r_‰ì
(
nic_id
, 
buf„r
);

1892 
	`log_debug
("Fªed buf„∏tÿ≥r-NICÖoﬁ f‹ NIC %d", 
nic_id
);

1897 i‡(
nic_id
 =
INVALID_NIC_ID
) {

1899 
nic_id_t
 
ã°_id
 = 0;Åe°_id < 
MAX_NICS
;Åest_id++) {

1900 i‡(
	`nic_buf„r_is_öôülized
(
ã°_id
)) {

1902 
	`nic_buf„r_‰ì
(
ã°_id
, 
buf„r
);

1903 
	`log_debug
("Auto-dëe˘edánd fªed buf„∏tÿNIC %dÖoﬁ", 
ã°_id
);

1910 
	`buf„r_‰ì_™y
(
buf„r
);

1911 
	`log_debug
("Freed buffer usingÜegacy method");

1912 
	}
}

1921 
	$buf„r_ªgi°î_nic
(
nic_id_t
 
nic_id
, 
nic_ty≥_t
 
nic_ty≥
, c⁄° * 
nic_«me
) {

1922 i‡(!
g_buf„r_sy°em_öôülized
) {

1923 
	`log_îr‹
("Buffer systemÇot initialized");

1924  
ERROR_INVALID_PARAM
;

1927 
	`log_öfo
("Regi°îög NIC %d (%sËwôh buf„∏sy°em", 
nic_id
, 
nic_«me
 ?Çic_name : "Unknown");

1930 
ªsu…
 = 
	`nic_buf„r_poﬁ_¸óã
(
nic_id
, 
nic_ty≥
, 
nic_«me
);

1931 i‡(
ªsu…
 !
SUCCESS
) {

1932 
	`log_îr‹
("FaûedÅÿ¸óã buf„∏poﬁ†f‹ NIC %d: %d", 
nic_id
, 
ªsu…
);

1933  
ªsu…
;

1937 
uöt32_t
 
smÆl_cou¡
 = 
DEFAULT_SMALL_BUFFERS_PER_NIC
;

1938 
uöt32_t
 
œrge_cou¡
 = 
DEFAULT_LARGE_BUFFERS_PER_NIC
;

1939 
uöt32_t
 
thªshﬁd
 = 
RX_COPYBREAK_THRESHOLD
;

1942 i‡(
nic_ty≥
 =
NIC_TYPE_3C515_TX
) {

1944 
smÆl_cou¡
 = 32;

1945 
œrge_cou¡
 = 16;

1946 
thªshﬁd
 = 256;

1949 
ªsu…
 = 
	`nic_rx_c›ybªak_öô
(
nic_id
, 
smÆl_cou¡
, 
œrge_cou¡
, 
thªshﬁd
);

1950 i‡(
ªsu…
 !
SUCCESS
) {

1951 
	`log_w¨nög
("FaûedÅÿöôülizêRX_COPYBREAK f‹ NIC %d: %d", 
nic_id
, 
ªsu…
);

1955 
	`log_öfo
("Suc˚ssfuŒyÑegi°îed NIC %d wôh buf„∏sy°em", 
nic_id
);

1956  
SUCCESS
;

1957 
	}
}

1964 
	$buf„r_uƒegi°î_nic
(
nic_id_t
 
nic_id
) {

1965 i‡(!
g_buf„r_sy°em_öôülized
) {

1966  
ERROR_INVALID_PARAM
;

1969 
	`log_öfo
("Uƒegi°îög NIC %d from buf„∏sy°em", 
nic_id
);

1972 
ªsu…
 = 
	`nic_buf„r_poﬁ_de°roy
(
nic_id
);

1973 i‡(
ªsu…
 !
SUCCESS
) {

1974 
	`log_w¨nög
("FaûedÅÿde°roy buf„∏poﬁ†f‹ NIC %d: %d", 
nic_id
, 
ªsu…
);

1977  
ªsu…
;

1978 
	}
}

1986 
	$buf„r_gë_nic_°©s
(
nic_id_t
 
nic_id
, 
buf„r_poﬁ_°©s_t
* 
°©s
) {

1987 i‡(!
°©s
) {

1988  
ERROR_INVALID_PARAM
;

1991  
	`nic_buf„r_gë_°©s
(
nic_id
, 
°©s
);

1992 
	}
}

1998 
	$buf„r_ªbÆ™˚_ªsour˚s
() {

1999 i‡(!
g_buf„r_sy°em_öôülized
) {

2000  
ERROR_INVALID_PARAM
;

2003 
	`log_öfo
("Triggering bufferÑesourceÑebalancing");

2004  
	`bÆ™˚_buf„r_ªsour˚s
();

2005 
	}
}

2014 
buf„r_desc_t
* 
	$buf„r_Æloc_ëhî√t_‰ame_nic
(
nic_id_t
 
nic_id
, 
uöt32_t
 
‰ame_size
, 
buf„r_ty≥_t
 
ty≥
) {

2016 i‡(
nic_id
 !
INVALID_NIC_ID
 && 
	`nic_buf„r_is_öôülized
(nic_id)) {

2017  
	`nic_buf„r_Æloc_ëhî√t_‰ame
(
nic_id
, 
‰ame_size
, 
ty≥
);

2021  
	`buf„r_Æloc_ëhî√t_‰ame
(
‰ame_size
, 
ty≥
);

2022 
	}
}

2030 
buf„r_desc_t
* 
	$buf„r_rx_c›ybªak_Æloc_nic
(
nic_id_t
 
nic_id
, 
uöt32_t
 
∑ckë_size
) {

2032 i‡(
nic_id
 !
INVALID_NIC_ID
 && 
	`nic_buf„r_is_öôülized
(nic_id)) {

2033 
buf„r_desc_t
* 
buf„r
 = 
	`nic_rx_c›ybªak_Æloc
(
nic_id
, 
∑ckë_size
);

2034 i‡(
buf„r
) {

2035  
buf„r
;

2037 
	`log_debug
("Pî-NIC RX_COPYBREAKáŒoˇti⁄ faûed f‹ NIC %d, usögÜegacy", 
nic_id
);

2041  
	`rx_c›ybªak_Æloc
(
∑ckë_size
);

2042 
	}
}

2049 
	$buf„r_rx_c›ybªak_‰ì_nic
(
nic_id_t
 
nic_id
, 
buf„r_desc_t
* 
buf„r
) {

2050 i‡(!
buf„r
) {

2055 i‡(
nic_id
 !
INVALID_NIC_ID
 && 
	`nic_buf„r_is_öôülized
(nic_id)) {

2056 
	`nic_rx_c›ybªak_‰ì
(
nic_id
, 
buf„r
);

2061 
	`rx_c›ybªak_‰ì
(
buf„r
);

2062 
	}
}

2067 
	$buf„r_¥öt_com¥ehísive_°©s
() {

2069 
	`log_öfo
("=== Legacy Global Buffer Pool Statistics ===");

2071 
	`log_öfo
("TX Pool: %uÅotal, %u free, %u used,Öeak %u",

2072 
	`buf„r_poﬁ_gë_tŸÆ_cou¡
(&
g_tx_buf„r_poﬁ
),

2073 
	`buf„r_poﬁ_gë_‰ì_cou¡
(&
g_tx_buf„r_poﬁ
),

2074 
	`buf„r_poﬁ_gë_u£d_cou¡
(&
g_tx_buf„r_poﬁ
),

2075 
g_tx_buf„r_poﬁ
.
≥ak_ußge
);

2077 
	`log_öfo
("RX Pool: %uÅotal, %u free, %u used,Öeak %u",

2078 
	`buf„r_poﬁ_gë_tŸÆ_cou¡
(&
g_rx_buf„r_poﬁ
),

2079 
	`buf„r_poﬁ_gë_‰ì_cou¡
(&
g_rx_buf„r_poﬁ
),

2080 
	`buf„r_poﬁ_gë_u£d_cou¡
(&
g_rx_buf„r_poﬁ
),

2081 
g_rx_buf„r_poﬁ
.
≥ak_ußge
);

2083 
	`log_öfo
("DMA Pool: %uÅotal, %u free, %u used,Öeak %u",

2084 
	`buf„r_poﬁ_gë_tŸÆ_cou¡
(&
g_dma_buf„r_poﬁ
),

2085 
	`buf„r_poﬁ_gë_‰ì_cou¡
(&
g_dma_buf„r_poﬁ
),

2086 
	`buf„r_poﬁ_gë_u£d_cou¡
(&
g_dma_buf„r_poﬁ
),

2087 
g_dma_buf„r_poﬁ
.
≥ak_ußge
);

2090 c⁄° 
buf„r_°©s_t
* 
°©s
 = 
	`buf„r_gë_°©s
();

2091 
	`log_öfo
("Global Stats: %luÅotalállocs, %lu failures, %lu current, %luÖeak",

2092 
°©s
->
tŸÆ_Æloˇti⁄s
, sèts->
Æloˇti⁄_Áûuªs
,

2093 
°©s
->
cuºít_Æloˇãd
, sèts->
≥ak_Æloˇãd
);

2096 
	`nic_buf„r_¥öt_Æl_°©s
();

2099 
	`log_öfo
("Fast Path Stats: %lu fastállocs, %lu cache hits, %lu fallbacks",

2100 
g_Á°_∑th_Æloˇti⁄s
, 
g_Á°_∑th_ˇche_hôs
, 
g_ÁŒback_Æloˇti⁄s
);

2101 
	}
}

2106 
	$buf„r_m⁄ô‹_™d_ªbÆ™˚
() {

2107 i‡(!
g_buf„r_sy°em_öôülized
) {

2112 
	`m⁄ô‹_nic_buf„r_ußge
();

2115 
uöt32_t
 
œ°_Àgacy_m⁄ô‹
 = 0;

2116 
uöt32_t
 
cuºít_time
 = 
	`gë_sy°em_time°amp_ms
();

2118 i‡(
cuºít_time
 - 
œ°_Àgacy_m⁄ô‹
 > 10000) {

2119 
uöt32_t
 
tx_ußge
 = (
g_tx_buf„r_poﬁ
.
u£d_cou¡
 * 100Ë/ g_tx_buf„r_poﬁ.
buf„r_cou¡
;

2120 
uöt32_t
 
rx_ußge
 = (
g_rx_buf„r_poﬁ
.
u£d_cou¡
 * 100Ë/ g_rx_buf„r_poﬁ.
buf„r_cou¡
;

2121 
uöt32_t
 
dma_ußge
 = (
g_dma_buf„r_poﬁ
.
u£d_cou¡
 * 100Ë/ g_dma_buf„r_poﬁ.
buf„r_cou¡
;

2123 i‡(
tx_ußge
 > 85 || 
rx_ußge
 > 85 || 
dma_ußge
 > 85) {

2124 
	`log_w¨nög
("HighÜegacyÖool usage: TX %u%%, RX %u%%, DMA %u%%",

2125 
tx_ußge
, 
rx_ußge
, 
dma_ußge
);

2128 
œ°_Àgacy_m⁄ô‹
 = 
cuºít_time
;

2130 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/config.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<˘y≥.h
>

15 
	~"../ö˛ude/c⁄fig.h
"

16 
	~"../ö˛ude/°©ic_routög.h
"

17 
	~"../ö˛ude/loggög.h
"

18 
	~"../ö˛ude/˝u_dëe˘.h
"

19 
	~"../ö˛ude/busma°î_ã°.h
"

20 
	~"../ö˛ude/¥odu˘i⁄.h
"

21 
	~"../ö˛ude/buf„r_c⁄fig.h
"

24 #¥agm®
code_£g
("COLD_TEXT", "CODE")

27 c⁄° 
c⁄fig_t
 
	gdeÁu…_c⁄fig
 = {

42 
CONFIG_DEFAULT_IO1_BASE
,

43 
CONFIG_DEFAULT_IO2_BASE
,

44 
CONFIG_DEFAULT_IRQ1
,

45 
CONFIG_DEFAULT_IRQ2
,

46 
CONFIG_DEFAULT_SPEED
,

47 
CONFIG_DEFAULT_BUSMASTER
,

48 
CONFIG_DEFAULT_LOG_ENABLED
,

63 c⁄° *
	m«me
;

64 (*
	mh™dÀr
)(
c⁄fig_t
 *
	mc⁄fig
, c⁄° *
	mvÆue
);

65 c⁄° *
	mdes¸ùti⁄
;

66 } 
	tc⁄fig_∑øm_t
;

69 
h™dÀ_debug_Àvñ
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

70 
h™dÀ_u£_xms
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

71 
h™dÀ_íabÀ_routög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

72 
h™dÀ_íabÀ_°©ic_routög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

73 
h™dÀ_buf„r_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

74 
h™dÀ_buf„r_size
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

75 
h™dÀ_öãºu±_ve˘‹
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

76 
h™dÀ_io_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

77 
h™dÀ_úq
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

78 
h™dÀ_íabÀ_°©s
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

79 
h™dÀ_¥omiscuous_mode
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

80 
h™dÀ_íabÀ_loggög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

81 
h™dÀ_ã°_mode
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

84 
h™dÀ_io1_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

85 
h™dÀ_io2_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

86 
h™dÀ_úq1
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

87 
h™dÀ_úq2
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

88 
h™dÀ_•ìd
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

89 
h™dÀ_busma°î
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

90 
h™dÀ_log
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

91 
h™dÀ_rouã
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

94 
h™dÀ_buf„r_size_ovîride
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

95 
h™dÀ_tx_rög_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

96 
h™dÀ_rx_rög_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

97 
h™dÀ_f‹˚_pio
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

98 
h™dÀ_möimÆ_buf„rs
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

99 
h™dÀ_›timÆ_buf„rs
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

100 
h™dÀ_buf„r_c⁄fig
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

103 * 
n‹mÆize_∑ømëî_«me
(c⁄° * 
∑øm
);

104 
∑r£_hex_vÆue
(c⁄° * 
vÆue
, * 
ªsu…
);

105 
∑r£_√tw‹k_addªss
(c⁄° * 
addr_°r
, 
uöt32_t
* 
√tw‹k
, uöt32_t* 
√tmask
);

106 
∑r£_ù_addªss
(c⁄° * 
addr_°r
, 
uöt32_t
* 
ù_addr
);

107 
°ricmp
(c⁄° * 
s1
, c⁄° * 
s2
);

110 c⁄° 
c⁄fig_∑øm_t
 
	gc⁄fig_∑øms
[] = {

112 {"DEBUG", 
h™dÀ_debug_Àvñ
, "DebugÜevel (0-3)"},

113 {"XMS", 
h™dÀ_u£_xms
, "Use XMS memory (0/1)"},

114 {"ROUTING", 
h™dÀ_íabÀ_routög
, "EnableÑouting (0/1)"},

115 {"STATIC_ROUTING", 
h™dÀ_íabÀ_°©ic_routög
, "Enable staticÑouting (0/1)"},

116 {"BUFFERS", 
h™dÀ_buf„r_cou¡
, "Number of buffers (1-16)"},

117 {"BUFSIZE", 
h™dÀ_buf„r_size
, "Buffer size in bytes"},

118 {"INTVEC", 
h™dÀ_öãºu±_ve˘‹
, "Interrupt vector (hex)"},

119 {"IOBASE", 
h™dÀ_io_ba£
, "I/O baseáddress (hex)"},

120 {"IRQ", 
h™dÀ_úq
, "IRQÇumber (2-15)"},

121 {"STATS", 
h™dÀ_íabÀ_°©s
, "Enable statistics (0/1)"},

122 {"PROMISC", 
h™dÀ_¥omiscuous_mode
, "Promiscuous mode (0/1)"},

123 {"LOGGING", 
h™dÀ_íabÀ_loggög
, "EnableÜogging (0/1)"},

124 {"TEST", 
h™dÀ_ã°_mode
, "Test mode (0/1)"},

127 {"IO1", 
h™dÀ_io1_ba£
, "First NIC I/O baseáddress (0x200-0x3F0)"},

128 {"IO2", 
h™dÀ_io2_ba£
, "Second NIC I/O baseáddress (0x200-0x3F0)"},

129 {"IRQ1", 
h™dÀ_úq1
, "First NIC IRQ (3,5,7,9,10,11,12,15)"},

130 {"IRQ2", 
h™dÀ_úq2
, "Second NIC IRQ (3,5,7,9,10,11,12,15)"},

131 {"SPEED", 
h™dÀ_•ìd
, "Network speed (10, 100, AUTO)"},

132 {"BUSMASTER", 
h™dÀ_busma°î
, "Bus mastering (ON, OFF, AUTO)"},

133 {"LOG", 
h™dÀ_log
, "DiagnosticÜogging (ON, OFF)"},

134 {"ROUTE", 
h™dÀ_rouã
, "StaticÑoute (network/mask,nic)"},

137 {"TXRING", 
h™dÀ_tx_rög_cou¡
, "TXÑing size (4-32)"},

138 {"RXRING", 
h™dÀ_rx_rög_cou¡
, "RXÑing size (8-32)"},

139 {"PIO", 
h™dÀ_f‹˚_pio
, "Force PIO mode (no bus master)"},

140 {"MINIMAL", 
h™dÀ_möimÆ_buf„rs
, "Minimal 3KB buffer config"},

141 {"OPTIMAL", 
h™dÀ_›timÆ_buf„rs
, "MaximumÖerformance config"},

142 {"BUFFERS", 
h™dÀ_buf„r_c⁄fig
, "Buffer config (size,tx,rx)"}

145 
	#NUM_CONFIG_PARAMS
 ((
c⁄fig_∑øms
Ë/ (c⁄fig_∑øms[0]))

	)

153 
	$c⁄fig_∑r£_∑øms
(c⁄° *
∑øms
, 
c⁄fig_t
 *
c⁄fig
) {

154 *
∑øm_c›y
, *
tokí
, *
vÆue
;

155 *
ßvïå
 = 
NULL
;

156 
i
, 
found
, 
ªsu…
 = 0;

158 i‡(!
c⁄fig
) {

159 
	`log_îr‹
("config_parse_params: NULL configÖarameter");

160  
CONFIG_ERR_INVALID_PARAM
;

164 *
c⁄fig
 = 
deÁu…_c⁄fig
;

166 i‡(!
∑øms
 || 
	`°æí
(params) == 0) {

167 
	`log_öfo
("No configurationÖarameters, using defaults");

171 
	`log_öfo
("P¨sög c⁄figuøti⁄: %s", 
∑øms
);

174 
∑øm_c›y
 = 
	`mÆloc
(
	`°æí
(
∑øms
) + 1);

175 i‡(!
∑øm_c›y
) {

176 
	`log_îr‹
("FailedÅoállocate memory forÖarameterÖarsing");

177  
CONFIG_ERR_MEMORY
;

179 
	`°r˝y
(
∑øm_c›y
, 
∑øms
);

182 
tokí
 = 
	`°πok
(
∑øm_c›y
, " \t");

183 
tokí
 !
NULL
) {

184 * 
∑øm_«me
;

187 i‡(
tokí
[0] == '/') {

188 
∑øm_«me
 = 
tokí
 + 1;

190 
∑øm_«me
 = 
tokí
;

194 
vÆue
 = 
	`°rchr
(
∑øm_«me
, '=');

195 i‡(
vÆue
) {

196 *
vÆue
 = '\0';

197 
vÆue
++;

199 
vÆue
 = "1";

203 * 
n‹mÆized_«me
 = 
	`n‹mÆize_∑ømëî_«me
(
∑øm_«me
);

204 i‡(!
n‹mÆized_«me
) {

205 
	`log_îr‹
("FailedÅoállocate memory forÖarameterÇame");

206 
	`‰ì
(
∑øm_c›y
);

207  
CONFIG_ERR_MEMORY
;

211 
found
 = 0;

212 
i
 = 0; i < 
NUM_CONFIG_PARAMS
; i++) {

213 i‡(
	`°rcmp
(
n‹mÆized_«me
, 
c⁄fig_∑øms
[
i
].
«me
) == 0) {

214 
ªsu…
 = 
c⁄fig_∑øms
[
i
].
	`h™dÀr
(
c⁄fig
, 
vÆue
);

215 i‡(
ªsu…
 < 0) {

216 
	`log_îr‹
("ErrorÖrocessingÖarameter %s=%s: %d",

217 
n‹mÆized_«me
, 
vÆue
, 
ªsu…
);

218 
	`‰ì
(
n‹mÆized_«me
);

219 
	`‰ì
(
∑øm_c›y
);

220  
ªsu…
;

222 
found
 = 1;

227 i‡(!
found
) {

228 
	`log_w¨nög
("Unknow¿c⁄figuøti⁄Ö¨amëî: %s", 
n‹mÆized_«me
);

231 
	`‰ì
(
n‹mÆized_«me
);

232 
tokí
 = 
	`°πok
(
NULL
, " \t");

235 
	`‰ì
(
∑øm_c›y
);

238 
ªsu…
 = 
	`c⁄fig_vÆid©e
(
c⁄fig
);

239 i‡(
ªsu…
 < 0) {

240 
	`log_îr‹
("C⁄figuøti⁄ vÆid©i⁄ faûed: %d", 
ªsu…
);

241  
ªsu…
;

245 
ªsu…
 = 
	`c⁄fig_vÆid©e_¸oss_∑ømëîs
(
c⁄fig
);

246 i‡(
ªsu…
 < 0) {

247 
	`log_îr‹
("Cross-∑ømëî vÆid©i⁄ faûed: %d", 
ªsu…
);

248  
ªsu…
;

251 
	`log_öfo
("ConfigurationÖarsed successfully");

253 
	}
}

260 
	$c⁄fig_vÆid©e
(c⁄° 
c⁄fig_t
 *
c⁄fig
) {

261 i‡(!
c⁄fig
) {

262  
CONFIG_ERR_INVALID_PARAM
;

265 
	`log_debug
("Validating configuration");

268 i‡(
c⁄fig
->
debug_Àvñ
 > 3) {

269 
	`log_îr‹
("InvÆid debugÜevñ: %d (max 3)", 
c⁄fig
->
debug_Àvñ
);

270  
CONFIG_ERR_INVALID_VALUE
;

274 i‡(
c⁄fig
->
buf„r_cou¡
 < 1 || config->buffer_count > 16) {

275 
	`log_îr‹
("InvÆid buf„∏cou¡: %d (øngê1-16)", 
c⁄fig
->
buf„r_cou¡
);

276  
CONFIG_ERR_INVALID_VALUE
;

279 i‡(
c⁄fig
->
buf„r_size
 < 64 || config->buffer_size > 65536) {

280 
	`log_îr‹
("InvÆid buf„∏size: %d (øngê64-65536)", 
c⁄fig
->
buf„r_size
);

281  
CONFIG_ERR_INVALID_VALUE
;

285 i‡(
c⁄fig
->
úq
 < 2 || config->irq > 15) {

286 
	`log_îr‹
("InvÆidÜegacy IRQ: %d (øngê2-15)", 
c⁄fig
->
úq
);

287  
CONFIG_ERR_INVALID_VALUE
;

291 i‡(
c⁄fig
->
io_ba£
 < 0x200 || config->io_base > 0x3FF) {

292 
	`log_w¨nög
("UnusuÆÜegacy I/O ba£áddªss: 0x%04X", 
c⁄fig
->
io_ba£
);

298 i‡(!
	`c⁄fig_is_vÆid_io_addªss
(
c⁄fig
->
io1_ba£
)) {

299 
	`log_îr‹
("Invalid IO1 baseáddress: 0x%04X (range 0x%04X-0x%04X)",

300 
c⁄fig
->
io1_ba£
, 
CONFIG_MIN_IO_BASE
, 
CONFIG_MAX_IO_BASE
);

301  
CONFIG_ERR_INVALID_IO_RANGE
;

304 i‡(!
	`c⁄fig_is_vÆid_io_addªss
(
c⁄fig
->
io2_ba£
)) {

305 
	`log_îr‹
("Invalid IO2 baseáddress: 0x%04X (range 0x%04X-0x%04X)",

306 
c⁄fig
->
io2_ba£
, 
CONFIG_MIN_IO_BASE
, 
CONFIG_MAX_IO_BASE
);

307  
CONFIG_ERR_INVALID_IO_RANGE
;

311 i‡(!
	`c⁄fig_check_io_c⁄Êi˘
(
c⁄fig
->
io1_ba£
, c⁄fig->
io2_ba£
)) {

312 
	`log_îr‹
("I/Oáddress conflict: IO1=0x%04Xánd IO2=0x%04X overlap",

313 
c⁄fig
->
io1_ba£
, c⁄fig->
io2_ba£
);

314  
CONFIG_ERR_IO_CONFLICT
;

318 i‡(!
	`c⁄fig_is_vÆid_úq_numbî
(
c⁄fig
->
úq1
)) {

319 
	`log_îr‹
("InvÆid IRQ1: %d (vÆid: 3,5,7,9,10,11,12,15)", 
c⁄fig
->
úq1
);

320  
CONFIG_ERR_INVALID_IRQ_RANGE
;

323 i‡(!
	`c⁄fig_is_vÆid_úq_numbî
(
c⁄fig
->
úq2
)) {

324 
	`log_îr‹
("InvÆid IRQ2: %d (vÆid: 3,5,7,9,10,11,12,15)", 
c⁄fig
->
úq2
);

325  
CONFIG_ERR_INVALID_IRQ_RANGE
;

329 i‡(!
	`c⁄fig_check_úq_c⁄Êi˘
(
c⁄fig
->
úq1
, c⁄fig->
úq2
)) {

330 
	`log_îr‹
("IRQ conflict: IRQ1=%dánd IRQ2=%dáreÅhe same",

331 
c⁄fig
->
úq1
, c⁄fig->
úq2
);

332  
CONFIG_ERR_IRQ_CONFLICT
;

336 i‡(
c⁄fig
->
•ìd
 !
SPEED_AUTO
 && c⁄fig->•ìd !
SPEED_10
 && c⁄fig->•ìd !
SPEED_100
) {

337 
	`log_îr‹
("InvÆidÇëw‹k s≥ed: %d (vÆid: 10, 100, AUTO)", 
c⁄fig
->
•ìd
);

338  
CONFIG_ERR_INVALID_SPEED
;

342 i‡(
c⁄fig
->
rouã_cou¡
 > 
MAX_ROUTES
) {

343 
	`log_îr‹
("Toÿm™yÑouãs: %d (max %d)", 
c⁄fig
->
rouã_cou¡
, 
MAX_ROUTES
);

344  
CONFIG_ERR_TOO_MANY_ROUTES
;

347 
	`log_debug
("Configuration validationÖassed");

349 
	}
}

356 
	$c⁄fig_gë_deÁu…s
(
c⁄fig_t
 *
c⁄fig
) {

357 i‡(!
c⁄fig
) {

358  
CONFIG_ERR_INVALID_PARAM
;

361 *
c⁄fig
 = 
deÁu…_c⁄fig
;

362 
	`log_debug
("Loaded default configuration");

365 
	}
}

372 
	$c⁄fig_¥öt
(c⁄° 
c⁄fig_t
 *
c⁄fig
, 
Àvñ
) {

373 i‡(!
c⁄fig
) {

377 
	`log_©_Àvñ
(
Àvñ
, "Configuration:");

378 
	`log_©_Àvñ
(
Àvñ
, " Debug Levñ: %d", 
c⁄fig
->
debug_Àvñ
);

379 
	`log_©_Àvñ
(
Àvñ
, " U£ XMS: %d", 
c⁄fig
->
u£_xms
);

380 
	`log_©_Àvñ
(
Àvñ
, " E«bÀ Routög: %d", 
c⁄fig
->
íabÀ_routög
);

381 
	`log_©_Àvñ
(
Àvñ
, " E«bÀ Sèti¯Routög: %d", 
c⁄fig
->
íabÀ_°©ic_routög
);

382 
	`log_©_Àvñ
(
Àvñ
, " Buf„∏Cou¡: %d", 
c⁄fig
->
buf„r_cou¡
);

383 
	`log_©_Àvñ
(
Àvñ
, " Buf„∏Size: %d", 
c⁄fig
->
buf„r_size
);

384 
	`log_©_Àvñ
(
Àvñ
, " I¡îru± Ve˘‹: 0x%02X", 
c⁄fig
->
öãºu±_ve˘‹
);

385 
	`log_©_Àvñ
(
Àvñ
, " I/O Ba£ (Àgacy): 0x%04X", 
c⁄fig
->
io_ba£
);

386 
	`log_©_Àvñ
(
Àvñ
, " IRQ (Àgacy): %d", 
c⁄fig
->
úq
);

387 
	`log_©_Àvñ
(
Àvñ
, " E«bÀ Sèts: %d", 
c⁄fig
->
íabÀ_°©s
);

388 
	`log_©_Àvñ
(
Àvñ
, " Promiscuou†Mode: %d", 
c⁄fig
->
¥omiscuous_mode
);

389 
	`log_©_Àvñ
(
Àvñ
, " E«bÀ Loggög: %d", 
c⁄fig
->
íabÀ_loggög
);

390 
	`log_©_Àvñ
(
Àvñ
, " Te° Mode: %d", 
c⁄fig
->
ã°_mode
);

393 
	`log_©_Àvñ
(
Àvñ
, " IO1 Ba£: 0x%04X", 
c⁄fig
->
io1_ba£
);

394 
	`log_©_Àvñ
(
Àvñ
, " IO2 Ba£: 0x%04X", 
c⁄fig
->
io2_ba£
);

395 
	`log_©_Àvñ
(
Àvñ
, " IRQ1: %d", 
c⁄fig
->
úq1
);

396 
	`log_©_Àvñ
(
Àvñ
, " IRQ2: %d", 
c⁄fig
->
úq2
);

398 c⁄° * 
•ìd_°r
;

399 
c⁄fig
->
•ìd
) {

400 
SPEED_AUTO
: 
•ìd_°r
 = "AUTO"; ;

401 
SPEED_10
: 
•ìd_°r
 = "10 Mbps"; ;

402 
SPEED_100
: 
•ìd_°r
 = "100 Mbps"; ;

403 : 
•ìd_°r
 = "Unknown"; ;

405 
	`log_©_Àvñ
(
Àvñ
, " Nëw‹k S≥ed: %s", 
•ìd_°r
);

407 c⁄° * 
busma°î_°r
;

408 
c⁄fig
->
busma°î
) {

409 
BUSMASTER_OFF
: 
busma°î_°r
 = "OFF"; ;

410 
BUSMASTER_ON
: 
busma°î_°r
 = "ON"; ;

411 
BUSMASTER_AUTO
: 
busma°î_°r
 = "AUTO"; ;

412 : 
busma°î_°r
 = "Unknown"; ;

414 
	`log_©_Àvñ
(
Àvñ
, " Bu†Ma°îög: %s", 
busma°î_°r
);

415 
	`log_©_Àvñ
(
Àvñ
, " Loggög: %s", 
c⁄fig
->
log_íabÀd
 ? "ON" : "OFF");

417 i‡(
c⁄fig
->
rouã_cou¡
 > 0) {

418 
i
;

419 
	`log_©_Àvñ
(
Àvñ
, " Sèti¯Rouã†(%d):", 
c⁄fig
->
rouã_cou¡
);

420 
i
 = 0; i < 
c⁄fig
->
rouã_cou¡
; i++) {

421 c⁄° 
rouã_íåy_t
* 
rouã
 = &
c⁄fig
->
rouãs
[
i
];

422 i‡(
rouã
->
a˘ive
) {

423 
	`log_©_Àvñ
(
Àvñ
, " %d.%d.%d.%d/%d -> NIC %d",

424 (
rouã
->
√tw‹k
 >> 24) & 0xFF,

425 (
rouã
->
√tw‹k
 >> 16) & 0xFF,

426 (
rouã
->
√tw‹k
 >> 8) & 0xFF,

427 
rouã
->
√tw‹k
 & 0xFF,

428 
	`__buûtö_p›cou¡
(
rouã
->
√tmask
),

429 
rouã
->
nic_id
);

433 
	}
}

437 
	$h™dÀ_debug_Àvñ
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

438 
Àvñ
 = 
	`©oi
(
vÆue
);

439 i‡(
Àvñ
 < 0 ||Üevel > 3) {

440  
CONFIG_ERR_INVALID_VALUE
;

442 
c⁄fig
->
debug_Àvñ
 = 
Àvñ
;

444 
	}
}

446 
	$h™dÀ_u£_xms
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

447 
c⁄fig
->
u£_xms
 = (
	`©oi
(
vÆue
) != 0);

449 
	}
}

451 
	$h™dÀ_íabÀ_routög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

452 
c⁄fig
->
íabÀ_routög
 = (
	`©oi
(
vÆue
) != 0);

454 
	}
}

456 
	$h™dÀ_íabÀ_°©ic_routög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

457 
c⁄fig
->
íabÀ_°©ic_routög
 = (
	`©oi
(
vÆue
) != 0);

459 
	}
}

461 
	$h™dÀ_buf„r_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

462 
cou¡
 = 
	`©oi
(
vÆue
);

463 i‡(
cou¡
 < 1 || count > 16) {

464  
CONFIG_ERR_INVALID_VALUE
;

466 
c⁄fig
->
buf„r_cou¡
 = 
cou¡
;

468 
	}
}

470 
	$h™dÀ_buf„r_size
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

471 
size
 = 
	`©oi
(
vÆue
);

472 i‡(
size
 < 64 || size > 65536) {

473  
CONFIG_ERR_INVALID_VALUE
;

475 
c⁄fig
->
buf„r_size
 = 
size
;

477 
	}
}

479 
	$h™dÀ_öãºu±_ve˘‹
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

480 
ve˘‹
;

481 i‡(
	`ssˇnf
(
vÆue
, "%x", &
ve˘‹
) != 1 || vector > 0xFF) {

482  
CONFIG_ERR_INVALID_VALUE
;

484 
c⁄fig
->
öãºu±_ve˘‹
 = (
uöt8_t
)
ve˘‹
;

486 
	}
}

488 
	$h™dÀ_io_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

489 
ba£
;

490 i‡(
	`ssˇnf
(
vÆue
, "%x", &
ba£
) != 1 || base > 0xFFFF) {

491  
CONFIG_ERR_INVALID_VALUE
;

493 
c⁄fig
->
io_ba£
 = (
uöt16_t
)
ba£
;

495 
	}
}

497 
	$h™dÀ_úq
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

498 
úq
 = 
	`©oi
(
vÆue
);

499 i‡(
úq
 < 2 || irq > 15) {

500  
CONFIG_ERR_INVALID_VALUE
;

502 
c⁄fig
->
úq
 = irq;

504 
	}
}

506 
	$h™dÀ_íabÀ_°©s
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

507 
c⁄fig
->
íabÀ_°©s
 = (
	`©oi
(
vÆue
) != 0);

509 
	}
}

511 
	$h™dÀ_¥omiscuous_mode
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

512 
c⁄fig
->
¥omiscuous_mode
 = (
	`©oi
(
vÆue
) != 0);

514 
	}
}

516 
	$h™dÀ_íabÀ_loggög
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

517 
c⁄fig
->
íabÀ_loggög
 = (
	`©oi
(
vÆue
) != 0);

519 
	}
}

521 
	$h™dÀ_ã°_mode
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

522 
c⁄fig
->
ã°_mode
 = (
	`©oi
(
vÆue
) != 0);

524 
	}
}

528 
	$h™dÀ_io1_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

529 
ba£
;

530 i‡(
	`∑r£_hex_vÆue
(
vÆue
, &
ba£
Ë!0 || !
	`c⁄fig_is_vÆid_io_addªss
((
uöt16_t
)base)) {

531  
CONFIG_ERR_INVALID_VALUE
;

533 
c⁄fig
->
io1_ba£
 = (
uöt16_t
)
ba£
;

534 
c⁄fig
->
io_ba£
 = (
uöt16_t
)
ba£
;

536 
	}
}

538 
	$h™dÀ_io2_ba£
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

539 
ba£
;

540 i‡(
	`∑r£_hex_vÆue
(
vÆue
, &
ba£
Ë!0 || !
	`c⁄fig_is_vÆid_io_addªss
((
uöt16_t
)base)) {

541  
CONFIG_ERR_INVALID_VALUE
;

543 
c⁄fig
->
io2_ba£
 = (
uöt16_t
)
ba£
;

545 
	}
}

547 
	$h™dÀ_úq1
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

548 
úq
 = 
	`©oi
(
vÆue
);

549 i‡(!
	`c⁄fig_is_vÆid_úq_numbî
((
uöt8_t
)
úq
)) {

550  
CONFIG_ERR_INVALID_VALUE
;

552 
c⁄fig
->
úq1
 = (
uöt8_t
)
úq
;

553 
c⁄fig
->
úq
 = (
uöt8_t
)irq;

555 
	}
}

557 
	$h™dÀ_úq2
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

558 
úq
 = 
	`©oi
(
vÆue
);

559 i‡(!
	`c⁄fig_is_vÆid_úq_numbî
((
uöt8_t
)
úq
)) {

560  
CONFIG_ERR_INVALID_VALUE
;

562 
c⁄fig
->
úq2
 = (
uöt8_t
)
úq
;

564 
	}
}

566 
	$h™dÀ_•ìd
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

567 i‡(
	`°ricmp
(
vÆue
, "AUTO") == 0) {

568 
c⁄fig
->
•ìd
 = 
SPEED_AUTO
;

569 } i‡(
	`°ricmp
(
vÆue
, "10") == 0) {

570 
c⁄fig
->
•ìd
 = 
SPEED_10
;

571 } i‡(
	`°ricmp
(
vÆue
, "100") == 0) {

572 
c⁄fig
->
•ìd
 = 
SPEED_100
;

574  
CONFIG_ERR_INVALID_VALUE
;

577 
	}
}

579 
	$h™dÀ_busma°î
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

580 i‡(
	`°ricmp
(
vÆue
, "ON") == 0) {

581 
c⁄fig
->
busma°î
 = 
BUSMASTER_ON
;

582 } i‡(
	`°ricmp
(
vÆue
, "OFF") == 0) {

583 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

584 } i‡(
	`°ricmp
(
vÆue
, "AUTO") == 0) {

585 
c⁄fig
->
busma°î
 = 
BUSMASTER_AUTO
;

587  
CONFIG_ERR_INVALID_VALUE
;

590 
	}
}

592 
	$h™dÀ_log
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

593 i‡(
	`°ricmp
(
vÆue
, "ON") == 0) {

594 
c⁄fig
->
log_íabÀd
 = 
åue
;

595 
c⁄fig
->
íabÀ_loggög
 = 1;

596 } i‡(
	`°ricmp
(
vÆue
, "OFF") == 0) {

597 
c⁄fig
->
log_íabÀd
 = 
Ál£
;

598 
c⁄fig
->
íabÀ_loggög
 = 0;

600  
CONFIG_ERR_INVALID_VALUE
;

603 
	}
}

605 
	$h™dÀ_rouã
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

606 i‡(
c⁄fig
->
rouã_cou¡
 >
MAX_ROUTES
) {

607  
CONFIG_ERR_TOO_MANY_ROUTES
;

610 
rouã_íåy_t
* 
rouã
 = &
c⁄fig
->
rouãs
[c⁄fig->
rouã_cou¡
];

611 
ªsu…
 = 
	`c⁄fig_∑r£_rouã_íåy
(
vÆue
, 
rouã
);

612 i‡(
ªsu…
 == 0) {

613 
c⁄fig
->
rouã_cou¡
++;

614 
c⁄fig
->
íabÀ_°©ic_routög
 = 1;

616  
ªsu…
;

617 
	}
}

621 
	$h™dÀ_buf„r_size_ovîride
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

622 
size
 = 
	`©oi
(
vÆue
);

623 i‡(
size
 != 256 && size != 512 && size != 1024 && size != 1536) {

624 
	`log_îr‹
("Buffer size must be 256, 512, 1024, or 1536");

625  
CONFIG_ERR_INVALID_VALUE
;

627 
c⁄fig
->
ovîride_buf„r_size
 = (
uöt16_t
)
size
;

630 
	}
}

632 
	$h™dÀ_tx_rög_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

633 
cou¡
 = 
	`©oi
(
vÆue
);

634 i‡(
cou¡
 < 4 || count > 32) {

635 
	`log_îr‹
("TXÑing count must be between 4ánd 32");

636  
CONFIG_ERR_INVALID_VALUE
;

638 
c⁄fig
->
ovîride_tx_rög_cou¡
 = (
uöt8_t
)
cou¡
;

640 
	}
}

642 
	$h™dÀ_rx_rög_cou¡
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

643 
cou¡
 = 
	`©oi
(
vÆue
);

644 i‡(
cou¡
 < 8 || count > 32) {

645 
	`log_îr‹
("RXÑing count must be between 8ánd 32");

646  
CONFIG_ERR_INVALID_VALUE
;

648 
c⁄fig
->
ovîride_rx_rög_cou¡
 = (
uöt8_t
)
cou¡
;

650 
	}
}

652 
	$h™dÀ_f‹˚_pio
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

654 i‡(!
vÆue
 || 
	`°ricmp
(vÆue, "ON"Ë=0 || 
	`°rcmp
(value, "1") == 0) {

655 
c⁄fig
->
f‹˚_pio_mode
 = 1;

656 
	`log_öfo
("Forcing PIO mode (bus master disabled)");

657 } i‡(
	`°ricmp
(
vÆue
, "OFF"Ë=0 || 
	`°rcmp
(value, "0") == 0) {

658 
c⁄fig
->
f‹˚_pio_mode
 = 0;

660  
CONFIG_ERR_INVALID_VALUE
;

663 
	}
}

665 
	$h™dÀ_möimÆ_buf„rs
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

667 i‡(!
vÆue
 || 
	`°ricmp
(vÆue, "ON"Ë=0 || 
	`°rcmp
(value, "1") == 0) {

668 
c⁄fig
->
f‹˚_möimÆ_buf„rs
 = 1;

669 
	`log_öfo
("Forcing minimal 3KB buffer configuration");

670 } i‡(
	`°ricmp
(
vÆue
, "OFF"Ë=0 || 
	`°rcmp
(value, "0") == 0) {

671 
c⁄fig
->
f‹˚_möimÆ_buf„rs
 = 0;

673  
CONFIG_ERR_INVALID_VALUE
;

676 
	}
}

678 
	$h™dÀ_›timÆ_buf„rs
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

680 i‡(!
vÆue
 || 
	`°ricmp
(vÆue, "ON"Ë=0 || 
	`°rcmp
(value, "1") == 0) {

681 
c⁄fig
->
f‹˚_›timÆ_buf„rs
 = 1;

682 
	`log_öfo
("Forcing optimal buffer configuration");

683 } i‡(
	`°ricmp
(
vÆue
, "OFF"Ë=0 || 
	`°rcmp
(value, "0") == 0) {

684 
c⁄fig
->
f‹˚_›timÆ_buf„rs
 = 0;

686  
CONFIG_ERR_INVALID_VALUE
;

689 
	}
}

691 
	$h™dÀ_buf„r_c⁄fig
(
c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
) {

693 
size
, 
tx
, 
rx
;

695 i‡(
	`ssˇnf
(
vÆue
, "%d,%d,%d", &
size
, &
tx
, &
rx
) != 3) {

696 
	`log_îr‹
("BUFFERS format: size,tx,rx (e.g., 1024,16,16)");

697  
CONFIG_ERR_INVALID_VALUE
;

701 i‡(
size
 != 256 && size != 512 && size != 1024 && size != 1536) {

702 
	`log_îr‹
("Buffer size must be 256, 512, 1024, or 1536");

703  
CONFIG_ERR_INVALID_VALUE
;

707 i‡(
tx
 < 4 ||Åx > 32) {

708 
	`log_îr‹
("TXÑing count must be between 4ánd 32");

709  
CONFIG_ERR_INVALID_VALUE
;

713 i‡(
rx
 < 8 ||Ñx > 32) {

714 
	`log_îr‹
("RXÑing count must be between 8ánd 32");

715  
CONFIG_ERR_INVALID_VALUE
;

718 
c⁄fig
->
ovîride_buf„r_size
 = (
uöt16_t
)
size
;

719 
c⁄fig
->
ovîride_tx_rög_cou¡
 = (
uöt8_t
)
tx
;

720 
c⁄fig
->
ovîride_rx_rög_cou¡
 = (
uöt8_t
)
rx
;

722 
	`log_öfo
("Buf„∏c⁄fig ovîride: %dB x %d TX, %d RX", 
size
, 
tx
, 
rx
);

724 
	}
}

728 * 
	$n‹mÆize_∑ømëî_«me
(c⁄° * 
∑øm
) {

729 * 
n‹mÆized
 = 
	`mÆloc
(
	`°æí
(
∑øm
) + 1);

730 i‡(!
n‹mÆized
) {

731  
NULL
;

735 
i
;

736 
i
 = 0; 
∑øm
[i]; i++) {

737 
n‹mÆized
[
i
] = 
	`touµî
(
∑øm
[i]);

739 
n‹mÆized
[
i
] = '\0';

741  
n‹mÆized
;

742 
	}
}

744 
	$∑r£_hex_vÆue
(c⁄° * 
vÆue
, * 
ªsu…
) {

745 * 
íd±r
;

748 i‡(
	`°∫cmp
(
vÆue
, "0x", 2) == 0 || strncmp(value, "0X", 2) == 0) {

749 *
ªsu…
 = 
	`°πoul
(
vÆue
, &
íd±r
, 16);

752 *
ªsu…
 = 
	`°πoul
(
vÆue
, &
íd±r
, 16);

753 i‡(*
íd±r
 != '\0') {

754 *
ªsu…
 = 
	`°πoul
(
vÆue
, &
íd±r
, 10);

758  (*
íd±r
 == '\0') ? 0 : -1;

759 
	}
}

761 
	$∑r£_√tw‹k_addªss
(c⁄° * 
addr_°r
, 
uöt32_t
* 
√tw‹k
, uöt32_t* 
√tmask
) {

762 * 
addr_c›y
 = 
	`mÆloc
(
	`°æí
(
addr_°r
) + 1);

763 i‡(!
addr_c›y
) {

764  
CONFIG_ERR_MEMORY
;

766 
	`°r˝y
(
addr_c›y
, 
addr_°r
);

769 * 
mask_°r
 = 
	`°rchr
(
addr_c›y
, '/');

770 i‡(!
mask_°r
) {

771 
	`‰ì
(
addr_c›y
);

772  
CONFIG_ERR_ROUTE_SYNTAX
;

774 *
mask_°r
 = '\0';

775 
mask_°r
++;

778 
a
, 
b
, 
c
, 
d
;

779 i‡(
	`ssˇnf
(
addr_c›y
, "%u.%u.%u.%u", &
a
, &
b
, &
c
, &
d
) != 4 ||

780 
a
 > 255 || 
b
 > 255 || 
c
 > 255 || 
d
 > 255) {

781 
	`‰ì
(
addr_c›y
);

782  
CONFIG_ERR_ROUTE_SYNTAX
;

784 *
√tw‹k
 = (
a
 << 24Ë| (
b
 << 16Ë| (
c
 << 8Ë| 
d
;

787 
cidr
 = 
	`©oi
(
mask_°r
);

788 i‡(
cidr
 < 0 || cidr > 32) {

789 
	`‰ì
(
addr_c›y
);

790  
CONFIG_ERR_ROUTE_SYNTAX
;

793 i‡(
cidr
 == 0) {

794 *
√tmask
 = 0;

796 *
√tmask
 = ~((1UL << (32 - 
cidr
)) - 1);

799 
	`‰ì
(
addr_c›y
);

801 
	}
}

803 
	$∑r£_ù_addªss
(c⁄° * 
addr_°r
, 
uöt32_t
* 
ù_addr
) {

804 i‡(!
addr_°r
 || !
ù_addr
) {

805  
CONFIG_ERR_INVALID_PARAM
;

809 
a
, 
b
, 
c
, 
d
;

810 i‡(
	`ssˇnf
(
addr_°r
, "%u.%u.%u.%u", &
a
, &
b
, &
c
, &
d
) != 4 ||

811 
a
 > 255 || 
b
 > 255 || 
c
 > 255 || 
d
 > 255) {

812  
CONFIG_ERR_ROUTE_SYNTAX
;

815 *
ù_addr
 = (
a
 << 24Ë| (
b
 << 16Ë| (
c
 << 8Ë| 
d
;

817 
	}
}

821 
boﬁ
 
	$c⁄fig_is_vÆid_io_addªss
(
uöt16_t
 
io_ba£
) {

822  (
io_ba£
 >
CONFIG_MIN_IO_BASE
 && io_ba£ <
CONFIG_MAX_IO_BASE
 &&

823 (
io_ba£
 & 0x1F) == 0);

824 
	}
}

826 
boﬁ
 
	$c⁄fig_is_vÆid_úq_numbî
(
uöt8_t
 
úq
) {

827  (
CONFIG_VALID_IRQS
 & (1 << 
úq
)) != 0;

828 
	}
}

830 
boﬁ
 
	$c⁄fig_check_io_c⁄Êi˘
(
uöt16_t
 
io1
, uöt16_à
io2
) {

831 i‡(
io1
 =
io2
) {

832  
Ál£
;

836 
uöt16_t
 
io1_íd
 = 
io1
 + 
CONFIG_IO_RANGE_SIZE
 - 1;

837 
uöt16_t
 
io2_íd
 = 
io2
 + 
CONFIG_IO_RANGE_SIZE
 - 1;

839  !(
io1
 <
io2_íd
 && 
io2
 <
io1_íd
);

840 
	}
}

842 
boﬁ
 
	$c⁄fig_check_úq_c⁄Êi˘
(
uöt8_t
 
úq1
, uöt8_à
úq2
) {

843  
úq1
 !
úq2
;

844 
	}
}

846 
boﬁ
 
	$c⁄fig_˝u_suµ‹ts_busma°î
() {

848 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80286
) {

849  
åue
;

851  
Ál£
;

852 
	}
}

854 
	$c⁄fig_∑r£_rouã_íåy
(c⁄° * 
rouã_°r
, 
rouã_íåy_t
* 
rouã
) {

855 i‡(!
rouã_°r
 || !
rouã
) {

856  
CONFIG_ERR_INVALID_PARAM
;

860 * 
rouã_c›y
 = 
	`mÆloc
(
	`°æí
(
rouã_°r
) + 1);

861 i‡(!
rouã_c›y
) {

862  
CONFIG_ERR_MEMORY
;

864 
	`°r˝y
(
rouã_c›y
, 
rouã_°r
);

867 * 
nic_°r
 = 
	`°ºchr
(
rouã_c›y
, ',');

868 i‡(!
nic_°r
) {

869 
	`‰ì
(
rouã_c›y
);

870  
CONFIG_ERR_ROUTE_SYNTAX
;

872 *
nic_°r
 = '\0';

873 
nic_°r
++;

876 * 
g©eway_°r
 = 
	`°rchr
(
nic_°r
, ',');

877 i‡(
g©eway_°r
) {

878 *
g©eway_°r
 = '\0';

879 
g©eway_°r
++;

883 
ªsu…
 = 
	`∑r£_√tw‹k_addªss
(
rouã_c›y
, &
rouã
->
√tw‹k
, &rouã->
√tmask
);

884 i‡(
ªsu…
 != 0) {

885 
	`‰ì
(
rouã_c›y
);

886  
ªsu…
;

890 
nic_id
 = 
	`©oi
(
nic_°r
);

891 i‡(
nic_id
 < 0 ||Çic_id >
MAX_NICS
) {

892 
	`‰ì
(
rouã_c›y
);

893  
CONFIG_ERR_ROUTE_SYNTAX
;

895 
rouã
->
nic_id
 = (
uöt8_t
)nic_id;

896 
rouã
->
a˘ive
 = 
åue
;

899 i‡(
	`°©ic_routög_is_íabÀd
()) {

900 
ù_addr_t
 
de°_√tw‹k
, 
√tmask
, 
g©eway
;

903 
	`ù_addr_‰om_uöt32
(&
de°_√tw‹k
, 
rouã
->
√tw‹k
);

904 
	`ù_addr_‰om_uöt32
(&
√tmask
, 
rouã
->netmask);

906 i‡(
g©eway_°r
) {

908 
uöt32_t
 
gw_addr
;

909 i‡(
	`∑r£_ù_addªss
(
g©eway_°r
, &
gw_addr
) == 0) {

910 
	`ù_addr_‰om_uöt32
(&
g©eway
, 
gw_addr
);

911 
ªsu…
 = 
	`°©ic_rouã_add
(&
de°_√tw‹k
, &
√tmask
, &
g©eway
, 
nic_id
, 1);

913 
	`‰ì
(
rouã_c›y
);

914  
CONFIG_ERR_ROUTE_SYNTAX
;

918 
	`ù_addr_£t
(&
g©eway
, 0, 0, 0, 0);

919 
ªsu…
 = 
	`°©ic_rouã_add
(&
de°_√tw‹k
, &
√tmask
, 
NULL
, 
nic_id
, 1);

922 i‡(
ªsu…
 !
SUCCESS
) {

923 
	`log_w¨nög
("FaûedÅÿadd sèti¯rouã: %d", 
ªsu…
);

925 
	`log_öfo
("Added staticÑoute: %d.%d.%d.%d/%d.%d.%d.%d via NIC %d",

926 
de°_√tw‹k
.
addr
[0], dest_network.addr[1], dest_network.addr[2], dest_network.addr[3],

927 
√tmask
.
addr
[0],Çetmask.addr[1],Çetmask.addr[2],Çetmask.addr[3],

928 
nic_id
);

932 
	`‰ì
(
rouã_c›y
);

934 
	}
}

936 
	$c⁄fig_vÆid©e_¸oss_∑ømëîs
(c⁄° 
c⁄fig_t
* 
c⁄fig
) {

937 i‡(!
c⁄fig
) {

938  
CONFIG_ERR_INVALID_PARAM
;

942 i‡(
c⁄fig
->
busma°î
 =
BUSMASTER_ON
 && !
	`c⁄fig_˝u_suµ‹ts_busma°î
()) {

943 
	`log_îr‹
("Bus masteringÑequires 386+ CPU, but %s detected",

944 
	`˝u_ty≥_to_°rög
(
g_˝u_öfo
.
ty≥
));

945  
CONFIG_ERR_CPU_REQUIRED
;

951 
	}
}

965 
	$c⁄fig_≥rf‹m_busma°î_auto_ã°
(
c⁄fig_t
 *
c⁄fig
, 
nic_c⁄ãxt_t
 *
˘x
, 
boﬁ
 
quick_mode
) {

966 i‡(!
c⁄fig
 || !
˘x
) {

967 
	`log_îr‹
("config_perform_busmaster_auto_test: NULLÖarameters");

968  
CONFIG_ERR_INVALID_PARAM
;

972 i‡(
˘x
->
nic_öfo
.
ty≥
 !
NIC_TYPE_3C515_TX
) {

973 
	`log_öfo
("Bus masteringÇot supported on %s - usingÖrogrammed I/O",

974 (
˘x
->
nic_öfo
.
ty≥
 =
NIC_TYPE_3C509B
) ? "3C509B" : "Unknown NIC");

975 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

980 i‡(!
	`c⁄fig_˝u_suµ‹ts_busma°î
()) {

981 
	`log_öfo
("CPU doesÇot support bus mastering - usingÖrogrammed I/O");

982 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

987 
boﬁ
 
is_286_sy°em
 = 
	`˝u_ªquúes_c⁄£rv©ive_ã°ög
();

988 
uöt16_t
 
˝u_thªshﬁd
 = 
	`gë_˝u_≠¥›rüã_c⁄fidí˚_thªshﬁd
();

990 
	`log_öfo
("=== CPU-Aware Bus Mastering Configuration ===");

991 
	`log_öfo
("Detected: %s CPU",

992 (
g_˝u_öfo
.
ty≥
 =
CPU_TYPE_80286
) ? "80286" :

993 (
g_˝u_öfo
.
ty≥
 =
CPU_TYPE_80386
) ? "80386" :

994 (
g_˝u_öfo
.
ty≥
 =
CPU_TYPE_80486
) ? "80486" :

995 (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_PENTIUM
) ? "Pentium+" : "Unknown");

998 
busma°î_ã°_ˇche_t
 
ˇched_ªsu…s
;

999 
ˇche_vÆid©i⁄_öfo_t
 
vÆid©i⁄
;

1000 
busma°î_ã°_ªsu…s_t
 
ã°_ªsu…s
;

1002 i‡(
	`lﬂd_busma°î_ã°_ˇche
(
˘x
, &
ˇched_ªsu…s
) == 0) {

1004 i‡(
	`vÆid©e_busma°î_ã°_ˇche
(
˘x
, &
ˇched_ªsu…s
, &
vÆid©i⁄
) == 0) {

1006 
	`log_öfo
("Using cached bus masteringÅestÑesults");

1007 
	`ˇche_to_ã°_ªsu…s
(&
ˇched_ªsu…s
, &
ã°_ªsu…s
);

1010 
≠∂y_ªsu…
 = 
	`≠∂y_busma°î_c⁄figuøti⁄
(
˘x
, &
ã°_ªsu…s
, 
c⁄fig
);

1011 i‡(
≠∂y_ªsu…
 == 0) {

1012 
	`log_öfo
("Bus mastering configured from cache: %s",

1013 (
c⁄fig
->
busma°î
 =
BUSMASTER_ON
) ? "ENABLED" : "DISABLED");

1015  
≠∂y_ªsu…
;

1018 
	`log_öfo
("CachedÑesu…†övÆid: %s", 
vÆid©i⁄
.
övÆid©i⁄_ªas⁄
);

1021 
	`log_öfo
("No cachedÅestÑesults found");

1025 i‡(
is_286_sy°em
) {

1027 
	`log_öfo
("80286 system detected - conservativeÅestingÑequired for bus mastering");

1028 
	`log_öfo
("QuickÅest (10s) willÑun first,ÉxhaustiveÅest (45s)Ñequired for bus mastering");

1031 i‡(
	`≥rf‹m_˝u_aw¨e_ã°ög
(
˘x
, 
c⁄fig
, &
ã°_ªsu…s
, 
åue
) != 0) {

1032  
	`ÁŒback_to_¥ogømmed_io
(
˘x
, 
c⁄fig
, "QuickÅest failed");

1036 i‡(
ã°_ªsu…s
.
c⁄fidí˚_sc‹e
 < 
˝u_thªshﬁd
) {

1037 i‡(!
quick_mode
 && 
	`¥om±_u£r_f‹_exhau°ive_ã°
()) {

1038 
	`log_öfo
("RunningÉxhaustive 45-secondÅest for 80286 bus mastering validation...");

1039 i‡(
	`≥rf‹m_˝u_aw¨e_ã°ög
(
˘x
, 
c⁄fig
, &
ã°_ªsu…s
, 
Ál£
) != 0) {

1040  
	`ÁŒback_to_¥ogømmed_io
(
˘x
, 
c⁄fig
, "ExhaustiveÅest failed");

1043 
	`log_öfo
("80286 systemÑequiresÉxhaustiveÅest for bus mastering - using PIO mode");

1044 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

1045 
	`ßve_busma°î_ã°_ˇche
(
˘x
, &
ã°_ªsu…s
);

1052 
	`log_öfo
("80386+ system detected - quickÅest sufficient for bus mastering");

1055 
busma°î_ã°_mode_t
 
ã°_mode
 = 
quick_mode
 ? 
BM_TEST_MODE_QUICK
 : 
BM_TEST_MODE_FULL
;

1056 
	`log_öfo
("Running %sÅest (userÖreference)...",

1057 
quick_mode
 ? "quick 10-second" : "comprehensive 45-second");

1059 i‡(
	`≥rf‹m_˝u_aw¨e_ã°ög
(
˘x
, 
c⁄fig
, &
ã°_ªsu…s
, 
quick_mode
) != 0) {

1060  
	`ÁŒback_to_¥ogømmed_io
(
˘x
, 
c⁄fig
, "Test failed");

1065 
≠∂y_ªsu…
 = 
	`≠∂y_busma°î_c⁄figuøti⁄
(
˘x
, &
ã°_ªsu…s
, 
c⁄fig
);

1066 i‡(
≠∂y_ªsu…
 != 0) {

1067 
	`log_îr‹
("FailedÅoápply bus mastering configuration");

1068  
≠∂y_ªsu…
;

1072 i‡(
	`ßve_busma°î_ã°_ˇche
(
˘x
, &
ã°_ªsu…s
) == 0) {

1073 
	`log_öfo
("TestÑesults cached - subsequent boots will be faster");

1076 
	`log_öfo
("=== Bus Mastering Auto-Configuration Complete ===");

1077 
	`log_öfo
("Final Configuration: %s (Confidence: %s, Score: %u/%u)",

1078 (
c⁄fig
->
busma°î
 =
BUSMASTER_ON
) ? "Bus Mastering ENABLED" : "Programmed I/O MODE",

1079 (
ã°_ªsu…s
.
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_HIGH
) ? "HIGH" :

1080 (
ã°_ªsu…s
.
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_MEDIUM
) ? "MEDIUM" :

1081 (
ã°_ªsu…s
.
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_LOW
) ? "LOW" : "FAILED",

1082 
ã°_ªsu…s
.
c⁄fidí˚_sc‹e
, 
BM_SCORE_TOTAL_MAX
);

1085 
	}
}

1090 
	$≥rf‹m_˝u_aw¨e_ã°ög
(
nic_c⁄ãxt_t
 *
˘x
, 
c⁄fig_t
 *
c⁄fig
,

1091 
busma°î_ã°_ªsu…s_t
 *
ªsu…s
, 
boﬁ
 
quick_mode
) {

1093 i‡(
	`busma°î_ã°_öô
(
˘x
) != 0) {

1094 
	`log_îr‹
("FailedÅo initialize bus masteringÅest framework");

1099 
busma°î_ã°_mode_t
 
ã°_mode
 = 
quick_mode
 ? 
BM_TEST_MODE_QUICK
 : 
BM_TEST_MODE_FULL
;

1100 
ã°_ªsu…
 = 
	`≥rf‹m_autom©ed_busma°î_ã°
(
˘x
, 
ã°_mode
, 
ªsu…s
);

1103 
	`log_öfo
("Bus masteringÅest completed:");

1104 
	`log_öfo
(" Total Score: %u/%u (%.1f%%)",

1105 
ªsu…s
->
c⁄fidí˚_sc‹e
, 
BM_SCORE_TOTAL_MAX
,

1106 (
ªsu…s
->
c⁄fidí˚_sc‹e
 * 100.0Ë/ 
BM_SCORE_TOTAL_MAX
);

1107 
	`log_öfo
(" Confidence Level: %s",

1108 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_HIGH
) ? "HIGH" :

1109 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_MEDIUM
) ? "MEDIUM" :

1110 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_LOW
) ? "LOW" : "FAILED");

1111 
	`log_öfo
(" Individual Scores: DMA=%u/70, Memory=%u/80, Timing=%u/100",

1112 
ªsu…s
->
dma_c⁄åﬁÀr_sc‹e
,Ñesu…s->
mem‹y_cohîícy_sc‹e
,

1113 
ªsu…s
->
timög_c⁄°øöts_sc‹e
);

1114 
	`log_öfo
(" Pattern Tests: Data=%u/85, Burst=%u/82, Recovery=%u/85",

1115 
ªsu…s
->
d©a_öãgrôy_sc‹e
,Ñesu…s->
bur°_å™s„r_sc‹e
,

1116 
ªsu…s
->
îr‹_ªcovîy_sc‹e
);

1117 i‡(!
quick_mode
) {

1118 
	`log_öfo
(" Sèbûôy Te°: %u/50", 
ªsu…s
->
°abûôy_sc‹e
);

1122 
	`busma°î_ã°_˛ónup
(
˘x
);

1124  
ã°_ªsu…
;

1125 
	}
}

1130 
boﬁ
 
	$¥om±_u£r_f‹_exhau°ive_ã°
() {

1132 
	`¥ötf
("\n80286 systemÑequires 45-secondÉxhaustiveÅest for bus mastering.\n");

1133 
	`¥ötf
("[E]xhaustiveÅest (recommended) or [S]kip (use PIO): ");

1135 
ª•⁄£
 = 
	`gëch¨
();

1136 
	`gëch¨
();

1138  (
ª•⁄£
 == 'E' ||Ñesponse == 'e');

1139 
	}
}

1144 
	$≠∂y_busma°î_c⁄figuøti⁄
(
nic_c⁄ãxt_t
 *
˘x
,

1145 c⁄° 
busma°î_ã°_ªsu…s_t
 *
ªsu…s
,

1146 
c⁄fig_t
 *
c⁄fig
) {

1147 i‡(!
˘x
 || !
ªsu…s
 || !
c⁄fig
) {

1148 
	`log_îr‹
("apply_busmaster_configuration: NULLÖarameters");

1149  
CONFIG_ERR_INVALID_PARAM
;

1153 
ªsu…s
->
c⁄fidí˚_Àvñ
) {

1154 
BM_CONFIDENCE_HIGH
:

1155 
c⁄fig
->
busma°î
 = 
BUSMASTER_ON
;

1156 
	`log_öfo
("HIGH confidence - Bus mastering ENABLED");

1157 
	`log_öfo
("System showsÉxcellent compatibility for bus mastering");

1160 
BM_CONFIDENCE_MEDIUM
:

1161 
c⁄fig
->
busma°î
 = 
BUSMASTER_ON
;

1162 
	`log_öfo
("MEDIUM confidence - Bus mastering ENABLED with monitoring");

1163 
	`log_w¨nög
("Monitor system for stability issues");

1166 
BM_CONFIDENCE_LOW
:

1167 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

1168 
	`log_w¨nög
("LOW confidence - Bus mastering DISABLED");

1169 
	`log_w¨nög
("System compatibility questionable - usingÖrogrammed I/O for safety");

1170  
	`ÁŒback_to_¥ogømmed_io
(
˘x
, 
c⁄fig
, "Low confidence score");

1172 
BM_CONFIDENCE_FAILED
:

1174 
c⁄fig
->
busma°î
 = 
BUSMASTER_OFF
;

1175 
	`log_îr‹
("Test FAILED - Bus mastering DISABLED");

1176 
	`log_îr‹
("SystemÇot compatible with bus mastering - usingÖrogrammed I/O");

1177  
	`ÁŒback_to_¥ogømmed_io
(
˘x
, 
c⁄fig
, 
ªsu…s
->
Áûuª_ªas⁄
);

1181 
	}
}

1186 
	$gíî©e_busma°î_ã°_ªp‹t
(c⁄° 
busma°î_ã°_ªsu…s_t
 *
ªsu…s
,

1187 *
buf„r
, 
size_t
 
buf„r_size
) {

1188 i‡(!
ªsu…s
 || !
buf„r
 || 
buf„r_size
 == 0) {

1189  
CONFIG_ERR_INVALID_PARAM
;

1192 
wrôãn
 = 
	`¢¥ötf
(
buf„r
, 
buf„r_size
,

1225 
ªsu…s
->
c⁄fidí˚_sc‹e
, 
BM_SCORE_TOTAL_MAX
,

1226 (
ªsu…s
->
c⁄fidí˚_sc‹e
 * 100.0Ë/ 
BM_SCORE_TOTAL_MAX
,

1227 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_HIGH
) ? "HIGH" :

1228 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_MEDIUM
) ? "MEDIUM" :

1229 (
ªsu…s
->
c⁄fidí˚_Àvñ
 =
BM_CONFIDENCE_LOW
) ? "LOW" : "FAILED",

1230 
ªsu…s
->
ã°_duøti⁄_ms
,

1231 
ªsu…s
->
dma_c⁄åﬁÀr_sc‹e
,

1232 
ªsu…s
->
mem‹y_cohîícy_sc‹e
,

1233 
ªsu…s
->
timög_c⁄°øöts_sc‹e
,

1234 
ªsu…s
->
d©a_öãgrôy_sc‹e
,

1235 
ªsu…s
->
bur°_å™s„r_sc‹e
,

1236 
ªsu…s
->
îr‹_ªcovîy_sc‹e
,

1237 
ªsu…s
->
°abûôy_sc‹e
,

1238 
ªsu…s
->
˝u_suµ‹ts_busma°î
 ? "YES" : "NO",

1239 
ªsu…s
->
chù£t_com∑tibÀ
 ? "YES" : "NO",

1240 
ªsu…s
->
dma_c⁄åﬁÀr_¥e£¡
 ? "YES" : "NO",

1241 
ªsu…s
->
mem‹y_cohîít
 ? "YES" : "NO",

1242 
ªsu…s
->
å™s„rs_com∂ëed
,

1243 
ªsu…s
->
byãs_å™s„ºed
,

1244 
ªsu…s
->
îr‹_cou¡
,

1245 (
ªsu…s
->
å™s„rs_com∂ëed
 > 0) ?

1246 ((
ªsu…s
->
å™s„rs_com∂ëed
 * 100.0Ë/ (ªsu…s->å™s„rs_com∂ëed +Ñesu…s->
îr‹_cou¡
)) : 0.0,

1247 
ªsu…s
->
ªcommíd©i⁄s
,

1248 
ªsu…s
->
ß„_f‹_¥odu˘i⁄
 ? "YES" : "NO",

1249 
ªsu…s
->
ªquúes_ÁŒback
 ? "YES" : "NO"

1252  (
wrôãn
 > 0 && wrôã¿< ()
buf„r_size
Ë? 0 : 
CONFIG_ERR_MEMORY
;

1253 
	}
}

1256 
	$°ricmp
(c⁄° * 
s1
, c⁄° * 
s2
) {

1257 *
s1
 && *
s2
) {

1258 
c1
 = 
	`touµî
(*
s1
);

1259 
c2
 = 
	`touµî
(*
s2
);

1260 i‡(
c1
 !
c2
) {

1261  
c1
 - 
c2
;

1263 
s1
++;

1264 
s2
++;

1266  
	`touµî
(*
s1
Ë-Åouµî(*
s2
);

1267 
	}
}

1270 #¥agm®
code_£g
()

	@/Users/jvindahl/Development/3com-packet-driver/src/c/hardware.c

11 
	~"../ö˛ude/h¨dw¨e.h
"

12 
	~"../ö˛ude/h¨dw¨e_hÆ.h
"

13 
	~"../ö˛ude/nic_c⁄ãxt.h
"

14 
	~"../ö˛ude/hÆ_îr‹s.h
"

15 
	~"../ö˛ude/ªgi°î_ac˚ss.h
"

16 
	~"../ö˛ude/nic_öô.h
"

17 
	~"../ö˛ude/loggög.h
"

18 
	~"../ö˛ude/mem‹y.h
"

19 
	~"../ö˛ude/dügno°ics.h
"

20 
	~"../ö˛ude/3c509b.h
"

21 
	~"../ö˛ude/3c515.h
"

22 
	~"../ö˛ude/îr‹_h™dlög.h
"

23 
	~"../ö˛ude/buf„r_Æloc.h
"

24 
	~"../ö˛ude/nic_buf„r_poﬁs.h
"

25 
	~<°rög.h
>

26 
	~<°dlib.h
>

29 
nic_öfo_t
 
	gg_nic_öfos
[
MAX_NICS
];

30 
	gg_num_nics
 = 0;

31 
boﬁ
 
	gg_h¨dw¨e_öôülized
 = 
Ál£
;

34 
nic_›s_t
 
	gg_3c509b_›s
;

35 
nic_›s_t
 
	gg_3c515_›s
;

38 
h¨dw¨e_hÆ_vèbÀ_t
 
	gg_3c509b_hÆ_vèbÀ
;

39 
h¨dw¨e_hÆ_vèbÀ_t
 
	gg_3c515_tx_hÆ_vèbÀ
;

42 
h¨dw¨e_°©s_t
 
	gg_h¨dw¨e_°©s
;

45 
nic_dëe˘_öfo_t
 
	gg_≤p_dëe˘i⁄_ªsu…s
[
MAX_NICS
];

46 
	gg_≤p_dëe˘i⁄_cou¡
 = 0;

50 
uöt32_t
 
	mîr‹_cou¡s
[
MAX_NICS
][12];

51 
uöt32_t
 
	mœ°_îr‹_time
[
MAX_NICS
];

52 
uöt32_t
 
	mc⁄£cutive_îr‹s
[
MAX_NICS
];

53 
uöt32_t
 
	mªcovîy_©ãm±s
[
MAX_NICS
];

54 
uöt32_t
 
	mœ°_ªcovîy_time
[
MAX_NICS
];

55 
boﬁ
 
	mÁûovî_ö_¥ogªss
;

56 
	m¥im¨y_nic
;

57 
	mbackup_nic
;

58 
uöt32_t
 
	mtŸÆ_Áûuªs
;

59 
uöt32_t
 
	msuc˚ssful_ªcovîõs
;

60 } 
	gg_îr‹_ªcovîy_°©e
 = {0};

63 
h¨dw¨e_ª£t_°©s
();

64 
boﬁ
 
h¨dw¨e_vÆid©e_nic_ödex
(
ödex
);

65 
h¨dw¨e_upd©e_∑ckë_°©s
(
boﬁ
 
£¡
, boﬁ 
suc˚ss
);

66 
h¨dw¨e_ªgi°î_nic_wôh_buf„r_sy°em
(
nic_öfo_t
* 
nic
, 
nic_ödex
);

67 
h¨dw¨e_uƒegi°î_nic_‰om_buf„r_sy°em
(
nic_ödex
);

70 
h¨dw¨e_dëe˘_Áûuª
(
nic_öfo_t
 *
nic
);

71 
h¨dw¨e_ªcovî_nic
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
);

72 
h¨dw¨e_©ãm±_Áûovî
(
Áûed_nic_ödex
);

73 
h¨dw¨e_gø˚ful_degød©i⁄
(
nic_öfo_t
 *
nic
);

74 
h¨dw¨e_vÆid©e_ªcovîy
(
nic_öfo_t
 *
nic
);

75 
h¨dw¨e_log_Áûuª
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
, c⁄° * 
dëaûs
);

76 
h¨dw¨e_emîgícy_ª£t
(
nic_öfo_t
 *
nic
);

77 
boﬁ
 
h¨dw¨e_is_¸ôiˇl_Áûuª
(
Áûuª_ty≥
);

78 
h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
nic_ödex
, 
îr‹_ty≥
);

79 
uöt32_t
 
h¨dw¨e_ˇlcuœã_ªcovîy_timeout
(
Áûuª_ty≥
);

82 
	#HW_FAILURE_NONE
 0

	)

83 
	#HW_FAILURE_LINK_LOST
 1

	)

84 
	#HW_FAILURE_TX_TIMEOUT
 2

	)

85 
	#HW_FAILURE_RX_TIMEOUT
 3

	)

86 
	#HW_FAILURE_FIFO_OVERRUN
 4

	)

87 
	#HW_FAILURE_DMA_ERROR
 5

	)

88 
	#HW_FAILURE_REGISTER_CORRUPTION
 6

	)

89 
	#HW_FAILURE_INTERRUPT_STORM
 7

	)

90 
	#HW_FAILURE_MEMORY_ERROR
 8

	)

91 
	#HW_FAILURE_THERMAL
 9

	)

92 
	#HW_FAILURE_POWER
 10

	)

93 
	#HW_FAILURE_CRITICAL
 11

	)

96 
	#RECOVERY_SOFT_RESET
 1

	)

97 
	#RECOVERY_HARD_RESET
 2

	)

98 
	#RECOVERY_REINITIALIZE
 3

	)

99 
	#RECOVERY_FAILOVER
 4

	)

100 
	#RECOVERY_DISABLE
 5

	)

103 
	#MAX_CONSECUTIVE_ERRORS
 5

	)

104 
	#MAX_ERROR_RATE_PERCENT
 15

	)

105 
	#LINK_CHECK_INTERVAL_MS
 1000

	)

106 
	#TX_TIMEOUT_MS
 5000

	)

107 
	#RX_TIMEOUT_MS
 2000

	)

110 
	$h¨dw¨e_öô
() {

111 i‡(
g_h¨dw¨e_öôülized
) {

112  
SUCCESS
;

115 
	`LOG_INFO
("Initializing hardwareábstractionÜayer");

118 
	`mem‹y_zîo
(
g_nic_öfos
, (g_nic_infos));

119 
g_num_nics
 = 0;

122 
	`h¨dw¨e_ª£t_°©s
();

125 
ªsu…
 = 
	`hÆ_öô_vèbÀs
();

126 i‡(
ªsu…
 !
HAL_SUCCESS
) {

127 
	`LOG_ERROR
("FaûedÅÿöôülizêHAL vèbÀs: %d", 
ªsu…
);

128  
ERROR_HARDWARE
;

132 
ªsu…
 = 
	`nic_öô_sy°em
();

133 i‡(
ªsu…
 !
SUCCESS
) {

134 
	`LOG_ERROR
("FaûedÅÿöôülizêNIC sy°em: %d", 
ªsu…
);

135  
ªsu…
;

139 
ªsu…
 = 
	`h¨dw¨e_öô_îr‹_h™dlög
();

140 i‡(
ªsu…
 !
SUCCESS
) {

141 
	`LOG_ERROR
("FaûedÅÿöôülizêîr‹ h™dlög sy°em: %d", 
ªsu…
);

142  
ªsu…
;

146 
g_num_nics
 = 
	`nic_öô_Æl_dëe˘ed
();

147 i‡(
g_num_nics
 < 0) {

148 
	`LOG_WARNING
("No NICs detected or initialized");

149 
g_num_nics
 = 0;

153 
i
 = 0; i < 
g_num_nics
; i++) {

154 
ªsu…
 = 
	`h¨dw¨e_¸óã_îr‹_c⁄ãxt
(&
g_nic_öfos
[
i
]);

155 i‡(
ªsu…
 !
SUCCESS
) {

156 
	`LOG_WARNING
("FaûedÅÿ¸óãÉº‹ c⁄ãxàf‹ NIC %d: %d", 
i
, 
ªsu…
);

160 
ªsu…
 = 
	`h¨dw¨e_ªgi°î_nic_wôh_buf„r_sy°em
(&
g_nic_öfos
[
i
], i);

161 i‡(
ªsu…
 !
SUCCESS
) {

162 
	`LOG_WARNING
("FaûedÅÿªgi°î NIC %d wôh buf„∏sy°em: %d", 
i
, 
ªsu…
);

166 
g_h¨dw¨e_öôülized
 = 
åue
;

168 
	`LOG_INFO
("H¨dw¨êœyî inôülized wôh %d NIC†™dÉº‹ h™dlög", 
g_num_nics
);

170  
SUCCESS
;

171 
	}
}

173 
	$h¨dw¨e_˛ónup
() {

174 i‡(!
g_h¨dw¨e_öôülized
) {

178 
	`LOG_INFO
("Shutting down hardwareÜayer");

181 
i
 = 0; i < 
g_num_nics
; i++) {

183 
	`h¨dw¨e_uƒegi°î_nic_‰om_buf„r_sy°em
(
i
);

185 i‡(
g_nic_öfos
[
i
].
›s
 && g_nic_öfos[i].›s->
˛ónup
) {

186 
g_nic_öfos
[
i
].
›s
->
	`˛ónup
(&g_nic_infos[i]);

191 
	`nic_öô_˛ónup
();

194 
	`h¨dw¨e_˛ónup_îr‹_h™dlög
();

196 
g_num_nics
 = 0;

197 
g_h¨dw¨e_öôülized
 = 
Ál£
;

198 
	}
}

201 
nic_›s_t
* 
	$gë_nic_›s
(
nic_ty≥_t
 
ty≥
) {

202 
boﬁ
 
vèbÀs_öôülized
 = 
Ál£
;

205 i‡(!
vèbÀs_öôülized
) {

206 
	`öô_3c509b_›s
();

207 
	`öô_3c515_›s
();

208 
vèbÀs_öôülized
 = 
åue
;

211 
ty≥
) {

212 
NIC_TYPE_3C509B
:

213  &
g_3c509b_›s
;

214 
NIC_TYPE_3C515_TX
:

215  &
g_3c515_›s
;

217  
NULL
;

219 
	}
}

221 
nic_›s_t
* 
	$gë_3c509b_›s
() {

222  
	`gë_nic_›s
(
NIC_TYPE_3C509B
);

223 
	}
}

225 
nic_›s_t
* 
	$gë_3c515_›s
() {

226  
	`gë_nic_›s
(
NIC_TYPE_3C515_TX
);

227 
	}
}

229 
	$h¨dw¨e_ªgi°î_nic_›s
(
nic_ty≥_t
 
ty≥
, 
nic_›s_t
 *
›s
) {

230 i‡(!
›s
) {

231  
ERROR_INVALID_PARAM
;

237  
SUCCESS
;

238 
	}
}

241 
	$h¨dw¨e_gë_nic_cou¡
() {

242  
g_num_nics
;

243 
	}
}

245 
nic_öfo_t
* 
	$h¨dw¨e_gë_nic
(
ödex
) {

246 i‡(!
	`h¨dw¨e_vÆid©e_nic_ödex
(
ödex
)) {

247  
NULL
;

250  &
g_nic_öfos
[
ödex
];

251 
	}
}

253 
nic_öfo_t
* 
	$h¨dw¨e_föd_nic_by_ty≥
(
nic_ty≥_t
 
ty≥
) {

254 
i
 = 0; i < 
g_num_nics
; i++) {

255 i‡(
g_nic_öfos
[
i
].
ty≥
 ==Åype) {

256  &
g_nic_öfos
[
i
];

260  
NULL
;

261 
	}
}

263 
nic_öfo_t
* 
	$h¨dw¨e_föd_nic_by_mac
(c⁄° 
uöt8_t
 *
mac
) {

264 i‡(!
mac
) {

265  
NULL
;

268 
i
 = 0; i < 
g_num_nics
; i++) {

269 i‡(
	`mem‹y_com∑ª
(
g_nic_öfos
[
i
].
mac
, mac, 
ETH_ALEN
) == 0) {

270  &
g_nic_öfos
[
i
];

274  
NULL
;

275 
	}
}

277 
boﬁ
 
	$h¨dw¨e_is_nic_¥e£¡
(
ödex
) {

278 i‡(!
	`h¨dw¨e_vÆid©e_nic_ödex
(
ödex
)) {

279  
Ál£
;

282  (
g_nic_öfos
[
ödex
].
°©us
 & 
NIC_STATUS_PRESENT
) != 0;

283 
	}
}

285 
boﬁ
 
	$h¨dw¨e_is_nic_a˘ive
(
ödex
) {

286 i‡(!
	`h¨dw¨e_vÆid©e_nic_ödex
(
ödex
)) {

287  
Ál£
;

290  (
g_nic_öfos
[
ödex
].
°©us
 & 
NIC_STATUS_ACTIVE
) != 0;

291 
	}
}

294 
	$h¨dw¨e_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

295 i‡(!
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

296 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

297  
ERROR_INVALID_PARAM
;

300 i‡(!
nic
->
›s
 || !nic->›s->
£nd_∑ckë
) {

301 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

302  
ERROR_NOT_SUPPORTED
;

305 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

306 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

307  
ERROR_BUSY
;

310 
ªsu…
 = 
nic
->
›s
->
	`£nd_∑ckë
“ic, 
∑ckë
, 
Àngth
);

311 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
ªsu…
 =
SUCCESS
);

313  
ªsu…
;

314 
	}
}

316 
	$h¨dw¨e_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
uöt16_t
 *
Àngth
) {

317 i‡(!
nic
 || !
buf„r
 || !
Àngth
) {

318 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

319  
ERROR_INVALID_PARAM
;

322 i‡(!
nic
->
›s
 || !nic->›s->
ª˚ive_∑ckë
) {

323 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

324  
ERROR_NOT_SUPPORTED
;

327 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

328 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

329  
ERROR_BUSY
;

332 
ªsu…
 = 
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, 
buf„r
, 
Àngth
);

333 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, 
ªsu…
 =
SUCCESS
);

335  
ªsu…
;

336 
	}
}

338 
	$h¨dw¨e_£nd_∑ckë_to_nic
(
nic_ödex
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

339 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

340 i‡(!
nic
) {

341  
ERROR_INVALID_PARAM
;

344  
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
∑ckë
, 
Àngth
);

345 
	}
}

347 
	$h¨dw¨e_ª˚ive_∑ckë_‰om_nic
(
nic_ödex
, 
uöt8_t
 *
buf„r
, 
uöt16_t
 *
Àngth
) {

348 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

349 i‡(!
nic
) {

350  
ERROR_INVALID_PARAM
;

353  
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
buf„r
, 
Àngth
);

354 
	}
}

357 
	$h¨dw¨e_öãºu±_h™dÀr
() {

358 
i
 = 0; i < 
g_num_nics
; i++) {

359 
nic_öfo_t
 *
nic
 = &
g_nic_öfos
[
i
];

361 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
Ë|| !nic->
›s
) {

366 i‡(
nic
->
›s
->
check_öãºu±
 &&Çic->›s->
	`check_öãºu±
(nic)) {

368 i‡(
nic
->
›s
->
h™dÀ_öãºu±
) {

369 
nic
->
›s
->
	`h™dÀ_öãºu±
(nic);

373 
	}
}

375 
	$h¨dw¨e_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
) {

376 i‡(!
nic
 || !nic->
›s
) {

377  
ERROR_INVALID_PARAM
;

380 i‡(
nic
->
›s
->
íabÀ_öãºu±s
) {

381  
nic
->
›s
->
	`íabÀ_öãºu±s
(nic);

384  
ERROR_NOT_SUPPORTED
;

385 
	}
}

387 
	$h¨dw¨e_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
) {

388 i‡(!
nic
 || !nic->
›s
) {

389  
ERROR_INVALID_PARAM
;

392 i‡(
nic
->
›s
->
dißbÀ_öãºu±s
) {

393  
nic
->
›s
->
	`dißbÀ_öãºu±s
(nic);

396  
ERROR_NOT_SUPPORTED
;

397 
	}
}

400 
	$h¨dw¨e_c⁄figuª_nic
(
nic_öfo_t
 *
nic
, c⁄° 
nic_c⁄fig_t
 *
c⁄fig
) {

401 i‡(!
nic
 || !
c⁄fig
) {

402  
ERROR_INVALID_PARAM
;

405 i‡(!
nic
->
›s
 || !nic->›s->
c⁄figuª
) {

406  
ERROR_NOT_SUPPORTED
;

409  
nic
->
›s
->
	`c⁄figuª
“ic, 
c⁄fig
);

410 
	}
}

412 
	$h¨dw¨e_ª£t_nic
(
nic_öfo_t
 *
nic
) {

413 i‡(!
nic
) {

414  
ERROR_INVALID_PARAM
;

417 i‡(!
nic
->
›s
 || !nic->›s->
ª£t
) {

418  
ERROR_NOT_SUPPORTED
;

421  
nic
->
›s
->
	`ª£t
(nic);

422 
	}
}

424 
	$h¨dw¨e_£lf_ã°_nic
(
nic_öfo_t
 *
nic
) {

425 i‡(!
nic
) {

426  
ERROR_INVALID_PARAM
;

429 i‡(!
nic
->
›s
 || !nic->›s->
£lf_ã°
) {

430  
ERROR_NOT_SUPPORTED
;

433  
nic
->
›s
->
	`£lf_ã°
(nic);

434 
	}
}

437 
boﬁ
 
	$h¨dw¨e_is_lök_up
(
nic_öfo_t
 *
nic
) {

438 i‡(!
nic
) {

439  
Ál£
;

442 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_°©us
) {

443  
nic
->
›s
->
	`gë_lök_°©us
(nic);

446  
nic
->
lök_up
;

447 
	}
}

449 
	$h¨dw¨e_gë_lök_•ìd
(
nic_öfo_t
 *
nic
) {

450 i‡(!
nic
) {

454 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_•ìd
) {

455  
nic
->
›s
->
	`gë_lök_•ìd
(nic);

458  
nic
->
•ìd
;

459 
	}
}

462 c⁄° 
h¨dw¨e_°©s_t
* 
	$h¨dw¨e_gë_°©s
() {

463  &
g_h¨dw¨e_°©s
;

464 
	}
}

466 
	$h¨dw¨e_˛ór_°©s
() {

467 
	`h¨dw¨e_ª£t_°©s
();

468 
	}
}

470 
	$h¨dw¨e_¥öt_nic_öfo
(
ödex
) {

471 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
ödex
);

472 i‡(!
nic
) {

473 
	`LOG_ERROR
("InvÆid NIC index: %d", 
ödex
);

477 
	`LOG_INFO
("NIC %d: Type=%d, I/O=0x%X, IRQ=%d, MAC=%02X:%02X:%02X:%02X:%02X:%02X",

478 
ödex
, 
nic
->
ty≥
,Çic->
io_ba£
,Çic->
úq
,

479 
nic
->
mac
[0],Çic->mac[1],Çic->mac[2],

480 
nic
->
mac
[3],Çic->mac[4],Çic->mac[5]);

481 
	}
}

483 c⁄° * 
	$h¨dw¨e_nic_ty≥_to_°rög
(
nic_ty≥_t
 
ty≥
) {

484 
ty≥
) {

485 
NIC_TYPE_3C509B
:  "3C509B";

486 
NIC_TYPE_3C515_TX
:  "3C515-TX";

489 
	}
}

491 c⁄° * 
	$h¨dw¨e_nic_°©us_to_°rög
(
uöt32_t
 
°©us
) {

492 
°©us_°r
[128];

493 
°©us_°r
[0] = '\0';

495 i‡(
°©us
 & 
NIC_STATUS_PRESENT
Ë
	`°rˇt
(
°©us_°r
, "PRESENT ");

496 i‡(
°©us
 & 
NIC_STATUS_INITIALIZED
Ë
	`°rˇt
(
°©us_°r
, "INIT ");

497 i‡(
°©us
 & 
NIC_STATUS_ACTIVE
Ë
	`°rˇt
(
°©us_°r
, "ACTIVE ");

498 i‡(
°©us
 & 
NIC_STATUS_LINK_UP
Ë
	`°rˇt
(
°©us_°r
, "LINK_UP ");

499 i‡(
°©us
 & 
NIC_STATUS_ERROR
Ë
	`°rˇt
(
°©us_°r
, "ERROR ");

501 i‡(
°©us_°r
[0] == '\0') {

502 
	`°r˝y
(
°©us_°r
, "NONE");

505  
°©us_°r
;

506 
	}
}

509 
	$h¨dw¨e_£t_¥omiscuous_mode
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ
) {

510 i‡(!
nic
 || !nic->
›s
) {

511  
ERROR_INVALID_PARAM
;

514 i‡(
nic
->
›s
->
£t_¥omiscuous
) {

515  
nic
->
›s
->
	`£t_¥omiscuous
“ic, 
íabÀ
);

518  
ERROR_NOT_SUPPORTED
;

519 
	}
}

521 
	$h¨dw¨e_£t_mu…iˇ°_fûãr
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
mc_li°
, 
cou¡
) {

522 i‡(!
nic
 || !nic->
›s
) {

523  
ERROR_INVALID_PARAM
;

526 i‡(
nic
->
›s
->
£t_mu…iˇ°
) {

527  
nic
->
›s
->
	`£t_mu…iˇ°
“ic, 
mc_li°
, 
cou¡
);

530  
ERROR_NOT_SUPPORTED
;

531 
	}
}

534 
	$h¨dw¨e_ª£t_°©s
() {

535 
	`mem‹y_zîo
(&
g_h¨dw¨e_°©s
, (
h¨dw¨e_°©s_t
));

536 
	}
}

538 
boﬁ
 
	$h¨dw¨e_vÆid©e_nic_ödex
(
ödex
) {

539  (
ödex
 >0 && index < 
g_num_nics
 && index < 
MAX_NICS
);

540 
	}
}

542 
	$h¨dw¨e_upd©e_∑ckë_°©s
(
boﬁ
 
£¡
, boﬁ 
suc˚ss
) {

543 i‡(
£¡
) {

544 
g_h¨dw¨e_°©s
.
∑ckës_£¡
++;

545 i‡(!
suc˚ss
) {

546 
g_h¨dw¨e_°©s
.
£nd_îr‹s
++;

549 
g_h¨dw¨e_°©s
.
∑ckës_ª˚ived
++;

550 i‡(!
suc˚ss
) {

551 
g_h¨dw¨e_°©s
.
ª˚ive_îr‹s
++;

554 
	}
}

559 
	$nic_3c509b_öô
(
nic_öfo
 *
nic
) {

560 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

562 
	`LOG_DEBUG
("Inôülizög 3C509BáàI/O 0x%X", 
nic
->
io_ba£
);

565 
	`_3C509B_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C509B_WINDOW_0
);

566 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_TOTAL_RESET
);

567 
	`nic_dñay_mûli£c⁄ds
(100);

570 
ªsu…
 = 
	`nic_ªad_mac_addªss_3c509b
(
nic
->
io_ba£
,Çic->
mac
);

571 i‡(
ªsu…
 !
SUCCESS
) {

572 
	`LOG_ERROR
("FailedÅoÑead MACáddress from 3C509B");

573  
ªsu…
;

577 
	`mem˝y
(
nic
->
≥rm_mac
,Çic->
mac
, 
ETH_ALEN
);

580 
nic
->
mtu
 = 
_3C509B_MAX_MTU
;

581 
nic
->
•ìd
 = 10;

582 
nic
->
fuŒ_du∂ex
 = 
Ál£
;

583 
nic
->
ˇ∑bûôõs
 = 
HW_CAP_MULTICAST
 | 
HW_CAP_PROMISCUOUS
;

584 
nic
->
°©us
 |
NIC_STATUS_INITIALIZED
;

586 
	`LOG_INFO
("3C509B initializedát I/O 0x%X, MAC %02X:%02X:%02X:%02X:%02X:%02X",

587 
nic
->
io_ba£
,Çic->
mac
[0],Çic->mac[1],Çic->mac[2],

588 
nic
->
mac
[3],Çic->mac[4],Çic->mac[5]);

590  
SUCCESS
;

591 
	}
}

593 
	$nic_3c509b_ª£t
(
nic_öfo
 *
nic
) {

594 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

596 
	`LOG_DEBUG
("Re£âög 3C509BáàI/O 0x%X", 
nic
->
io_ba£
);

599 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_TOTAL_RESET
);

600 
	`nic_dñay_mûli£c⁄ds
(100);

603 
timeout
 = 1000;

604 
timeout
-- > 0) {

605 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

606 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

609 
	`nic_dñay_mûli£c⁄ds
(1);

612 i‡(
timeout
 <= 0) {

613 
	`LOG_ERROR
("3C509BÑesetÅimeout");

614  
ERROR_TIMEOUT
;

617  
SUCCESS
;

618 
	}
}

620 
	$nic_3c509b_íabÀ_öãºu±s
(
nic_öfo
 *
nic
) {

621 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

623 
	`_3C509B_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C509B_WINDOW_1
);

624 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
,

625 
_3C509B_CMD_SET_INTR_ENB
 | 
_3C509B_IMASK_ALL
);

627  
SUCCESS
;

628 
	}
}

630 
	$nic_3c509b_dißbÀ_öãºu±s
(
nic_öfo
 *
nic
) {

631 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

633 
	`_3C509B_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C509B_WINDOW_1
);

634 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_INTR_ENB
 | 0);

636  
SUCCESS
;

637 
	}
}

640 
	$nic_3c515_öô
(
nic_öfo
 *
nic
) {

641 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

643 
	`LOG_DEBUG
("Inôülizög 3C515-TXáàI/O 0x%X", 
nic
->
io_ba£
);

646 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_0
);

647 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TOTAL_RESET
);

648 
	`nic_dñay_mûli£c⁄ds
(100);

651 
ªsu…
 = 
	`nic_ªad_mac_addªss_3c515
(
nic
->
io_ba£
,Çic->
mac
);

652 i‡(
ªsu…
 !
SUCCESS
) {

653 
	`LOG_ERROR
("FailedÅoÑead MACáddress from 3C515-TX");

654  
ªsu…
;

658 
	`mem˝y
(
nic
->
≥rm_mac
,Çic->
mac
, 
ETH_ALEN
);

661 
nic
->
mtu
 = 
_3C515_TX_MAX_MTU
;

662 
nic
->
•ìd
 = 100;

663 
nic
->
fuŒ_du∂ex
 = 
Ál£
;

664 
nic
->
ˇ∑bûôõs
 = 
HW_CAP_DMA
 | 
HW_CAP_BUS_MASTER
 | 
HW_CAP_MULTICAST
 |

665 
HW_CAP_PROMISCUOUS
 | 
HW_CAP_FULL_DUPLEX
 | 
HW_CAP_AUTO_SPEED
;

666 
nic
->
°©us
 |
NIC_STATUS_INITIALIZED
;

668 
	`LOG_INFO
("3C515-TX initializedát I/O 0x%X, MAC %02X:%02X:%02X:%02X:%02X:%02X",

669 
nic
->
io_ba£
,Çic->
mac
[0],Çic->mac[1],Çic->mac[2],

670 
nic
->
mac
[3],Çic->mac[4],Çic->mac[5]);

672  
SUCCESS
;

673 
	}
}

675 
	$nic_3c515_ª£t
(
nic_öfo
 *
nic
) {

676 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

678 
	`LOG_DEBUG
("Re£âög 3C515-TXáàI/O 0x%X", 
nic
->
io_ba£
);

681 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TOTAL_RESET
);

682 
	`nic_dñay_mûli£c⁄ds
(100);

685 
timeout
 = 1000;

686 
timeout
-- > 0) {

687 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

688 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

691 
	`nic_dñay_mûli£c⁄ds
(1);

694 i‡(
timeout
 <= 0) {

695 
	`LOG_ERROR
("3C515-TXÑesetÅimeout");

696  
ERROR_TIMEOUT
;

699  
SUCCESS
;

700 
	}
}

702 
	$nic_3c515_íabÀ_öãºu±s
(
nic_öfo
 *
nic
) {

703 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

705 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

706 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
,

707 
_3C515_TX_CMD_SET_INTR_ENB
 | (
_3C515_TX_IMASK_ADAPTER_FAILURE
 |

708 
_3C515_TX_IMASK_TX_COMPLETE
 |

709 
_3C515_TX_IMASK_RX_COMPLETE
 |

710 
_3C515_TX_IMASK_UP_COMPLETE
 |

711 
_3C515_TX_IMASK_DOWN_COMPLETE
));

713  
SUCCESS
;

714 
	}
}

716 
	$nic_3c515_dißbÀ_öãºu±s
(
nic_öfo
 *
nic
) {

717 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

719 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

720 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SET_INTR_ENB
 | 0);

722  
SUCCESS
;

723 
	}
}

726 
_3c509b_öô
(
nic_öfo_t
 *
nic
);

727 
_3c509b_˛ónup
(
nic_öfo_t
 *
nic
);

728 
_3c509b_ª£t
(
nic_öfo_t
 *
nic
);

729 
_3c509b_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
);

730 
_3c509b_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àngth
);

731 
boﬁ
 
_3c509b_check_öãºu±
(
nic_öfo_t
 *
nic
);

732 
_3c509b_h™dÀ_öãºu±
(
nic_öfo_t
 *
nic
);

733 
_3c509b_£lf_ã°
(
nic_öfo_t
 *
nic
);

734 
_3c509b_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

735 
_3c509b_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

738 
_3c515_öô
(
nic_öfo_t
 *
nic
);

739 
_3c515_˛ónup
(
nic_öfo_t
 *
nic
);

740 
_3c515_ª£t
(
nic_öfo_t
 *
nic
);

741 
_3c515_£nd_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
);

742 
_3c515_ª˚ive_∑ckë
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àngth
);

743 
boﬁ
 
_3c515_check_öãºu±
(
nic_öfo_t
 *
nic
);

744 
_3c515_h™dÀ_öãºu±
(
nic_öfo_t
 *
nic
);

745 
_3c515_£lf_ã°
(
nic_öfo_t
 *
nic
);

746 
_3c515_íabÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

747 
_3c515_dißbÀ_öãºu±s
(
nic_öfo_t
 *
nic
);

750 
	$öô_3c509b_›s
() {

751 
g_3c509b_›s
.
öô
 = 
_3c509b_öô
;

752 
g_3c509b_›s
.
˛ónup
 = 
_3c509b_˛ónup
;

753 
g_3c509b_›s
.
ª£t
 = 
_3c509b_ª£t
;

754 
g_3c509b_›s
.
£lf_ã°
 = 
_3c509b_£lf_ã°
;

755 
g_3c509b_›s
.
£nd_∑ckë
 = 
_3c509b_£nd_∑ckë
;

756 
g_3c509b_›s
.
ª˚ive_∑ckë
 = 
_3c509b_ª˚ive_∑ckë
;

757 
g_3c509b_›s
.
check_tx_com∂ëe
 = 
_3c509b_check_tx_com∂ëe
;

758 
g_3c509b_›s
.
check_rx_avaûabÀ
 = 
_3c509b_check_rx_avaûabÀ
;

759 
g_3c509b_›s
.
h™dÀ_öãºu±
 = 
_3c509b_h™dÀ_öãºu±
;

760 
g_3c509b_›s
.
check_öãºu±
 = 
_3c509b_check_öãºu±
;

761 
g_3c509b_›s
.
íabÀ_öãºu±s
 = 
_3c509b_íabÀ_öãºu±s
;

762 
g_3c509b_›s
.
dißbÀ_öãºu±s
 = 
_3c509b_dißbÀ_öãºu±s
;

764 
	}
}

766 
	$öô_3c515_›s
() {

767 
g_3c515_›s
.
öô
 = 
_3c515_öô
;

768 
g_3c515_›s
.
˛ónup
 = 
_3c515_˛ónup
;

769 
g_3c515_›s
.
ª£t
 = 
_3c515_ª£t
;

770 
g_3c515_›s
.
£lf_ã°
 = 
_3c515_£lf_ã°
;

771 
g_3c515_›s
.
£nd_∑ckë
 = 
_3c515_£nd_∑ckë
;

772 
g_3c515_›s
.
ª˚ive_∑ckë
 = 
_3c515_ª˚ive_∑ckë
;

773 
g_3c515_›s
.
check_tx_com∂ëe
 = 
_3c515_check_tx_com∂ëe
;

774 
g_3c515_›s
.
check_rx_avaûabÀ
 = 
_3c515_check_rx_avaûabÀ
;

775 
g_3c515_›s
.
h™dÀ_öãºu±
 = 
_3c515_h™dÀ_öãºu±
;

776 
g_3c515_›s
.
check_öãºu±
 = 
_3c515_check_öãºu±
;

777 
g_3c515_›s
.
íabÀ_öãºu±s
 = 
_3c515_íabÀ_öãºu±s
;

778 
g_3c515_›s
.
dißbÀ_öãºu±s
 = 
_3c515_dißbÀ_öãºu±s
;

780 
	}
}

783 
	$h¨dw¨e_add_nic
(
nic_öfo_t
 *
nic
) {

784 i‡(!
nic
 || 
g_num_nics
 >
MAX_NICS
) {

785  
ERROR_INVALID_PARAM
;

789 
	`mem˝y
(&
g_nic_öfos
[
g_num_nics
], 
nic
, (
nic_öfo_t
));

790 
g_nic_öfos
[
g_num_nics
].
ödex
 = g_num_nics;

792 
g_num_nics
++;

794 
	`LOG_DEBUG
("Added NIC %dÅÿh¨dw¨êœyî", 
g_num_nics
 - 1);

796  
SUCCESS
;

797 
	}
}

799 
	$h¨dw¨e_ªmove_nic
(
ödex
) {

800 i‡(
ödex
 < 0 || index >
g_num_nics
) {

801  
ERROR_INVALID_PARAM
;

805 
nic_öfo_t
 *
nic
 = &
g_nic_öfos
[
ödex
];

806 i‡(
nic
->
›s
 &&Çic->›s->
˛ónup
) {

807 
nic
->
›s
->
	`˛ónup
(nic);

811 
i
 = 
ödex
; i < 
g_num_nics
 - 1; i++) {

812 
	`mem˝y
(&
g_nic_öfos
[
i
], &g_nic_öfos[ò+ 1], (
nic_öfo_t
));

813 
g_nic_öfos
[
i
].
ödex
 = i;

816 
g_num_nics
--;

818 
	`LOG_DEBUG
("Removed NIC %d from h¨dw¨êœyî", 
ödex
);

820  
SUCCESS
;

821 
	}
}

828 
	$h¨dw¨e_dëe˘_Áûuª
(
nic_öfo_t
 *
nic
) {

829 
uöt32_t
 
cuºít_time
;

830 
uöt32_t
 
îr‹_øã
;

832 i‡(!
nic
) {

833  
HW_FAILURE_CRITICAL
;

836 
cuºít_time
 = 
	`gë_sy°em_time°amp_ms
();

839 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_PRESENT
)) {

840  
HW_FAILURE_CRITICAL
;

844 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_°©us
) {

845 
boﬁ
 
lök_up
 = 
nic
->
›s
->
	`gë_lök_°©us
(nic);

846 i‡(!
lök_up
 && 
nic
->link_up) {

848 
nic
->
lök_up
 = 
Ál£
;

849  
HW_FAILURE_LINK_LOST
;

851 
nic
->
lök_up
 =Üink_up;

855 i‡(
nic
->
tx_∑ckës
 > 100) {

856 
îr‹_øã
 = (
nic
->
tx_îr‹s
 * 100Ë/Çic->
tx_∑ckës
;

857 i‡(
îr‹_øã
 > 
MAX_ERROR_RATE_PERCENT
) {

858  
HW_FAILURE_TX_TIMEOUT
;

862 i‡(
nic
->
rx_∑ckës
 > 100) {

863 
îr‹_øã
 = (
nic
->
rx_îr‹s
 * 100Ë/Çic->
rx_∑ckës
;

864 i‡(
îr‹_øã
 > 
MAX_ERROR_RATE_PERCENT
) {

865  
HW_FAILURE_RX_TIMEOUT
;

870 i‡(
nic
->
öãºu±s
 > 0) {

871 
uöt32_t
 
time_diff
 = 
cuºít_time
 - 
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic
->
ödex
];

872 i‡(
time_diff
 < 100 && 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] > 10) {

873  
HW_FAILURE_INTERRUPT_STORM
;

878 i‡(
nic
->
›s
 &&Çic->›s->
£lf_ã°
) {

879 
ã°_ªsu…
 = 
nic
->
›s
->
	`£lf_ã°
(nic);

880 i‡(
ã°_ªsu…
 !
SUCCESS
) {

881  
HW_FAILURE_REGISTER_CORRUPTION
;

885  
HW_FAILURE_NONE
;

886 
	}
}

894 
	$h¨dw¨e_ªcovî_nic
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
) {

895 
ªsu…
;

896 
uöt32_t
 
timeout
;

897 
ªcovîy_°øãgy
;

899 i‡(!
nic
) {

900  
ERROR_INVALID_PARAM
;

903 
	`LOG_INFO
("Aâem±ögÑecovîy o‡NIC %d from faûuªÅy≥ %d", 
nic
->
ödex
, 
Áûuª_ty≥
);

906 
g_îr‹_ªcovîy_°©e
.
îr‹_cou¡s
[
nic
->
ödex
][
Áûuª_ty≥
]++;

907 
g_îr‹_ªcovîy_°©e
.
ªcovîy_©ãm±s
[
nic
->
ödex
]++;

908 
g_îr‹_ªcovîy_°©e
.
œ°_ªcovîy_time
[
nic
->
ödex
] = 
	`gë_sy°em_time°amp_ms
();

911 
Áûuª_ty≥
) {

912 
HW_FAILURE_LINK_LOST
:

913 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

914 
timeout
 = 2000;

917 
HW_FAILURE_TX_TIMEOUT
:

918 
HW_FAILURE_RX_TIMEOUT
:

919 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

920 
timeout
 = 1000;

923 
HW_FAILURE_FIFO_OVERRUN
:

924 
ªcovîy_°øãgy
 = 
RECOVERY_REINITIALIZE
;

925 
timeout
 = 3000;

928 
HW_FAILURE_DMA_ERROR
:

929 
ªcovîy_°øãgy
 = 
RECOVERY_HARD_RESET
;

930 
timeout
 = 5000;

933 
HW_FAILURE_REGISTER_CORRUPTION
:

934 
ªcovîy_°øãgy
 = 
RECOVERY_HARD_RESET
;

935 
timeout
 = 5000;

938 
HW_FAILURE_INTERRUPT_STORM
:

939 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

940 
timeout
 = 1000;

943 
HW_FAILURE_CRITICAL
:

944 
HW_FAILURE_THERMAL
:

945 
HW_FAILURE_POWER
:

947 
ªcovîy_°øãgy
 = 
RECOVERY_DISABLE
;

948 
timeout
 = 0;

952 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

953 
timeout
 = 2000;

958 
ªcovîy_°øãgy
) {

959 
RECOVERY_SOFT_RESET
:

961 i‡(
nic
->
›s
 &&Çic->›s->
dißbÀ_öãºu±s
) {

962 
nic
->
›s
->
	`dißbÀ_öãºu±s
(nic);

966 
	`mdñay
(100);

969 i‡(
nic
->
›s
 &&Çic->›s->
íabÀ_öãºu±s
) {

970 
ªsu…
 = 
nic
->
›s
->
	`íabÀ_öãºu±s
(nic);

971 i‡(
ªsu…
 !
SUCCESS
) {

972 
	`LOG_ERROR
("FaûedÅÿª-íabÀ i¡îru±†⁄ NIC %d", 
nic
->
ödex
);

973  
ªsu…
;

978 
RECOVERY_HARD_RESET
:

980 i‡(
nic
->
›s
 &&Çic->›s->
ª£t
) {

981 
ªsu…
 = 
nic
->
›s
->
	`ª£t
(nic);

982 i‡(
ªsu…
 !
SUCCESS
) {

983 
	`LOG_ERROR
("H¨dÑe£àÁûed o¿NIC %d", 
nic
->
ödex
);

984  
ªsu…
;

988 
	`mdñay
(100);

992 
RECOVERY_REINITIALIZE
:

994 i‡(
nic
->
›s
 &&Çic->›s->
˛ónup
) {

995 
nic
->
›s
->
	`˛ónup
(nic);

998 i‡(
nic
->
›s
 &&Çic->›s->
öô
) {

999 
ªsu…
 = 
nic
->
›s
->
	`öô
(nic);

1000 i‡(
ªsu…
 !
SUCCESS
) {

1001 
	`LOG_ERROR
("Re-öôüliz©i⁄ faûed o¿NIC %d", 
nic
->
ödex
);

1002  
ªsu…
;

1007 
RECOVERY_DISABLE
:

1009 
	`LOG_ERROR
("Dißblög NIC %d duêtÿ¸ôiˇ»Áûuª", 
nic
->
ödex
);

1010 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1011  
ERROR_HARDWARE
;

1014 
	`LOG_ERROR
("Unknow¿ªcovîy så©egy %d", 
ªcovîy_°øãgy
);

1015  
ERROR_NOT_SUPPORTED
;

1019 
ªsu…
 = 
	`h¨dw¨e_vÆid©e_ªcovîy
(
nic
);

1020 i‡(
ªsu…
 !
SUCCESS
) {

1021 
	`LOG_ERROR
("Recovîy vÆid©i⁄ faûed f‹ NIC %d", 
nic
->
ödex
);

1022  
ªsu…
;

1026 
g_îr‹_ªcovîy_°©e
.
suc˚ssful_ªcovîõs
++;

1028 
	`LOG_INFO
("Suc˚ssfuŒyÑecovîed NIC %d from faûuªÅy≥ %d", 
nic
->
ödex
, 
Áûuª_ty≥
);

1030  
SUCCESS
;

1031 
	}
}

1038 
	$h¨dw¨e_©ãm±_Áûovî
(
Áûed_nic_ödex
) {

1039 
backup_nic_ödex
 = -1;

1040 
nic_öfo_t
 *
Áûed_nic
, *
backup_nic
;

1042 i‡(
Áûed_nic_ödex
 < 0 || faûed_nic_ödex >
g_num_nics
) {

1043  
ERROR_INVALID_PARAM
;

1046 i‡(
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
) {

1047 
	`LOG_WARNING
("Failoverálready inÖrogress,ÑejectingÇew failoverÑequest");

1048  
ERROR_BUSY
;

1051 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 = 
åue
;

1052 
Áûed_nic
 = &
g_nic_öfos
[
Áûed_nic_ödex
];

1054 
	`LOG_WARNING
("Inôütög faûovî from faûed NIC %d", 
Áûed_nic_ödex
);

1057 
i
 = 0; i < 
g_num_nics
; i++) {

1058 i‡(
i
 =
Áûed_nic_ödex
) ;

1060 
nic_öfo_t
 *
ˇndid©e
 = &
g_nic_öfos
[
i
];

1061 i‡((
ˇndid©e
->
°©us
 & 
NIC_STATUS_ACTIVE
) &&

1062 (
ˇndid©e
->
°©us
 & 
NIC_STATUS_LINK_UP
) &&

1063 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
i
] == 0) {

1065 
backup_nic_ödex
 = 
i
;

1070 i‡(
backup_nic_ödex
 == -1) {

1071 
	`LOG_ERROR
("No suitable backup NIC found for failover");

1072 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 = 
Ál£
;

1075 
	`h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
Áûed_nic_ödex
, 
HW_FAILURE_CRITICAL
);

1076  
ERROR_NOT_FOUND
;

1079 
backup_nic
 = &
g_nic_öfos
[
backup_nic_ödex
];

1081 
	`LOG_INFO
("Faûög ovî from NIC %dÅÿNIC %d", 
Áûed_nic_ödex
, 
backup_nic_ödex
);

1084 
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
 = 
backup_nic_ödex
;

1085 
g_îr‹_ªcovîy_°©e
.
backup_nic
 = 
Áûed_nic_ödex
;

1088 
Áûed_nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

1089 
Áûed_nic
->
°©us
 |
NIC_STATUS_ERROR
;

1092 i‡(
backup_nic
->
›s
 && backup_nic->›s->
£lf_ã°
) {

1093 
ªsu…
 = 
backup_nic
->
›s
->
	`£lf_ã°
(backup_nic);

1094 i‡(
ªsu…
 !
SUCCESS
) {

1095 
	`LOG_ERROR
("Backu∞NIC %d faûed sñf-ã° durög faûovî", 
backup_nic_ödex
);

1096 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 = 
Ál£
;

1097  
ERROR_HARDWARE
;

1102 
	`h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
Áûed_nic_ödex
, 
HW_FAILURE_NONE
);

1104 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 = 
Ál£
;

1106 
	`LOG_INFO
("Faûovî com∂ëed suc˚ssfuŒyÅÿNIC %d", 
backup_nic_ödex
);

1108  
SUCCESS
;

1109 
	}
}

1115 
	$h¨dw¨e_gø˚ful_degød©i⁄
(
nic_öfo_t
 *
nic
) {

1116 i‡(!
nic
) ;

1118 
	`LOG_WARNING
("Inôütög gø˚fu»degød©i⁄ f‹ NIC %d", 
nic
->
ödex
);

1121 i‡(
nic
->
›s
 &&Çic->›s->
dißbÀ_öãºu±s
) {

1122 
nic
->
›s
->
	`dißbÀ_öãºu±s
(nic);

1126 
nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

1127 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

1130 i‡(
nic
->
›s
 &&Çic->›s->
ª£t
) {

1131 
nic
->
›s
->
	`ª£t
(nic);

1134 
	`LOG_INFO
("Gø˚fu»degød©i⁄ com∂ëed f‹ NIC %d", 
nic
->
ödex
);

1135 
	}
}

1142 
	$h¨dw¨e_vÆid©e_ªcovîy
(
nic_öfo_t
 *
nic
) {

1143 i‡(!
nic
) {

1144  
ERROR_INVALID_PARAM
;

1148 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_PRESENT
)) {

1149  
ERROR_HARDWARE
;

1153 i‡(
nic
->
›s
 &&Çic->›s->
£lf_ã°
) {

1154 
ªsu…
 = 
nic
->
›s
->
	`£lf_ã°
(nic);

1155 i‡(
ªsu…
 !
SUCCESS
) {

1156  
ªsu…
;

1161 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_°©us
) {

1162 
boﬁ
 
lök_up
 = 
nic
->
›s
->
	`gë_lök_°©us
(nic);

1163 
nic
->
lök_up
 =Üink_up;

1167 
nic
->
°©us
 |
NIC_STATUS_ACTIVE
;

1168 
nic
->
°©us
 &~
NIC_STATUS_ERROR
;

1170  
SUCCESS
;

1171 
	}
}

1179 
	$h¨dw¨e_log_Áûuª
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
, c⁄° * 
dëaûs
) {

1180 c⁄° * 
Áûuª_«mes
[] = {

1186 c⁄° * 
Áûuª_«me
 = (
Áûuª_ty≥
 >0 && faûuª_ty≥ <
HW_FAILURE_CRITICAL
) ?

1187 
Áûuª_«mes
[
Áûuª_ty≥
] : "Unknown";

1189 
	`LOG_ERROR
("Hardware Failure - NIC %d: %s (%d) - %s",

1190 
nic
 ?Çic->
ödex
 : -1, 
Áûuª_«me
, 
Áûuª_ty≥
, 
dëaûs
 ? details : "No details");

1193 
g_îr‹_ªcovîy_°©e
.
tŸÆ_Áûuªs
++;

1195 i‡(
nic
) {

1196 
nic
->
îr‹_cou¡
++;

1197 
nic
->
œ°_îr‹
 = 
Áûuª_ty≥
;

1199 
	}
}

1206 
boﬁ
 
	$h¨dw¨e_is_¸ôiˇl_Áûuª
(
Áûuª_ty≥
) {

1207 
Áûuª_ty≥
) {

1208 
HW_FAILURE_CRITICAL
:

1209 
HW_FAILURE_THERMAL
:

1210 
HW_FAILURE_POWER
:

1211 
HW_FAILURE_MEMORY_ERROR
:

1212  
åue
;

1214  
Ál£
;

1216 
	}
}

1223 
	$h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
nic_ödex
, 
îr‹_ty≥
) {

1226 
	`LOG_INFO
("NŸifyögáµliˇti⁄: NIC %dÉº‹Åy≥ %d", 
nic_ödex
, 
îr‹_ty≥
);

1229 
	}
}

1236 
uöt32_t
 
	$h¨dw¨e_ˇlcuœã_ªcovîy_timeout
(
Áûuª_ty≥
) {

1237 
Áûuª_ty≥
) {

1238 
HW_FAILURE_LINK_LOST
:

1240 
HW_FAILURE_TX_TIMEOUT
:

1241 
HW_FAILURE_RX_TIMEOUT
:

1243 
HW_FAILURE_FIFO_OVERRUN
:

1245 
HW_FAILURE_DMA_ERROR
:

1247 
HW_FAILURE_REGISTER_CORRUPTION
:

1252 
	}
}

1259 
	$h¨dw¨e_emîgícy_ª£t
(
nic_öfo_t
 *
nic
) {

1260 i‡(!
nic
) {

1261  
ERROR_INVALID_PARAM
;

1264 
	`LOG_WARNING
("Pîf‹mögÉmîgícyÑe£à⁄ NIC %d", 
nic
->
ödex
);

1267 i‡(
nic
->
›s
 &&Çic->›s->
dißbÀ_öãºu±s
) {

1268 
nic
->
›s
->
	`dißbÀ_öãºu±s
(nic);

1272 i‡(
nic
->
›s
 &&Çic->›s->
ª£t
) {

1273 
ªsu…
 = 
nic
->
›s
->
	`ª£t
(nic);

1274 i‡(
ªsu…
 !
SUCCESS
) {

1275 
	`LOG_ERROR
("EmîgícyÑe£àÁûed o¿NIC %d", 
nic
->
ödex
);

1276  
ªsu…
;

1281 
	`mdñay
(500);

1284 i‡(
nic
->
›s
 &&Çic->›s->
öô
) {

1285 
ªsu…
 = 
nic
->
›s
->
	`öô
(nic);

1286 i‡(
ªsu…
 !
SUCCESS
) {

1287 
	`LOG_ERROR
("Po°-emîgícy inôüliz©i⁄ faûed o¿NIC %d", 
nic
->
ödex
);

1288  
ªsu…
;

1292 
	`LOG_INFO
("EmîgícyÑe£àcom∂ëed o¿NIC %d", 
nic
->
ödex
);

1293  
SUCCESS
;

1294 
	}
}

1303 
	$h¨dw¨e_£nd_∑ckë_wôh_ªcovîy
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

1304 
ªsu…
;

1305 
ªåy_cou¡
 = 0;

1306 c⁄° 
max_ªåõs
 = 3;

1307 
uöt32_t
 
°¨t_time
;

1309 i‡(!
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

1310 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

1311  
ERROR_INVALID_PARAM
;

1314 i‡(!
nic
->
›s
 || !nic->›s->
£nd_∑ckë
) {

1315 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

1316  
ERROR_NOT_SUPPORTED
;

1319 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

1321 
ªåy_cou¡
 <
max_ªåõs
) {

1323 
Áûuª_ty≥
 = 
	`h¨dw¨e_dëe˘_Áûuª
(
nic
);

1324 i‡(
Áûuª_ty≥
 !
HW_FAILURE_NONE
) {

1325 
	`LOG_WARNING
("NIC %d faûuª dëe˘ed (ty≥ %dËbef‹ê£ndáâem±", 
nic
->
ödex
, 
Áûuª_ty≥
);

1328 
ªsu…
 = 
	`h¨dw¨e_ªcovî_nic
(
nic
, 
Áûuª_ty≥
);

1329 i‡(
ªsu…
 !
SUCCESS
) {

1330 
	`LOG_ERROR
("NIC %dÑecovîy faûed,áâem±ög faûovî", 
nic
->
ödex
);

1331  
	`h¨dw¨e_©ãm±_Áûovî
(
nic
->
ödex
);

1336 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1337 
	`LOG_ERROR
("NIC %dÇŸá˘ivêf‹ÖackëÅønsmissi⁄", 
nic
->
ödex
);

1338 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

1339  
ERROR_BUSY
;

1343 
ªsu…
 = 
nic
->
›s
->
	`£nd_∑ckë
“ic, 
∑ckë
, 
Àngth
);

1345 i‡(
ªsu…
 =
SUCCESS
) {

1347 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
,Årue);

1350 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] = 0;

1352  
SUCCESS
;

1356 
	`LOG_WARNING
("PacketÅransmission failed on NIC %d (attempt %d/%d): %d",

1357 
nic
->
ödex
, 
ªåy_cou¡
 + 1, 
max_ªåõs
 + 1, 
ªsu…
);

1360 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
]++;

1361 
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic
->
ödex
] = 
	`gë_sy°em_time°amp_ms
();

1364 i‡(
ªsu…
 =
ERROR_TIMEOUT
 ||Ñesu… =
ERROR_IO
 ||Ñesu… =
ERROR_HARDWARE
) {

1366 
dëe˘ed_Áûuª
 = (
ªsu…
 =
ERROR_TIMEOUT
Ë? 
HW_FAILURE_TX_TIMEOUT
 :

1367 (
ªsu…
 =
ERROR_IO
Ë? 
HW_FAILURE_REGISTER_CORRUPTION
 :

1368 
HW_FAILURE_CRITICAL
;

1371 i‡(
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] < 
MAX_CONSECUTIVE_ERRORS
) {

1372 
ªsu…
 = 
	`h¨dw¨e_ªcovî_nic
(
nic
, 
dëe˘ed_Áûuª
);

1373 i‡(
ªsu…
 =
SUCCESS
) {

1381 i‡(
	`h¨dw¨e_is_¸ôiˇl_Áûuª
(
ªsu…
) ||

1382 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] >
MAX_CONSECUTIVE_ERRORS
) {

1384 
	`LOG_ERROR
("Crôiˇ»Áûuª o¿NIC %d, inôütög faûovî", 
nic
->
ödex
);

1385 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1386  
	`h¨dw¨e_©ãm±_Áûovî
(
nic
->
ödex
);

1389 
ªåy_cou¡
++;

1392 
	`mdñay
(10 * 
ªåy_cou¡
);

1395 i‡(
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 > 
TX_TIMEOUT_MS
) {

1396 
	`LOG_ERROR
("H¨dw¨ê£ndÅimeouàex˚eded f‹ NIC %d", 
nic
->
ödex
);

1402 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

1403 
	`h¨dw¨e_log_Áûuª
(
nic
, 
HW_FAILURE_TX_TIMEOUT
, "Packet send failedáfterállÑetries");

1405  
ªsu…
;

1406 
	}
}

1415 
	$h¨dw¨e_ª˚ive_∑ckë_wôh_ªcovîy
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
uöt16_t
 *
Àngth
) {

1416 
ªsu…
;

1417 
ªåy_cou¡
 = 0;

1418 c⁄° 
max_ªåõs
 = 2;

1419 
uöt32_t
 
°¨t_time
;

1421 i‡(!
nic
 || !
buf„r
 || !
Àngth
) {

1422 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

1423  
ERROR_INVALID_PARAM
;

1426 i‡(!
nic
->
›s
 || !nic->›s->
ª˚ive_∑ckë
) {

1427 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

1428  
ERROR_NOT_SUPPORTED
;

1431 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

1433 
ªåy_cou¡
 <
max_ªåõs
) {

1435 
Áûuª_ty≥
 = 
	`h¨dw¨e_dëe˘_Áûuª
(
nic
);

1436 i‡(
Áûuª_ty≥
 !
HW_FAILURE_NONE
) {

1437 
	`LOG_WARNING
("NIC %d faûuª dëe˘ed (ty≥ %dËdurögÑe˚ive", 
nic
->
ödex
, 
Áûuª_ty≥
);

1440 i‡(!
	`h¨dw¨e_is_¸ôiˇl_Áûuª
(
Áûuª_ty≥
)) {

1441 
ªsu…
 = 
	`h¨dw¨e_ªcovî_nic
(
nic
, 
Áûuª_ty≥
);

1442 i‡(
ªsu…
 !
SUCCESS
) {

1443 
	`LOG_ERROR
("NIC %dÑecovîy faûed durögÑe˚ive", 
nic
->
ödex
);

1444 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1445  
ERROR_HARDWARE
;

1448 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1449  
ERROR_HARDWARE
;

1454 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1455 
	`LOG_ERROR
("NIC %dÇŸá˘ivêf‹ÖackëÑe˚±i⁄", 
nic
->
ödex
);

1456 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

1457  
ERROR_BUSY
;

1461 
size_t
 
ªcv_Àngth
 = *
Àngth
;

1462 
ªsu…
 = 
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, 
buf„r
, &
ªcv_Àngth
);

1463 *
Àngth
 = 
ªcv_Àngth
;

1465 i‡(
ªsu…
 =
SUCCESS
 ||Ñesu… =
ERROR_NO_DATA
) {

1467 i‡(
ªsu…
 =
SUCCESS
) {

1468 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, 
åue
);

1470 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] = 0;

1472  
ªsu…
;

1476 
	`LOG_WARNING
("PacketÑeception failed on NIC %d (attempt %d/%d): %d",

1477 
nic
->
ödex
, 
ªåy_cou¡
 + 1, 
max_ªåõs
 + 1, 
ªsu…
);

1480 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
]++;

1481 
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic
->
ödex
] = 
	`gë_sy°em_time°amp_ms
();

1484 i‡(
ªsu…
 =
ERROR_TIMEOUT
 ||Ñesu… =
ERROR_IO
) {

1485 
dëe˘ed_Áûuª
 = (
ªsu…
 =
ERROR_TIMEOUT
Ë? 
HW_FAILURE_RX_TIMEOUT
 : 
HW_FAILURE_FIFO_OVERRUN
;

1488 i‡(
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] < 
MAX_CONSECUTIVE_ERRORS
) {

1489 
ªsu…
 = 
	`h¨dw¨e_ªcovî_nic
(
nic
, 
dëe˘ed_Áûuª
);

1490 i‡(
ªsu…
 =
SUCCESS
) {

1498 i‡(
	`h¨dw¨e_is_¸ôiˇl_Áûuª
(
ªsu…
) ||

1499 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] >
MAX_CONSECUTIVE_ERRORS
) {

1501 
	`LOG_ERROR
("Crôiˇ»ª˚ivêÁûuª o¿NIC %d", 
nic
->
ödex
);

1502 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1503  
ERROR_HARDWARE
;

1506 
ªåy_cou¡
++;

1509 
	`mdñay
(5 * 
ªåy_cou¡
);

1512 i‡(
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 > 
RX_TIMEOUT_MS
) {

1513 
	`LOG_ERROR
("H¨dw¨êª˚ivêtimeouàex˚eded f‹ NIC %d", 
nic
->
ödex
);

1519 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

1520 
	`h¨dw¨e_log_Áûuª
(
nic
, 
HW_FAILURE_RX_TIMEOUT
, "PacketÑeceive failedáfterállÑetries");

1522  
ªsu…
;

1523 
	}
}

1530 
	$h¨dw¨e_gë_ªcovîy_°©s
(
h¨dw¨e_ªcovîy_°©s_t
 *
°©s
) {

1531 i‡(!
°©s
) {

1532  
ERROR_INVALID_PARAM
;

1535 
	`mem£t
(
°©s
, 0, (
h¨dw¨e_ªcovîy_°©s_t
));

1537 
°©s
->
tŸÆ_Áûuªs
 = 
g_îr‹_ªcovîy_°©e
.total_failures;

1538 
°©s
->
suc˚ssful_ªcovîõs
 = 
g_îr‹_ªcovîy_°©e
.successful_recoveries;

1539 
°©s
->
Áûovî_a˘ive
 = 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
;

1540 
°©s
->
¥im¨y_nic
 = 
g_îr‹_ªcovîy_°©e
.primary_nic;

1541 
°©s
->
backup_nic
 = 
g_îr‹_ªcovîy_°©e
.backup_nic;

1544 
i
 = 0; i < 
g_num_nics
 && i < 
MAX_NICS
; i++) {

1545 
°©s
->
nic_°©s
[
i
].
c⁄£cutive_îr‹s
 = 
g_îr‹_ªcovîy_°©e
.consecutive_errors[i];

1546 
°©s
->
nic_°©s
[
i
].
ªcovîy_©ãm±s
 = 
g_îr‹_ªcovîy_°©e
.recovery_attempts[i];

1547 
°©s
->
nic_°©s
[
i
].
œ°_îr‹_time
 = 
g_îr‹_ªcovîy_°©e
.last_error_time[i];

1548 
°©s
->
nic_°©s
[
i
].
œ°_ªcovîy_time
 = 
g_îr‹_ªcovîy_°©e
.last_recovery_time[i];

1551 
j
 = 0; j < 12; j++) {

1552 
°©s
->
nic_°©s
[
i
].
îr‹_cou¡s
[
j
] = 
g_îr‹_ªcovîy_°©e
.error_counts[i][j];

1556  
SUCCESS
;

1557 
	}
}

1563 
	$h¨dw¨e_m⁄ô‹_hó…h
() {

1564 
hó…h_sc‹e
 = 0;

1565 
a˘ive_nics
 = 0;

1567 i‡(!
g_h¨dw¨e_öôülized
) {

1571 
i
 = 0; i < 
g_num_nics
; i++) {

1572 
nic_öfo_t
 *
nic
 = &
g_nic_öfos
[
i
];

1574 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_PRESENT
)) {

1579 
Áûuª_ty≥
 = 
	`h¨dw¨e_dëe˘_Áûuª
(
nic
);

1580 i‡(
Áûuª_ty≥
 !
HW_FAILURE_NONE
) {

1581 i‡(
	`h¨dw¨e_is_¸ôiˇl_Áûuª
(
Áûuª_ty≥
)) {

1582 
	`LOG_ERROR
("Crôiˇ»Áûuª dëe˘ed o¿NIC %d:Åy≥ %d", 
i
, 
Áûuª_ty≥
);

1583 
hó…h_sc‹e
 -= 50;

1586 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

1587 
	`h¨dw¨e_©ãm±_Áûovî
(
i
);

1589 
	`LOG_WARNING
("N⁄-¸ôiˇ»Áûuª dëe˘ed o¿NIC %d:Åy≥ %d", 
i
, 
Áûuª_ty≥
);

1590 
hó…h_sc‹e
 -= 10;

1593 i‡(
	`h¨dw¨e_ªcovî_nic
(
nic
, 
Áûuª_ty≥
Ë=
SUCCESS
) {

1594 
hó…h_sc‹e
 += 5;

1599 i‡(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
) {

1600 
a˘ive_nics
++;

1603 i‡(
nic
->
tx_∑ckës
 > 0) {

1604 
uöt32_t
 
tx_îr‹_øã
 = (
nic
->
tx_îr‹s
 * 100Ë/Çic->
tx_∑ckës
;

1605 i‡(
tx_îr‹_øã
 > 10) {

1606 
hó…h_sc‹e
 -= 15;

1607 } i‡(
tx_îr‹_øã
 > 5) {

1608 
hó…h_sc‹e
 -= 5;

1612 i‡(
nic
->
rx_∑ckës
 > 0) {

1613 
uöt32_t
 
rx_îr‹_øã
 = (
nic
->
rx_îr‹s
 * 100Ë/Çic->
rx_∑ckës
;

1614 i‡(
rx_îr‹_øã
 > 10) {

1615 
hó…h_sc‹e
 -= 15;

1616 } i‡(
rx_îr‹_øã
 > 5) {

1617 
hó…h_sc‹e
 -= 5;

1622 i‡(!
nic
->
lök_up
) {

1623 
hó…h_sc‹e
 -= 20;

1628 i‡(
a˘ive_nics
 == 0) {

1629 
	`LOG_ERROR
("Noáctive NICsávailable - critical system failure");

1634 i‡(
hó…h_sc‹e
 >= 0) {

1635 
	`LOG_DEBUG
("H¨dw¨êhó…h: EXCELLENT (sc‹e: %d)", 
hó…h_sc‹e
);

1636 } i‡(
hó…h_sc‹e
 >= -20) {

1637 
	`LOG_INFO
("H¨dw¨êhó…h: GOOD (sc‹e: %d)", 
hó…h_sc‹e
);

1638 } i‡(
hó…h_sc‹e
 >= -50) {

1639 
	`LOG_WARNING
("H¨dw¨êhó…h: FAIR (sc‹e: %d)", 
hó…h_sc‹e
);

1641 
	`LOG_ERROR
("H¨dw¨êhó…h: POOR (sc‹e: %d)", 
hó…h_sc‹e
);

1644  
hó…h_sc‹e
;

1645 
	}
}

1650 
	$h¨dw¨e_¥öt_ªcovîy_°©s
() {

1651 
	`LOG_INFO
("=== Hardware Recovery Statistics ===");

1652 
	`LOG_INFO
("TŸÆ Faûuªs: %lu", 
g_îr‹_ªcovîy_°©e
.
tŸÆ_Áûuªs
);

1653 
	`LOG_INFO
("Suc˚ssfu»Recovîõs: %lu", 
g_îr‹_ªcovîy_°©e
.
suc˚ssful_ªcovîõs
);

1654 
	`LOG_INFO
("Faûovî A˘ive: %s", 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 ? "YES" : "NO");

1656 i‡(
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
 >= 0) {

1657 
	`LOG_INFO
("Prim¨y NIC: %d", 
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
);

1659 i‡(
g_îr‹_ªcovîy_°©e
.
backup_nic
 >= 0) {

1660 
	`LOG_INFO
("Backu∞NIC: %d", 
g_îr‹_ªcovîy_°©e
.
backup_nic
);

1663 
i
 = 0; i < 
g_num_nics
; i++) {

1664 i‡(
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
i
] > 0 ||

1665 
g_îr‹_ªcovîy_°©e
.
ªcovîy_©ãm±s
[
i
] > 0) {

1667 
	`LOG_INFO
("NIC %d: Consecutive Errors=%lu, Recovery Attempts=%lu",

1668 
i
, 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[i],

1669 
g_îr‹_ªcovîy_°©e
.
ªcovîy_©ãm±s
[
i
]);

1673 
	`LOG_INFO
("=== End Recovery Statistics ===");

1674 
	}
}

1679 
	$h¨dw¨e_ª£t_ªcovîy_°©s
() {

1680 
	`LOG_INFO
("Resetting hardwareÑecovery statistics");

1681 
	`mem£t
(&
g_îr‹_ªcovîy_°©e
, 0, (g_error_recovery_state));

1682 
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
 = -1;

1683 
g_îr‹_ªcovîy_°©e
.
backup_nic
 = -1;

1684 
	}
}

1690 
boﬁ
 
	$h¨dw¨e_is_Áûuª_ªsûõ¡
() {

1691 
a˘ive_nics
 = 0;

1693 
i
 = 0; i < 
g_num_nics
; i++) {

1694 i‡((
g_nic_öfos
[
i
].
°©us
 & 
NIC_STATUS_ACTIVE
) &&

1695 (
g_nic_öfos
[
i
].
°©us
 & 
NIC_STATUS_LINK_UP
)) {

1696 
a˘ive_nics
++;

1700  
a˘ive_nics
 >= 2;

1701 
	}
}

1713 
	$h¨dw¨e_ã°_c⁄cuºít_›î©i⁄s
(
uöt32_t
 
ã°_duøti⁄_ms
) {

1714 
uöt8_t
 
ã°_∑ckë
[] = {

1722 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

1723 
uöt32_t
 
tx_cou¡s
[
MAX_NICS
] = {0};

1724 
uöt32_t
 
rx_cou¡s
[
MAX_NICS
] = {0};

1725 
uöt32_t
 
îr‹s
[
MAX_NICS
] = {0};

1726 
a˘ive_nics
 = 0;

1728 
	`LOG_INFO
("Sèπög c⁄cuºíàmu…i-NIC o≥øti⁄†ã° (duøti⁄: %lu ms)", 
ã°_duøti⁄_ms
);

1731 
i
 = 0; i < 
g_num_nics
; i++) {

1732 i‡(
	`h¨dw¨e_is_nic_a˘ive
(
i
)) {

1733 
a˘ive_nics
++;

1737 i‡(
a˘ive_nics
 < 2) {

1738 
	`LOG_ERROR
("C⁄cuºíàã°Ñequúe†©Üó° 2á˘ivêNIC†(found %d)", 
a˘ive_nics
);

1739  
ERROR_INVALID_PARAM
;

1743 (
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
Ë< 
ã°_duøti⁄_ms
) {

1744 
nic_idx
 = 0;Çic_idx < 
g_num_nics
;Çic_idx++) {

1745 i‡(!
	`h¨dw¨e_is_nic_a˘ive
(
nic_idx
)) {

1749 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_idx
);

1750 i‡(!
nic
) {

1755 i‡((
tx_cou¡s
[
nic_idx
] % 10) ==Çic_idx % 10) {

1756 
tx_ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
ã°_∑ckë
, (test_packet));

1757 i‡(
tx_ªsu…
 =
SUCCESS
) {

1758 
tx_cou¡s
[
nic_idx
]++;

1760 
îr‹s
[
nic_idx
]++;

1765 
uöt8_t
 
rx_buf„r
[256];

1766 
uöt16_t
 
rx_Àngth
 = (
rx_buf„r
);

1767 
rx_ªsu…
 = 
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
rx_buf„r
, &
rx_Àngth
);

1768 i‡(
rx_ªsu…
 =
SUCCESS
) {

1769 
rx_cou¡s
[
nic_idx
]++;

1770 } i‡(
rx_ªsu…
 !
ERROR_NO_DATA
) {

1771 
îr‹s
[
nic_idx
]++;

1775 vﬁ©ûê
i
 = 0; i < 100; i++);

1779 
i
 = 0; i < 
g_num_nics
; i++) {

1780 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

1781 
Áûuª
 = 
	`h¨dw¨e_dëe˘_Áûuª
(&
g_nic_öfos
[
i
]);

1782 i‡(
Áûuª
 !
HW_FAILURE_NONE
) {

1783 
	`LOG_WARNING
("Hardware failure detected on NIC %d during concurrentÅest:Åype %d",

1784 
i
, 
Áûuª
);

1785 
îr‹s
[
i
]++;

1792 
	`LOG_INFO
("=== Concurrent Operations Test Results ===");

1793 
i
 = 0; i < 
g_num_nics
; i++) {

1794 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

1795 
	`LOG_INFO
("NIC %d: TX=%lu, RX=%lu, Errors=%lu",

1796 
i
, 
tx_cou¡s
[i], 
rx_cou¡s
[i], 
îr‹s
[i]);

1799 
uöt32_t
 
tŸÆ_›s
 = 
tx_cou¡s
[
i
] + 
rx_cou¡s
[i];

1800 i‡(
tŸÆ_›s
 > 0) {

1801 
uöt32_t
 
îr‹_øã
 = (
îr‹s
[
i
] * 100Ë/ 
tŸÆ_›s
;

1802 i‡(
îr‹_øã
 > 5) {

1803 
	`LOG_WARNING
("HighÉº‹Ñ©ê⁄ NIC %d: %lu%%", 
i
, 
îr‹_øã
);

1809 
	`LOG_INFO
("Concurrent operationsÅest completed successfully");

1810  
SUCCESS
;

1811 
	}
}

1818 
	$h¨dw¨e_ã°_lﬂd_bÆ™cög
(
uöt32_t
 
num_∑ckës
) {

1819 
uöt8_t
 
ã°_∑ckë
[] = {

1826 
uöt32_t
 
nic_∑ckë_cou¡s
[
MAX_NICS
] = {0};

1827 
uöt32_t
 
nic_îr‹_cou¡s
[
MAX_NICS
] = {0};

1828 
a˘ive_nics
 = 0;

1829 
√xt_nic
 = 0;

1831 
	`LOG_INFO
("SèπögÜﬂd bÆ™cögÅe° wôh %luÖackës", 
num_∑ckës
);

1834 
i
 = 0; i < 
g_num_nics
; i++) {

1835 i‡(
	`h¨dw¨e_is_nic_a˘ive
(
i
)) {

1836 
a˘ive_nics
++;

1840 i‡(
a˘ive_nics
 < 2) {

1841 
	`LOG_ERROR
("Lﬂd bÆ™cögÅe°Ñequúe†©Üó° 2á˘ivêNIC†(found %d)", 
a˘ive_nics
);

1842  
ERROR_INVALID_PARAM
;

1846 
uöt32_t
 
pkt
 = 0;Ökà< 
num_∑ckës
;Ökt++) {

1848 
©ãm±s
 = 0;

1849 
©ãm±s
 < 
g_num_nics
) {

1850 i‡(
	`h¨dw¨e_is_nic_a˘ive
(
√xt_nic
)) {

1853 
√xt_nic
 = (√xt_ni¯+ 1Ë% 
g_num_nics
;

1854 
©ãm±s
++;

1857 i‡(
©ãm±s
 >
g_num_nics
) {

1858 
	`LOG_ERROR
("Noáctive NICs found duringÜoad balancingÅest");

1859  
ERROR_HARDWARE
;

1863 
ã°_∑ckë
[—e°_∑ckëË- 1] = (
uöt8_t
)(
pkt
 & 0xFF);

1866 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
√xt_nic
);

1867 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
ã°_∑ckë
, (test_packet));

1869 i‡(
ªsu…
 =
SUCCESS
) {

1870 
nic_∑ckë_cou¡s
[
√xt_nic
]++;

1872 
nic_îr‹_cou¡s
[
√xt_nic
]++;

1873 
	`LOG_DEBUG
("Packë %lu faûed o¿NIC %d: %d", 
pkt
, 
√xt_nic
, 
ªsu…
);

1877 
√xt_nic
 = (√xt_ni¯+ 1Ë% 
g_num_nics
;

1880 i‡((
pkt
 % 100) == 0) {

1881 vﬁ©ûê
i
 = 0; i < 1000; i++);

1886 
	`LOG_INFO
("=== Load Balancing Test Results ===");

1887 
uöt32_t
 
tŸÆ_£¡
 = 0;

1888 
uöt32_t
 
tŸÆ_îr‹s
 = 0;

1889 
uöt32_t
 
mö_∑ckës
 = 
UINT32_MAX
;

1890 
uöt32_t
 
max_∑ckës
 = 0;

1892 
i
 = 0; i < 
g_num_nics
; i++) {

1893 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

1894 
	`LOG_INFO
("NIC %d: Sít=%lu, Eº‹s=%lu", 
i
, 
nic_∑ckë_cou¡s
[i], 
nic_îr‹_cou¡s
[i]);

1896 
tŸÆ_£¡
 +
nic_∑ckë_cou¡s
[
i
];

1897 
tŸÆ_îr‹s
 +
nic_îr‹_cou¡s
[
i
];

1899 i‡(
	`h¨dw¨e_is_nic_a˘ive
(
i
)) {

1900 i‡(
nic_∑ckë_cou¡s
[
i
] < 
mö_∑ckës
) min_packets =Çic_packet_counts[i];

1901 i‡(
nic_∑ckë_cou¡s
[
i
] > 
max_∑ckës
) max_packets =Çic_packet_counts[i];

1907 i‡(
mö_∑ckës
 !
UINT32_MAX
 && 
max_∑ckës
 > 0) {

1908 
uöt32_t
 
bÆ™˚_øtio
 = (
mö_∑ckës
 * 100Ë/ 
max_∑ckës
;

1909 
	`LOG_INFO
("Load balance quality: %lu%% (min=%lu, max=%lu)",

1910 
bÆ™˚_øtio
, 
mö_∑ckës
, 
max_∑ckës
);

1912 i‡(
bÆ™˚_øtio
 < 80) {

1913 
	`LOG_WARNING
("PoorÜoad balancing detected");

1917 
uöt32_t
 
îr‹_øã
 = (
tŸÆ_îr‹s
 * 100Ë/ 
num_∑ckës
;

1918 
	`LOG_INFO
("OvîÆl: Sít=%lu/%lu, Eº‹Ñ©e=%lu%%", 
tŸÆ_£¡
, 
num_∑ckës
, 
îr‹_øã
);

1920 i‡(
îr‹_øã
 > 5) {

1921 
	`LOG_ERROR
("HighÉº‹Ñ©êdurögÜﬂd bÆ™cögÅe°: %lu%%", 
îr‹_øã
);

1922  
ERROR_HARDWARE
;

1925 
	`LOG_INFO
("Load balancingÅest completed successfully");

1926  
SUCCESS
;

1927 
	}
}

1934 
	$h¨dw¨e_ã°_Áûovî
(
¥im¨y_nic
) {

1935 
uöt8_t
 
ã°_∑ckë
[] = {

1942 
nic_öfo_t
 *
¥im¨y
;

1943 
backup_nic
 = -1;

1944 
uöt32_t
 
‹igöÆ_°©us
;

1945 
uöt32_t
 
∑ckës_bef‹e_Áûovî
 = 0;

1946 
uöt32_t
 
∑ckës_a·î_Áûovî
 = 0;

1947 
uöt32_t
 
Áûovî_time_ms
;

1948 
uöt32_t
 
°¨t_time
;

1950 
	`LOG_INFO
("Sèπög faûovîÅe° wôhÖrim¨y NIC %d", 
¥im¨y_nic
);

1953 
¥im¨y
 = 
	`h¨dw¨e_gë_nic
(
¥im¨y_nic
);

1954 i‡(!
¥im¨y
 || !
	`h¨dw¨e_is_nic_a˘ive
(
¥im¨y_nic
)) {

1955 
	`LOG_ERROR
("Prim¨y NIC %d i†nŸá˘ivêf‹ faûovîÅe°", 
¥im¨y_nic
);

1956  
ERROR_INVALID_PARAM
;

1960 
i
 = 0; i < 
g_num_nics
; i++) {

1961 i‡(
i
 !
¥im¨y_nic
 && 
	`h¨dw¨e_is_nic_a˘ive
(i)) {

1962 
backup_nic
 = 
i
;

1967 i‡(
backup_nic
 == -1) {

1968 
	`LOG_ERROR
("No backup NICávailable for failoverÅest");

1969  
ERROR_INVALID_PARAM
;

1972 
	`LOG_INFO
("Usög NIC %dá†backu∞f‹ faûovîÅe°", 
backup_nic
);

1975 
	`LOG_INFO
("TestingÇormal operation before failover...");

1976 
i
 = 0; i < 50; i++) {

1977 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
¥im¨y
, 
ã°_∑ckë
, (test_packet));

1978 i‡(
ªsu…
 =
SUCCESS
) {

1979 
∑ckës_bef‹e_Áûovî
++;

1983 
	`LOG_INFO
("Síà%luÖackë†bef‹êÁûovî", 
∑ckës_bef‹e_Áûovî
);

1986 
	`LOG_INFO
("SimulatingÖrimary NIC failure...");

1987 
‹igöÆ_°©us
 = 
¥im¨y
->
°©us
;

1988 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

1991 
¥im¨y
->
°©us
 &~
NIC_STATUS_ACTIVE
;

1992 
¥im¨y
->
°©us
 |
NIC_STATUS_ERROR
;

1995 
Áûovî_ªsu…
 = 
	`h¨dw¨e_©ãm±_Áûovî
(
¥im¨y_nic
);

1996 
Áûovî_time_ms
 = 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
;

1998 i‡(
Áûovî_ªsu…
 !
SUCCESS
) {

1999 
	`LOG_ERROR
("Faûovîáâem± faûed: %d", 
Áûovî_ªsu…
);

2001 
¥im¨y
->
°©us
 = 
‹igöÆ_°©us
;

2002  
Áûovî_ªsu…
;

2005 
	`LOG_INFO
("Faûovî com∂ëed i¿%lu ms", 
Áûovî_time_ms
);

2008 
	`LOG_INFO
("Testing operationáfter failover...");

2009 
nic_öfo_t
 *
backup
 = 
	`h¨dw¨e_gë_nic
(
backup_nic
);

2011 
i
 = 0; i < 50; i++) {

2012 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
backup
, 
ã°_∑ckë
, (test_packet));

2013 i‡(
ªsu…
 =
SUCCESS
) {

2014 
∑ckës_a·î_Áûovî
++;

2018 
	`LOG_INFO
("Síà%luÖackë†a·î faûovî", 
∑ckës_a·î_Áûovî
);

2021 
	`LOG_INFO
("TestingÖrimary NICÑecovery...");

2022 
¥im¨y
->
°©us
 = 
‹igöÆ_°©us
;

2025 
ªcovîy_ªsu…
 = 
	`h¨dw¨e_vÆid©e_ªcovîy
(
¥im¨y
);

2026 i‡(
ªcovîy_ªsu…
 =
SUCCESS
) {

2027 
	`LOG_INFO
("Primary NICÑecovery successful");

2029 
	`LOG_WARNING
("Prim¨y NICÑecovîy faûed: %d", 
ªcovîy_ªsu…
);

2033 i‡(
ªcovîy_ªsu…
 =
SUCCESS
) {

2034 
	`LOG_INFO
("Testing failbackÅoÖrimary NIC...");

2035 
i
 = 0; i < 10; i++) {

2036 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
¥im¨y
, 
ã°_∑ckë
, (test_packet));

2037 i‡(
ªsu…
 !
SUCCESS
) {

2038 
	`LOG_WARNING
("FaûbackÅe°Öackë %d faûed: %d", 
i
, 
ªsu…
);

2044 
	`LOG_INFO
("=== Failover Test Results ===");

2045 
	`LOG_INFO
("Packë†bef‹êÁûovî: %lu/50", 
∑ckës_bef‹e_Áûovî
);

2046 
	`LOG_INFO
("Packë†a·î faûovî: %lu/50", 
∑ckës_a·î_Áûovî
);

2047 
	`LOG_INFO
("FaûovîÅime: %lu ms", 
Áûovî_time_ms
);

2048 
	`LOG_INFO
("Prim¨yÑecovîy: %s", (
ªcovîy_ªsu…
 =
SUCCESS
) ? "SUCCESS" : "FAILED");

2051 i‡(
∑ckës_bef‹e_Áûovî
 < 40) {

2052 
	`LOG_WARNING
("PoorÖrimary NICÖerformance before failover");

2055 i‡(
∑ckës_a·î_Áûovî
 < 40) {

2056 
	`LOG_WARNING
("Poor backup NICÖerformanceáfter failover");

2059 i‡(
Áûovî_time_ms
 > 1000) {

2060 
	`LOG_WARNING
("Slow faûovîÅime: %lu ms", 
Áûovî_time_ms
);

2063 
	`LOG_INFO
("FailoverÅest completed successfully");

2064  
SUCCESS
;

2065 
	}
}

2072 
	$h¨dw¨e_ã°_ªsour˚_c⁄ã¡i⁄
(
uöt32_t
 
num_ôî©i⁄s
) {

2073 
uöt8_t
 
ã°_∑ckës
[
MAX_NICS
][64];

2074 
uöt32_t
 
suc˚ss_cou¡s
[
MAX_NICS
] = {0};

2075 
uöt32_t
 
c⁄ã¡i⁄_îr‹s
[
MAX_NICS
] = {0};

2076 
uöt32_t
 
timeout_îr‹s
[
MAX_NICS
] = {0};

2078 
	`LOG_INFO
("SèπögÑesour˚ c⁄ã¡i⁄Åe° (%lu iãøti⁄s)", 
num_ôî©i⁄s
);

2081 
i
 = 0; i < 
g_num_nics
; i++) {

2082 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

2084 
	`mem£t
(
ã°_∑ckës
[
i
], 0, (test_packets[i]));

2086 
ã°_∑ckës
[
i
][0] = 0x00;Åest_packets[i][1] = 0x11;Åest_packets[i][2] = 0x22;

2087 
ã°_∑ckës
[
i
][3] = 0x33;Åest_packets[i][4] = 0x44;Åest_packets[i][5] = 0x55;

2089 
ã°_∑ckës
[
i
][6] = 0x00;Åest_packets[i][7] = 0x20;Åest_packets[i][8] = 0xAF;

2090 
ã°_∑ckës
[
i
][9] = 0x12;Åest_packets[i][10] = 0x34;Åest_packets[i][11] = 0x50 + i;

2092 
ã°_∑ckës
[
i
][12] = 0x08;Åest_packets[i][13] = 0x00;

2094 
	`•rötf
((*)&
ã°_∑ckës
[
i
][14], \"CONTENTION_NIC_%d\", i);

2099 
uöt32_t
 
ôî
 = 0; iã∏< 
num_ôî©i⁄s
; iter++) {

2100 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

2103 
nic_idx
 = 0;Çic_idx < 
g_num_nics
;Çic_idx++) {

2104 i‡(!
	`h¨dw¨e_is_nic_a˘ive
(
nic_idx
)) {

2108 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_idx
);

2109 i‡(!
nic
) {

2114 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
ã°_∑ckës
[
nic_idx
], (test_packets[nic_idx]));

2116 i‡(
ªsu…
 =
SUCCESS
) {

2117 
suc˚ss_cou¡s
[
nic_idx
]++;

2118 } i‡(
ªsu…
 =
ERROR_TIMEOUT
) {

2119 
timeout_îr‹s
[
nic_idx
]++;

2120 } i‡(
ªsu…
 =
ERROR_BUSY
) {

2121 
c⁄ã¡i⁄_îr‹s
[
nic_idx
]++;

2125 
uöt8_t
 
rx_buf„r
[256];

2126 
uöt16_t
 
rx_Àngth
 = (
rx_buf„r
);

2127 
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
rx_buf„r
, &
rx_Àngth
);

2130 
uöt32_t
 
ôî©i⁄_time
 = 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
;

2131 i‡(
ôî©i⁄_time
 > 100) {

2132 
	`LOG_DEBUG
("Slow iãøti⁄ %lu: %lu ms", 
ôî
, 
ôî©i⁄_time
);

2136 i‡((
ôî
 % 100) == 0) {

2137 vﬁ©ûê
i
 = 0; i < 5000; i++);

2142 
	`LOG_INFO
("=== Resource Contention Test Results ===");

2143 
uöt32_t
 
tŸÆ_©ãm±s
 = 0;

2144 
uöt32_t
 
tŸÆ_suc˚s£s
 = 0;

2145 
uöt32_t
 
tŸÆ_c⁄ã¡i⁄s
 = 0;

2146 
uöt32_t
 
tŸÆ_timeouts
 = 0;

2148 
i
 = 0; i < 
g_num_nics
; i++) {

2149 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

2150 
uöt32_t
 
©ãm±s
 = 
suc˚ss_cou¡s
[
i
] + 
c⁄ã¡i⁄_îr‹s
[i] + 
timeout_îr‹s
[i];

2152 
	`LOG_INFO
("NIC %d: Success=%lu, Contention=%lu, Timeout=%lu (of %luáttempts)",

2153 
i
, 
suc˚ss_cou¡s
[i], 
c⁄ã¡i⁄_îr‹s
[i], 
timeout_îr‹s
[i], 
©ãm±s
);

2155 i‡(
©ãm±s
 > 0) {

2156 
uöt32_t
 
suc˚ss_øã
 = (
suc˚ss_cou¡s
[
i
] * 100Ë/ 
©ãm±s
;

2157 
uöt32_t
 
c⁄ã¡i⁄_øã
 = (
c⁄ã¡i⁄_îr‹s
[
i
] * 100Ë/ 
©ãm±s
;

2159 
	`LOG_INFO
(" SuccessÑate: %lu%%, ContentionÑate: %lu%%",

2160 
suc˚ss_øã
, 
c⁄ã¡i⁄_øã
);

2162 i‡(
c⁄ã¡i⁄_øã
 > 10) {

2163 
	`LOG_WARNING
("High c⁄ã¡i⁄Ñ©ê⁄ NIC %d: %lu%%", 
i
, 
c⁄ã¡i⁄_øã
);

2167 
tŸÆ_©ãm±s
 +
©ãm±s
;

2168 
tŸÆ_suc˚s£s
 +
suc˚ss_cou¡s
[
i
];

2169 
tŸÆ_c⁄ã¡i⁄s
 +
c⁄ã¡i⁄_îr‹s
[
i
];

2170 
tŸÆ_timeouts
 +
timeout_îr‹s
[
i
];

2174 i‡(
tŸÆ_©ãm±s
 > 0) {

2175 
uöt32_t
 
ovîÆl_suc˚ss_øã
 = (
tŸÆ_suc˚s£s
 * 100Ë/ 
tŸÆ_©ãm±s
;

2176 
uöt32_t
 
ovîÆl_c⁄ã¡i⁄_øã
 = (
tŸÆ_c⁄ã¡i⁄s
 * 100Ë/ 
tŸÆ_©ãm±s
;

2178 
	`LOG_INFO
("Overall: SuccessÑate=%lu%%, ContentionÑate=%lu%%",

2179 
ovîÆl_suc˚ss_øã
, 
ovîÆl_c⁄ã¡i⁄_øã
);

2181 i‡(
ovîÆl_c⁄ã¡i⁄_øã
 > 15) {

2182 
	`LOG_ERROR
("Ex˚ssivêªsour˚ c⁄ã¡i⁄ dëe˘ed: %lu%%", 
ovîÆl_c⁄ã¡i⁄_øã
);

2183  
ERROR_HARDWARE
;

2187 
	`LOG_INFO
("Resource contentionÅest completed successfully");

2188  
SUCCESS
;

2189 
	}
}

2196 
	$h¨dw¨e_ã°_mu…i_nic_≥rf‹m™˚
(
uöt32_t
 
ã°_duøti⁄_ms
) {

2197 
uöt8_t
 
ã°_∑ckë
[1518];

2198 
uöt32_t
 
°¨t_time
;

2199 
uöt32_t
 
tx_cou¡s
[
MAX_NICS
] = {0};

2200 
uöt32_t
 
rx_cou¡s
[
MAX_NICS
] = {0};

2201 
uöt32_t
 
îr‹_cou¡s
[
MAX_NICS
] = {0};

2202 
uöt32_t
 
tŸÆ_byãs_tx
 = 0;

2203 
uöt32_t
 
tŸÆ_byãs_rx
 = 0;

2205 
	`LOG_INFO
("Sèπög mu…i-NICÖîf‹m™˚Åe° (duøti⁄: %lu ms)", 
ã°_duøti⁄_ms
);

2208 
	`mem£t
(
ã°_∑ckë
, 0xAA, (test_packet));

2210 
	`mem£t
(
ã°_∑ckë
, 0xFF, 6);

2211 
ã°_∑ckë
[6] = 0x00;Åest_packet[7] = 0x20;Åest_packet[8] = 0xAF;

2212 
ã°_∑ckë
[9] = 0x12;Åest_packet[10] = 0x34;Åest_packet[11] = 0x56;

2213 
ã°_∑ckë
[12] = 0x08;Åest_packet[13] = 0x00;

2215 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

2218 (
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
Ë< 
ã°_duøti⁄_ms
) {

2219 
nic_idx
 = 0;Çic_idx < 
g_num_nics
;Çic_idx++) {

2220 i‡(!
	`h¨dw¨e_is_nic_a˘ive
(
nic_idx
)) {

2224 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_idx
);

2225 i‡(!
nic
) {

2230 
bur°
 = 0; burst < 5; burst++) {

2231 
tx_ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
ã°_∑ckë
, (test_packet));

2232 i‡(
tx_ªsu…
 =
SUCCESS
) {

2233 
tx_cou¡s
[
nic_idx
]++;

2234 
tŸÆ_byãs_tx
 +(
ã°_∑ckë
);

2236 
îr‹_cou¡s
[
nic_idx
]++;

2241 
uöt8_t
 
rx_buf„r
[1518];

2242 
uöt16_t
 
rx_Àngth
 = (
rx_buf„r
);

2243 
rx_ªsu…
 = 
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
rx_buf„r
, &
rx_Àngth
);

2244 i‡(
rx_ªsu…
 =
SUCCESS
) {

2245 
rx_cou¡s
[
nic_idx
]++;

2246 
tŸÆ_byãs_rx
 +
rx_Àngth
;

2247 } i‡(
rx_ªsu…
 !
ERROR_NO_DATA
) {

2248 
îr‹_cou¡s
[
nic_idx
]++;

2253 
uöt32_t
 
a˘uÆ_duøti⁄
 = 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
;

2256 
	`LOG_INFO
("=== Multi-NIC Performance Test Results ===");

2257 
	`LOG_INFO
("Te° duøti⁄: %lu ms", 
a˘uÆ_duøti⁄
);

2259 
uöt32_t
 
tŸÆ_tx_∑ckës
 = 0;

2260 
uöt32_t
 
tŸÆ_rx_∑ckës
 = 0;

2261 
uöt32_t
 
tŸÆ_îr‹s
 = 0;

2263 
i
 = 0; i < 
g_num_nics
; i++) {

2264 i‡(
	`h¨dw¨e_is_nic_¥e£¡
(
i
)) {

2265 
uöt32_t
 
nic_tx_øã
 = (
tx_cou¡s
[
i
] * 1000Ë/ 
a˘uÆ_duøti⁄
;

2266 
uöt32_t
 
nic_rx_øã
 = (
rx_cou¡s
[
i
] * 1000Ë/ 
a˘uÆ_duøti⁄
;

2268 
	`LOG_INFO
("NIC %d: TX=%luÖps, RX=%luÖps, Errors=%lu",

2269 
i
, 
nic_tx_øã
, 
nic_rx_øã
, 
îr‹_cou¡s
[i]);

2271 
tŸÆ_tx_∑ckës
 +
tx_cou¡s
[
i
];

2272 
tŸÆ_rx_∑ckës
 +
rx_cou¡s
[
i
];

2273 
tŸÆ_îr‹s
 +
îr‹_cou¡s
[
i
];

2278 
uöt32_t
 
tŸÆ_tx_øã
 = (
tŸÆ_tx_∑ckës
 * 1000Ë/ 
a˘uÆ_duøti⁄
;

2279 
uöt32_t
 
tŸÆ_rx_øã
 = (
tŸÆ_rx_∑ckës
 * 1000Ë/ 
a˘uÆ_duøti⁄
;

2280 
uöt32_t
 
tx_throughput_kbps
 = (
tŸÆ_byãs_tx
 * 8Ë/ 
a˘uÆ_duøti⁄
;

2281 
uöt32_t
 
rx_throughput_kbps
 = (
tŸÆ_byãs_rx
 * 8Ë/ 
a˘uÆ_duøti⁄
;

2283 
	`LOG_INFO
("=== Overall Performance ===");

2284 
	`LOG_INFO
("TX R©e: %luÖackës/£¯(%lu Kbps)", 
tŸÆ_tx_øã
, 
tx_throughput_kbps
);

2285 
	`LOG_INFO
("RX R©e: %luÖackës/£¯(%lu Kbps)", 
tŸÆ_rx_øã
, 
rx_throughput_kbps
);

2286 
	`LOG_INFO
("TŸÆÉº‹s: %lu", 
tŸÆ_îr‹s
);

2289 
uöt32_t
 
ex≥˘ed_mö_tx_øã
 = 1000;

2290 i‡(
tŸÆ_tx_øã
 < 
ex≥˘ed_mö_tx_øã
) {

2291 
	`LOG_WARNING
("Low TXÖerformance: %luÖps (expected > %luÖps)",

2292 
tŸÆ_tx_øã
, 
ex≥˘ed_mö_tx_øã
);

2295 
uöt32_t
 
tŸÆ_›î©i⁄s
 = 
tŸÆ_tx_∑ckës
 + 
tŸÆ_rx_∑ckës
;

2296 i‡(
tŸÆ_›î©i⁄s
 > 0) {

2297 
uöt32_t
 
îr‹_øã
 = (
tŸÆ_îr‹s
 * 100Ë/ 
tŸÆ_›î©i⁄s
;

2298 i‡(
îr‹_øã
 > 3) {

2299 
	`LOG_ERROR
("HighÉº‹Ñ©êdurögÖîf‹m™˚Åe°: %lu%%", 
îr‹_øã
);

2300  
ERROR_HARDWARE
;

2304 
	`LOG_INFO
("Multi-NICÖerformanceÅest completed successfully");

2305  
SUCCESS
;

2306 
	}
}

2312 
	$h¨dw¨e_run_mu…i_nic_ã°s
() {

2313 
ã°s_∑s£d
 = 0;

2314 
ã°s_Áûed
 = 0;

2315 
ªsu…
;

2317 
	`LOG_INFO
("=== Starting Comprehensive Multi-NIC Test Suite ===");

2320 i‡(
g_num_nics
 < 2) {

2321 
	`LOG_WARNING
("Mu…i-NICÅe°†ªquúê©Üó° 2 NIC†(found %d)", 
g_num_nics
);

2322  
ERROR_INVALID_PARAM
;

2326 
	`LOG_INFO
("Running concurrent operationsÅest...");

2327 
ªsu…
 = 
	`h¨dw¨e_ã°_c⁄cuºít_›î©i⁄s
(5000);

2328 i‡(
ªsu…
 =
SUCCESS
) {

2329 
ã°s_∑s£d
++;

2330 
	`LOG_INFO
("Concurrent operationsÅest PASSED");

2332 
ã°s_Áûed
++;

2333 
	`LOG_ERROR
("C⁄cuºíà›î©i⁄†ã° FAILED: %d", 
ªsu…
);

2337 
	`LOG_INFO
("RunningÜoad balancingÅest...");

2338 
ªsu…
 = 
	`h¨dw¨e_ã°_lﬂd_bÆ™cög
(1000);

2339 i‡(
ªsu…
 =
SUCCESS
) {

2340 
ã°s_∑s£d
++;

2341 
	`LOG_INFO
("Load balancingÅest PASSED");

2343 
ã°s_Áûed
++;

2344 
	`LOG_ERROR
("Lﬂd bÆ™cögÅe° FAILED: %d", 
ªsu…
);

2348 i‡(
	`h¨dw¨e_is_Áûuª_ªsûõ¡
()) {

2349 
	`LOG_INFO
("Running failoverÅest...");

2350 
ªsu…
 = 
	`h¨dw¨e_ã°_Áûovî
(0);

2351 i‡(
ªsu…
 =
SUCCESS
) {

2352 
ã°s_∑s£d
++;

2353 
	`LOG_INFO
("FailoverÅest PASSED");

2355 
ã°s_Áûed
++;

2356 
	`LOG_ERROR
("FaûovîÅe° FAILED: %d", 
ªsu…
);

2359 
	`LOG_INFO
("Skipping failoverÅest - systemÇot failureÑesilient");

2363 
	`LOG_INFO
("RunningÑesource contentionÅest...");

2364 
ªsu…
 = 
	`h¨dw¨e_ã°_ªsour˚_c⁄ã¡i⁄
(500);

2365 i‡(
ªsu…
 =
SUCCESS
) {

2366 
ã°s_∑s£d
++;

2367 
	`LOG_INFO
("Resource contentionÅest PASSED");

2369 
ã°s_Áûed
++;

2370 
	`LOG_ERROR
("Resour˚ c⁄ã¡i⁄Åe° FAILED: %d", 
ªsu…
);

2374 
	`LOG_INFO
("Running multi-NICÖerformanceÅest...");

2375 
ªsu…
 = 
	`h¨dw¨e_ã°_mu…i_nic_≥rf‹m™˚
(10000);

2376 i‡(
ªsu…
 =
SUCCESS
) {

2377 
ã°s_∑s£d
++;

2378 
	`LOG_INFO
("Multi-NICÖerformanceÅest PASSED");

2380 
ã°s_Áûed
++;

2381 
	`LOG_ERROR
("Mu…i-NICÖîf‹m™˚Åe° FAILED: %d", 
ªsu…
);

2385 
	`LOG_INFO
("=== Multi-NIC Test Suite Summary ===");

2386 
	`LOG_INFO
("Te°†∑s£d: %d", 
ã°s_∑s£d
);

2387 
	`LOG_INFO
("Te°†Áûed: %d", 
ã°s_Áûed
);

2389 i‡(
ã°s_Áûed
 == 0) {

2390 
	`LOG_INFO
("=== ALL MULTI-NIC TESTS PASSED ===");

2391  
SUCCESS
;

2393 
	`LOG_ERROR
("=== SOME MULTI-NIC TESTS FAILED ===");

2394  
ERROR_HARDWARE
;

2396 
	}
}

2406 
	$h¨dw¨e_öô_îr‹_h™dlög
() {

2407 
	`LOG_INFO
("Initializing hardwareÉrror handling integration");

2410 
ªsu…
 = 
	`îr‹_h™dlög_öô
();

2411 i‡(
ªsu…
 !
SUCCESS
) {

2412 
	`LOG_ERROR
("FaûedÅÿöôülizêîr‹ h™dlög sy°em: %d", 
ªsu…
);

2413  
ªsu…
;

2416 
	`LOG_INFO
("HardwareÉrror handling integration initialized successfully");

2417  
SUCCESS
;

2418 
	}
}

2423 
	$h¨dw¨e_˛ónup_îr‹_h™dlög
() {

2424 
	`LOG_INFO
("Cleaning up hardwareÉrror handling integration");

2427 
i
 = 0; i < 
g_num_nics
; i++) {

2428 i‡(
g_nic_öfos
[
i
].
îr‹_c⁄ãxt
) {

2429 
	`h¨dw¨e_de°roy_îr‹_c⁄ãxt
(&
g_nic_öfos
[
i
]);

2434 
	`îr‹_h™dlög_˛ónup
();

2436 
	`LOG_INFO
("HardwareÉrror handling integration cleanup completed");

2437 
	}
}

2444 
	$h¨dw¨e_¸óã_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
) {

2445 i‡(!
nic
) {

2446  
ERROR_INVALID_PARAM
;

2449 
	`LOG_INFO
("Cª©ögÉº‹ c⁄ãxàf‹ NIC %d (ty≥: %d)", 
nic
->
ödex
,Çic->
ty≥
);

2452 
nic_c⁄ãxt_t
 *
˘x
 = 
	`mÆloc
((nic_context_t));

2453 i‡(!
˘x
) {

2454 
	`LOG_ERROR
("FaûedÅÿÆloˇãÉº‹ c⁄ãxàf‹ NIC %d", 
nic
->
ödex
);

2455  
ERROR_NO_MEMORY
;

2459 
	`mem£t
(
˘x
, 0, (
nic_c⁄ãxt_t
));

2462 
	`mem˝y
(&
˘x
->
nic_öfo
, 
nic
, (
nic_öfo_t
));

2465 
	`îr‹_h™dlög_ª£t_°©s
(
˘x
);

2468 
˘x
->
lök_up
 = 
nic
->link_up;

2469 
˘x
->
ªcovîy_°©e
 = 0;

2470 
˘x
->
ªcovîy_°øãgy
 = 
RECOVERY_STRATEGY_NONE
;

2471 
˘x
->
ad≠ãr_dißbÀd
 = 
Ál£
;

2474 
nic
->
îr‹_c⁄ãxt
 = 
˘x
;

2476 
	`LOG_INFO
("Eº‹ c⁄ãxà¸óãd suc˚ssfuŒy f‹ NIC %d", 
nic
->
ödex
);

2477  
SUCCESS
;

2478 
	}
}

2484 
	$h¨dw¨e_de°roy_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
) {

2485 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2489 
	`LOG_INFO
("De°royögÉº‹ c⁄ãxàf‹ NIC %d", 
nic
->
ödex
);

2492 
	`h¨dw¨e_¥öt_îr‹_°©i°ics
(
nic
);

2495 
	`‰ì
(
nic
->
îr‹_c⁄ãxt
);

2496 
nic
->
îr‹_c⁄ãxt
 = 
NULL
;

2498 
	`LOG_INFO
("Eº‹ c⁄ãxàde°royed f‹ NIC %d", 
nic
->
ödex
);

2499 
	}
}

2507 
	$h¨dw¨e_h™dÀ_rx_îr‹
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
rx_°©us
) {

2508 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2509 
	`LOG_ERROR
("Invalid NIC or missingÉrror context for RXÉrror handling");

2510  
ERROR_INVALID_PARAM
;

2514 
nic
->
îr‹_cou¡
++;

2515 
nic
->
rx_îr‹s
++;

2516 
nic
->
œ°_îr‹
 = 
rx_°©us
;

2519 
ªsu…
 = 
	`h™dÀ_rx_îr‹
(
nic
->
îr‹_c⁄ãxt
, 
rx_°©us
);

2522 i‡(
ªsu…
 =
RECOVERY_FATAL
 || 
nic
->
îr‹_c⁄ãxt
->
ad≠ãr_dißbÀd
) {

2523 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

2524 
nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

2525 
	`LOG_CRITICAL
("NIC %d dißbÀd duêtÿÁè»RXÉº‹s", 
nic
->
ödex
);

2528  
ªsu…
;

2529 
	}
}

2537 
	$h¨dw¨e_h™dÀ_tx_îr‹
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
tx_°©us
) {

2538 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2539 
	`LOG_ERROR
("Invalid NIC or missingÉrror context for TXÉrror handling");

2540  
ERROR_INVALID_PARAM
;

2544 
nic
->
îr‹_cou¡
++;

2545 
nic
->
tx_îr‹s
++;

2546 
nic
->
œ°_îr‹
 = 
tx_°©us
;

2549 
ªsu…
 = 
	`h™dÀ_tx_îr‹
(
nic
->
îr‹_c⁄ãxt
, 
tx_°©us
);

2552 i‡(
ªsu…
 =
RECOVERY_FATAL
 || 
nic
->
îr‹_c⁄ãxt
->
ad≠ãr_dißbÀd
) {

2553 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

2554 
nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

2555 
	`LOG_CRITICAL
("NIC %d dißbÀd duêtÿÁè»TXÉº‹s", 
nic
->
ödex
);

2558  
ªsu…
;

2559 
	}
}

2567 
	$h¨dw¨e_h™dÀ_ad≠ãr_îr‹
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
Áûuª_ty≥
) {

2568 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2569 
	`LOG_ERROR
("Invalid NIC or missingÉrror context forádapterÉrror handling");

2570  
ERROR_INVALID_PARAM
;

2574 
nic
->
îr‹_cou¡
++;

2575 
nic
->
œ°_îr‹
 = 
Áûuª_ty≥
;

2578 
ªsu…
 = 
	`h™dÀ_ad≠ãr_îr‹
(
nic
->
îr‹_c⁄ãxt
, 
Áûuª_ty≥
);

2581 i‡(
ªsu…
 =
RECOVERY_FATAL
 || 
nic
->
îr‹_c⁄ãxt
->
ad≠ãr_dißbÀd
) {

2582 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

2583 
nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

2584 
	`LOG_CRITICAL
("NIC %d disabled dueÅo fataládapterÉrror: %s",

2585 
nic
->
ödex
, 
	`ad≠ãr_Áûuª_to_°rög
(
Áûuª_ty≥
));

2588  
ªsu…
;

2589 
	}
}

2596 
	$h¨dw¨e_©ãm±_ªcovîy
(
nic_öfo_t
 *
nic
) {

2597 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2598 
	`LOG_ERROR
("Invalid NIC or missingÉrror context forÑecovery");

2599  
ERROR_INVALID_PARAM
;

2602 
	`LOG_WARNING
("Aâem±ögÑecovîy f‹ NIC %d", 
nic
->
ödex
);

2605 
ªsu…
 = 
	`©ãm±_ad≠ãr_ªcovîy
(
nic
->
îr‹_c⁄ãxt
);

2608 i‡(
ªsu…
 =
RECOVERY_SUCCESS
) {

2609 
nic
->
°©us
 &~
NIC_STATUS_ERROR
;

2610 
nic
->
°©us
 |
NIC_STATUS_ACTIVE
;

2611 
	`LOG_INFO
("Recovîy suc˚ssfu»f‹ NIC %d", 
nic
->
ödex
);

2612 } i‡(
ªsu…
 =
RECOVERY_FATAL
) {

2613 
nic
->
°©us
 |
NIC_STATUS_ERROR
;

2614 
nic
->
°©us
 &~
NIC_STATUS_ACTIVE
;

2615 
	`LOG_CRITICAL
("Recovîy faûed f©Æly f‹ NIC %d", 
nic
->
ödex
);

2617 
	`LOG_WARNING
("RecoveryÖartially successful for NIC %d (result: %d)",

2618 
nic
->
ödex
, 
ªsu…
);

2621  
ªsu…
;

2622 
	}
}

2628 
	$h¨dw¨e_¥öt_îr‹_°©i°ics
(
nic_öfo_t
 *
nic
) {

2629 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2630 
	`¥ötf
("NoÉrror statisticsávailable for NIC\n");

2634 
	`¥ötf
("\n==H¨dw¨êEº‹ Sèti°ic†f‹ NIC %d ===\n", 
nic
->
ödex
);

2635 
	`¥ötf
("Legacy Eº‹ Cou¡: %lu\n", 
nic
->
îr‹_cou¡
);

2636 
	`¥ötf
("Legacy TX Eº‹s: %lu\n", 
nic
->
tx_îr‹s
);

2637 
	`¥ötf
("Legacy RX Eº‹s: %lu\n", 
nic
->
rx_îr‹s
);

2638 
	`¥ötf
("La° Eº‹ Code: 0x%08lX\n", 
nic
->
œ°_îr‹
);

2641 
	`¥öt_îr‹_°©i°ics
(
nic
->
îr‹_c⁄ãxt
);

2642 
	}
}

2647 
	$h¨dw¨e_¥öt_globÆ_îr‹_summ¨y
() {

2648 
	`¥ötf
("\n=== Global Hardware Error Summary ===\n");

2649 
	`¥ötf
("TŸÆ NICs: %d\n", 
g_num_nics
);

2651 
uöt32_t
 
tŸÆ_îr‹s
 = 0;

2652 
uöt32_t
 
tŸÆ_ªcovîõs
 = 0;

2653 
uöt32_t
 
dißbÀd_nics
 = 0;

2655 
i
 = 0; i < 
g_num_nics
; i++) {

2656 
nic_öfo_t
 *
nic
 = &
g_nic_öfos
[
i
];

2657 i‡(
nic
->
îr‹_c⁄ãxt
) {

2658 
tŸÆ_îr‹s
 +
nic
->
îr‹_c⁄ãxt
->
îr‹_°©s
.
rx_îr‹s
 +

2659 
nic
->
îr‹_c⁄ãxt
->
îr‹_°©s
.
tx_îr‹s
;

2660 
tŸÆ_ªcovîõs
 +
nic
->
îr‹_c⁄ãxt
->
îr‹_°©s
.
ªcovîõs_©ãm±ed
;

2661 i‡(
nic
->
îr‹_c⁄ãxt
->
ad≠ãr_dißbÀd
) {

2662 
dißbÀd_nics
++;

2667 
	`¥ötf
("TŸÆ Eº‹s: %lu\n", 
tŸÆ_îr‹s
);

2668 
	`¥ötf
("TŸÆ Recovîy Aâem±s: %lu\n", 
tŸÆ_ªcovîõs
);

2669 
	`¥ötf
("DißbÀd NICs: %lu\n", 
dißbÀd_nics
);

2672 
	`¥öt_globÆ_îr‹_summ¨y
();

2674 
	`¥ötf
("Sy°em Hó…h: %d%%\n", 
	`h¨dw¨e_gë_sy°em_hó…h_°©us
());

2675 
	}
}

2681 
	$h¨dw¨e_gë_sy°em_hó…h_°©us
() {

2682  
	`gë_sy°em_hó…h_°©us
();

2683 
	}
}

2691 
	$h¨dw¨e_exp‹t_îr‹_log
(*
buf„r
, 
size_t
 
buf„r_size
) {

2692 i‡(!
buf„r
 || 
buf„r_size
 == 0) {

2697 
îr‹_log_íåy_t
 
íåõs
[100];

2698 
num_íåõs
 = 
	`ªad_îr‹_log_íåõs
(
íåõs
, 100);

2700 
size_t
 
wrôãn
 = 0;

2701 
i
 = 0; i < 
num_íåõs
 && 
wrôãn
 < 
buf„r_size
 - 1; i++) {

2702 
Àn
 = 
	`¢¥ötf
(
buf„r
 + 
wrôãn
, 
buf„r_size
 - written,

2704 
íåõs
[
i
].
time°amp
,

2705 
	`îr‹_£vîôy_to_°rög
(
íåõs
[
i
].
£vîôy
),

2706 
íåõs
[
i
].
nic_id
,

2707 
íåõs
[
i
].
mesßge
);

2708 i‡(
Àn
 > 0) {

2709 
wrôãn
 +
Àn
;

2713  ()
wrôãn
;

2714 
	}
}

2724 
	$h¨dw¨e_c⁄figuª_îr‹_thªshﬁds
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
max_îr‹_øã
,

2725 
uöt32_t
 
max_c⁄£cutive
, uöt32_à
ªcovîy_timeout
) {

2726 i‡(!
nic
 || !nic->
îr‹_c⁄ãxt
) {

2727  
ERROR_INVALID_PARAM
;

2730 
	`LOG_INFO
("ConfiguringÉrrorÅhresholds for NIC %d:Ñate=%lu%%, consecutive=%lu,Åimeout=%lums",

2731 
nic
->
ödex
, 
max_îr‹_øã
, 
max_c⁄£cutive
, 
ªcovîy_timeout
);

2734  
	`c⁄figuª_îr‹_thªshﬁds
(
nic
->
îr‹_c⁄ãxt
, 
max_îr‹_øã
,

2735 
max_c⁄£cutive
, 
ªcovîy_timeout
);

2736 
	}
}

2746 
	$h¨dw¨e_ªgi°î_nic_wôh_buf„r_sy°em
(
nic_öfo_t
* 
nic
, 
nic_ödex
) {

2747 i‡(!
nic
 || 
nic_ödex
 < 0 ||Çic_ödex >
MAX_NICS
) {

2748 
	`LOG_ERROR
("InvalidÖarameters for NIC bufferÑegistration");

2749  
ERROR_INVALID_PARAM
;

2753 
nic_«me
[32];

2754 c⁄° * 
ty≥_«me
 = "Unknown";

2756 
nic
->
ty≥
) {

2757 
NIC_TYPE_3C509B
:

2758 
ty≥_«me
 = "3C509B";

2760 
NIC_TYPE_3C515_TX
:

2761 
ty≥_«me
 = "3C515-TX";

2764 
ty≥_«me
 = "Unknown";

2768 
	`¢¥ötf
(
nic_«me
, “ic_«me), "%s-%d", 
ty≥_«me
, 
nic_ödex
);

2770 
	`LOG_INFO
("Regi°îög NIC %d (%sËwôhÖî-NIC buf„∏poﬁs", 
nic_ödex
, 
nic_«me
);

2773 
ªsu…
 = 
	`buf„r_ªgi°î_nic
((
nic_id_t
)
nic_ödex
, 
nic
->
ty≥
, 
nic_«me
);

2774 i‡(
ªsu…
 !
SUCCESS
) {

2775 
	`LOG_ERROR
("FaûedÅÿªgi°î NIC %d wôh buf„∏sy°em: %d", 
nic_ödex
, 
ªsu…
);

2776  
ªsu…
;

2780 
nic
->
ödex
 = 
nic_ödex
;

2782 
	`LOG_INFO
("Suc˚ssfuŒyÑegi°îed NIC %d wôh buf„∏sy°em", 
nic_ödex
);

2783  
SUCCESS
;

2784 
	}
}

2790 
	$h¨dw¨e_uƒegi°î_nic_‰om_buf„r_sy°em
(
nic_ödex
) {

2791 i‡(
nic_ödex
 < 0 ||Çic_ödex >
MAX_NICS
) {

2792 
	`LOG_ERROR
("InvÆid NIC index f‹ buf„∏uƒegi°øti⁄: %d", 
nic_ödex
);

2796 
	`LOG_INFO
("Uƒegi°îög NIC %d from buf„∏sy°em", 
nic_ödex
);

2799 
ªsu…
 = 
	`buf„r_uƒegi°î_nic
((
nic_id_t
)
nic_ödex
);

2800 i‡(
ªsu…
 !
SUCCESS
) {

2801 
	`LOG_WARNING
("FaûedÅÿuƒegi°î NIC %d from buf„∏sy°em: %d", 
nic_ödex
, 
ªsu…
);

2803 
	`LOG_INFO
("Suc˚ssfuŒy uƒegi°îed NIC %d from buf„∏sy°em", 
nic_ödex
);

2805 
	}
}

2816 
	$h¨dw¨e_£nd_∑ckë_buf„ªd
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

2817 i‡(!
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

2818 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

2819  
ERROR_INVALID_PARAM
;

2822 i‡(!
nic
->
›s
 || !nic->›s->
£nd_∑ckë
) {

2823 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

2824  
ERROR_NOT_SUPPORTED
;

2827 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

2828 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

2829  
ERROR_BUSY
;

2833 
nic_id_t
 
nic_id
 = (nic_id_t)
nic
->
ödex
;

2834 
buf„r_desc_t
* 
tx_buf„r
 = 
	`buf„r_Æloc_ëhî√t_‰ame_nic
(
nic_id
, 
Àngth
, 
BUFFER_TYPE_TX
);

2836 i‡(!
tx_buf„r
) {

2837 
	`LOG_WARNING
("FaûedÅÿÆloˇã TX buf„∏f‹ NIC %d, usög dúe˘Åønsmissi⁄", 
nic
->
ödex
);

2839 
ªsu…
 = 
nic
->
›s
->
	`£nd_∑ckë
“ic, 
∑ckë
, 
Àngth
);

2840 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
ªsu…
 =
SUCCESS
);

2841  
ªsu…
;

2845 i‡(
	`buf„r_£t_d©a
(
tx_buf„r
, 
∑ckë
, 
Àngth
Ë!
SUCCESS
) {

2846 
	`LOG_ERROR
("FaûedÅÿc›yÖackë d©®tÿTX buf„∏f‹ NIC %d", 
nic
->
ödex
);

2847 
	`buf„r_‰ì_nic_aw¨e
(
nic_id
, 
tx_buf„r
);

2848 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
Ál£
);

2849  
ERROR_GENERIC
;

2853 
ªsu…
 = 
nic
->
›s
->
	`£nd_∑ckë
“ic, (c⁄° 
uöt8_t
*)
	`buf„r_gë_d©a_±r
(
tx_buf„r
), 
Àngth
);

2856 
	`buf„r_‰ì_nic_aw¨e
(
nic_id
, 
tx_buf„r
);

2858 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
åue
, 
ªsu…
 =
SUCCESS
);

2860 i‡(
ªsu…
 =
SUCCESS
) {

2861 
	`LOG_DEBUG
("Suc˚ssfuŒy síà%u-byãÖackë usögÖî-NIC buf„∏f‹ NIC %d", 
Àngth
, 
nic
->
ödex
);

2863 
	`LOG_WARNING
("FaûedÅÿ£ndÖackë usögÖî-NIC buf„∏f‹ NIC %d: %d", 
nic
->
ödex
, 
ªsu…
);

2866  
ªsu…
;

2867 
	}
}

2876 
	$h¨dw¨e_ª˚ive_∑ckë_buf„ªd
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
buf„r
, 
uöt16_t
 *
Àngth
) {

2877 i‡(!
nic
 || !
buf„r
 || !
Àngth
) {

2878 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

2879  
ERROR_INVALID_PARAM
;

2882 i‡(!
nic
->
›s
 || !nic->›s->
ª˚ive_∑ckë
) {

2883 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

2884  
ERROR_NOT_SUPPORTED
;

2887 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

2888 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, false);

2889  
ERROR_BUSY
;

2892 
nic_id_t
 
nic_id
 = (nic_id_t)
nic
->
ödex
;

2893 
uöt16_t
 
buf„r_size
 = *
Àngth
;

2896 
buf„r_desc_t
* 
rx_buf„r
 = 
	`buf„r_rx_c›ybªak_Æloc_nic
(
nic_id
, 
buf„r_size
);

2898 i‡(!
rx_buf„r
) {

2899 
	`LOG_DEBUG
("RX_COPYBREAKáŒoˇti⁄ faûed f‹ NIC %d,ÅryögÑeguœ∏Æloˇti⁄", 
nic
->
ödex
);

2901 
rx_buf„r
 = 
	`buf„r_Æloc_ëhî√t_‰ame_nic
(
nic_id
, 
buf„r_size
, 
BUFFER_TYPE_RX
);

2904 i‡(!
rx_buf„r
) {

2905 
	`LOG_WARNING
("FaûedÅÿÆloˇã RX buf„∏f‹ NIC %d, usög dúe˘Ñe˚±i⁄", 
nic
->
ödex
);

2907 
ªsu…
 = 
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, 
buf„r
, 
Àngth
);

2908 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, 
ªsu…
 =
SUCCESS
);

2909  
ªsu…
;

2913 
uöt16_t
 
rx_buf„r_size
 = (uöt16_t)
	`buf„r_gë_size
(
rx_buf„r
);

2914 
ªsu…
 = 
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, (
uöt8_t
*)
	`buf„r_gë_d©a_±r
(
rx_buf„r
), &
rx_buf„r_size
);

2916 i‡(
ªsu…
 =
SUCCESS
 && 
rx_buf„r_size
 > 0) {

2918 
uöt16_t
 
c›y_size
 = (
rx_buf„r_size
 < 
buf„r_size
) ?Ñx_buffer_size : buffer_size;

2919 
	`mem‹y_c›y_›timized
(
buf„r
, 
	`buf„r_gë_d©a_±r
(
rx_buf„r
), 
c›y_size
);

2920 *
Àngth
 = 
c›y_size
;

2923 i‡(
rx_buf„r
->
size
 <
RX_COPYBREAK_THRESHOLD
) {

2924 
	`rx_c›ybªak_ªc‹d_c›y
();

2927 
	`LOG_DEBUG
("Suc˚ssfuŒyÑe˚ived %u-byãÖackë usögÖî-NIC buf„∏f‹ NIC %d", 
c›y_size
, 
nic
->
ödex
);

2929 *
Àngth
 = 0;

2930 i‡(
ªsu…
 !
SUCCESS
) {

2931 
	`LOG_DEBUG
("FaûedÅÿª˚ivê∑ckë f‹ NIC %d: %d", 
nic
->
ödex
, 
ªsu…
);

2936 i‡(
rx_buf„r
->
size
 <
LARGE_BUFFER_SIZE
) {

2938 
	`buf„r_rx_c›ybªak_‰ì_nic
(
nic_id
, 
rx_buf„r
);

2941 
	`buf„r_‰ì_nic_aw¨e
(
nic_id
, 
rx_buf„r
);

2944 
	`h¨dw¨e_upd©e_∑ckë_°©s
(
Ál£
, 
ªsu…
 =
SUCCESS
);

2945  
ªsu…
;

2946 
	}
}

2954 
	$h¨dw¨e_gë_nic_buf„r_°©s
(
nic_ödex
, 
buf„r_poﬁ_°©s_t
* 
°©s
) {

2955 i‡(!
	`h¨dw¨e_vÆid©e_nic_ödex
(
nic_ödex
Ë|| !
°©s
) {

2956  
ERROR_INVALID_PARAM
;

2959  
	`buf„r_gë_nic_°©s
((
nic_id_t
)
nic_ödex
, 
°©s
);

2960 
	}
}

2966 
	$h¨dw¨e_ªbÆ™˚_buf„r_ªsour˚s
() {

2967 i‡(!
g_h¨dw¨e_öôülized
) {

2968  
ERROR_INVALID_PARAM
;

2971 
	`LOG_INFO
("Triggering hardwareÜayer bufferÑesourceÑebalancing");

2972  
	`buf„r_ªbÆ™˚_ªsour˚s
();

2973 
	}
}

2978 
	$h¨dw¨e_¥öt_com¥ehísive_°©s
() {

2979 i‡(!
g_h¨dw¨e_öôülized
) {

2980 
	`LOG_INFO
("HardwareÜayerÇot initialized");

2984 
	`LOG_INFO
("=== Hardware Layer Comprehensive Statistics ===");

2987 
	`LOG_INFO
("Hardware Stats:");

2988 
	`LOG_INFO
(" A˘ivêNICs: %d", 
g_num_nics
);

2989 
	`LOG_INFO
(" Packets sent: %lu (success: %lu, failed: %lu)",

2990 
g_h¨dw¨e_°©s
.
∑ckës_£¡
,

2991 
g_h¨dw¨e_°©s
.
suc˚ssful_£nds
,

2992 
g_h¨dw¨e_°©s
.
∑ckës_£¡
 - g_h¨dw¨e_°©s.
suc˚ssful_£nds
);

2993 
	`LOG_INFO
(" PacketsÑeceived: %lu (success: %lu, failed: %lu)",

2994 
g_h¨dw¨e_°©s
.
∑ckës_ª˚ived
,

2995 
g_h¨dw¨e_°©s
.
suc˚ssful_ª˚ives
,

2996 
g_h¨dw¨e_°©s
.
∑ckës_ª˚ived
 - g_h¨dw¨e_°©s.
suc˚ssful_ª˚ives
);

2999 
i
 = 0; i < 
g_num_nics
; i++) {

3000 
nic_öfo_t
* 
nic
 = &
g_nic_öfos
[
i
];

3001 
	`LOG_INFO
("NIC %d (%s): Status 0x%X, Type %d, I/O 0x%X, IRQ %d",

3002 
i
, 
nic
->
ty≥
 =
NIC_TYPE_3C509B
 ? "3C509B" :

3003 (
nic
->
ty≥
 =
NIC_TYPE_3C515_TX
 ? "3C515-TX" : "Unknown"),

3004 
nic
->
°©us
,Çic->
ty≥
,Çic->
io_ba£
,Çic->
úq
);

3007 
buf„r_poﬁ_°©s_t
 
nic_°©s
;

3008 i‡(
	`h¨dw¨e_gë_nic_buf„r_°©s
(
i
, &
nic_°©s
Ë=
SUCCESS
) {

3009 
	`LOG_INFO
(" Buffer Stats: %luállocs, %lu failures, %lu current, %luÖeak",

3010 
nic_°©s
.
tŸÆ_Æloˇti⁄s
,Çic_°©s.
Æloˇti⁄_Áûuªs
,

3011 
nic_°©s
.
cuºít_Æloˇãd
,Çic_°©s.
≥ak_Æloˇãd
);

3016 
	`buf„r_¥öt_com¥ehísive_°©s
();

3017 
	}
}

3022 
	$h¨dw¨e_m⁄ô‹_™d_maöèö
() {

3023 i‡(!
g_h¨dw¨e_öôülized
) {

3027 
uöt32_t
 
œ°_m⁄ô‹_time
 = 0;

3028 
uöt32_t
 
cuºít_time
 = 
	`gë_sy°em_time°amp_ms
();

3031 i‡(
cuºít_time
 - 
œ°_m⁄ô‹_time
 < 30000) {

3035 
	`LOG_DEBUG
("Hardware maintenanceánd monitoring cycle");

3038 
	`buf„r_m⁄ô‹_™d_ªbÆ™˚
();

3041 
i
 = 0; i < 
g_num_nics
; i++) {

3042 
nic_öfo_t
* 
nic
 = &
g_nic_öfos
[
i
];

3045 i‡(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
) {

3047 
buf„r_poﬁ_°©s_t
 
°©s
;

3048 i‡(
	`h¨dw¨e_gë_nic_buf„r_°©s
(
i
, &
°©s
Ë=
SUCCESS
) {

3049 i‡(
°©s
.
Æloˇti⁄_Áûuªs
 > 0) {

3050 
	`LOG_WARNING
("NIC %d has %lu bufferállocation failures",

3051 
i
, 
°©s
.
Æloˇti⁄_Áûuªs
);

3060 
œ°_m⁄ô‹_time
 = 
cuºít_time
;

3061 
	}
}

3071 
__cde˛
 
asm_3c509b_dëe˘_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3072 
__cde˛
 
asm_3c509b_öô_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3073 
__cde˛
 
asm_3c509b_ª£t_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3074 
__cde˛
 
asm_3c509b_c⁄figuª_medü
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
medü_ty≥
);

3075 
__cde˛
 
asm_3c509b_£t_°©i⁄_addªss
(
nic_c⁄ãxt
 *
c⁄ãxt
, c⁄° 
uöt8_t
 *
mac_addr
);

3076 
__cde˛
 
asm_3c509b_íabÀ_öãºu±s
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
uöt16_t
 
öãºu±_mask
);

3077 
__cde˛
 
asm_3c509b_°¨t_å™s˚ivî
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3078 
__cde˛
 
asm_3c509b_°›_å™s˚ivî
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3079 
__cde˛
 
asm_3c509b_gë_lök_°©us
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3080 
__cde˛
 
asm_3c509b_gë_°©i°ics
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
hÆ_°©i°ics_t
 *
°©s
);

3081 
__cde˛
 
asm_3c509b_£t_mu…iˇ°
(
nic_c⁄ãxt
 *
c⁄ãxt
, c⁄° 
hÆ_mu…iˇ°_t
 *
mc_li°
);

3082 
__cde˛
 
asm_3c509b_£t_¥omiscuous
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
boﬁ
 
íabÀ
);

3085 
__cde˛
 
asm_3c515_dëe˘_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3086 
__cde˛
 
asm_3c515_öô_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3087 
__cde˛
 
asm_3c515_ª£t_h¨dw¨e
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3088 
__cde˛
 
asm_3c515_c⁄figuª_medü
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
medü_ty≥
);

3089 
__cde˛
 
asm_3c515_£t_°©i⁄_addªss
(
nic_c⁄ãxt
 *
c⁄ãxt
, c⁄° 
uöt8_t
 *
mac_addr
);

3090 
__cde˛
 
asm_3c515_íabÀ_öãºu±s
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
uöt16_t
 
öãºu±_mask
);

3091 
__cde˛
 
asm_3c515_°¨t_å™s˚ivî
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3092 
__cde˛
 
asm_3c515_°›_å™s˚ivî
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3093 
__cde˛
 
asm_3c515_gë_lök_°©us
(
nic_c⁄ãxt
 *
c⁄ãxt
);

3094 
__cde˛
 
asm_3c515_gë_°©i°ics
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
hÆ_°©i°ics_t
 *
°©s
);

3095 
__cde˛
 
asm_3c515_£t_mu…iˇ°
(
nic_c⁄ãxt
 *
c⁄ãxt
, c⁄° 
hÆ_mu…iˇ°_t
 *
mc_li°
);

3096 
__cde˛
 
asm_3c515_£t_¥omiscuous
(
nic_c⁄ãxt
 *
c⁄ãxt
, 
boﬁ
 
íabÀ
);

3102 
	$hÆ_öô_vèbÀs
() {

3104 
g_3c509b_hÆ_vèbÀ
.
dëe˘_h¨dw¨e
 = 
asm_3c509b_dëe˘_h¨dw¨e
;

3105 
g_3c509b_hÆ_vèbÀ
.
öô_h¨dw¨e
 = 
asm_3c509b_öô_h¨dw¨e
;

3106 
g_3c509b_hÆ_vèbÀ
.
ª£t_h¨dw¨e
 = 
asm_3c509b_ª£t_h¨dw¨e
;

3107 
g_3c509b_hÆ_vèbÀ
.
c⁄figuª_medü
 = 
asm_3c509b_c⁄figuª_medü
;

3108 
g_3c509b_hÆ_vèbÀ
.
£t_°©i⁄_addªss
 = 
asm_3c509b_£t_°©i⁄_addªss
;

3109 
g_3c509b_hÆ_vèbÀ
.
íabÀ_öãºu±s
 = 
asm_3c509b_íabÀ_öãºu±s
;

3110 
g_3c509b_hÆ_vèbÀ
.
°¨t_å™s˚ivî
 = 
asm_3c509b_°¨t_å™s˚ivî
;

3111 
g_3c509b_hÆ_vèbÀ
.
°›_å™s˚ivî
 = 
asm_3c509b_°›_å™s˚ivî
;

3112 
g_3c509b_hÆ_vèbÀ
.
gë_lök_°©us
 = 
asm_3c509b_gë_lök_°©us
;

3113 
g_3c509b_hÆ_vèbÀ
.
gë_°©i°ics
 = 
asm_3c509b_gë_°©i°ics
;

3114 
g_3c509b_hÆ_vèbÀ
.
£t_mu…iˇ°
 = 
asm_3c509b_£t_mu…iˇ°
;

3115 
g_3c509b_hÆ_vèbÀ
.
£t_¥omiscuous
 = 
asm_3c509b_£t_¥omiscuous
;

3118 
g_3c515_tx_hÆ_vèbÀ
.
dëe˘_h¨dw¨e
 = 
asm_3c515_dëe˘_h¨dw¨e
;

3119 
g_3c515_tx_hÆ_vèbÀ
.
öô_h¨dw¨e
 = 
asm_3c515_öô_h¨dw¨e
;

3120 
g_3c515_tx_hÆ_vèbÀ
.
ª£t_h¨dw¨e
 = 
asm_3c515_ª£t_h¨dw¨e
;

3121 
g_3c515_tx_hÆ_vèbÀ
.
c⁄figuª_medü
 = 
asm_3c515_c⁄figuª_medü
;

3122 
g_3c515_tx_hÆ_vèbÀ
.
£t_°©i⁄_addªss
 = 
asm_3c515_£t_°©i⁄_addªss
;

3123 
g_3c515_tx_hÆ_vèbÀ
.
íabÀ_öãºu±s
 = 
asm_3c515_íabÀ_öãºu±s
;

3124 
g_3c515_tx_hÆ_vèbÀ
.
°¨t_å™s˚ivî
 = 
asm_3c515_°¨t_å™s˚ivî
;

3125 
g_3c515_tx_hÆ_vèbÀ
.
°›_å™s˚ivî
 = 
asm_3c515_°›_å™s˚ivî
;

3126 
g_3c515_tx_hÆ_vèbÀ
.
gë_lök_°©us
 = 
asm_3c515_gë_lök_°©us
;

3127 
g_3c515_tx_hÆ_vèbÀ
.
gë_°©i°ics
 = 
asm_3c515_gë_°©i°ics
;

3128 
g_3c515_tx_hÆ_vèbÀ
.
£t_mu…iˇ°
 = 
asm_3c515_£t_mu…iˇ°
;

3129 
g_3c515_tx_hÆ_vèbÀ
.
£t_¥omiscuous
 = 
asm_3c515_£t_¥omiscuous
;

3131 
	`LOG_DEBUG
("HAL vtables initialized successfully");

3132  
HAL_SUCCESS
;

3133 
	}
}

3140 
h¨dw¨e_hÆ_vèbÀ_t
* 
	$hÆ_gë_vèbÀ
(
nic_ty≥_t
 
nic_ty≥
) {

3141 
nic_ty≥
) {

3142 
NIC_TYPE_3C509B
:

3143  &
g_3c509b_hÆ_vèbÀ
;

3144 
NIC_TYPE_3C515TX
:

3145  &
g_3c515_tx_hÆ_vèbÀ
;

3147 
	`LOG_ERROR
("Unknow¿NICÅy≥: %d", 
nic_ty≥
);

3148  
NULL
;

3150 
	}
}

3157 c⁄° * 
	$hÆ_îr‹_to_°rög
(
îr‹_code
) {

3158 
îr‹_code
) {

3159 
HAL_SUCCESS
:  "Success";

3160 
HAL_ERROR_INVALID_PARAM
:  "InvalidÖarameter";

3161 
HAL_ERROR_HARDWARE_FAILURE
:  "Hardware failure";

3162 
HAL_ERROR_TIMEOUT
:  "OperationÅimeout";

3163 
HAL_ERROR_NOT_SUPPORTED
:  "Not supported";

3164 
HAL_ERROR_RESOURCE_BUSY
:  "Resource busy";

3165 
HAL_ERROR_INITIALIZATION
:  "InitializationÉrror";

3166 
HAL_ERROR_MEMORY
:  "MemoryÉrror";

3167 
HAL_ERROR_DMA
:  "DMAÉrror";

3168 
HAL_ERROR_INTERRUPT
:  "InterruptÉrror";

3169 
HAL_ERROR_LINK_DOWN
:  "Link down";

3170 
HAL_ERROR_MEDIA_FAILURE
:  "Media failure";

3171 
HAL_ERROR_CHECKSUM
:  "ChecksumÉrror";

3174 
	}
}

3181 
	$h¨dw¨e_£t_≤p_dëe˘i⁄_ªsu…s
(c⁄° 
nic_dëe˘_öfo_t
 *
ªsu…s
, 
cou¡
) {

3182 i‡(!
ªsu…s
 || 
cou¡
 <0 || cou¡ > 
MAX_NICS
) {

3183 
	`LOG_WARNING
("InvÆid PnP dëe˘i⁄Ñesu…s:Ñesu…s=%p, cou¡=%d", 
ªsu…s
, 
cou¡
);

3184 
g_≤p_dëe˘i⁄_cou¡
 = 0;

3189 
	`mem‹y_c›y
(
g_≤p_dëe˘i⁄_ªsu…s
, 
ªsu…s
, 
cou¡
 * (
nic_dëe˘_öfo_t
));

3190 
g_≤p_dëe˘i⁄_cou¡
 = 
cou¡
;

3192 
	`LOG_DEBUG
("St‹ed %d PnP dëe˘i⁄Ñesu…†f‹ h¨dw¨êöãgøti⁄", 
cou¡
);

3195 
i
 = 0; i < 
cou¡
; i++) {

3196 c⁄° * 
ty≥_«me
 = (
ªsu…s
[
i
].
ty≥
 =
NIC_TYPE_3C509B
) ? "3C509B" :

3197 (
ªsu…s
[
i
].
ty≥
 =
NIC_TYPE_3C515_TX
) ? "3C515-TX" : "Unknown";

3198 
	`LOG_DEBUG
("PnP Devi˚ %d: %†© I/O 0x%X, IRQ %d", 
i
, 
ty≥_«me
,

3199 
ªsu…s
[
i
].
io_ba£
,Ñesu…s[i].
úq
);

3201 
	}
}

3209 
	$h¨dw¨e_gë_≤p_dëe˘i⁄_ªsu…s
(
nic_dëe˘_öfo_t
 *
ªsu…s
, 
max_cou¡
) {

3210 i‡(!
ªsu…s
 || 
max_cou¡
 <= 0) {

3214 
c›y_cou¡
 = (
g_≤p_dëe˘i⁄_cou¡
 < 
max_cou¡
) ? g_pnp_detection_count : max_count;

3215 i‡(
c›y_cou¡
 > 0) {

3216 
	`mem‹y_c›y
(
ªsu…s
, 
g_≤p_dëe˘i⁄_ªsu…s
, 
c›y_cou¡
 * (
nic_dëe˘_öfo_t
));

3219  
c›y_cou¡
;

3220 
	}
}

3226 
	$h¨dw¨e_gë_≤p_dëe˘i⁄_cou¡
() {

3227  
g_≤p_dëe˘i⁄_cou¡
;

3228 
	}
}

3234 
	$h¨dw¨e_öô_îr‹_h™dlög
() {

3235 
	`LOG_DEBUG
("Initializing hardwareÉrror handling system");

3238 
	`mem‹y_zîo
(&
g_îr‹_ªcovîy_°©e
, (g_error_recovery_state));

3239 
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
 = -1;

3240 
g_îr‹_ªcovîy_°©e
.
backup_nic
 = -1;

3243 
	`îr‹_h™dlög_öô
();

3244 
ªsu…
 = 
	`îr‹_h™dlög_öô
();

3245 i‡(
ªsu…
 !
SUCCESS
) {

3246 
	`LOG_ERROR
("FaûedÅÿöôülizêîr‹ h™dlög subsy°em: %d", 
ªsu…
);

3247  
ªsu…
;

3250 
	`LOG_INFO
("HardwareÉrror handling system initialized successfully");

3251  
SUCCESS
;

3252 
	}
}

3259 
	$h¨dw¨e_¸óã_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
) {

3260 i‡(!
nic
 ||Çic->
ödex
 >
MAX_NICS
) {

3261  
ERROR_INVALID_PARAM
;

3264 
	`LOG_DEBUG
("Cª©ögÉº‹ h™dlög c⁄ãxàf‹ NIC %d", 
nic
->
ödex
);

3267 
	`mem‹y_zîo
(
g_îr‹_ªcovîy_°©e
.
îr‹_cou¡s
[
nic
->
ödex
],

3268 (
g_îr‹_ªcovîy_°©e
.
îr‹_cou¡s
[
nic
->
ödex
]));

3269 
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic
->
ödex
] = 0;

3270 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] = 0;

3271 
g_îr‹_ªcovîy_°©e
.
ªcovîy_©ãm±s
[
nic
->
ödex
] = 0;

3272 
g_îr‹_ªcovîy_°©e
.
œ°_ªcovîy_time
[
nic
->
ödex
] = 0;

3275 
	`¸óã_ad≠ãr_îr‹_c⁄ãxt
(
nic_öfo_t
 *
nic
);

3276 
ªsu…
 = 
	`¸óã_ad≠ãr_îr‹_c⁄ãxt
(
nic
);

3277 i‡(
ªsu…
 !
SUCCESS
) {

3278 
	`LOG_WARNING
("FailedÅo createádapterÉrror context for NIC %d: %d",

3279 
nic
->
ödex
, 
ªsu…
);

3283 
	`LOG_DEBUG
("Eº‹ h™dlög c⁄ãxà¸óãd f‹ NIC %d", 
nic
->
ödex
);

3284  
SUCCESS
;

3285 
	}
}

3294 
	$h¨dw¨e_h™dÀ_îr‹
(
nic_öfo_t
 *
nic
, 
îr‹_ty≥
, 
uöt32_t
 
îr‹_d©a
) {

3295 i‡(!
nic
 ||Çic->
ödex
 >
MAX_NICS
) {

3296  
ERROR_INVALID_PARAM
;

3300 
uöt32_t
 
cuºít_time
 = 
	`h¨dw¨e_gë_time°amp
();

3301 
g_îr‹_ªcovîy_°©e
.
îr‹_cou¡s
[
nic
->
ödex
][
îr‹_ty≥
]++;

3302 
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic
->
ödex
] = 
cuºít_time
;

3303 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
]++;

3304 
g_îr‹_ªcovîy_°©e
.
tŸÆ_Áûuªs
++;

3307 
	`h¨dw¨e_log_Áûuª
(
nic
, 
îr‹_ty≥
, "HardwareÉrror occurred");

3310 
boﬁ
 
is_¸ôiˇl
 = 
	`h¨dw¨e_is_¸ôiˇl_Áûuª
(
îr‹_ty≥
);

3313 i‡(
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] >
MAX_CONSECUTIVE_ERRORS
 ||

3314 
is_¸ôiˇl
) {

3316 
	`LOG_WARNING
("InitiatingÉrrorÑecovery for NIC %d (errorÅype %d)",

3317 
nic
->
ödex
, 
îr‹_ty≥
);

3319 
ªcovîy_ªsu…
 = 
	`h¨dw¨e_ªcovî_nic
(
nic
, 
îr‹_ty≥
);

3320 i‡(
ªcovîy_ªsu…
 =
SUCCESS
) {

3321 
g_îr‹_ªcovîy_°©e
.
suc˚ssful_ªcovîõs
++;

3322 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[
nic
->
ödex
] = 0;

3323 
	`LOG_INFO
("Suc˚ssfuŒyÑecovîed NIC %d fromÉº‹", 
nic
->
ödex
);

3325 
	`LOG_ERROR
("FaûedÅÿªcovî NIC %d fromÉº‹: %d", 
nic
->
ödex
, 
ªcovîy_ªsu…
);

3328 i‡(
g_num_nics
 > 1) {

3329 
	`h¨dw¨e_©ãm±_Áûovî
(
nic
->
ödex
);

3331 
	`h¨dw¨e_gø˚ful_degød©i⁄
(
nic
);

3335  
ªcovîy_ªsu…
;

3339 
	`LOG_DEBUG
("Non-criticalÉrror %d on NIC %d (consecutive: %d)",

3340 
îr‹_ty≥
, 
nic
->
ödex
, 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[nic->index]);

3342  
SUCCESS
;

3343 
	}
}

3349 
uöt32_t
 
	$h¨dw¨e_gë_time°amp
() {

3351 
uöt32_t
 
tick_cou¡î
 = 0;

3352  ++
tick_cou¡î
;

3353 
	}
}

3365 
	$h¨dw¨e_ªcovî_nic
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
) {

3366 i‡(!
nic
) {

3367  
ERROR_INVALID_PARAM
;

3370 
	`LOG_INFO
("Aâem±ögÑecovîy o‡NIC %d from faûuªÅy≥ %d", 
nic
->
ödex
, 
Áûuª_ty≥
);

3372 
g_îr‹_ªcovîy_°©e
.
ªcovîy_©ãm±s
[
nic
->
ödex
]++;

3373 
g_îr‹_ªcovîy_°©e
.
œ°_ªcovîy_time
[
nic
->
ödex
] = 
	`h¨dw¨e_gë_time°amp
();

3376 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

3378 
Áûuª_ty≥
) {

3379 
HW_FAILURE_LINK_LOST
:

3380 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

3382 
HW_FAILURE_TX_TIMEOUT
:

3383 
HW_FAILURE_RX_TIMEOUT
:

3384 
ªcovîy_°øãgy
 = 
RECOVERY_HARD_RESET
;

3386 
HW_FAILURE_FIFO_OVERRUN
:

3387 
HW_FAILURE_DMA_ERROR
:

3388 
ªcovîy_°øãgy
 = 
RECOVERY_REINITIALIZE
;

3390 
HW_FAILURE_REGISTER_CORRUPTION
:

3391 
HW_FAILURE_CRITICAL
:

3392 
ªcovîy_°øãgy
 = 
RECOVERY_REINITIALIZE
;

3395 
ªcovîy_°øãgy
 = 
RECOVERY_SOFT_RESET
;

3400 
ªsu…
 = 
ERROR_HARDWARE
;

3402 
ªcovîy_°øãgy
) {

3403 
RECOVERY_SOFT_RESET
:

3404 
	`LOG_DEBUG
("Pîf‹mög so·Ñe£à⁄ NIC %d", 
nic
->
ödex
);

3405 i‡(
nic
->
›s
 &&Çic->›s->
ª£t
) {

3406 
ªsu…
 = 
nic
->
›s
->
	`ª£t
(nic);

3410 
RECOVERY_HARD_RESET
:

3411 
	`LOG_DEBUG
("Pîf‹mög h¨dÑe£à⁄ NIC %d", 
nic
->
ödex
);

3412 
ªsu…
 = 
	`h¨dw¨e_emîgícy_ª£t
(
nic
);

3415 
RECOVERY_REINITIALIZE
:

3416 
	`LOG_DEBUG
("Reöôülizög NIC %d", 
nic
->
ödex
);

3417 i‡(
nic
->
›s
 &&Çic->›s->
˛ónup
) {

3418 
nic
->
›s
->
	`˛ónup
(nic);

3420 i‡(
nic
->
›s
 &&Çic->›s->
öô
) {

3421 
ªsu…
 = 
nic
->
›s
->
	`öô
(nic);

3426 
	`LOG_ERROR
("Unknow¿ªcovîy så©egy: %d", 
ªcovîy_°øãgy
);

3431 i‡(
ªsu…
 =
SUCCESS
) {

3432 
ªsu…
 = 
	`h¨dw¨e_vÆid©e_ªcovîy
(
nic
);

3433 i‡(
ªsu…
 =
SUCCESS
) {

3434 
	`LOG_INFO
("Suc˚ssfuŒyÑecovîed NIC %d usög så©egy %d", 
nic
->
ödex
, 
ªcovîy_°øãgy
);

3438 i‡(
ªsu…
 !
SUCCESS
) {

3439 
	`LOG_ERROR
("Recovîy faûed f‹ NIC %d (°øãgy %d): %d", 
nic
->
ödex
, 
ªcovîy_°øãgy
, 
ªsu…
);

3442  
ªsu…
;

3443 
	}
}

3450 
	$h¨dw¨e_©ãm±_Áûovî
(
Áûed_nic_ödex
) {

3451 i‡(
Áûed_nic_ödex
 >
MAX_NICS
) {

3452  
ERROR_INVALID_PARAM
;

3455 
	`LOG_WARNING
("Aâem±ög faûovî from NIC %d", 
Áûed_nic_ödex
);

3458 
backup_nic
 = -1;

3459 
i
 = 0; i < 
g_num_nics
; i++) {

3460 i‡(
i
 !
Áûed_nic_ödex
 &&

3461 (
g_nic_öfos
[
i
].
°©us
 & 
NIC_STATUS_ACTIVE
) &&

3462 !(
g_nic_öfos
[
i
].
°©us
 & 
NIC_STATUS_ERROR
)) {

3463 
backup_nic
 = 
i
;

3468 i‡(
backup_nic
 == -1) {

3469 
	`LOG_ERROR
("No suitable backup NIC found for failover");

3470  
ERROR_NOT_FOUND
;

3474 
g_îr‹_ªcovîy_°©e
.
Áûovî_ö_¥ogªss
 = 
åue
;

3475 
g_îr‹_ªcovîy_°©e
.
¥im¨y_nic
 = 
backup_nic
;

3476 
g_îr‹_ªcovîy_°©e
.
backup_nic
 = 
Áûed_nic_ödex
;

3477 
g_îr‹_ªcovîy_°©e
.
Áûovîs
++;

3480 
g_nic_öfos
[
Áûed_nic_ödex
].
°©us
 |
NIC_STATUS_ERROR
;

3481 
g_nic_öfos
[
Áûed_nic_ödex
].
°©us
 &~
NIC_STATUS_ACTIVE
;

3484 
	`h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
Áûed_nic_ödex
, 
ERROR_HARDWARE
);

3486 
	`LOG_INFO
("Faûovî com∂ëed: NIC %d -> NIC %d", 
Áûed_nic_ödex
, 
backup_nic
);

3488  
SUCCESS
;

3489 
	}
}

3495 
	$h¨dw¨e_gø˚ful_degød©i⁄
(
nic_öfo_t
 *
nic
) {

3496 i‡(!
nic
) {

3500 
	`LOG_WARNING
("Inôütög gø˚fu»degød©i⁄ f‹ NIC %d", 
nic
->
ödex
);

3503 
nic
->
°©us
 |
NIC_STATUS_DEGRADED
;

3506 i‡(
nic
->
ˇ∑bûôõs
 & 
HW_CAP_DMA
) {

3507 
	`LOG_DEBUG
("Dißblög DMA f‹ NIC %d", 
nic
->
ödex
);

3511 i‡(
nic
->
ˇ∑bûôõs
 & 
HW_CAP_FULL_DUPLEX
) {

3512 
	`LOG_DEBUG
("F‹cög hÆf-du∂ex f‹ NIC %d", 
nic
->
ödex
);

3517 i‡(
nic
->
•ìd
 > 10) {

3518 
	`LOG_DEBUG
("Reducög s≥edÅÿ10Mbp†f‹ NIC %d", 
nic
->
ödex
);

3519 
nic
->
•ìd
 = 10;

3523 
nic
->
tx_timeout
 =Çic->tx_timeout * 2;

3524 
nic
->
rx_timeout
 =Çic->rx_timeout * 2;

3526 
	`LOG_INFO
("NIC %d o≥øtög i¿degøded mode", 
nic
->
ödex
);

3527 
	}
}

3534 
	$h¨dw¨e_vÆid©e_ªcovîy
(
nic_öfo_t
 *
nic
) {

3535 i‡(!
nic
) {

3536  
ERROR_INVALID_PARAM
;

3539 
	`LOG_DEBUG
("VÆid©ögÑecovîy f‹ NIC %d", 
nic
->
ödex
);

3542 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_°©us
) {

3543 
lök_°©us
 = 
nic
->
›s
->
	`gë_lök_°©us
(nic);

3544 i‡(
lök_°©us
 < 0) {

3545 
	`LOG_ERROR
("NIC %dÇŸÑe•⁄dögÅÿlök sètu†quîy", 
nic
->
ödex
);

3546  
ERROR_HARDWARE
;

3554 
nic
->
°©us
 &~
NIC_STATUS_ERROR
;

3556 
	`LOG_DEBUG
("Recovîy vÆid©i⁄ suc˚ssfu»f‹ NIC %d", 
nic
->
ödex
);

3557  
SUCCESS
;

3558 
	}
}

3566 
	$h¨dw¨e_log_Áûuª
(
nic_öfo_t
 *
nic
, 
Áûuª_ty≥
, c⁄° * 
dëaûs
) {

3567 i‡(!
nic
 || !
dëaûs
) {

3571 c⁄° * 
Áûuª_«mes
[] = {

3577 c⁄° * 
Áûuª_«me
 = (
Áûuª_ty≥
 < 12Ë? 
Áûuª_«mes
[failure_type] : "Unknown";

3579 
	`LOG_ERROR
("NIC %d Faûuª: %†(%dË- %s", 
nic
->
ödex
, 
Áûuª_«me
, 
Áûuª_ty≥
, 
dëaûs
);

3582 
	`LOG_DEBUG
("NIC %d Status: 0x%X, Consecutive Errors: %d",

3583 
nic
->
ödex
,Çic->
°©us
, 
g_îr‹_ªcovîy_°©e
.
c⁄£cutive_îr‹s
[nic->index]);

3584 
	}
}

3591 
	$h¨dw¨e_emîgícy_ª£t
(
nic_öfo_t
 *
nic
) {

3592 i‡(!
nic
) {

3593  
ERROR_INVALID_PARAM
;

3596 
	`LOG_WARNING
("Pîf‹mögÉmîgícyÑe£à⁄ NIC %d", 
nic
->
ödex
);

3602 
i
 = 0; i < 100; i++) {

3608 i‡(
nic
->
›s
 &&Çic->›s->
öô
) {

3609  
nic
->
›s
->
	`öô
(nic);

3612  
SUCCESS
;

3613 
	}
}

3620 
boﬁ
 
	$h¨dw¨e_is_¸ôiˇl_Áûuª
(
Áûuª_ty≥
) {

3621 
Áûuª_ty≥
) {

3622 
HW_FAILURE_REGISTER_CORRUPTION
:

3623 
HW_FAILURE_MEMORY_ERROR
:

3624 
HW_FAILURE_CRITICAL
:

3625 
HW_FAILURE_THERMAL
:

3626 
HW_FAILURE_POWER
:

3627  
åue
;

3629  
Ál£
;

3631 
	}
}

3638 
	$h¨dw¨e_nŸify_≠∂iˇti⁄_îr‹
(
nic_ödex
, 
îr‹_ty≥
) {

3639 
	`LOG_INFO
("NŸifyögáµliˇti⁄†o‡îr‹ o¿NIC %d (ty≥ %d)", 
nic_ödex
, 
îr‹_ty≥
);

3641 
	}
}

3648 
uöt32_t
 
	$h¨dw¨e_ˇlcuœã_ªcovîy_timeout
(
Áûuª_ty≥
) {

3649 
Áûuª_ty≥
) {

3650 
HW_FAILURE_LINK_LOST
:

3652 
HW_FAILURE_TX_TIMEOUT
:

3653 
HW_FAILURE_RX_TIMEOUT
:

3655 
HW_FAILURE_DMA_ERROR
:

3656 
HW_FAILURE_FIFO_OVERRUN
:

3661 
	}
}

3668 c⁄° * 
	$hÆ_medü_ty≥_to_°rög
(
medü_ty≥
) {

3669 
medü_ty≥
) {

3670 
HAL_MEDIA_AUTO
:  "Auto-negotiate";

3671 
HAL_MEDIA_10_HALF
:  "10 Mbps Half-duplex";

3672 
HAL_MEDIA_10_FULL
:  "10 Mbps Full-duplex";

3673 
HAL_MEDIA_100_HALF
:  "100 Mbps Half-duplex";

3674 
HAL_MEDIA_100_FULL
:  "100 Mbps Full-duplex";

3677 
	}
}

3684 
	$h¨dw¨e_check_tx_com∂ëe
(
nic_öfo_t
 *
nic
) {

3685 i‡(!
nic
) {

3686  
ERROR_INVALID_PARAM
;

3689 i‡(!
g_h¨dw¨e_öôülized
) {

3690  
ERROR_NOT_INITIALIZED
;

3693 i‡(!
nic
->
›s
 || !nic->›s->
check_tx_com∂ëe
) {

3698  
nic
->
›s
->
	`check_tx_com∂ëe
(nic);

3699 
	}
}

3706 
	$h¨dw¨e_check_rx_avaûabÀ
(
nic_öfo_t
 *
nic
) {

3707 i‡(!
nic
) {

3708  
ERROR_INVALID_PARAM
;

3711 i‡(!
g_h¨dw¨e_öôülized
) {

3712  
ERROR_NOT_INITIALIZED
;

3715 i‡(!
nic
->
›s
 || !nic->›s->
check_rx_avaûabÀ
) {

3720  
nic
->
›s
->
	`check_rx_avaûabÀ
(nic);

3721 
	}
}

3724 
_3c509b_check_tx_com∂ëe
(
nic_öfo
 *
nic
);

3725 
_3c509b_check_rx_avaûabÀ
(
nic_öfo
 *
nic
);

3726 
_3c515_check_tx_com∂ëe
(
nic_öfo
 *
nic
);

3727 
_3c515_check_rx_avaûabÀ
(
nic_öfo
 *
nic
);

3730 
	$_3c509b_check_tx_com∂ëe
(
nic_öfo
 *
nic
) {

3731 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

3734 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
EL3_STATUS
);

3735 i‡(
°©us
 & 
TxCom∂ëe
) {

3737 
	`outw
(
AckI¡r
 | 
TxCom∂ëe
, 
nic
->
io_ba£
 + 
EL3_CMD
);

3741 
	}
}

3743 
	$_3c509b_check_rx_avaûabÀ
(
nic_öfo
 *
nic
) {

3744 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

3747 
	`EL3WINDOW
(
nic
, 1);

3748 
uöt16_t
 
rx_°©us
 = 
	`öw
(
nic
->
io_ba£
 + 0x08);

3749  (
rx_°©us
 > 0) ? 1 : 0;

3750 
	}
}

3753 
	$_3c515_check_tx_com∂ëe
(
nic_öfo
 *
nic
) {

3754 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

3757 
	`EL3WINDOW
(
nic
, 1);

3758 
uöt8_t
 
tx_°©us
 = 
	`öb
(
nic
->
io_ba£
 + 0x1B);

3760 i‡(
tx_°©us
) {

3762 
	`outb
(
tx_°©us
, 
nic
->
io_ba£
 + 0x1B);

3766 
	}
}

3768 
	$_3c515_check_rx_avaûabÀ
(
nic_öfo
 *
nic
) {

3769 i‡(!
nic
Ë 
ERROR_INVALID_PARAM
;

3772 
	`EL3WINDOW
(
nic
, 1);

3773 
uöt16_t
 
rx_°©us
 = 
	`öw
(
nic
->
io_ba£
 + 0x18);

3774  (
rx_°©us
 > 0) ? 1 : 0;

3775 
	}
}

3782 
uöt32_t
 
	$h¨dw¨e_gë_œ°_îr‹_time
(
uöt8_t
 
nic_ödex
) {

3783 i‡(
nic_ödex
 >
MAX_NICS
) {

3786  
g_îr‹_ªcovîy_°©e
.
œ°_îr‹_time
[
nic_ödex
];

3787 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/media_control.c

22 
	~"../ö˛ude/medü_c⁄åﬁ.h
"

23 
	~"../ö˛ude/3c509b.h
"

24 
	~"../ö˛ude/nic_defs.h
"

25 
	~"../ö˛ude/h¨dw¨e.h
"

26 
	~"../ö˛ude/loggög.h
"

27 
	~"../ö˛ude/comm⁄.h
"

28 
	~"../ö˛ude/˝u_›timized.h
"

29 
	~<°rög.h
>

33 
£À˘_wödow_ß„
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
wödow
);

34 
waô_f‹_cmd_com∂ëi⁄
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
);

35 
uöt16_t
 
ªad_medü_c⁄åﬁ_ªgi°î
(
nic_öfo_t
 *
nic
);

36 
wrôe_medü_c⁄åﬁ_ªgi°î
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
vÆue
);

37 
uöt16_t
 
ªad_√tw‹k_dügno°ics_ªgi°î
(
nic_öfo_t
 *
nic
);

38 
ã°_medü_lök_quÆôy
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
,

39 
uöt32_t
 
ã°_duøti⁄_ms
, 
lök_ã°_ªsu…_t
 *
ªsu…
);

40 
medü_ty≥_t
 
dëe˘_be°_medü_f‹_v¨ü¡
(
nic_öfo_t
 *
nic
, c⁄° 
medü_dëe˘_c⁄fig_t
 *
c⁄fig
);

41 
c⁄figuª_medü_•ecific_ªgi°îs
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
, 
boﬁ
 
fuŒ_du∂ex
);

48 
	$ß„_£À˘_wödow
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
wödow
, 
uöt32_t
 
timeout_ms
) {

49 i‡(!
nic
 || 
wödow
 > 7) {

50 
	`LOG_ERROR
("InvalidÖarameters for window selection");

51  
ERROR_INVALID_PARAM
;

55 
ªsu…
 = 
	`waô_f‹_comm™d_ªady
(
nic
, 
timeout_ms
);

56 i‡(
ªsu…
 !
SUCCESS
) {

57 
	`LOG_ERROR
("CommandÇotÑeady before window selection");

58  
MEDIA_ERROR_WINDOW_TIMEOUT
;

62 
uöt16_t
 
cmd
 = 
_3C509B_CMD_SELECT_WINDOW
 | 
wödow
;

63 
	`˝u_›t_outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
cmd
);

66 
ªsu…
 = 
	`waô_f‹_cmd_com∂ëi⁄
(
nic
, 
timeout_ms
);

67 i‡(
ªsu…
 !
SUCCESS
) {

68 
	`LOG_ERROR
("Wödow %d sñe˘i⁄Åimeout", 
wödow
);

69  
MEDIA_ERROR_WINDOW_TIMEOUT
;

72 
	`LOG_TRACE
("Sñe˘ed wödow %d", 
wödow
);

73  
SUCCESS
;

74 
	}
}

79 
	$gë_cuºít_wödow
(
nic_öfo_t
 *
nic
) {

80 i‡(!
nic
) {

86 
	`LOG_DEBUG
("Current window query -ÅrackingÇot implemented");

88 
	}
}

93 
	$ßve_™d_£À˘_wödow
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
√w_wödow
, uöt8_à*
ßved_wödow
) {

94 i‡(!
nic
 || !
ßved_wödow
) {

95  
ERROR_INVALID_PARAM
;

100 *
ßved_wödow
 = 1;

102  
	`ß„_£À˘_wödow
(
nic
, 
√w_wödow
, 
WINDOW_SELECT_TIMEOUT_MS
);

103 
	}
}

108 
	$ª°‹e_wödow
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
ßved_wödow
) {

109 i‡(!
nic
) {

110  
ERROR_INVALID_PARAM
;

113  
	`ß„_£À˘_wödow
(
nic
, 
ßved_wödow
, 
WINDOW_SELECT_TIMEOUT_MS
);

114 
	}
}

119 
	$waô_f‹_comm™d_ªady
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
) {

120 i‡(!
nic
) {

121  
ERROR_INVALID_PARAM
;

124 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

126 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 < 
timeout_ms
) {

127 
uöt16_t
 
°©us
 = 
	`˝u_›t_öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

129 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

130  
SUCCESS
;

133 
	`˝u_›t_udñay
(100);

136 
	`LOG_ERROR
("Comm™dÑódyÅimeouàa·î %u ms", 
timeout_ms
);

137  
ERROR_TIMEOUT
;

138 
	}
}

145 
	$£À˘_medü_å™s˚ivî
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
, 
uöt8_t
 
Êags
) {

146 i‡(!
nic
) {

147 
	`LOG_ERROR
("Invalid NICÖointer");

148  
ERROR_INVALID_PARAM
;

151 
	`LOG_INFO
("Sñe˘ög medüÅøns˚ivî: %s", 
	`medü_ty≥_to_°rög
(
medü_ty≥
));

154 i‡(!(
Êags
 & 
MEDIA_CTRL_FLAG_FORCE
)) {

155 
vÆid©i⁄
 = 
	`vÆid©e_medü_£À˘i⁄
(
nic
, 
medü_ty≥
, 
NULL
, 0);

156 i‡(
vÆid©i⁄
 !
SUCCESS
) {

157 
	`LOG_ERROR
("Medü vÆid©i⁄ faûed: %d", 
vÆid©i⁄
);

158  
vÆid©i⁄
;

162 
uöt8_t
 
ßved_wödow
;

163 
ªsu…
 = 
	`ßve_™d_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, &
ßved_wödow
);

164 i‡(
ªsu…
 !
SUCCESS
) {

165 
	`LOG_ERROR
("FaûedÅÿ£À˘ Wödow 4: %d", 
ªsu…
);

166  
ªsu…
;

170 
ªsu…
 = 
	`c⁄figuª_medü_ªgi°îs
(
nic
, 
medü_ty≥
,

171 (
Êags
 & 
MEDIA_CTRL_FLAG_PRESERVE_DUPLEX
) ?

172 
nic
->
fuŒ_du∂ex
 : 
Ál£
);

174 i‡(
ªsu…
 !
SUCCESS
) {

175 
	`LOG_ERROR
("FaûedÅÿc⁄figuª medüÑegi°îs: %d", 
ªsu…
);

176 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

177  
ªsu…
;

181 
	`mdñay
(
MEDIA_SWITCH_DELAY_MS
);

184 i‡(!(
Êags
 & 
MEDIA_CTRL_FLAG_NO_AUTO_DETECT
)) {

185 
lök_ã°_ªsu…_t
 
ã°_ªsu…
;

186 
ªsu…
 = 
	`ã°_lök_bót
(
nic
, 
medü_ty≥
, 
MEDIA_TEST_DURATION_10BASET_MS
, &
ã°_ªsu…
);

188 i‡(
ªsu…
 !
SUCCESS
) {

189 
	`LOG_WARNING
("LökÅe° faûed f‹ %s: %d", 
	`medü_ty≥_to_°rög
(
medü_ty≥
), 
ªsu…
);

190 i‡(!(
Êags
 & 
MEDIA_CTRL_FLAG_FORCE
)) {

191 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

192  
MEDIA_ERROR_NO_LINK
;

195 
	`LOG_INFO
("LökÅe°Öas£d f‹ %s", 
	`medü_ty≥_to_°rög
(
medü_ty≥
));

200 
nic
->
cuºít_medü
 = 
medü_ty≥
;

201 
nic
->
medü_c⁄fig_sour˚
 = (
Êags
 & 
MEDIA_CTRL_FLAG_FORCE
) ?

202 
MEDIA_CONFIG_USER_FORCED
 : 
MEDIA_CONFIG_AUTO_DETECT
;

204 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

206 
	`LOG_INFO
("Suc˚ssfuŒy sñe˘ed medü: %s", 
	`medü_ty≥_to_°rög
(
medü_ty≥
));

207  
SUCCESS
;

208 
	}
}

213 
medü_ty≥_t
 
	$auto_dëe˘_medü
(
nic_öfo_t
 *
nic
, c⁄° 
medü_dëe˘_c⁄fig_t
 *
c⁄fig
) {

214 i‡(!
nic
) {

215 
	`LOG_ERROR
("Invalid NICÖointer");

216  
MEDIA_TYPE_UNKNOWN
;

220 
medü_dëe˘_c⁄fig_t
 
deÁu…_c⁄fig
 = 
MEDIA_DETECT_CONFIG_DEFAULT
;

221 i‡(!
c⁄fig
) {

222 
c⁄fig
 = &
deÁu…_c⁄fig
;

225 
	`LOG_INFO
("Sèπögáuto-dëe˘i⁄ f‹ medüÅy≥†—imeout: %u ms)", 
c⁄fig
->
timeout_ms
);

228 i‡(!(
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_AUTO_SELECT
)) {

229 
	`LOG_WARNING
("NIC doesÇot supportáuto-detection, using default media");

230  
	`gë_deÁu…_medü_f‹_nic
(
nic
);

233 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

234 
medü_ty≥_t
 
dëe˘ed_medü
 = 
MEDIA_TYPE_UNKNOWN
;

237 
uöt8_t
 
©ãm±
 = 0;áâem± < 
c⁄fig
->
ªåy_cou¡
;áttempt++) {

238 i‡(
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 >
c⁄fig
->
timeout_ms
) {

239 
	`LOG_WARNING
("Auto-detectionÅimeoutÑeached");

243 
	`LOG_DEBUG
("Auto-dëe˘i⁄áâem± %d/%d", 
©ãm±
 + 1, 
c⁄fig
->
ªåy_cou¡
);

245 
dëe˘ed_medü
 = 
	`dëe˘_be°_medü_f‹_v¨ü¡
(
nic
, 
c⁄fig
);

246 i‡(
dëe˘ed_medü
 !
MEDIA_TYPE_UNKNOWN
) {

250 i‡(
©ãm±
 < 
c⁄fig
->
ªåy_cou¡
 - 1) {

251 
	`mdñay
(500);

255 i‡(
dëe˘ed_medü
 !
MEDIA_TYPE_UNKNOWN
) {

256 
	`LOG_INFO
("Auto-dëe˘ed medü: %s", 
	`medü_ty≥_to_°rög
(
dëe˘ed_medü
));

259 
ªsu…
 = 
	`£À˘_medü_å™s˚ivî
(
nic
, 
dëe˘ed_medü
, 0);

260 i‡(
ªsu…
 !
SUCCESS
) {

261 
	`LOG_ERROR
("FaûedÅÿc⁄figuªáuto-dëe˘ed medü: %d", 
ªsu…
);

262  
MEDIA_TYPE_UNKNOWN
;

265 
nic
->
dëe˘ed_medü
 = detected_media;

266 
nic
->
medü_dëe˘i⁄_°©e
 = 
MEDIA_DETECT_COMPLETED
;

268 
	`LOG_WARNING
("Auto-detection failed,Ço suitable media found");

269 
nic
->
medü_dëe˘i⁄_°©e
 = 
MEDIA_DETECT_FAILED
;

272  
dëe˘ed_medü
;

273 
	}
}

278 
	$ã°_lök_bót
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
, 
uöt32_t
 
ã°_duøti⁄_ms
,

279 
lök_ã°_ªsu…_t
 *
ªsu…
) {

280 i‡(!
nic
 || !
ªsu…
) {

281  
ERROR_INVALID_PARAM
;

284 
	`LOG_DEBUG
("TestingÜink beat for %s (duration: %u ms)",

285 
	`medü_ty≥_to_°rög
(
medü_ty≥
), 
ã°_duøti⁄_ms
);

288 
	`˝u_›t_memzîo
(
ªsu…
, (
lök_ã°_ªsu…_t
));

289 
ªsu…
->
ã°ed_medü
 = 
medü_ty≥
;

291 
uöt8_t
 
ßved_wödow
;

292 
ªt
 = 
	`ßve_™d_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, &
ßved_wödow
);

293 i‡(
ªt
 !
SUCCESS
) {

294  
ªt
;

298 
ªt
 = 
	`c⁄figuª_medü_•ecific_ªgi°îs
(
nic
, 
medü_ty≥
, 
Ál£
);

299 i‡(
ªt
 !
SUCCESS
) {

300 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

301  
ªt
;

305 
	`mdñay
(
MEDIA_STABILIZATION_DELAY_MS
);

307 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

308 
uöt32_t
 
lök_up_cou¡
 = 0;

309 
uöt32_t
 
tŸÆ_checks
 = 0;

312 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 < 
ã°_duøti⁄_ms
) {

313 
uöt16_t
 
√tdüg
 = 
	`ªad_√tw‹k_dügno°ics_ªgi°î
(
nic
);

314 
ªsu…
->
√tw‹k_dügno°ics
 = 
√tdüg
;

316 
boﬁ
 
lök_dëe˘ed
 = 
Ál£
;

319 
medü_ty≥
) {

320 
MEDIA_TYPE_10BASE_T
:

322 
lök_dëe˘ed
 = (
√tdüg
 & 0x0800) != 0;

323 i‡(
lök_dëe˘ed
) {

324 
ªsu…
->
ã°_Êags
 |
LINK_TEST_RESULT_LINK_UP
;

328 
MEDIA_TYPE_10BASE_2
:

330 
lök_dëe˘ed
 = 
åue
;

331 
ªsu…
->
ã°_Êags
 |
LINK_TEST_RESULT_CARRIER_DETECT
;

334 
MEDIA_TYPE_AUI
:

336 i‡(
√tdüg
 & 0x0200) {

337 
ªsu…
->
ã°_Êags
 |
LINK_TEST_RESULT_SQE_TEST_PASSED
;

338 
lök_dëe˘ed
 = 
åue
;

342 
MEDIA_TYPE_10BASE_FL
:

344 
lök_dëe˘ed
 = (
√tdüg
 & 0x0800) != 0;

345 i‡(
lök_dëe˘ed
) {

346 
ªsu…
->
ã°_Êags
 |
LINK_TEST_RESULT_LINK_UP
;

351 
	`LOG_WARNING
("LökÅe°ÇŸ im∂emíãd f‹ medüÅy≥ %d", 
medü_ty≥
);

355 i‡(
lök_dëe˘ed
) {

356 
lök_up_cou¡
++;

359 
tŸÆ_checks
++;

360 
	`˝u_›t_udñay
(
LINK_BEAT_CHECK_INTERVAL_MS
 * 1000);

363 
ªsu…
->
ã°_duøti⁄_ms
 = 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
;

364 
ªsu…
->
lök_up_time_ms
 = (
lök_up_cou¡
 * 
LINK_BEAT_CHECK_INTERVAL_MS
);

367 i‡(
tŸÆ_checks
 > 0) {

368 
ªsu…
->
sig«l_quÆôy
 = (
uöt8_t
)((
lök_up_cou¡
 * 100Ë/ 
tŸÆ_checks
);

372 i‡(
ªsu…
->
sig«l_quÆôy
 > 80) {

373 
ªsu…
->
ã°_Êags
 |
LINK_TEST_RESULT_LINK_STABLE
;

376 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

378 
	`LOG_DEBUG
("LinkÅest complete: quality=%d%%, up_time=%u ms",

379 
ªsu…
->
sig«l_quÆôy
,Ñesu…->
lök_up_time_ms
);

381  (
ªsu…
->
sig«l_quÆôy
 > 50Ë? 
SUCCESS
 : 
MEDIA_ERROR_NO_LINK
;

382 
	}
}

387 
	$c⁄figuª_medü_ªgi°îs
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
, 
boﬁ
 
íabÀ_fuŒ_du∂ex
) {

388 i‡(!
nic
) {

389  
ERROR_INVALID_PARAM
;

392 
	`LOG_DEBUG
("Configuring mediaÑegisters for %s (full_duplex=%d)",

393 
	`medü_ty≥_to_°rög
(
medü_ty≥
), 
íabÀ_fuŒ_du∂ex
);

396 
ªsu…
 = 
	`ß„_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, 
WINDOW_SELECT_TIMEOUT_MS
);

397 i‡(
ªsu…
 !
SUCCESS
) {

398  
ªsu…
;

401  
	`c⁄figuª_medü_•ecific_ªgi°îs
(
nic
, 
medü_ty≥
, 
íabÀ_fuŒ_du∂ex
);

402 
	}
}

407 
	$vÆid©e_medü_£À˘i⁄
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
,

408 *
îr‹_msg
, 
size_t
 
îr‹_msg_size
) {

409 i‡(!
nic
) {

410 i‡(
îr‹_msg
 && 
îr‹_msg_size
 > 0) {

411 
	`°∫˝y
(
îr‹_msg
, "InvÆid NICÖoöãr", 
îr‹_msg_size
 - 1);

412 
îr‹_msg
[
îr‹_msg_size
 - 1] = '\0';

414  
ERROR_INVALID_PARAM
;

418 i‡(
medü_ty≥
 =
MEDIA_TYPE_UNKNOWN
) {

419 i‡(
îr‹_msg
 && 
îr‹_msg_size
 > 0) {

420 
	`°∫˝y
(
îr‹_msg
, "Unknow¿medüÅy≥", 
îr‹_msg_size
 - 1);

421 
îr‹_msg
[
îr‹_msg_size
 - 1] = '\0';

423  
MEDIA_ERROR_INVALID_MEDIA
;

427 i‡(!
	`is_medü_suµ‹ãd_by_nic
(
nic
, 
medü_ty≥
)) {

428 i‡(
îr‹_msg
 && 
îr‹_msg_size
 > 0) {

429 
	`¢¥ötf
(
îr‹_msg
, 
îr‹_msg_size
, "Media %sÇot supported byÅhis NIC variant",

430 
	`medü_ty≥_to_°rög
(
medü_ty≥
));

432  
MEDIA_ERROR_MEDIA_NOT_SUPPORTED
;

436 i‡(
nic
->
°©us
 & 
NIC_STATUS_ERROR
) {

437 i‡(
îr‹_msg
 && 
îr‹_msg_size
 > 0) {

438 
	`°∫˝y
(
îr‹_msg
, "NIC i†öÉº‹ sèã", 
îr‹_msg_size
 - 1);

439 
îr‹_msg
[
îr‹_msg_size
 - 1] = '\0';

441  
MEDIA_ERROR_VALIDATION_FAILED
;

444 
	`LOG_DEBUG
("Medü vÆid©i⁄Öas£d f‹ %s", 
	`medü_ty≥_to_°rög
(
medü_ty≥
));

445  
SUCCESS
;

446 
	}
}

453 
	$medü_c⁄åﬁ_öô
(
nic_öfo_t
 *
nic
) {

454 i‡(!
nic
) {

455  
ERROR_INVALID_PARAM
;

458 
	`LOG_DEBUG
("Inôülizög medü c⁄åﬁ f‹ NICÅy≥ %d", 
nic
->
ty≥
);

461 
nic
->
cuºít_medü
 = 
MEDIA_TYPE_UNKNOWN
;

462 
nic
->
dëe˘ed_medü
 = 
MEDIA_TYPE_UNKNOWN
;

463 
nic
->
medü_dëe˘i⁄_°©e
 = 
MEDIA_DETECT_NONE
;

466 i‡(
nic
->
ty≥
 =
NIC_TYPE_3C509B
) {

469 
nic
->
medü_ˇ∑bûôõs
 = 
MEDIA_CAPS_3C509B_COMBO
;

472 
	`LOG_INFO
("Media control initialized for NIC");

473  
SUCCESS
;

474 
	}
}

479 
	$medü_c⁄åﬁ_˛ónup
(
nic_öfo_t
 *
nic
) {

480 i‡(!
nic
) {

481  
ERROR_INVALID_PARAM
;

484 
	`LOG_DEBUG
("Cleaning up media control");

487 
nic
->
cuºít_medü
 = 
MEDIA_TYPE_UNKNOWN
;

488 
nic
->
dëe˘ed_medü
 = 
MEDIA_TYPE_UNKNOWN
;

489 
nic
->
medü_dëe˘i⁄_°©e
 = 
MEDIA_DETECT_NONE
;

491  
SUCCESS
;

492 
	}
}

497 
	$gë_medü_c⁄fig_°©e
(
nic_öfo_t
 *
nic
, 
medü_c⁄fig_°©e_t
 *
°©e
) {

498 i‡(!
nic
 || !
°©e
) {

499  
ERROR_INVALID_PARAM
;

502 
	`˝u_›t_memzîo
(
°©e
, (
medü_c⁄fig_°©e_t
));

504 
°©e
->
cuºít_medü
 = 
nic
->current_media;

505 
°©e
->
dëe˘ed_medü
 = 
nic
->detected_media;

506 
°©e
->
dëe˘i⁄_°©e
 = 
nic
->
medü_dëe˘i⁄_°©e
;

507 
°©e
->
œ°_c⁄fig_time
 = 
	`gë_sy°em_time°amp_ms
();

510 
uöt8_t
 
ßved_wödow
;

511 i‡(
	`ßve_™d_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, &
ßved_wödow
Ë=
SUCCESS
) {

512 
°©e
->
medü_c⁄åﬁ_ªgi°î
 = 
	`ªad_medü_c⁄åﬁ_ªgi°î
(
nic
);

513 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

516  
SUCCESS
;

517 
	}
}

524 
	$£À˘_wödow_ß„
(
nic_öfo_t
 *
nic
, 
uöt8_t
 
wödow
) {

525  
	`ß„_£À˘_wödow
(
nic
, 
wödow
, 
WINDOW_SELECT_TIMEOUT_MS
);

526 
	}
}

531 
	$waô_f‹_cmd_com∂ëi⁄
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
) {

532  
	`waô_f‹_comm™d_ªady
(
nic
, 
timeout_ms
);

533 
	}
}

538 
uöt16_t
 
	$ªad_medü_c⁄åﬁ_ªgi°î
(
nic_öfo_t
 *
nic
) {

539  
	`˝u_›t_öw
(
nic
->
io_ba£
 + 
_3C509B_MEDIA_CTRL
);

540 
	}
}

545 
	$wrôe_medü_c⁄åﬁ_ªgi°î
(
nic_öfo_t
 *
nic
, 
uöt16_t
 
vÆue
) {

546 
	`˝u_›t_outw
(
nic
->
io_ba£
 + 
_3C509B_MEDIA_CTRL
, 
vÆue
);

547  
SUCCESS
;

548 
	}
}

553 
uöt16_t
 
	$ªad_√tw‹k_dügno°ics_ªgi°î
(
nic_öfo_t
 *
nic
) {

554  
	`˝u_›t_öw
(
nic
->
io_ba£
 + 
_3C509B_W4_NETDIAG
);

555 
	}
}

560 
	$c⁄figuª_medü_•ecific_ªgi°îs
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
, 
boﬁ
 
fuŒ_du∂ex
) {

561 
uöt16_t
 
medü_˘æ_vÆue
 = 0;

563 
medü_ty≥
) {

564 
MEDIA_TYPE_10BASE_T
:

565 
medü_˘æ_vÆue
 = 
_3C509B_MEDIA_TP
;

566 i‡(
fuŒ_du∂ex
 && (
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_FULL_DUPLEX
)) {

567 
medü_˘æ_vÆue
 |
_3C509B_FD_ENABLE
;

571 
MEDIA_TYPE_10BASE_2
:

572 
medü_˘æ_vÆue
 = 
_3C509B_MEDIA_BNC
;

574 
	`˝u_›t_outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_START_COAX
);

575 
	`waô_f‹_cmd_com∂ëi⁄
(
nic
, 1000);

578 
MEDIA_TYPE_AUI
:

579 
medü_˘æ_vÆue
 = 
_3C509B_MEDIA_AUI
 | 
_3C509B_MEDIA_SQE
;

582 
MEDIA_TYPE_10BASE_FL
:

583 
medü_˘æ_vÆue
 = 
_3C509B_MEDIA_TP
;

584 i‡(
fuŒ_du∂ex
) {

585 
medü_˘æ_vÆue
 |
_3C509B_FD_ENABLE
;

590 
	`LOG_ERROR
("Unsuµ‹ãd medüÅy≥: %d", 
medü_ty≥
);

591  
MEDIA_ERROR_MEDIA_NOT_SUPPORTED
;

595 
ªsu…
 = 
	`wrôe_medü_c⁄åﬁ_ªgi°î
(
nic
, 
medü_˘æ_vÆue
);

596 i‡(
ªsu…
 !
SUCCESS
) {

597 
	`LOG_ERROR
("FailedÅo write media controlÑegister");

598  
MEDIA_ERROR_REGISTER_ACCESS
;

601 
	`LOG_DEBUG
("C⁄figuªd medüÑegi°îs: 0x%04X", 
medü_˘æ_vÆue
);

602  
SUCCESS
;

603 
	}
}

608 
medü_ty≥_t
 
	$dëe˘_be°_medü_f‹_v¨ü¡
(
nic_öfo_t
 *
nic
, c⁄° 
medü_dëe˘_c⁄fig_t
 *
c⁄fig
) {

610 
medü_ty≥_t
 
ã°_‹dî
[] = {

611 
MEDIA_TYPE_10BASE_T
,

612 
MEDIA_TYPE_AUI
,

613 
MEDIA_TYPE_10BASE_2


616 
size_t
 
num_medü_ty≥s
 = (
ã°_‹dî
) / (test_order[0]);

618 
size_t
 
i
 = 0; i < 
num_medü_ty≥s
; i++) {

619 
medü_ty≥_t
 
medü
 = 
ã°_‹dî
[
i
];

622 i‡(!
	`is_medü_suµ‹ãd_by_nic
(
nic
, 
medü
)) {

626 
	`LOG_DEBUG
("Te°ög medü: %s", 
	`medü_ty≥_to_°rög
(
medü
));

628 
lök_ã°_ªsu…_t
 
ã°_ªsu…
;

629 
ªsu…
 = 
	`ã°_lök_bót
(
nic
, 
medü
, 
c⁄fig
->
ã°_duøti⁄_ms
, &
ã°_ªsu…
);

631 i‡(
ªsu…
 =
SUCCESS
 && 
ã°_ªsu…
.
sig«l_quÆôy
 > 70) {

632 
	`LOG_INFO
("Detected working media: %s (quality: %d%%)",

633 
	`medü_ty≥_to_°rög
(
medü
), 
ã°_ªsu…
.
sig«l_quÆôy
);

634  
medü
;

638 
	`LOG_WARNING
("No working media detected");

639  
MEDIA_TYPE_UNKNOWN
;

640 
	}
}

647 
	$is_medü_suµ‹ãd_by_nic
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
) {

648 i‡(!
nic
) {

652 
medü_ty≥
) {

653 
MEDIA_TYPE_10BASE_T
:

654  (
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_10BASE_T
) != 0;

655 
MEDIA_TYPE_10BASE_2
:

656  (
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_10BASE_2
) != 0;

657 
MEDIA_TYPE_AUI
:

658  (
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_AUI
) != 0;

659 
MEDIA_TYPE_10BASE_FL
:

660  (
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_10BASE_FL
) != 0;

664 
	}
}

669 
medü_ty≥_t
 
	$gë_deÁu…_medü_f‹_nic
(
nic_öfo_t
 *
nic
) {

670 i‡(!
nic
) {

671  
MEDIA_TYPE_UNKNOWN
;

675 i‡(
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_10BASE_T
) {

676  
MEDIA_TYPE_10BASE_T
;

678 i‡(
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_AUI
) {

679  
MEDIA_TYPE_AUI
;

681 i‡(
nic
->
medü_ˇ∑bûôõs
 & 
MEDIA_CAP_10BASE_2
) {

682  
MEDIA_TYPE_10BASE_2
;

685  
MEDIA_TYPE_UNKNOWN
;

686 
	}
}

691 c⁄° * 
	$medü_îr‹_to_°rög
(
îr‹_code
) {

692 
îr‹_code
) {

693 
MEDIA_ERROR_NONE
:  "NoÉrror";

694 
MEDIA_ERROR_INVALID_MEDIA
:  "Invalid mediaÅype";

695 
MEDIA_ERROR_MEDIA_NOT_SUPPORTED
:  "MediaÇot supported";

696 
MEDIA_ERROR_NO_LINK
:  "NoÜink detected";

697 
MEDIA_ERROR_LINK_TEST_FAILED
:  "LinkÅest failed";

698 
MEDIA_ERROR_AUTO_DETECT_FAILED
:  "Auto-detection failed";

699 
MEDIA_ERROR_REGISTER_ACCESS
:  "Registeráccess failed";

700 
MEDIA_ERROR_WINDOW_TIMEOUT
:  "Window selectionÅimeout";

701 
MEDIA_ERROR_TRANSCEIVER_FAULT
:  "Transceiver fault";

702 
MEDIA_ERROR_MEDIA_CONFLICT
:  "Media configuration conflict";

703 
MEDIA_ERROR_VALIDATION_FAILED
:  "Media validation failed";

706 
	}
}

711 
uöt8_t
 
	$gë_medü_dëe˘i⁄_¥i‹ôy
(
medü_ty≥_t
 
medü_ty≥
, 
uöt8_t
 
nic_v¨ü¡
) {

713 
medü_ty≥
) {

714 
MEDIA_TYPE_10BASE_T
:  1;

715 
MEDIA_TYPE_AUI
:  2;

716 
MEDIA_TYPE_10BASE_2
:  3;

717 
MEDIA_TYPE_10BASE_FL
:  4;

720 
	}
}

725 
	$check_medü_lök_°©us
(
nic_öfo_t
 *
nic
) {

726 i‡(!
nic
) {

730 
uöt8_t
 
ßved_wödow
;

731 
ªsu…
 = 
	`ßve_™d_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, &
ßved_wödow
);

732 i‡(
ªsu…
 !
SUCCESS
) {

736 
uöt16_t
 
√tdüg
 = 
	`ªad_√tw‹k_dügno°ics_ªgi°î
(
nic
);

737 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

740 
nic
->
cuºít_medü
) {

741 
MEDIA_TYPE_10BASE_T
:

742 
MEDIA_TYPE_10BASE_FL
:

743  (
√tdüg
 & 0x0800) ? 1 : 0;

744 
MEDIA_TYPE_AUI
:

745  (
√tdüg
 & 0x0200) ? 1 : 0;

746 
MEDIA_TYPE_10BASE_2
:

751 
	}
}

756 
	$run_medü_dügno°ics
(
nic_öfo_t
 *
nic
, 
boﬁ
 
ã°_Æl_medü
) {

757 i‡(!
nic
) {

758  
ERROR_INVALID_PARAM
;

761 
	`LOG_INFO
("Ru¬ög medü dügno°ic†—e°_Æl=%d)", 
ã°_Æl_medü
);

763 
îr‹s
 = 0;

765 i‡(
ã°_Æl_medü
) {

767 
medü_ty≥_t
 
ã°_medü
[] = {

768 
MEDIA_TYPE_10BASE_T
, 
MEDIA_TYPE_10BASE_2
,

769 
MEDIA_TYPE_AUI
, 
MEDIA_TYPE_10BASE_FL


772 
size_t
 
i
 = 0; i < (
ã°_medü
) / (test_media[0]); i++) {

773 i‡(
	`is_medü_suµ‹ãd_by_nic
(
nic
, 
ã°_medü
[
i
])) {

774 
lök_ã°_ªsu…_t
 
ªsu…
;

775 
ã°_ªsu…
 = 
	`ã°_lök_bót
(
nic
, 
ã°_medü
[
i
], 1000, &
ªsu…
);

777 
	`LOG_INFO
("Media %sÅest: %s (quality: %d%%)",

778 
	`medü_ty≥_to_°rög
(
ã°_medü
[
i
]),

779 (
ã°_ªsu…
 =
SUCCESS
) ? "PASS" : "FAIL",

780 
ªsu…
.
sig«l_quÆôy
);

782 i‡(
ã°_ªsu…
 !
SUCCESS
) {

783 
îr‹s
++;

789 i‡(
nic
->
cuºít_medü
 !
MEDIA_TYPE_UNKNOWN
) {

790 
lök_ã°_ªsu…_t
 
ªsu…
;

791 
ã°_ªsu…
 = 
	`ã°_lök_bót
(
nic
,Çic->
cuºít_medü
, 2000, &
ªsu…
);

793 
	`LOG_INFO
("Current media %sÅest: %s (quality: %d%%)",

794 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
),

795 (
ã°_ªsu…
 =
SUCCESS
) ? "PASS" : "FAIL",

796 
ªsu…
.
sig«l_quÆôy
);

798 i‡(
ã°_ªsu…
 !
SUCCESS
) {

799 
îr‹s
++;

802 
	`LOG_WARNING
("No current media configured forÅesting");

803 
îr‹s
++;

807 
	`LOG_INFO
("Medü dügno°ic†com∂ëe: %dÉº‹s", 
îr‹s
);

808  (
îr‹s
 =0Ë? 
SUCCESS
 : 
ERROR_HARDWARE
;

809 
	}
}

816 
	$c⁄figuª_10ba£t_medü
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ_fuŒ_du∂ex
) {

817  
	`c⁄figuª_medü_ªgi°îs
(
nic
, 
MEDIA_TYPE_10BASE_T
, 
íabÀ_fuŒ_du∂ex
);

818 
	}
}

823 
	$c⁄figuª_10ba£2_medü
(
nic_öfo_t
 *
nic
) {

824  
	`c⁄figuª_medü_ªgi°îs
(
nic
, 
MEDIA_TYPE_10BASE_2
, 
Ál£
);

825 
	}
}

830 
	$c⁄figuª_aui_medü
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ_sqe_ã°
) {

832  
	`c⁄figuª_medü_ªgi°îs
(
nic
, 
MEDIA_TYPE_AUI
, 
Ál£
);

833 
	}
}

838 
	$c⁄figuª_fibî_medü
(
nic_öfo_t
 *
nic
, 
boﬁ
 
íabÀ_fuŒ_du∂ex
) {

839  
	`c⁄figuª_medü_ªgi°îs
(
nic
, 
MEDIA_TYPE_10BASE_FL
, 
íabÀ_fuŒ_du∂ex
);

840 
	}
}

845 
	$f‹˚_medü_£À˘i⁄
(
nic_öfo_t
 *
nic
, 
medü_ty≥_t
 
medü_ty≥
) {

846  
	`£À˘_medü_å™s˚ivî
(
nic
, 
medü_ty≥
, 
MEDIA_CTRL_FLAG_FORCE
);

847 
	}
}

852 
	$ª£t_medü_c⁄figuøti⁄
(
nic_öfo_t
 *
nic
) {

853 i‡(!
nic
) {

854  
ERROR_INVALID_PARAM
;

857 
	`LOG_INFO
("Resetting media configurationÅo defaults");

860 
nic
->
cuºít_medü
 = 
MEDIA_TYPE_UNKNOWN
;

861 
nic
->
dëe˘ed_medü
 = 
MEDIA_TYPE_UNKNOWN
;

862 
nic
->
medü_dëe˘i⁄_°©e
 = 
MEDIA_DETECT_NONE
;

865 
medü_ty≥_t
 
deÁu…_medü
 = 
	`gë_deÁu…_medü_f‹_nic
(
nic
);

866 i‡(
deÁu…_medü
 !
MEDIA_TYPE_UNKNOWN
) {

867  
	`£À˘_medü_å™s˚ivî
(
nic
, 
deÁu…_medü
, 0);

870  
SUCCESS
;

871 
	}
}

876 
m⁄ô‹_lök_ch™ges
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
m⁄ô‹_duøti⁄_ms
,

877 (*
ˇŒback
)(
nic_öfo_t
 *
nic
, 
boﬁ
 
lök_up
)) {

878 i‡(!
nic
) {

879  
ERROR_INVALID_PARAM
;

882 
	`LOG_DEBUG
("M⁄ô‹ögÜök ch™ge†f‹ %u ms", 
m⁄ô‹_duøti⁄_ms
);

884 
uöt32_t
 
°¨t_time
 = 
	`gë_sy°em_time°amp_ms
();

885 
œ°_lök_°©us
 = 
	`check_medü_lök_°©us
(
nic
);

886 
ch™ge_cou¡
 = 0;

888 
	`gë_sy°em_time°amp_ms
(Ë- 
°¨t_time
 < 
m⁄ô‹_duøti⁄_ms
) {

889 
cuºít_lök_°©us
 = 
	`check_medü_lök_°©us
(
nic
);

891 i‡(
cuºít_lök_°©us
 !
œ°_lök_°©us
 && current_link_status >= 0) {

892 
ch™ge_cou¡
++;

893 
	`LOG_DEBUG
("Link status changed: %s",

894 
cuºít_lök_°©us
 ? "UP" : "DOWN");

896 i‡(
ˇŒback
) {

897 
	`ˇŒback
(
nic
, 
cuºít_lök_°©us
 ? 
åue
 : 
Ál£
);

900 
œ°_lök_°©us
 = 
cuºít_lök_°©us
;

903 
	`mdñay
(100);

906 
	`LOG_DEBUG
("Lök m⁄ô‹ög com∂ëe: %d ch™ge†dëe˘ed", 
ch™ge_cou¡
);

907  
ch™ge_cou¡
;

908 
	}
}

913 
	$ã°_sig«l_quÆôy
(
nic_öfo_t
 *
nic
, 
uöt8_t
 *
quÆôy
) {

914 i‡(!
nic
 || !
quÆôy
) {

915  
ERROR_INVALID_PARAM
;

918 
lök_ã°_ªsu…_t
 
ã°_ªsu…
;

919 
ªsu…
 = 
	`ã°_lök_bót
(
nic
,Çic->
cuºít_medü
, 1000, &
ã°_ªsu…
);

921 i‡(
ªsu…
 =
SUCCESS
) {

922 *
quÆôy
 = 
ã°_ªsu…
.
sig«l_quÆôy
;

924 *
quÆôy
 = 0;

927  
ªsu…
;

928 
	}
}

933 
	$dump_medü_ªgi°îs
(
nic_öfo_t
 *
nic
, *
buf„r
, 
size_t
 
buf„r_size
) {

934 i‡(!
nic
 || !
buf„r
 || 
buf„r_size
 == 0) {

935  
ERROR_INVALID_PARAM
;

938 
uöt8_t
 
ßved_wödow
;

939 
ªsu…
 = 
	`ßve_™d_£À˘_wödow
(
nic
, 
_3C509B_WINDOW_4
, &
ßved_wödow
);

940 i‡(
ªsu…
 !
SUCCESS
) {

941  
ªsu…
;

944 
uöt16_t
 
medü_˘æ
 = 
	`ªad_medü_c⁄åﬁ_ªgi°î
(
nic
);

945 
uöt16_t
 
√t_düg
 = 
	`ªad_√tw‹k_dügno°ics_ªgi°î
(
nic
);

947 
	`ª°‹e_wödow
(
nic
, 
ßved_wödow
);

949 
ch¨s_wrôãn
 = 
	`¢¥ötf
(
buf„r
, 
buf„r_size
,

956 
medü_˘æ
, 
√t_düg
,

957 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
),

958 
	`medü_ty≥_to_°rög
(
nic
->
dëe˘ed_medü
),

959 
nic
->
medü_dëe˘i⁄_°©e
);

961  
ch¨s_wrôãn
;

962 
	}
}

967 
	$gë_medü_öfo_°rög
(
nic_öfo_t
 *
nic
, *
buf„r
, 
size_t
 
buf„r_size
) {

968 i‡(!
nic
 || !
buf„r
 || 
buf„r_size
 == 0) {

969  
ERROR_INVALID_PARAM
;

972 c⁄° * 
c⁄fig_sour˚_°r
 = "Unknown";

973 
nic
->
medü_c⁄fig_sour˚
) {

974 
MEDIA_CONFIG_DEFAULT
: 
c⁄fig_sour˚_°r
 = "Default"; ;

975 
MEDIA_CONFIG_EEPROM
: 
c⁄fig_sour˚_°r
 = "EEPROM"; ;

976 
MEDIA_CONFIG_AUTO_DETECT
: 
c⁄fig_sour˚_°r
 = "Auto-Detect"; ;

977 
MEDIA_CONFIG_USER_FORCED
: 
c⁄fig_sour˚_°r
 = "User-Forced"; ;

978 
MEDIA_CONFIG_DRIVER_FORCED
: 
c⁄fig_sour˚_°r
 = "Driver-Forced"; ;

981 
lök_°©us
 = 
	`check_medü_lök_°©us
(
nic
);

983 
ch¨s_wrôãn
 = 
	`¢¥ötf
(
buf„r
, 
buf„r_size
,

985 
	`medü_ty≥_to_°rög
(
nic
->
cuºít_medü
),

986 (
lök_°©us
 > 0) ? "UP" : (link_status == 0) ? "DOWN" : "ERROR",

987 
c⁄fig_sour˚_°r
,

988 
nic
->
medü_ˇ∑bûôõs
);

990  
ch¨s_wrôãn
;

991 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/memory.c

13 
	~"../../ö˛ude/mem‹y.h
"

14 
	~"../../ö˛ude/xms_dëe˘.h
"

15 
	~"../../ö˛ude/˝u_dëe˘.h
"

16 
	~"../../ö˛ude/loggög.h
"

17 
	~<dos.h
>

18 
	~<°rög.h
>

19 
	~<°dlib.h
>

22 
	#MEMORY_TIER_XMS
 1

	)

23 
	#MEMORY_TIER_UMB
 2

	)

24 
	#MEMORY_TIER_CONVENTIONAL
 3

	)

27 
	#UMB_ALLOCATE
 0x5800

	)

28 
	#UMB_FREE
 0x5801

	)

29 
	#UMB_GET_STRATEGY
 0x5802

	)

30 
	#UMB_SET_STRATEGY
 0x5803

	)

33 
	#MEM_MAGIC_ALLOCATED
 0xABCDEF00

	)

34 
	#MEM_MAGIC_FREE
 0xDEADBEEF

	)

37 
mem_poﬁ_t
 
	gg_gíîÆ_poﬁ
;

38 
mem_poﬁ_t
 
	gg_∑ckë_poﬁ
;

39 
mem_poﬁ_t
 
	gg_dma_poﬁ
;

40 
mem_°©s_t
 
	gg_mem_°©s
;

44 
boﬁ
 
	mxms_avaûabÀ
;

45 
boﬁ
 
	mumb_avaûabÀ
;

46 
boﬁ
 
	möôülized
;

47 
uöt8_t
 
	mÆloˇti⁄_°øãgy
;

48 
mem_îr‹_t
 
	mœ°_îr‹
;

49 (*
	mîr‹_h™dÀr
)(
mem_îr‹_t
 
	mîr‹
, c⁄° * 
	mmesßge
);

50 } 
	gg_mem‹y_sy°em
;

54 
uöt16_t
 
	mh™dÀs
[
XMS_MAX_HANDLES
];

55 
uöt32_t
 
	msizes
[
XMS_MAX_HANDLES
];

56 
boﬁ
 
	mh™dÀ_u£d
[
XMS_MAX_HANDLES
];

57 
uöt32_t
 
	mtŸÆ_Æloˇãd
;

58 
uöt32_t
 
	m≥ak_Æloˇãd
;

59 } 
	gg_xms_tõr
;

63 
uöt16_t
 
	m£gmíts
[16];

64 
uöt16_t
 
	msizes
[16];

65 
boﬁ
 
	m£gmít_u£d
[16];

66 
uöt32_t
 
	mtŸÆ_Æloˇãd
;

67 
uöt32_t
 
	m≥ak_Æloˇãd
;

68 
uöt8_t
 
	mh™dÀ_cou¡
;

69 } 
	gg_umb_tõr
;

72 
mem‹y_dëe˘_umb
();

73 * 
mem‹y_Æloc_xms_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
);

74 * 
mem‹y_Æloc_umb_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
);

75 * 
mem‹y_Æloc_c⁄víti⁄Æ_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
);

76 
mem‹y_‰ì_xms_tõr
(*
±r
);

77 
mem‹y_‰ì_umb_tõr
(*
±r
);

78 
mem‹y_‰ì_c⁄víti⁄Æ_tõr
(*
±r
);

79 
mem‹y_£t_œ°_îr‹
(
mem_îr‹_t
 
îr‹
);

80 
mem_block_t
* 
mem‹y_gë_block_hódî
(*
±r
);

81 
boﬁ
 
mem‹y_vÆid©e_block
(
mem_block_t
 *
block
);

82 
mem‹y_c›y_32bô
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
);

83 
mem‹y_c›y_16bô
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
);

84 
mem‹y_£t_32bô
(*
±r
, 
uöt8_t
 
vÆue
, 
uöt32_t
 
size
);

85 
mem‹y_£t_16bô
(*
±r
, 
uöt8_t
 
vÆue
, 
uöt32_t
 
size
);

88 
mem‹y_°ªss_ã°_Æloˇti⁄_∑âîns
();

89 
mem‹y_°ªss_ã°_‰agmíèti⁄
();

90 
mem‹y_°ªss_ã°_Àak_dëe˘i⁄
();

91 
mem‹y_°ªss_ã°_bound¨y_c⁄dôi⁄s
();

92 
mem‹y_°ªss_ã°_c⁄cuºít_›î©i⁄s
();

93 
mem‹y_°ªss_ã°_tõr_swôchög
();

94 
mem‹y_vÆid©e_Æl_Æloˇti⁄s
();

95 
mem‹y_≥rf‹m_c‹ru±i⁄_ã°
();

96 
mem‹y_ã°_exåeme_Æloˇti⁄s
();

97 
mem‹y_simuœã_low_mem‹y_c⁄dôi⁄s
();

102 
	$mem‹y_öô
() {

103 i‡(
g_mem‹y_sy°em
.
öôülized
) {

107 
	`log_öfo
("InitializingÅhree-tier memory management system");

110 
	`mem£t
(&
g_mem‹y_sy°em
, 0, (g_memory_system));

111 
	`mem£t
(&
g_xms_tõr
, 0, (g_xms_tier));

112 
	`mem£t
(&
g_umb_tõr
, 0, (g_umb_tier));

113 
	`mem£t
(&
g_mem_°©s
, 0, (g_mem_stats));

116 i‡(
	`xms_dëe˘_™d_öô
() == 0) {

117 
g_mem‹y_sy°em
.
xms_avaûabÀ
 = 
åue
;

118 
	`log_öfo
("XMS Extended Memory (Tier 1)ávailable");

120 
	`log_öfo
("XMS Extended Memory (Tier 1)Çotávailable");

124 i‡(
	`mem‹y_dëe˘_umb
() == 0) {

125 
g_mem‹y_sy°em
.
umb_avaûabÀ
 = 
åue
;

126 
	`log_öfo
("UMB Upper Memory (Tier 2)ávailable");

128 
	`log_öfo
("UMB Upper Memory (Tier 2)Çotávailable");

132 
	`log_öfo
("Conventional Memory (Tier 3)ávailable");

135 
	`mem‹y_°©s_öô
(&
g_mem_°©s
);

138 
g_mem‹y_sy°em
.
Æloˇti⁄_°øãgy
 = 1;

140 
g_mem‹y_sy°em
.
öôülized
 = 
åue
;

142 
	`log_öfo
("Three-tier memory system initialized successfully");

144 
	}
}

149 
	$mem‹y_˛ónup
() {

150 
i
;

152 i‡(!
g_mem‹y_sy°em
.
öôülized
) {

156 
	`log_öfo
("Cleaning upÅhree-tier memory system");

159 i‡(
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

160 
i
 = 0; i < 
XMS_MAX_HANDLES
; i++) {

161 i‡(
g_xms_tõr
.
h™dÀ_u£d
[
i
]) {

162 
	`log_w¨nög
("Fªeög uƒñó£d XMS h™dÀ %04X", 
g_xms_tõr
.
h™dÀs
[
i
]);

163 
	`xms_‰ì
(
g_xms_tõr
.
h™dÀs
[
i
]);

166 
	`xms_˛ónup
();

170 i‡(
g_mem‹y_sy°em
.
umb_avaûabÀ
) {

171 
i
 = 0; i < 16; i++) {

172 i‡(
g_umb_tõr
.
£gmít_u£d
[
i
]) {

173 
	`log_w¨nög
("Fªeög uƒñó£d UMB segmíà%04X", 
g_umb_tõr
.
£gmíts
[
i
]);

174 
	`mem‹y_‰ì_dos_mem‹y
(
g_umb_tõr
.
£gmíts
[
i
]);

180 
	`mem£t
(&
g_mem‹y_sy°em
, 0, (g_memory_system));

181 
	`mem£t
(&
g_xms_tõr
, 0, (g_xms_tier));

182 
	`mem£t
(&
g_umb_tõr
, 0, (g_umb_tier));

184 
	`log_öfo
("Three-tier memory system cleanup completed");

185 
	}
}

191 
	$mem‹y_dëe˘_umb
() {

192 
REGS
 
ªgs
;

195 
ªgs
.
x
.
ax
 = 
UMB_GET_STRATEGY
;

196 
	`öt86
(0x21, &
ªgs
, &regs);

198 i‡(
ªgs
.
x
.
cÊag
) {

199 
	`log_debug
("UMBÇot supported by DOS");

204 
ªgs
.
x
.
ax
 = 
UMB_SET_STRATEGY
;

205 
ªgs
.
x
.
bx
 = 0x0080;

206 
	`öt86
(0x21, &
ªgs
, &regs);

208 i‡(
ªgs
.
x
.
cÊag
) {

209 
	`log_debug
("Cannot set UMBállocation strategy");

213 
	`log_debug
("UMB support detectedándÉnabled");

215 
	}
}

224 * 
	$mem‹y_Æloc
(
uöt32_t
 
size
, 
mem_ty≥_t
 
ty≥
, uöt32_à
Êags
) {

225 *
±r
 = 
NULL
;

227 i‡(!
g_mem‹y_sy°em
.
öôülized
) {

228 
	`mem‹y_£t_œ°_îr‹
(
MEM_ERROR_INVALID_POINTER
);

229  
NULL
;

232 i‡(
size
 == 0) {

233 
	`mem‹y_£t_œ°_îr‹
(
MEM_ERROR_INVALID_SIZE
);

234  
NULL
;

237 
	`log_debug
("AŒoˇtög %lu byãs,Åy≥ %d, fœg†0x%lX", 
size
, 
ty≥
, 
Êags
);

240 
uöt32_t
 
tŸÆ_size
 = 
size
 + (
mem_block_t
);

243 
g_mem‹y_sy°em
.
Æloˇti⁄_°øãgy
) {

245 i‡(
g_mem‹y_sy°em
.
xms_avaûabÀ
 && 
size
 >= 4096) {

246 
±r
 = 
	`mem‹y_Æloc_xms_tõr
(
tŸÆ_size
, 
Êags
);

247 i‡(
±r
) ;

249 i‡(
g_mem‹y_sy°em
.
umb_avaûabÀ
 && 
size
 >= 1024) {

250 
±r
 = 
	`mem‹y_Æloc_umb_tõr
(
tŸÆ_size
, 
Êags
);

251 i‡(
±r
) ;

253 
±r
 = 
	`mem‹y_Æloc_c⁄víti⁄Æ_tõr
(
tŸÆ_size
, 
Êags
);

257 i‡(
g_mem‹y_sy°em
.
umb_avaûabÀ
) {

258 
±r
 = 
	`mem‹y_Æloc_umb_tõr
(
tŸÆ_size
, 
Êags
);

259 i‡(
±r
) ;

261 
±r
 = 
	`mem‹y_Æloc_c⁄víti⁄Æ_tõr
(
tŸÆ_size
, 
Êags
);

262 i‡(!
±r
 && 
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

263 
±r
 = 
	`mem‹y_Æloc_xms_tõr
(
tŸÆ_size
, 
Êags
);

269 
±r
 = 
	`mem‹y_Æloc_c⁄víti⁄Æ_tõr
(
tŸÆ_size
, 
Êags
);

273 i‡(
±r
) {

274 
	`mem‹y_°©s_upd©e_Æloc
(&
g_mem_°©s
, 
size
);

275 
	`log_debug
("AŒoˇãd %lu byã†© %p", 
size
, 
±r
);

277 
	`mem‹y_£t_œ°_îr‹
(
MEM_ERROR_OUT_OF_MEMORY
);

278 
g_mem_°©s
.
Æloˇti⁄_Áûuªs
++;

279 
	`log_îr‹
("FaûedÅÿÆloˇã %lu byãs", 
size
);

282  
±r
;

283 
	}
}

289 
	$mem‹y_‰ì
(*
±r
) {

290 
mem_block_t
 *
block
;

292 i‡(!
±r
) {

296 i‡(!
g_mem‹y_sy°em
.
öôülized
) {

297 
	`mem‹y_£t_œ°_îr‹
(
MEM_ERROR_INVALID_POINTER
);

301 
block
 = 
	`mem‹y_gë_block_hódî
(
±r
);

302 i‡(!
	`mem‹y_vÆid©e_block
(
block
)) {

303 
	`mem‹y_£t_œ°_îr‹
(
MEM_ERROR_CORRUPTION
);

304 
	`log_îr‹
("InvÆid mem‹y blockáà%p", 
±r
);

308 
	`log_debug
("Fªeög %lu byã†© %p", 
block
->
size
, 
±r
);

311 i‡(
block
->
Êags
 & 
MEM_FLAG_DMA_CAPABLE
) {

313 
	`mem‹y_‰ì_xms_tõr
(
±r
);

314 } i‡((
uöt32_t
)
±r
 > 0xA0000) {

316 
	`mem‹y_‰ì_umb_tõr
(
±r
);

319 
	`mem‹y_‰ì_c⁄víti⁄Æ_tõr
(
±r
);

322 
	`mem‹y_°©s_upd©e_‰ì
(&
g_mem_°©s
, 
block
->
size
);

323 
	}
}

331 * 
	$mem‹y_Æloc_xms_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
) {

332 
uöt16_t
 
h™dÀ
;

333 
uöt32_t
 
löór_addr
;

334 
size_kb
 = (
size
 + 1023) / 1024;

335 
i
;

336 
˝u_öfo_t
 
g_˝u_öfo
;

338 i‡(!
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

339  
NULL
;

343 i‡(
Êags
 & 
MEM_FLAG_DMA_CAPABLE
) {

345 
uöt32_t
 
Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80486
) ? 32 : 4;

346 
size_kb
 = ((
size
 + 
Æignmít
 + 1023) / 1024);

350 
i
 = 0; i < 
XMS_MAX_HANDLES
; i++) {

351 i‡(!
g_xms_tõr
.
h™dÀ_u£d
[
i
]) {

356 i‡(
i
 >
XMS_MAX_HANDLES
) {

357 
	`log_debug
("No free XMS handle slots");

358  
NULL
;

362 i‡(
	`xms_Æloˇã
(
size_kb
, &
h™dÀ
) != 0) {

363  
NULL
;

367 i‡(
	`xms_lock
(
h™dÀ
, &
löór_addr
) != 0) {

368 
	`xms_‰ì
(
h™dÀ
);

369  
NULL
;

373 
uöt32_t
 
Æig√d_addr
 = 
löór_addr
;

374 i‡(
Êags
 & 
MEM_FLAG_DMA_CAPABLE
) {

375 
uöt32_t
 
Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80486
) ? 32 : 4;

376 
Æig√d_addr
 = 
	`ALIGN_UP
(
löór_addr
 + (
mem_block_t
), 
Æignmít
);

379 
mem_block_t
 *
block
 = (mem_block_t*)(
Æig√d_addr
 - (mem_block_t));

380 
block
->
‹igöÆ_addr
 = 
löór_addr
;

382 
Æig√d_addr
 = 
löór_addr
;

386 
g_xms_tõr
.
h™dÀs
[
i
] = 
h™dÀ
;

387 
g_xms_tõr
.
sizes
[
i
] = 
size
;

388 
g_xms_tõr
.
h™dÀ_u£d
[
i
] = 
åue
;

389 
g_xms_tõr
.
tŸÆ_Æloˇãd
 +
size
;

391 i‡(
g_xms_tõr
.
tŸÆ_Æloˇãd
 > g_xms_tõr.
≥ak_Æloˇãd
) {

392 
g_xms_tõr
.
≥ak_Æloˇãd
 = g_xms_tõr.
tŸÆ_Æloˇãd
;

396 
mem_block_t
 *
block
 = (mem_block_t*)(
Æig√d_addr
 - (mem_block_t));

397 
block
->
size
 = sizê- (
mem_block_t
);

398 
block
->
Êags
 = fœg†| 
MEM_FLAG_DMA_CAPABLE
;

399 
block
->
ty≥
 = 
MEM_TYPE_PACKET_BUFFER
;

400 
block
->
magic
 = 
MEM_MAGIC_ALLOCATED
;

401 
block
->
√xt
 = 
NULL
;

402 
block
->
¥ev
 = 
NULL
;

405 i‡(
Êags
 & 
MEM_FLAG_DMA_CAPABLE
) {

406 
uöt32_t
 
ex≥˘ed_Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80486
) ? 32 : 4;

407 i‡(!
	`IS_ALIGNED
(
Æig√d_addr
, 
ex≥˘ed_Æignmít
)) {

408 
	`log_w¨nög
("DMA bufferálignment suboptimal: %08lX (expected %u-byteálignment)",

409 
Æig√d_addr
, 
ex≥˘ed_Æignmít
);

413 
	`log_debug
("XMSállocation: handle %04X, %d KBátÜinear %08lX (aligned %08lX)",

414 
h™dÀ
, 
size_kb
, 
löór_addr
, 
Æig√d_addr
);

416  (*)
Æig√d_addr
;

417 
	}
}

425 * 
	$mem‹y_Æloc_umb_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
) {

426 
uöt16_t
 
£gmít
;

427 
uöt16_t
 
∑øgøphs
 = (
size
 + 15) / 16;

428 
i
;

430 i‡(!
g_mem‹y_sy°em
.
umb_avaûabÀ
) {

431  
NULL
;

435 
i
 = 0; i < 16; i++) {

436 i‡(!
g_umb_tõr
.
£gmít_u£d
[
i
]) {

441 i‡(
i
 >= 16) {

442 
	`log_debug
("No free UMB segment slots");

443  
NULL
;

447 i‡(
	`mem‹y_Æloˇã_dos_mem‹y
(
∑øgøphs
, &
£gmít
) != 0) {

448  
NULL
;

452 i‡(
£gmít
 < 0xA000) {

453 
	`mem‹y_‰ì_dos_mem‹y
(
£gmít
);

454  
NULL
;

458 
g_umb_tõr
.
£gmíts
[
i
] = 
£gmít
;

459 
g_umb_tõr
.
sizes
[
i
] = 
size
;

460 
g_umb_tõr
.
£gmít_u£d
[
i
] = 
åue
;

461 
g_umb_tõr
.
tŸÆ_Æloˇãd
 +
size
;

462 
g_umb_tõr
.
h™dÀ_cou¡
++;

464 i‡(
g_umb_tõr
.
tŸÆ_Æloˇãd
 > g_umb_tõr.
≥ak_Æloˇãd
) {

465 
g_umb_tõr
.
≥ak_Æloˇãd
 = g_umb_tõr.
tŸÆ_Æloˇãd
;

469 
mem_block_t
 *
block
 = (mem_block_t*)
	`MK_FP
(
£gmít
, 0);

470 
block
->
size
 = sizê- (
mem_block_t
);

471 
block
->
Êags
 = flags;

472 
block
->
ty≥
 = 
MEM_TYPE_PACKET_BUFFER
;

473 
block
->
magic
 = 
MEM_MAGIC_ALLOCATED
;

474 
block
->
√xt
 = 
NULL
;

475 
block
->
¥ev
 = 
NULL
;

477 
	`log_debug
("UMBáŒoˇti⁄: segmíà%04X, %dÖ¨agøphs", 
£gmít
, 
∑øgøphs
);

479  (*)((
uöt8_t
*)
block
 + (
mem_block_t
));

480 
	}
}

488 * 
	$mem‹y_Æloc_c⁄víti⁄Æ_tõr
(
uöt32_t
 
size
, uöt32_à
Êags
) {

489 
mem_block_t
 *
block
;

492 
block
 = (
mem_block_t
*)
	`mÆloc
(
size
);

493 i‡(!
block
) {

494  
NULL
;

498 
block
->
size
 = sizê- (
mem_block_t
);

499 
block
->
Êags
 = flags;

500 
block
->
ty≥
 = 
MEM_TYPE_GENERAL
;

501 
block
->
magic
 = 
MEM_MAGIC_ALLOCATED
;

502 
block
->
√xt
 = 
NULL
;

503 
block
->
¥ev
 = 
NULL
;

505 
	`log_debug
("C⁄víti⁄ÆáŒoˇti⁄: %lu byã†© %p", 
size
, 
block
);

507  (*)((
uöt8_t
*)
block
 + (
mem_block_t
));

508 
	}
}

514 
	$mem‹y_‰ì_xms_tõr
(*
±r
) {

515 
mem_block_t
 *
block
 = 
	`mem‹y_gë_block_hódî
(
±r
);

516 
uöt32_t
 
löór_addr
 = (uöt32_t)
block
;

517 
i
;

520 
i
 = 0; i < 
XMS_MAX_HANDLES
; i++) {

521 i‡(
g_xms_tõr
.
h™dÀ_u£d
[
i
]) {

522 
uöt32_t
 
h™dÀ_addr
;

523 i‡(
	`xms_lock
(
g_xms_tõr
.
h™dÀs
[
i
], &
h™dÀ_addr
) == 0) {

524 i‡(
h™dÀ_addr
 =
löór_addr
) {

526 
	`xms_u∆ock
(
g_xms_tõr
.
h™dÀs
[
i
]);

527 
	`xms_‰ì
(
g_xms_tõr
.
h™dÀs
[
i
]);

529 
g_xms_tõr
.
tŸÆ_Æloˇãd
 -g_xms_tõr.
sizes
[
i
];

530 
g_xms_tõr
.
h™dÀ_u£d
[
i
] = 
Ál£
;

532 
	`log_debug
("Fªed XMS h™dÀ %04X", 
g_xms_tõr
.
h™dÀs
[
i
]);

535 
	`xms_u∆ock
(
g_xms_tõr
.
h™dÀs
[
i
]);

540 
	`log_îr‹
("CouldÇŸ föd XMS h™dÀ f‹áddªs†%p", 
±r
);

541 
	}
}

547 
	$mem‹y_‰ì_umb_tõr
(*
±r
) {

548 
mem_block_t
 *
block
 = 
	`mem‹y_gë_block_hódî
(
±r
);

549 
uöt16_t
 
£gmít
 = 
	`FP_SEG
(
block
);

550 
i
;

553 
i
 = 0; i < 16; i++) {

554 i‡(
g_umb_tõr
.
£gmít_u£d
[
i
] && g_umb_tõr.
£gmíts
[i] =
£gmít
) {

555 
	`mem‹y_‰ì_dos_mem‹y
(
£gmít
);

557 
g_umb_tõr
.
tŸÆ_Æloˇãd
 -g_umb_tõr.
sizes
[
i
];

558 
g_umb_tõr
.
£gmít_u£d
[
i
] = 
Ál£
;

559 
g_umb_tõr
.
h™dÀ_cou¡
--;

561 
	`log_debug
("Fªed UMB segmíà%04X", 
£gmít
);

566 
	`log_îr‹
("CouldÇŸ föd UMB segmíàf‹áddªs†%p", 
±r
);

567 
	}
}

573 
	$mem‹y_‰ì_c⁄víti⁄Æ_tõr
(*
±r
) {

574 
mem_block_t
 *
block
 = 
	`mem‹y_gë_block_hódî
(
±r
);

576 
block
->
magic
 = 
MEM_MAGIC_FREE
;

577 
	`‰ì
(
block
);

579 
	`log_debug
("Fªed c⁄víti⁄Æ mem‹yáà%p", 
±r
);

580 
	}
}

587 
mem_block_t
* 
	$mem‹y_gë_block_hódî
(*
±r
) {

588  (
mem_block_t
*)((
uöt8_t
*)
±r
 - (mem_block_t));

589 
	}
}

596 
boﬁ
 
	$mem‹y_vÆid©e_block
(
mem_block_t
 *
block
) {

597 i‡(!
block
) {

598  
Ál£
;

601  (
block
->
magic
 =
MEM_MAGIC_ALLOCATED
);

602 
	}
}

608 
	$mem‹y_£t_œ°_îr‹
(
mem_îr‹_t
 
îr‹
) {

609 
g_mem‹y_sy°em
.
œ°_îr‹
 = 
îr‹
;

611 i‡(
g_mem‹y_sy°em
.
îr‹_h™dÀr
) {

612 
g_mem‹y_sy°em
.
	`îr‹_h™dÀr
(
îr‹
, 
	`mem‹y_îr‹_to_°rög
(error));

614 
	}
}

620 
mem_îr‹_t
 
	$mem‹y_gë_œ°_îr‹
() {

621  
g_mem‹y_sy°em
.
œ°_îr‹
;

622 
	}
}

629 c⁄° * 
	$mem‹y_îr‹_to_°rög
(
mem_îr‹_t
 
îr‹
) {

630 
îr‹
) {

631 
MEM_ERROR_NONE
:  "NoÉrror";

632 
MEM_ERROR_OUT_OF_MEMORY
:  "Out of memory";

633 
MEM_ERROR_INVALID_POINTER
:  "InvalidÖointer";

634 
MEM_ERROR_DOUBLE_FREE
:  "Double free detected";

635 
MEM_ERROR_CORRUPTION
:  "Memory corruption detected";

636 
MEM_ERROR_ALIGNMENT
:  "AlignmentÉrror";

637 
MEM_ERROR_POOL_FULL
:  "MemoryÖool full";

638 
MEM_ERROR_INVALID_SIZE
:  "Invalid size";

641 
	}
}

647 
boﬁ
 
	$mem‹y_xms_avaûabÀ
() {

648  
g_mem‹y_sy°em
.
xms_avaûabÀ
;

649 
	}
}

655 
uöt32_t
 
	$mem‹y_gë_xms_size
() {

656 
xms_öfo_t
 
öfo
;

658 i‡(!
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

662 i‡(
	`xms_gë_öfo
(&
öfo
) != 0) {

666  
öfo
.
‰ì_kb
;

667 
	}
}

673 
	$mem‹y_°©s_öô
(
mem_°©s_t
 *
°©s
) {

674 i‡(!
°©s
) {

678 
	`mem£t
(
°©s
, 0, (
mem_°©s_t
));

679 
	}
}

686 
	$mem‹y_°©s_upd©e_Æloc
(
mem_°©s_t
 *
°©s
, 
uöt32_t
 
size
) {

687 i‡(!
°©s
) {

691 
°©s
->
tŸÆ_Æloˇti⁄s
++;

692 
°©s
->
u£d_mem‹y
 +
size
;

694 i‡(
°©s
->
u£d_mem‹y
 > sèts->
≥ak_ußge
) {

695 
°©s
->
≥ak_ußge
 = sèts->
u£d_mem‹y
;

698 i‡(
size
 > 
°©s
->
œrge°_Æloˇti⁄
) {

699 
°©s
->
œrge°_Æloˇti⁄
 = 
size
;

702 i‡(
°©s
->
smÆÀ°_Æloˇti⁄
 =0 || 
size
 < stats->smallest_allocation) {

703 
°©s
->
smÆÀ°_Æloˇti⁄
 = 
size
;

705 
	}
}

712 
	$mem‹y_°©s_upd©e_‰ì
(
mem_°©s_t
 *
°©s
, 
uöt32_t
 
size
) {

713 i‡(!
°©s
) {

717 
°©s
->
tŸÆ_‰ìs
++;

718 i‡(
°©s
->
u£d_mem‹y
 >
size
) {

719 
°©s
->
u£d_mem‹y
 -
size
;

721 
	}
}

727 c⁄° 
mem_°©s_t
* 
	$mem‹y_gë_°©s
() {

728  &
g_mem_°©s
;

729 
	}
}

737 
	$mem‹y_Æloˇã_dos_mem‹y
(
uöt16_t
 
∑øgøphs
, uöt16_à*
£gmít
) {

738 
REGS
 
ªgs
;

740 
ªgs
.
h
.
ah
 = 0x48;

741 
ªgs
.
x
.
bx
 = 
∑øgøphs
;

742 
	`öt86
(0x21, &
ªgs
, &regs);

744 i‡(
ªgs
.
x
.
cÊag
) {

748 *
£gmít
 = 
ªgs
.
x
.
ax
;

750 
	}
}

757 
	$mem‹y_‰ì_dos_mem‹y
(
uöt16_t
 
£gmít
) {

758 
REGS
 
ªgs
;

759 
SREGS
 
§egs
;

761 
§egs
.
es
 = 
£gmít
;

762 
ªgs
.
h
.
ah
 = 0x49;

763 
	`öt86x
(0x21, &
ªgs
, &ªgs, &
§egs
);

765 i‡(
ªgs
.
x
.
cÊag
) {

770 
	}
}

773 
	$mem‹y_zîo
(*
±r
, 
uöt32_t
 
size
) {

774 i‡(
±r
 && 
size
 > 0) {

775 
	`mem£t
(
±r
, 0, 
size
);

777 
	}
}

779 
	$mem‹y_c›y
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
) {

780 i‡(
de°
 && 
§c
 && 
size
 > 0) {

781 
	`mem˝y
(
de°
, 
§c
, 
size
);

783 
	}
}

785 
	$mem‹y_com∑ª
(c⁄° *
±r1
, c⁄° *
±r2
, 
uöt32_t
 
size
) {

786 i‡(!
±r1
 || !
±r2
 || 
size
 == 0) {

789  
	`memcmp
(
±r1
, 
±r2
, 
size
);

790 
	}
}

798 
	$mem‹y_c›y_›timized
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
) {

799 
˝u_öfo_t
 
g_˝u_öfo
;

801 i‡(!
de°
 || !
§c
 || 
size
 == 0) {

806 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
 && 
	`˝u_suµ‹ts_32bô
()) {

808 
	`mem‹y_c›y_32bô
(
de°
, 
§c
, 
size
);

811 
	`mem‹y_c›y_16bô
(
de°
, 
§c
, 
size
);

813 
	}
}

821 
	$mem‹y_c›y_32bô
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
) {

822 
uöt32_t
 *
de°32
 = (uöt32_t*)
de°
;

823 c⁄° 
uöt32_t
 *
§c32
 = (c⁄° uöt32_t*)
§c
;

824 
uöt8_t
 *
de°8
;

825 c⁄° 
uöt8_t
 *
§c8
;

826 
uöt32_t
 
dw‹ds
, 
ªmaödî
;

829 i‡(
	`IS_ALIGNED
((
uöt32_t
)
de°
, 4Ë&& IS_ALIGNED((uöt32_t)
§c
, 4)) {

831 
dw‹ds
 = 
size
 / 4;

832 
ªmaödî
 = 
size
 % 4;

835 
dw‹ds
--) {

836 *
de°32
++ = *
§c32
++;

840 i‡(
ªmaödî
) {

841 
de°8
 = (
uöt8_t
*)
de°32
;

842 
§c8
 = (c⁄° 
uöt8_t
*)
§c32
;

843 
ªmaödî
--) {

844 *
de°8
++ = *
§c8
++;

849 
	`mem‹y_c›y_16bô
(
de°
, 
§c
, 
size
);

851 
	}
}

859 
	$mem‹y_c›y_16bô
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
size
) {

860 
uöt16_t
 *
de°16
 = (uöt16_t*)
de°
;

861 c⁄° 
uöt16_t
 *
§c16
 = (c⁄° uöt16_t*)
§c
;

862 
uöt8_t
 *
de°8
;

863 c⁄° 
uöt8_t
 *
§c8
;

864 
uöt32_t
 
w‹ds
, 
ªmaödî
;

867 i‡(
	`IS_ALIGNED
((
uöt32_t
)
de°
, 2Ë&& IS_ALIGNED((uöt32_t)
§c
, 2)) {

869 
w‹ds
 = 
size
 / 2;

870 
ªmaödî
 = 
size
 % 2;

873 
w‹ds
--) {

874 *
de°16
++ = *
§c16
++;

878 i‡(
ªmaödî
) {

879 
de°8
 = (
uöt8_t
*)
de°16
;

880 
§c8
 = (c⁄° 
uöt8_t
*)
§c16
;

881 *
de°8
 = *
§c8
;

885 
de°8
 = (
uöt8_t
*)
de°
;

886 
§c8
 = (c⁄° 
uöt8_t
*)
§c
;

887 
size
--) {

888 *
de°8
++ = *
§c8
++;

891 
	}
}

899 
	$mem‹y_£t_›timized
(*
±r
, 
uöt8_t
 
vÆue
, 
uöt32_t
 
size
) {

900 
˝u_öfo_t
 
g_˝u_öfo
;

902 i‡(!
±r
 || 
size
 == 0) {

907 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
 && 
	`˝u_suµ‹ts_32bô
()) {

908 
	`mem‹y_£t_32bô
(
±r
, 
vÆue
, 
size
);

910 
	`mem‹y_£t_16bô
(
±r
, 
vÆue
, 
size
);

912 
	}
}

920 
	$mem‹y_£t_32bô
(*
±r
, 
uöt8_t
 
vÆue
, 
uöt32_t
 
size
) {

921 
uöt32_t
 *
±r32
 = (uöt32_t*)
±r
;

922 
uöt8_t
 *
±r8
;

923 
uöt32_t
 
dw‹ds
, 
ªmaödî
;

924 
uöt32_t
 
vÆue32
;

927 
vÆue32
 = ((
uöt32_t
)
vÆue
 << 24) | ((uint32_t)value << 16) |

928 ((
uöt32_t
)
vÆue
 << 8) | value;

931 i‡(
	`IS_ALIGNED
((
uöt32_t
)
±r
, 4)) {

933 
dw‹ds
 = 
size
 / 4;

934 
ªmaödî
 = 
size
 % 4;

937 
dw‹ds
--) {

938 *
±r32
++ = 
vÆue32
;

942 i‡(
ªmaödî
) {

943 
±r8
 = (
uöt8_t
*)
±r32
;

944 
ªmaödî
--) {

945 *
±r8
++ = 
vÆue
;

950 
	`mem‹y_£t_16bô
(
±r
, 
vÆue
, 
size
);

952 
	}
}

960 
	$mem‹y_£t_16bô
(*
±r
, 
uöt8_t
 
vÆue
, 
uöt32_t
 
size
) {

961 
uöt16_t
 *
±r16
 = (uöt16_t*)
±r
;

962 
uöt8_t
 *
±r8
;

963 
uöt32_t
 
w‹ds
, 
ªmaödî
;

964 
uöt16_t
 
vÆue16
;

967 
vÆue16
 = ((
uöt16_t
)
vÆue
 << 8) | value;

970 i‡(
	`IS_ALIGNED
((
uöt32_t
)
±r
, 2)) {

972 
w‹ds
 = 
size
 / 2;

973 
ªmaödî
 = 
size
 % 2;

976 
w‹ds
--) {

977 *
±r16
++ = 
vÆue16
;

981 i‡(
ªmaödî
) {

982 
±r8
 = (
uöt8_t
*)
±r16
;

983 *
±r8
 = 
vÆue
;

987 
±r8
 = (
uöt8_t
*)
±r
;

988 
size
--) {

989 *
±r8
++ = 
vÆue
;

992 
	}
}

1001 * 
	$mem‹y_Æloc_Æig√d
(
uöt32_t
 
size
, uöt32_à
Æignmít
, 
mem_ty≥_t
 
ty≥
) {

1002 
˝u_öfo_t
 
g_˝u_öfo
;

1003 *
±r
;

1004 
uöt32_t
 
Êags
 = 
MEM_FLAG_ALIGNED
;

1007 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1009 i‡(
Æignmít
 < 4) {

1010 
Æignmít
 = 4;

1014 i‡(
Æignmít
 < 2) {

1015 
Æignmít
 = 2;

1020 
uöt32_t
 
∑dded_size
 = 
size
 + 
Æignmít
 + (
mem_block_t
);

1021 
±r
 = 
	`mem‹y_Æloc
(
∑dded_size
, 
ty≥
, 
Êags
);

1023 i‡(!
±r
) {

1024  
NULL
;

1028 
uöt32_t
 
addr
 = (uöt32_t)
±r
;

1029 
uöt32_t
 
Æig√d_addr
 = 
	`ALIGN_UP
(
addr
, 
Æignmít
);

1032 i‡(
addr
 =
Æig√d_addr
) {

1033  
±r
;

1037 **
‹ig_±r_°‹age
 = (**)(
Æig√d_addr
 - (*));

1038 *
‹ig_±r_°‹age
 = 
±r
;

1041  (*)
Æig√d_addr
;

1042 
	}
}

1048 
	$mem‹y_‰ì_Æig√d
(*
±r
) {

1049 *
‹igöÆ_±r
;

1051 i‡(!
±r
) {

1056 
uöt32_t
 
addr
 = (uöt32_t)
±r
;

1057 i‡(!
	`IS_ALIGNED
(
addr
, 4) && !IS_ALIGNED(addr, 2)) {

1059 
	`mem‹y_‰ì
(
±r
);

1064 **
‹ig_±r_°‹age
 = (**)(
addr
 - (*));

1065 
‹igöÆ_±r
 = *
‹ig_±r_°‹age
;

1068 i‡(
‹igöÆ_±r
 && (
uöt32_t
)‹igöÆ_±∏< 
addr
 &&

1069 (
addr
 - (
uöt32_t
)
‹igöÆ_±r
) < 64) {

1070 
	`mem‹y_‰ì
(
‹igöÆ_±r
);

1073 
	`mem‹y_‰ì
(
±r
);

1075 
	}
}

1082 * 
	$mem‹y_Æloc_dma
(
uöt32_t
 
size
) {

1083 
˝u_öfo_t
 
g_˝u_öfo
;

1084 
uöt32_t
 
Êags
 = 
MEM_FLAG_DMA_CAPABLE
 | 
MEM_FLAG_ALIGNED
;

1085 *
±r
;

1091 i‡(
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

1092 
±r
 = 
	`mem‹y_Æloc_xms_tõr
(
size
 + (
mem_block_t
), 
Êags
);

1093 i‡(
±r
) {

1094 
	`log_debug
("AŒoˇãd %lu byã DMA buf„∏ö XMSáà%p", 
size
, 
±r
);

1095  
±r
;

1100 
±r
 = 
	`mem‹y_Æloc
(
size
, 
MEM_TYPE_PACKET_BUFFER
, 
Êags
);

1101 i‡(
±r
) {

1102 
	`log_w¨nög
("DMA bufferállocated in conventional memory - mayÇot be optimal");

1105 
uöt32_t
 
Æignmít
 = (
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80486
) ? 32 : 4;

1106 i‡(!
	`IS_ALIGNED
((
uöt32_t
)
±r
, 
Æignmít
)) {

1107 
	`log_îr‹
("DMA bufferÇotÖroperlyáligned: %p (need %u-byteálignment)",

1108 
±r
, 
Æignmít
);

1112  
±r
;

1113 
	}
}

1119 
	$mem‹y_‰ì_dma
(*
±r
) {

1120 i‡(!
±r
) {

1125 
	`mem‹y_‰ì
(
±r
);

1126 
	`log_debug
("Fªed DMA buf„∏© %p", 
±r
);

1127 
	}
}

1135 * 
	$mem‹y_Æloc_ˇche_Æig√d
(
uöt32_t
 
size
, uöt32_à
ˇche_löe_size
) {

1136 
˝u_öfo_t
 
g_˝u_öfo
;

1137 
uöt32_t
 
Æignmít
;

1140 i‡(
ˇche_löe_size
 != 16 && cache_line_size != 32 && cache_line_size != 64) {

1141 
	`log_îr‹
("InvÆid cachêlöêsize: %u (mu° bê16, 32, o∏64)", 
ˇche_löe_size
);

1142  
NULL
;

1146 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_PENTIUM
) {

1147 
Æignmít
 = 
ˇche_löe_size
;

1148 } i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80486
) {

1149 
Æignmít
 = 32;

1151 
Æignmít
 = 4;

1154 *
±r
 = 
	`mem‹y_Æloc_Æig√d
(
size
, 
Æignmít
, 
MEM_TYPE_PACKET_BUFFER
);

1155 i‡(
±r
) {

1156 
	`log_debug
("Allocated %lu byte cache-aligned buffer (%u-byteálignment)át %p",

1157 
size
, 
Æignmít
, 
±r
);

1160  
±r
;

1161 
	}
}

1167 
	$mem‹y_öô_˝u_›timized
() {

1168 
˝u_öfo_t
 
g_˝u_öfo
;

1170 i‡(!
g_˝u_öfo
.
ty≥
) {

1171 
	`log_w¨nög
("CPUÇot detected - using conservative memory operations");

1175 
	`log_öfo
("Initializing CPU-optimized memory operations for %s",

1176 
	`˝u_ty≥_to_°rög
(
g_˝u_öfo
.
ty≥
));

1179 i‡(
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1180 
	`log_öfo
("Enabling 32-bit memory operations for 386+ CPU");

1182 i‡(
g_˝u_öfo
.
„©uªs
 & 
CPU_FEATURE_TSC
) {

1183 
	`log_öfo
("TSCávailable forÖerformance measurement");

1186 
	`log_öfo
("Using 16-bit memory operations for %s",

1187 
	`˝u_ty≥_to_°rög
(
g_˝u_öfo
.
ty≥
));

1191 i‡(
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

1192 
uöt32_t
 
xms_size
 = 
	`mem‹y_gë_xms_size
();

1193 i‡(
xms_size
 >= 1024) {

1194 
	`log_öfo
("Sufficõ¡ XMS mem‹y (%u KBËf‹ o±imized DMA buf„∏Æloˇti⁄", 
xms_size
);

1196 
	`log_w¨nög
("Limôed XMS mem‹y (%u KBË- DMAÖîf‹m™˚ may bêªdu˚d", 
xms_size
);

1199 
	`log_w¨nög
("No XMS memory - DMA buffers will use conventional memory");

1203 
	}
}

1212 
	$mem‹y_poﬁ_öô
(
mem_poﬁ_t
 *
poﬁ
, *
ba£
, 
uöt32_t
 
size
) {

1213 i‡(!
poﬁ
 || !
ba£
 || 
size
 < (
mem_block_t
)) {

1218 
poﬁ
->
ba£
 = base;

1219 
poﬁ
->
size
 = size;

1220 
poﬁ
->
u£d
 = 0;

1221 
poﬁ
->
‰ì
 = 
size
;

1222 
poﬁ
->
œrge°_‰ì
 = 
size
;

1223 
poﬁ
->
block_cou¡
 = 0;

1224 
poﬁ
->
Æloc_cou¡
 = 0;

1225 
poﬁ
->
‰ì_cou¡
 = 0;

1226 
poﬁ
->
öôülized
 = 
åue
;

1229 
mem_block_t
 *
öôül_block
 = (mem_block_t*)
ba£
;

1230 
öôül_block
->
size
 = sizê- (
mem_block_t
);

1231 
öôül_block
->
Êags
 = 0;

1232 
öôül_block
->
ty≥
 = 
MEM_TYPE_GENERAL
;

1233 
öôül_block
->
magic
 = 
MEM_MAGIC_FREE
;

1234 
öôül_block
->
√xt
 = 
NULL
;

1235 
öôül_block
->
¥ev
 = 
NULL
;

1237 
poﬁ
->
‰ì_li°
 = 
öôül_block
;

1238 
poﬁ
->
block_cou¡
 = 1;

1241 
	}
}

1247 
	$mem‹y_poﬁ_˛ónup
(
mem_poﬁ_t
 *
poﬁ
) {

1248 i‡(!
poﬁ
 || !poﬁ->
öôülized
) {

1253 
	`mem£t
(
poﬁ
, 0, (
mem_poﬁ_t
));

1254 
	}
}

1263 * 
	$mem‹y_poﬁ_Æloc
(
mem_poﬁ_t
 *
poﬁ
, 
uöt32_t
 
size
, uöt32_à
Êags
) {

1264 
mem_block_t
 *
block
, *
√w_block
;

1265 
uöt32_t
 
tŸÆ_size
 = 
size
 + (
mem_block_t
);

1267 i‡(!
poﬁ
 || !poﬁ->
öôülized
 || 
size
 == 0) {

1268  
NULL
;

1272 
block
 = 
poﬁ
->
‰ì_li°
; block; block = block->
√xt
) {

1273 i‡(
block
->
magic
 =
MEM_MAGIC_FREE
 && block->
size
 >= size) {

1278 i‡(!
block
) {

1280  
NULL
;

1284 i‡(
block
->
size
 > 
tŸÆ_size
 + (
mem_block_t
)) {

1285 
√w_block
 = (
mem_block_t
*)((
uöt8_t
*)
block
 + 
tŸÆ_size
);

1286 
√w_block
->
size
 = 
block
->sizê- 
tŸÆ_size
;

1287 
√w_block
->
Êags
 = 0;

1288 
√w_block
->
ty≥
 = 
MEM_TYPE_GENERAL
;

1289 
√w_block
->
magic
 = 
MEM_MAGIC_FREE
;

1290 
√w_block
->
√xt
 = 
block
->next;

1291 
√w_block
->
¥ev
 = 
block
;

1293 i‡(
block
->
√xt
) {

1294 
block
->
√xt
->
¥ev
 = 
√w_block
;

1296 
block
->
√xt
 = 
√w_block
;

1298 
block
->
size
 = size;

1302 
block
->
magic
 = 
MEM_MAGIC_ALLOCATED
;

1303 
block
->
Êags
 = flags;

1306 
poﬁ
->
u£d
 +
block
->
size
 + (
mem_block_t
);

1307 
poﬁ
->
‰ì
 -
block
->
size
 + (
mem_block_t
);

1308 
poﬁ
->
Æloc_cou¡
++;

1310  (*)((
uöt8_t
*)
block
 + (
mem_block_t
));

1311 
	}
}

1318 
	$mem‹y_poﬁ_‰ì
(
mem_poﬁ_t
 *
poﬁ
, *
±r
) {

1319 
mem_block_t
 *
block
;

1321 i‡(!
poﬁ
 || !
±r
) {

1325 
block
 = (
mem_block_t
*)((
uöt8_t
*)
±r
 - (mem_block_t));

1327 i‡(
block
->
magic
 !
MEM_MAGIC_ALLOCATED
) {

1332 
block
->
magic
 = 
MEM_MAGIC_FREE
;

1335 
poﬁ
->
u£d
 -
block
->
size
 + (
mem_block_t
);

1336 
poﬁ
->
‰ì
 +
block
->
size
 + (
mem_block_t
);

1337 
poﬁ
->
‰ì_cou¡
++;

1342 
mem_block_t
 *
√xt_block
 = (mem_block_t*)((
uöt8_t
*)
block
 + (mem_block_tË+ block->
size
);

1343 i‡((
uöt32_t
)
√xt_block
 < (uöt32_t)
poﬁ
->
ba£
 +Öoﬁ->
size
 &&

1344 
√xt_block
->
magic
 =
MEM_MAGIC_FREE
) {

1347 
block
->
size
 +(
mem_block_t
Ë+ 
√xt_block
->size;

1350 i‡(
√xt_block
->
√xt
) {

1351 
√xt_block
->
√xt
->
¥ev
 = 
block
;

1353 
block
->
√xt
 = 
√xt_block
->next;

1356 
√xt_block
->
magic
 = 0;

1358 
poﬁ
->
block_cou¡
--;

1362 i‡(
block
->
¥ev
 && block->¥ev->
magic
 =
MEM_MAGIC_FREE
) {

1363 
mem_block_t
 *
¥ev_block
 = 
block
->
¥ev
;

1366 
mem_block_t
 *
ex≥˘ed_√xt
 = (mem_block_t*)((
uöt8_t
*)
¥ev_block
 + (mem_block_tË+Öªv_block->
size
);

1367 i‡(
ex≥˘ed_√xt
 =
block
) {

1369 
¥ev_block
->
size
 +(
mem_block_t
Ë+ 
block
->size;

1372 i‡(
block
->
√xt
) {

1373 
block
->
√xt
->
¥ev
 = 
¥ev_block
;

1375 
¥ev_block
->
√xt
 = 
block
->next;

1378 
block
->
magic
 = 0;

1380 
poﬁ
->
block_cou¡
--;

1383 
	}
}

1390 
uöt32_t
 
	$mem‹y_poﬁ_gë_‰ì_size
(c⁄° 
mem_poﬁ_t
 *
poﬁ
) {

1391  
poﬁ
 ?Öoﬁ->
‰ì
 : 0;

1392 
	}
}

1399 
uöt32_t
 
	$mem‹y_poﬁ_gë_u£d_size
(c⁄° 
mem_poﬁ_t
 *
poﬁ
) {

1400  
poﬁ
 ?Öoﬁ->
u£d
 : 0;

1401 
	}
}

1408 
uöt32_t
 
	$mem‹y_poﬁ_gë_œrge°_‰ì
(c⁄° 
mem_poﬁ_t
 *
poﬁ
) {

1409 
mem_block_t
 *
block
;

1410 
uöt32_t
 
œrge°
 = 0;

1412 i‡(!
poﬁ
 || !poﬁ->
öôülized
) {

1416 
block
 = 
poﬁ
->
‰ì_li°
; block; block = block->
√xt
) {

1417 i‡(
block
->
magic
 =
MEM_MAGIC_FREE
 && block->
size
 > 
œrge°
) {

1418 
œrge°
 = 
block
->
size
;

1422  
œrge°
;

1423 
	}
}

1429 
mem‹y_£t_îr‹_h™dÀr
((*
h™dÀr
)(
mem_îr‹_t
 
îr‹
, c⁄° * 
mesßge
)) {

1430 
g_mem‹y_sy°em
.
îr‹_h™dÀr
 = 
h™dÀr
;

1431 
	}
}

1436 
	$mem‹y_¥öt_°©s
() {

1437 c⁄° 
mem_°©s_t
 *
°©s
 = &
g_mem_°©s
;

1439 
	`log_öfo
("=== Memory Statistics ===");

1440 
	`log_öfo
("TŸÆáŒoˇti⁄s: %lu", 
°©s
->
tŸÆ_Æloˇti⁄s
);

1441 
	`log_öfo
("TŸÆ fªes: %lu", 
°©s
->
tŸÆ_‰ìs
);

1442 
	`log_öfo
("Cuºíàu£d: %lu byãs", 
°©s
->
u£d_mem‹y
);

1443 
	`log_öfo
("Pók ußge: %lu byãs", 
°©s
->
≥ak_ußge
);

1444 
	`log_öfo
("AŒoˇti⁄ faûuªs: %lu", 
°©s
->
Æloˇti⁄_Áûuªs
);

1445 
	`log_öfo
("L¨ge°áŒoˇti⁄: %lu byãs", 
°©s
->
œrge°_Æloˇti⁄
);

1446 
	`log_öfo
("SmÆÀ°áŒoˇti⁄: %lu byãs", 
°©s
->
smÆÀ°_Æloˇti⁄
);

1449 
	`log_öfo
("=== Three-Tier Memory Usage ===");

1450 i‡(
g_mem‹y_sy°em
.
xms_avaûabÀ
) {

1451 
	`log_öfo
("XMS Tier 1: %lu bytesállocated (peak: %lu)",

1452 
g_xms_tõr
.
tŸÆ_Æloˇãd
, g_xms_tõr.
≥ak_Æloˇãd
);

1454 i‡(
g_mem‹y_sy°em
.
umb_avaûabÀ
) {

1455 
	`log_öfo
("UMB Tier 2: %lu bytesállocated (peak: %lu), %d segments",

1456 
g_umb_tõr
.
tŸÆ_Æloˇãd
, g_umb_tõr.
≥ak_Æloˇãd
, g_umb_tõr.
h™dÀ_cou¡
);

1458 
	`log_öfo
("Conventional Tier 3: Available for fallback");

1459 
	}
}

1470 
	$mem‹y_com¥ehísive_°ªss_ã°
() {

1471 
ªsu…
 = 0;

1472 
ã°s_∑s£d
 = 0;

1473 
ã°s_Áûed
 = 0;

1475 
	`log_öfo
("=== Starting Comprehensive Memory Stress Test ===");

1478 
	`log_öfo
("RunningállocationÖatterns stressÅest...");

1479 i‡(
	`mem‹y_°ªss_ã°_Æloˇti⁄_∑âîns
() == 0) {

1480 
ã°s_∑s£d
++;

1481 
	`log_öfo
("AllocationÖatternsÅest PASSED");

1483 
ã°s_Áûed
++;

1484 
	`log_îr‹
("AllocationÖatternsÅest FAILED");

1485 
ªsu…
 = -1;

1489 
	`log_öfo
("Running fragmentation stressÅest...");

1490 i‡(
	`mem‹y_°ªss_ã°_‰agmíèti⁄
() == 0) {

1491 
ã°s_∑s£d
++;

1492 
	`log_öfo
("FragmentationÅest PASSED");

1494 
ã°s_Áûed
++;

1495 
	`log_îr‹
("FragmentationÅest FAILED");

1496 
ªsu…
 = -1;

1500 
	`log_öfo
("RunningÜeak detectionÅest...");

1501 i‡(
	`mem‹y_°ªss_ã°_Àak_dëe˘i⁄
() == 0) {

1502 
ã°s_∑s£d
++;

1503 
	`log_öfo
("Leak detectionÅest PASSED");

1505 
ã°s_Áûed
++;

1506 
	`log_îr‹
("Leak detectionÅest FAILED");

1507 
ªsu…
 = -1;

1511 
	`log_öfo
("Running boundary conditionsÅest...");

1512 i‡(
	`mem‹y_°ªss_ã°_bound¨y_c⁄dôi⁄s
() == 0) {

1513 
ã°s_∑s£d
++;

1514 
	`log_öfo
("Boundary conditionsÅest PASSED");

1516 
ã°s_Áûed
++;

1517 
	`log_îr‹
("Boundary conditionsÅest FAILED");

1518 
ªsu…
 = -1;

1522 
	`log_öfo
("Running concurrent operationsÅest...");

1523 i‡(
	`mem‹y_°ªss_ã°_c⁄cuºít_›î©i⁄s
() == 0) {

1524 
ã°s_∑s£d
++;

1525 
	`log_öfo
("Concurrent operationsÅest PASSED");

1527 
ã°s_Áûed
++;

1528 
	`log_îr‹
("Concurrent operationsÅest FAILED");

1529 
ªsu…
 = -1;

1533 
	`log_öfo
("RunningÅier switchingÅest...");

1534 i‡(
	`mem‹y_°ªss_ã°_tõr_swôchög
() == 0) {

1535 
ã°s_∑s£d
++;

1536 
	`log_öfo
("Tier switchingÅest PASSED");

1538 
ã°s_Áûed
++;

1539 
	`log_îr‹
("Tier switchingÅest FAILED");

1540 
ªsu…
 = -1;

1544 
	`log_öfo
("Running corruption detectionÅest...");

1545 i‡(
	`mem‹y_≥rf‹m_c‹ru±i⁄_ã°
() == 0) {

1546 
ã°s_∑s£d
++;

1547 
	`log_öfo
("Corruption detectionÅest PASSED");

1549 
ã°s_Áûed
++;

1550 
	`log_îr‹
("Corruption detectionÅest FAILED");

1551 
ªsu…
 = -1;

1555 
	`log_öfo
("RunningÉxtremeállocationÅest...");

1556 i‡(
	`mem‹y_ã°_exåeme_Æloˇti⁄s
() == 0) {

1557 
ã°s_∑s£d
++;

1558 
	`log_öfo
("ExtremeállocationÅest PASSED");

1560 
ã°s_Áûed
++;

1561 
	`log_îr‹
("ExtremeállocationÅest FAILED");

1562 
ªsu…
 = -1;

1566 
	`log_öfo
("RunningÜow memory simulation...");

1567 
	`mem‹y_simuœã_low_mem‹y_c⁄dôi⁄s
();

1568 
	`log_öfo
("Low memory simulation completed");

1569 
ã°s_∑s£d
++;

1572 i‡(
	`mem‹y_vÆid©e_Æl_Æloˇti⁄s
() == 0) {

1573 
ã°s_∑s£d
++;

1574 
	`log_öfo
("Post-test validation PASSED");

1576 
ã°s_Áûed
++;

1577 
	`log_îr‹
("Post-test validation FAILED");

1578 
ªsu…
 = -1;

1581 
	`log_öfo
("=== Memory Stress Test Summary ===");

1582 
	`log_öfo
("Te°†∑s£d: %d", 
ã°s_∑s£d
);

1583 
	`log_öfo
("Te°†Áûed: %d", 
ã°s_Áûed
);

1585 i‡(
ªsu…
 == 0) {

1586 
	`log_öfo
("=== ALL MEMORY STRESS TESTS PASSED ===");

1588 
	`log_îr‹
("=== SOME MEMORY STRESS TESTS FAILED ===");

1591  
ªsu…
;

1592 
	}
}

1598 
	$mem‹y_°ªss_ã°_Æloˇti⁄_∑âîns
() {

1599 *
±rs
[200];

1600 
uöt32_t
 
sizes
[] = {16, 32, 64, 128, 256, 512, 1024, 2048, 4096};

1601 
num_sizes
 = (
sizes
) / (sizes[0]);

1602 
Æloˇãd
 = 0;

1603 
∑âîn
;

1606 
	`log_debug
("Testing sequential increasingállocationÖattern");

1607 
∑âîn
 = 0;Öattern < 3;Öattern++) {

1608 
i
 = 0; i < 50 && 
Æloˇãd
 < 200; i++) {

1609 
uöt32_t
 
size
 = 
sizes
[
i
 % 
num_sizes
];

1611 
∑âîn
) {

1613 
±rs
[
Æloˇãd
] = 
	`mem‹y_Æloc
(
size
, 
MEM_TYPE_GENERAL
, 0);

1616 
±rs
[
Æloˇãd
] = 
	`mem‹y_Æloc
(
size
, 
MEM_TYPE_PACKET_BUFFER
, 
MEM_FLAG_ALIGNED
);

1619 
±rs
[
Æloˇãd
] = 
	`mem‹y_Æloc
(
size
, 
MEM_TYPE_PACKET_BUFFER
, 
MEM_FLAG_DMA_CAPABLE
);

1623 i‡(
±rs
[
Æloˇãd
]) {

1625 
	`mem£t
(
±rs
[
Æloˇãd
], 0xAA + (
i
 % 4), 
size
);

1626 
Æloˇãd
++;

1631 
	`log_debug
("AŒoˇãd %d block†öÖ©ã∫Åe°", 
Æloˇãd
);

1634 
i
 = 0; i < 
Æloˇãd
; i++) {

1635 i‡(
±rs
[
i
]) {

1636 
mem_block_t
 *
block
 = 
	`mem‹y_gë_block_hódî
(
±rs
[
i
]);

1637 i‡(!
	`mem‹y_vÆid©e_block
(
block
)) {

1638 
	`log_îr‹
("Block vÆid©i⁄ faûed f‹áŒoˇti⁄ %d", 
i
);

1645 
i
 = 0; i < 
Æloˇãd
; i += 2) {

1646 i‡(
±rs
[
i
]) {

1647 
	`mem‹y_‰ì
(
±rs
[
i
]);

1648 
±rs
[
i
] = 
NULL
;

1653 
ªÆloˇãd
 = 0;

1654 
i
 = 0; i < 
Æloˇãd
; i += 2) {

1655 
±rs
[
i
] = 
	`mem‹y_Æloc
(
sizes
[(i/2Ë% 
num_sizes
], 
MEM_TYPE_GENERAL
, 0);

1656 i‡(
±rs
[
i
]) {

1657 
ªÆloˇãd
++;

1661 
	`log_debug
("RóŒoˇãd %d block†a·î føgmíèti⁄", 
ªÆloˇãd
);

1664 
i
 = 0; i < 
Æloˇãd
; i++) {

1665 i‡(
±rs
[
i
]) {

1666 
	`mem‹y_‰ì
(
±rs
[
i
]);

1671 
	}
}

1677 
	$mem‹y_°ªss_ã°_‰agmíèti⁄
() {

1678 *
œrge_blocks
[10];

1679 *
smÆl_blocks
[100];

1680 
œrge_cou¡
 = 0;

1681 
smÆl_cou¡
 = 0;

1683 
	`log_debug
("Testing memory fragmentation scenarios");

1686 
i
 = 0; i < 10; i++) {

1687 
œrge_blocks
[
i
] = 
	`mem‹y_Æloc
(4096, 
MEM_TYPE_PACKET_BUFFER
, 0);

1688 i‡(
œrge_blocks
[
i
]) {

1689 
œrge_cou¡
++;

1694 
i
 = 0; i < 100; i++) {

1695 
smÆl_blocks
[
i
] = 
	`mem‹y_Æloc
(64, 
MEM_TYPE_GENERAL
, 0);

1696 i‡(
smÆl_blocks
[
i
]) {

1697 
smÆl_cou¡
++;

1701 
	`log_debug
("AŒoˇãd %dÜ¨gêblock†™d %d smÆ»blocks", 
œrge_cou¡
, 
smÆl_cou¡
);

1704 
i
 = 1; i < 10; i += 2) {

1705 i‡(
œrge_blocks
[
i
]) {

1706 
	`mem‹y_‰ì
(
œrge_blocks
[
i
]);

1707 
œrge_blocks
[
i
] = 
NULL
;

1712 
medium_Æloˇãd
 = 0;

1713 
i
 = 0; i < 5; i++) {

1714 *
medium_±r
 = 
	`mem‹y_Æloc
(2048, 
MEM_TYPE_PACKET_BUFFER
, 0);

1715 i‡(
medium_±r
) {

1716 
medium_Æloˇãd
++;

1717 
	`mem‹y_‰ì
(
medium_±r
);

1721 
	`log_debug
("Suc˚ssfuŒyáŒoˇãd %d medium block†ö g≠s", 
medium_Æloˇãd
);

1724 
i
 = 0; i < 10; i++) {

1725 i‡(
œrge_blocks
[
i
]) {

1726 
	`mem‹y_‰ì
(
œrge_blocks
[
i
]);

1730 
i
 = 0; i < 100; i++) {

1731 i‡(
smÆl_blocks
[
i
]) {

1732 
	`mem‹y_‰ì
(
smÆl_blocks
[
i
]);

1737 
	}
}

1743 
	$mem‹y_°ªss_ã°_Àak_dëe˘i⁄
() {

1744 
uöt32_t
 
öôül_Æloˇti⁄s
 = 
g_mem_°©s
.
tŸÆ_Æloˇti⁄s
;

1745 
uöt32_t
 
öôül_‰ìs
 = 
g_mem_°©s
.
tŸÆ_‰ìs
;

1746 
uöt32_t
 
öôül_u£d
 = 
g_mem_°©s
.
u£d_mem‹y
;

1748 
	`log_debug
("TestingÜeak detection - initial state: %luállocs, %lu frees, %lu used",

1749 
öôül_Æloˇti⁄s
, 
öôül_‰ìs
, 
öôül_u£d
);

1752 
cy˛e
 = 0; cycle < 5; cycle++) {

1753 *
±rs
[50];

1754 
Æloˇãd
 = 0;

1757 
i
 = 0; i < 50; i++) {

1758 
±rs
[
i
] = 
	`mem‹y_Æloc
(128 + (ò* 16), 
MEM_TYPE_GENERAL
, 0);

1759 i‡(
±rs
[
i
]) {

1760 
Æloˇãd
++;

1765 
i
 = 0; i < 
Æloˇãd
 - 2; i++) {

1766 i‡(
±rs
[
i
]) {

1767 
	`mem‹y_‰ì
(
±rs
[
i
]);

1768 
±rs
[
i
] = 
NULL
;

1773 
uöt32_t
 
cuºít_u£d
 = 
g_mem_°©s
.
u£d_mem‹y
;

1774 i‡(
cuºít_u£d
 <
öôül_u£d
 + (2 * (128 + 25 * 16))) {

1777 
	`log_w¨nög
("PŸítü»mem‹yÜók dëe˘ed i¿cy˛ê%d", 
cy˛e
);

1781 
i
 = 
Æloˇãd
 - 2; i <állocated; i++) {

1782 i‡(
±rs
[
i
]) {

1783 
	`mem‹y_‰ì
(
±rs
[
i
]);

1789 
uöt32_t
 
föÆ_u£d
 = 
g_mem_°©s
.
u£d_mem‹y
;

1790 i‡(
föÆ_u£d
 <
öôül_u£d
 + 1024) {

1791 
	`log_debug
("Leak detectionÅestÖassed - memory usageÑeturnedÅo baseline");

1794 
	`log_îr‹
("PŸítü»mem‹yÜók: inôül=%lu, föÆ=%lu", 
öôül_u£d
, 
föÆ_u£d
);

1797 
	}
}

1803 
	$mem‹y_°ªss_ã°_bound¨y_c⁄dôi⁄s
() {

1804 
	`log_debug
("Testing boundary conditionsándÉdge cases");

1807 *
zîo_±r
 = 
	`mem‹y_Æloc
(0, 
MEM_TYPE_GENERAL
, 0);

1808 i‡(
zîo_±r
 !
NULL
) {

1809 
	`log_îr‹
("Zero-sizeállocation should have failed");

1810 
	`mem‹y_‰ì
(
zîo_±r
);

1815 *
œrge_±r
 = 
	`mem‹y_Æloc
(32768, 
MEM_TYPE_GENERAL
, 0);

1816 i‡(
œrge_±r
) {

1818 
	`mem£t
(
œrge_±r
, 0x55, 32768);

1821 
uöt8_t
 *
d©a
 = (uöt8_t*)
œrge_±r
;

1822 
i
 = 0; i < 1000; i += 100) {

1823 i‡(
d©a
[
i
] != 0x55) {

1824 
	`log_îr‹
("Largeállocation memory corruption detected");

1825 
	`mem‹y_‰ì
(
œrge_±r
);

1830 
	`mem‹y_‰ì
(
œrge_±r
);

1834 
	`mem‹y_‰ì
(
NULL
);

1837 *
ã°_±r
 = 
	`mem‹y_Æloc
(256, 
MEM_TYPE_GENERAL
, 0);

1838 i‡(
ã°_±r
) {

1839 
	`mem‹y_‰ì
(
ã°_±r
);

1841 
	`mem‹y_‰ì
(
ã°_±r
);

1845 
Æign
 = 1;álign <= 16;álign *= 2) {

1846 *
Æig√d_±r
 = 
	`mem‹y_Æloc_Æig√d
(100, 
Æign
, 
MEM_TYPE_GENERAL
);

1847 i‡(
Æig√d_±r
) {

1848 i‡(((
uöt32_t
)
Æig√d_±r
 % 
Æign
) != 0) {

1849 
	`log_îr‹
("AlignmíàÁûed f‹ bound¨y %d", 
Æign
);

1850 
	`mem‹y_‰ì
(
Æig√d_±r
);

1853 
	`mem‹y_‰ì
(
Æig√d_±r
);

1857 
	`log_debug
("Boundary conditionsÅest completed successfully");

1859 
	}
}

1865 
	$mem‹y_°ªss_ã°_c⁄cuºít_›î©i⁄s
() {

1866 *
±rs_a
[25];

1867 *
±rs_b
[25];

1868 
Æloˇãd_a
 = 0;

1869 
Æloˇãd_b
 = 0;

1871 
	`log_debug
("Simulating concurrent memory operations");

1874 
round
 = 0;Ñound < 5;Ñound++) {

1876 
i
 = 0; i < 5; i++) {

1877 i‡(
Æloˇãd_a
 < 25) {

1878 
±rs_a
[
Æloˇãd_a
] = 
	`mem‹y_Æloc
(64 + (
i
 * 8), 
MEM_TYPE_GENERAL
, 0);

1879 i‡(
±rs_a
[
Æloˇãd_a
]) {

1880 
Æloˇãd_a
++;

1886 
i
 = 0; i < 3; i++) {

1887 i‡(
Æloˇãd_b
 < 25) {

1888 
±rs_b
[
Æloˇãd_b
] = 
	`mem‹y_Æloc
(512 + (
i
 * 64), 
MEM_TYPE_PACKET_BUFFER
, 0);

1889 i‡(
±rs_b
[
Æloˇãd_b
]) {

1890 
Æloˇãd_b
++;

1896 i‡(
Æloˇãd_a
 >= 3) {

1897 
i
 = 0; i < 2; i++) {

1898 i‡(
±rs_a
[
i
]) {

1899 
	`mem‹y_‰ì
(
±rs_a
[
i
]);

1900 
±rs_a
[
i
] = 
NULL
;

1906 i‡(
Æloˇãd_b
 >= 2) {

1907 i‡(
±rs_b
[0]) {

1908 
	`mem‹y_‰ì
(
±rs_b
[0]);

1909 
±rs_b
[0] = 
NULL
;

1915 
i
 = 0; i < 25; i++) {

1916 i‡(
±rs_a
[
i
]) {

1917 
	`mem‹y_‰ì
(
±rs_a
[
i
]);

1919 i‡(
±rs_b
[
i
]) {

1920 
	`mem‹y_‰ì
(
±rs_b
[
i
]);

1924 
	`log_debug
("Concurrent operations simulation completed");

1926 
	}
}

1932 
	$mem‹y_°ªss_ã°_tõr_swôchög
() {

1933 *
tõr_±rs
[50];

1934 
Æloˇãd
 = 0;

1936 
	`log_debug
("Testing memoryÅier switching underÖressure");

1939 
i
 = 0; i < 50; i++) {

1940 
uöt32_t
 
size
;

1941 
mem_ty≥_t
 
ty≥
;

1942 
uöt32_t
 
Êags
 = 0;

1945 i‡(
i
 % 3 == 0) {

1946 
size
 = 8192;

1947 
ty≥
 = 
MEM_TYPE_PACKET_BUFFER
;

1948 
Êags
 = 
MEM_FLAG_DMA_CAPABLE
;

1949 } i‡(
i
 % 3 == 1) {

1950 
size
 = 1024;

1951 
ty≥
 = 
MEM_TYPE_PACKET_BUFFER
;

1952 
Êags
 = 
MEM_FLAG_ALIGNED
;

1954 
size
 = 128;

1955 
ty≥
 = 
MEM_TYPE_GENERAL
;

1956 
Êags
 = 0;

1959 
tõr_±rs
[
i
] = 
	`mem‹y_Æloc
(
size
, 
ty≥
, 
Êags
);

1960 i‡(
tõr_±rs
[
i
]) {

1961 
Æloˇãd
++;

1964 
	`mem£t
(
tõr_±rs
[
i
], 0xCC + (ò% 4), 
size
 > 256 ? 256 : size);

1968 
	`log_debug
("AŒoˇãd %d block†a¸os†mem‹yÅõrs", 
Æloˇãd
);

1971 
i
 = 0; i < 
Æloˇãd
; i++) {

1972 i‡(
tõr_±rs
[
i
]) {

1973 
uöt8_t
 *
d©a
 = (uöt8_t*)
tõr_±rs
[
i
];

1974 
uöt8_t
 
ex≥˘ed
 = 0xCC + (
i
 % 4);

1976 i‡(
d©a
[0] !
ex≥˘ed
 || data[10] !=Éxpected) {

1977 
	`log_îr‹
("Tierállocation %d corrupted (expected 0x%02X, got 0x%02X)",

1978 
i
, 
ex≥˘ed
, 
d©a
[0]);

1985 
i
 = 0; i < 50; i++) {

1986 i‡(
tõr_±rs
[
i
]) {

1987 
	`mem‹y_‰ì
(
tõr_±rs
[
i
]);

1991 
	`log_debug
("Tier switchingÅest completed successfully");

1993 
	}
}

1999 
	$mem‹y_vÆid©e_Æl_Æloˇti⁄s
() {

2003 
	`log_debug
("Validatingáll memoryállocations for corruption");

2006 i‡(
g_mem_°©s
.
tŸÆ_Æloˇti⁄s
 < g_mem_°©s.
tŸÆ_‰ìs
) {

2007 
	`log_îr‹
("Memory statistics inconsistent:állocs=%lu < frees=%lu",

2008 
g_mem_°©s
.
tŸÆ_Æloˇti⁄s
, g_mem_°©s.
tŸÆ_‰ìs
);

2013 i‡(
g_mem_°©s
.
u£d_mem‹y
 > 1024 * 1024) {

2014 
	`log_w¨nög
("High mem‹y ußgêdëe˘ed: %lu byãs", 
g_mem_°©s
.
u£d_mem‹y
);

2018 i‡(
g_xms_tõr
.
tŸÆ_Æloˇãd
 > g_xms_tõr.
≥ak_Æloˇãd
) {

2019 
	`log_îr‹
("XMSÅier statistics inconsistent");

2023 i‡(
g_umb_tõr
.
tŸÆ_Æloˇãd
 > g_umb_tõr.
≥ak_Æloˇãd
) {

2024 
	`log_îr‹
("UMBÅier statistics inconsistent");

2028 
	`log_debug
("Memory validation completed -Ço corruption detected");

2030 
	}
}

2036 
	$mem‹y_≥rf‹m_c‹ru±i⁄_ã°
() {

2037 *
ã°_±r
;

2038 
mem_block_t
 *
block
;

2040 
	`log_debug
("Testing memory corruption detection");

2043 
ã°_±r
 = 
	`mem‹y_Æloc
(256, 
MEM_TYPE_GENERAL
, 0);

2044 i‡(!
ã°_±r
) {

2045 
	`log_îr‹
("FailedÅoállocateÅest block for corruptionÅest");

2050 
block
 = 
	`mem‹y_gë_block_hódî
(
ã°_±r
);

2051 i‡(!
	`mem‹y_vÆid©e_block
(
block
)) {

2052 
	`log_îr‹
("Initial block validation failed");

2053 
	`mem‹y_‰ì
(
ã°_±r
);

2058 
uöt32_t
 
‹igöÆ_magic
 = 
block
->
magic
;

2059 
block
->
magic
 = 0xDEADBEEF;

2062 i‡(
	`mem‹y_vÆid©e_block
(
block
)) {

2063 
	`log_îr‹
("Corruption detection failed - corrupted blockÖassed validation");

2064 
block
->
magic
 = 
‹igöÆ_magic
;

2065 
	`mem‹y_‰ì
(
ã°_±r
);

2070 
block
->
magic
 = 
‹igöÆ_magic
;

2073 
	`mem‹y_‰ì
(
ã°_±r
);

2075 
	`log_debug
("Memory corruption detectionÅestÖassed");

2077 
	}
}

2083 
	$mem‹y_ã°_exåeme_Æloˇti⁄s
() {

2084 
	`log_debug
("TestingÉxtremeállocation scenarios");

2087 *
huge_±r
 = 
	`mem‹y_Æloc
(0x100000, 
MEM_TYPE_GENERAL
, 0);

2088 i‡(
huge_±r
) {

2089 
	`log_w¨nög
("Unexpectedly succeeded inállocating 1MB");

2090 
	`mem‹y_‰ì
(
huge_±r
);

2094 *
töy_±rs
[1000];

2095 
töy_Æloˇãd
 = 0;

2097 
i
 = 0; i < 1000; i++) {

2098 
töy_±rs
[
i
] = 
	`mem‹y_Æloc
(8, 
MEM_TYPE_GENERAL
, 0);

2099 i‡(
töy_±rs
[
i
]) {

2100 
töy_Æloˇãd
++;

2106 
	`log_debug
("Suc˚ssfuŒyáŒoˇãd %dÅöy (8-byãËblocks", 
töy_Æloˇãd
);

2109 
i
 = 0; i < 
töy_Æloˇãd
; i++) {

2110 i‡(
töy_±rs
[
i
]) {

2111 
	`mem‹y_‰ì
(
töy_±rs
[
i
]);

2116 *
övÆid_±r
 = 
	`mem‹y_Æloc
(100, 99, 0xFFFFFFFF);

2117 i‡(
övÆid_±r
) {

2118 
	`log_w¨nög
("Allocation with invalidÖarameters unexpectedly succeeded");

2119 
	`mem‹y_‰ì
(
övÆid_±r
);

2122 
	`log_debug
("Extremeállocation scenariosÅest completed");

2124 
	}
}

2129 
	$mem‹y_simuœã_low_mem‹y_c⁄dôi⁄s
() {

2130 *
exhau°i⁄_±rs
[100];

2131 
Æloˇãd
 = 0;

2133 
	`log_debug
("SimulatingÜow memory conditions");

2136 
i
 = 0; i < 100; i++) {

2137 
exhau°i⁄_±rs
[
i
] = 
	`mem‹y_Æloc
(4096, 
MEM_TYPE_GENERAL
, 0);

2138 i‡(
exhau°i⁄_±rs
[
i
]) {

2139 
Æloˇãd
++;

2145 
	`log_debug
("AŒoˇãd %dÜ¨gêblock†bef‹êmem‹yÉxhau°i⁄", 
Æloˇãd
);

2148 
smÆl_Æloˇãd
 = 0;

2149 
i
 = 0; i < 20; i++) {

2150 *
smÆl_±r
 = 
	`mem‹y_Æloc
(64, 
MEM_TYPE_GENERAL
, 0);

2151 i‡(
smÆl_±r
) {

2152 
smÆl_Æloˇãd
++;

2153 
	`mem‹y_‰ì
(
smÆl_±r
);

2159 
	`log_debug
("Suc˚ssfuŒyáŒoˇãd %d smÆ»block†undî mem‹yÖªssuª", 
smÆl_Æloˇãd
);

2162 
mem_îr‹_t
 
œ°_îr‹
 = 
	`mem‹y_gë_œ°_îr‹
();

2163 i‡(
œ°_îr‹
 =
MEM_ERROR_NO_MEMORY
 ||Üa°_îr‹ =
MEM_ERROR_NONE
) {

2164 
	`log_debug
("MemoryÉrror handling working correctly");

2166 
	`log_w¨nög
("U√x≥˘ed mem‹yÉº‹: %d", 
œ°_îr‹
);

2170 
i
 = 0; i < 
Æloˇãd
; i++) {

2171 i‡(
exhau°i⁄_±rs
[
i
]) {

2172 
	`mem‹y_‰ì
(
exhau°i⁄_±rs
[
i
]);

2176 
	`log_debug
("Low memory simulation completed");

2177 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/nic_init.c

11 
	~"../ö˛ude/nic_öô.h
"

12 
	~"../ö˛ude/loggög.h
"

13 
	~"../ö˛ude/mem‹y.h
"

14 
	~"../ö˛ude/dügno°ics.h
"

15 
	~"../ö˛ude/3c509b.h
"

16 
	~"../ö˛ude/3c515.h
"

17 
	~"../ö˛ude/comm⁄.h
"

18 
	~"../ö˛ude/nic_defs.h
"

19 
	~"../ö˛ude/c⁄fig.h
"

20 
	~"../ö˛ude/ˇche_cohîícy.h
"

21 
	~"../ö˛ude/ˇche_m™agemít.h
"

22 
	~"../ö˛ude/chù£t_dëe˘.h
"

23 
	~"../ö˛ude/chù£t_d©aba£.h
"

24 
	~"../ö˛ude/≥rf‹m™˚_íabÀr.h
"

25 
	~<°rög.h
>

28 
boﬁ
 
	gg_nic_öô_sy°em_ªady
 = 
Ál£
;

29 
nic_öô_°©s_t
 
	gg_nic_öô_°©s
;

32 
boﬁ
 
	gg_nic_öô_öôülized
 = 
Ál£
;

35 
boﬁ
 
	gg_ˇche_cohîícy_öôülized
 = 
Ál£
;

36 
cohîícy_™Æysis_t
 
	gg_sy°em_cohîícy_™Æysis
;

37 
chù£t_dëe˘i⁄_ªsu…_t
 
	gg_sy°em_chù£t_dëe˘i⁄
;

40 
nic_ª£t_h¨dw¨e
(
nic_öfo_t
 *
nic
);

41 
nic_waô_f‹_ªady
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
);

42 
nic_öô_upd©e_°©s
(
boﬁ
 
suc˚ss
, boﬁ 
dëe˘i⁄
);

43 
boﬁ
 
is_zîo_mac
(c⁄° 
uöt8_t
 *
mac
);

44 
uöt32_t
 
gë_nic_ˇ∑bûôõs_‰om_ty≥
(
nic_ty≥_t
 
ty≥
);

47 
nic_öô_ˇche_cohîícy_sy°em
();

48 
nic_öô_≠∂y_cohîícy_to_nic
(
nic_öfo_t
 *
nic
);

49 
nic_öô_di•œy_sy°em_™Æysis
();

52 
udñay
(
uöt32_t
 
mi¸o£c⁄ds
);

53 
mdñay
(
uöt32_t
 
mûli£c⁄ds
);

56 
	$nic_öô_sy°em
() {

57 i‡(
g_nic_öô_öôülized
) {

58  
SUCCESS
;

61 
	`LOG_INFO
("Initializing NIC system with cache coherency management...");

64 
	`nic_öô_°©s_˛ór
();

67 
cohîícy_ªsu…
 = 
	`nic_öô_ˇche_cohîícy_sy°em
();

68 i‡(
cohîícy_ªsu…
 !
SUCCESS
) {

69 
	`LOG_ERROR
("Cachêcohîícy sy°em inôüliz©i⁄ faûed: %d", 
cohîícy_ªsu…
);

70  
cohîícy_ªsu…
;

75 
	`≤p_öô_sy°em
();

76 
	`≤p_dëe˘_nics
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_nics
);

79 
≤p_öô_ªsu…
 = 
	`≤p_öô_sy°em
();

80 i‡(
≤p_öô_ªsu…
 !
SUCCESS
) {

81 
	`LOG_WARNING
("PnP sy°em inôüliz©i⁄ faûed: %d - c⁄töuög wôh ISA dëe˘i⁄ o∆y", 
≤p_öô_ªsu…
);

85 
nic_dëe˘_öfo_t
 
≤p_dëe˘i⁄_ªsu…s
[
MAX_NICS
];

86 
≤p_dëe˘ed_cou¡
 = 0;

88 i‡(
≤p_öô_ªsu…
 =
SUCCESS
) {

89 
≤p_dëe˘ed_cou¡
 = 
	`≤p_dëe˘_nics
(
≤p_dëe˘i⁄_ªsu…s
, 
MAX_NICS
);

90 i‡(
≤p_dëe˘ed_cou¡
 > 0) {

91 
	`LOG_INFO
("PnP dëe˘i⁄ found %d suµ‹ãd 3Com devi˚s", 
≤p_dëe˘ed_cou¡
);

94 
i
 = 0; i < 
≤p_dëe˘ed_cou¡
 && i < 
MAX_NICS
; i++) {

95 
	`LOG_DEBUG
("PnP Devi˚ %d: Ty≥=%d, I/O=0x%X, IRQ=%d", 
i
,

96 
≤p_dëe˘i⁄_ªsu…s
[
i
].
ty≥
,

97 
≤p_dëe˘i⁄_ªsu…s
[
i
].
io_ba£
,

98 
≤p_dëe˘i⁄_ªsu…s
[
i
].
úq
);

101 
	`LOG_DEBUG
("No PnP devices detected, will useÜegacy ISA detection");

106 
	`h¨dw¨e_£t_≤p_dëe˘i⁄_ªsu…s
(c⁄° 
nic_dëe˘_öfo_t
 *
ªsu…s
, 
cou¡
);

107 i‡(
≤p_dëe˘ed_cou¡
 > 0) {

108 
	`h¨dw¨e_£t_≤p_dëe˘i⁄_ªsu…s
(
≤p_dëe˘i⁄_ªsu…s
, 
≤p_dëe˘ed_cou¡
);

111 
g_nic_öô_öôülized
 = 
åue
;

112 
g_nic_öô_sy°em_ªady
 = 
åue
;

115 
	`nic_öô_di•œy_sy°em_™Æysis
();

117 
	`LOG_INFO
("NIC initialization systemÑeady with cache coherency management");

119  
SUCCESS
;

120 
	}
}

122 
	$nic_öô_˛ónup
() {

123 i‡(!
g_nic_öô_öôülized
) {

127 
	`LOG_INFO
("Shutting down NIC initialization system");

129 
g_nic_öô_öôülized
 = 
Ál£
;

130 
g_nic_öô_sy°em_ªady
 = 
Ál£
;

131 
	}
}

133 
	$nic_öô_Æl_dëe˘ed
() {

134 i‡(!
g_nic_öô_sy°em_ªady
) {

135  
ERROR_NOT_FOUND
;

139 
nic_dëe˘_öfo_t
 
dëe˘_li°
[
MAX_NICS
];

140 
dëe˘ed_cou¡
 = 
	`nic_dëe˘_Æl
(
dëe˘_li°
, 
MAX_NICS
);

142 i‡(
dëe˘ed_cou¡
 <= 0) {

143 
	`LOG_WARNING
("No NICs detected");

144  
ERROR_NOT_FOUND
;

147 
	`LOG_INFO
("Dëe˘ed %d NICs, inôülizög...", 
dëe˘ed_cou¡
);

150 
öôülized_cou¡
 = 0;

151 
i
 = 0; i < 
dëe˘ed_cou¡
 && i < 
MAX_NICS
; i++) {

152 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

153 i‡(
nic
) {

154 
ªsu…
 = 
	`nic_öô_‰om_dëe˘i⁄
(
nic
, &
dëe˘_li°
[
i
]);

155 i‡(
ªsu…
 =
SUCCESS
) {

156 
öôülized_cou¡
++;

157 
	`LOG_INFO
("Suc˚ssfuŒy inôülized NIC %d", 
i
);

159 
	`LOG_ERROR
("FaûedÅÿöôülizêNIC %d: %d", 
i
, 
ªsu…
);

164 
	`LOG_INFO
("Inôülized %d o‡%d dëe˘ed NICs", 
öôülized_cou¡
, 
dëe˘ed_cou¡
);

166  
öôülized_cou¡
 > 0 ? 
SUCCESS
 : 
ERROR_HARDWARE
;

167 
	}
}

169 
	$nic_öô_cou¡_dëe˘ed
() {

170 
nic_dëe˘_öfo_t
 
dëe˘_li°
[
MAX_NICS
];

171  
	`nic_dëe˘_Æl
(
dëe˘_li°
, 
MAX_NICS
);

172 
	}
}

175 
	$nic_öô_sögÀ
(
nic_öfo_t
 *
nic
, c⁄° 
nic_öô_c⁄fig_t
 *
c⁄fig
) {

176 i‡(!
nic
 || !
c⁄fig
) {

177  
ERROR_INVALID_PARAM
;

180 
g_nic_öô_°©s
.
tŸÆ_öôüliz©i⁄s
++;

182 
	`LOG_INFO
("Inôülizög NICÅy≥ %dáàI/O 0x%X", 
c⁄fig
->
nic_ty≥
, c⁄fig->
io_ba£
);

185 
nic
->
ty≥
 = 
c⁄fig
->
nic_ty≥
;

186 
nic
->
io_ba£
 = 
c⁄fig
->io_base;

187 
nic
->
úq
 = 
c⁄fig
->irq;

188 
nic
->
dma_ch™√l
 = 
c⁄fig
->dma_channel;

191 i‡(!(
c⁄fig
->
Êags
 & 
NIC_INIT_FLAG_NO_RESET
)) {

192 
ªsu…
 = 
	`nic_ª£t_h¨dw¨e
(
nic
);

193 i‡(
ªsu…
 !
SUCCESS
) {

194 
	`LOG_ERROR
("H¨dw¨êª£àÁûed: %d", 
ªsu…
);

195 
	`nic_öô_upd©e_°©s
(
Ál£
, false);

196  
ªsu…
;

201 
ªsu…
;

202 
c⁄fig
->
nic_ty≥
) {

203 
NIC_TYPE_3C509B
:

204 
ªsu…
 = 
	`nic_öô_3c509b
(
nic
, 
c⁄fig
);

206 
NIC_TYPE_3C515_TX
:

207 
ªsu…
 = 
	`nic_öô_3c515
(
nic
, 
c⁄fig
);

210 
	`LOG_ERROR
("Unsuµ‹ãd NICÅy≥: %d", 
c⁄fig
->
nic_ty≥
);

211 
	`nic_öô_upd©e_°©s
(
Ál£
, false);

212  
ERROR_NOT_SUPPORTED
;

215 i‡(
ªsu…
 !
SUCCESS
) {

216 
	`LOG_ERROR
("H¨dw¨e-•ecifi¯öôüliz©i⁄ faûed: %d", 
ªsu…
);

217 
	`nic_öô_upd©e_°©s
(
Ál£
, false);

218  
ªsu…
;

222 
ªsu…
 = 
	`nic_öô_buf„rs
(
nic
);

223 i‡(
ªsu…
 !
SUCCESS
) {

224 
	`LOG_ERROR
("Buf„∏öôüliz©i⁄ faûed: %d", 
ªsu…
);

225 
	`nic_öô_upd©e_°©s
(
Ál£
, false);

226  
ªsu…
;

230 i‡(!(
c⁄fig
->
Êags
 & 
NIC_INIT_FLAG_SKIP_TEST
)) {

231 
ªsu…
 = 
	`nic_run_£lf_ã°
(
nic
);

232 i‡(
ªsu…
 !
SUCCESS
) {

233 
	`LOG_WARNING
("Sñf-ã° faûed: %d", 
ªsu…
);

239 
ªsu…
 = 
	`nic_öô_≠∂y_cohîícy_to_nic
(
nic
);

240 i‡(
ªsu…
 !
SUCCESS
) {

241 
	`LOG_ERROR
("Cachêcohîícyáµliˇti⁄ faûed: %d", 
ªsu…
);

242 
	`nic_öô_upd©e_°©s
(
Ál£
, false);

243  
ªsu…
;

247 
nic
->
°©us
 |
NIC_STATUS_PRESENT
 | 
NIC_STATUS_INITIALIZED
 | 
NIC_STATUS_ACTIVE
;

249 
	`nic_öô_upd©e_°©s
(
åue
, 
Ál£
);

251 
	`LOG_INFO
("NIC initialization completed successfully with cache coherency");

253  
SUCCESS
;

254 
	}
}

256 
	$nic_öô_‰om_dëe˘i⁄
(
nic_öfo_t
 *
nic
, c⁄° 
nic_dëe˘_öfo_t
 *
dëe˘_öfo
) {

257 i‡(!
nic
 || !
dëe˘_öfo
 || !dëe˘_öfo->
dëe˘ed
) {

258  
ERROR_INVALID_PARAM
;

262 
nic_öô_c⁄fig_t
 
c⁄fig
;

263 
	`nic_öô_c⁄fig_deÁu…s
(&
c⁄fig
, 
dëe˘_öfo
->
ty≥
);

265 
c⁄fig
.
nic_ty≥
 = 
dëe˘_öfo
->
ty≥
;

266 
c⁄fig
.
io_ba£
 = 
dëe˘_öfo
->io_base;

267 
c⁄fig
.
úq
 = 
dëe˘_öfo
->irq;

268 
c⁄fig
.
auto_dëe˘
 = 
Ál£
;

271 
	`mem‹y_c›y
(
nic
->
mac
, 
dëe˘_öfo
->mac, 
ETH_ALEN
);

272 
	`mem‹y_c›y
(
nic
->
≥rm_mac
, 
dëe˘_öfo
->
mac
, 
ETH_ALEN
);

274  
	`nic_öô_sögÀ
(
nic
, &
c⁄fig
);

275 
	}
}

278 
	$nic_dëe˘_Æl
(
nic_dëe˘_öfo_t
 *
dëe˘_li°
, 
max_nics
) {

279 i‡(!
dëe˘_li°
 || 
max_nics
 <= 0) {

280  
ERROR_INVALID_PARAM
;

283 
g_nic_öô_°©s
.
tŸÆ_dëe˘i⁄s
++;

285 
tŸÆ_dëe˘ed
 = 0;

288 
dëe˘ed_3c509b
 = 
	`nic_dëe˘_3c509b
(
dëe˘_li°
 + 
tŸÆ_dëe˘ed
,

289 
max_nics
 - 
tŸÆ_dëe˘ed
);

290 i‡(
dëe˘ed_3c509b
 > 0) {

291 
tŸÆ_dëe˘ed
 +
dëe˘ed_3c509b
;

292 
	`LOG_INFO
("Dëe˘ed %d 3C509B NICs", 
dëe˘ed_3c509b
);

296 i‡(
tŸÆ_dëe˘ed
 < 
max_nics
) {

297 
dëe˘ed_3c515
 = 
	`nic_dëe˘_3c515
(
dëe˘_li°
 + 
tŸÆ_dëe˘ed
,

298 
max_nics
 - 
tŸÆ_dëe˘ed
);

299 i‡(
dëe˘ed_3c515
 > 0) {

300 
tŸÆ_dëe˘ed
 +
dëe˘ed_3c515
;

301 
	`LOG_INFO
("Dëe˘ed %d 3C515 NICs", 
dëe˘ed_3c515
);

305 i‡(
tŸÆ_dëe˘ed
 > 0) {

306 
g_nic_öô_°©s
.
suc˚ssful_dëe˘i⁄s
++;

309 
	`LOG_INFO
("TŸÆ NIC†dëe˘ed: %d", 
tŸÆ_dëe˘ed
);

311  
tŸÆ_dëe˘ed
;

312 
	}
}

314 
	$nic_dëe˘_3c509b
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_cou¡
) {

315 i‡(!
öfo_li°
 || 
max_cou¡
 <= 0) {

316  
ERROR_INVALID_PARAM
;

319 
dëe˘ed_cou¡
 = 0;

322 
i
 = 0; i < 
NIC_3C509B_IO_COUNT
 && 
dëe˘ed_cou¡
 < 
max_cou¡
; i++) {

323 
uöt16_t
 
io_ba£
 = 
NIC_3C509B_IO_BASES
[
i
];

325 i‡(
	`nic_¥obe_3c509b_©_addªss
(
io_ba£
, &
öfo_li°
[
dëe˘ed_cou¡
])) {

326 
	`LOG_DEBUG
("Found 3C509BáàI/O 0x%X", 
io_ba£
);

327 
dëe˘ed_cou¡
++;

332 
≤p_dëe˘ed
 = 
	`nic_dëe˘_≤p_3c509b
(
öfo_li°
 + 
dëe˘ed_cou¡
,

333 
max_cou¡
 - 
dëe˘ed_cou¡
);

334 
dëe˘ed_cou¡
 +
≤p_dëe˘ed
;

336  
dëe˘ed_cou¡
;

337 
	}
}

339 
	$nic_dëe˘_3c515
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_cou¡
) {

340 i‡(!
öfo_li°
 || 
max_cou¡
 <= 0) {

341  
ERROR_INVALID_PARAM
;

344 
dëe˘ed_cou¡
 = 0;

347 
i
 = 0; i < 
NIC_3C515_IO_COUNT
 && 
dëe˘ed_cou¡
 < 
max_cou¡
; i++) {

348 
uöt16_t
 
io_ba£
 = 
NIC_3C515_IO_BASES
[
i
];

350 i‡(
	`nic_¥obe_3c515_©_addªss
(
io_ba£
, &
öfo_li°
[
dëe˘ed_cou¡
])) {

351 
	`LOG_DEBUG
("Found 3C515áàI/O 0x%X", 
io_ba£
);

352 
dëe˘ed_cou¡
++;

356  
dëe˘ed_cou¡
;

357 
	}
}

360 
	$nic_öô_3c509b
(
nic_öfo_t
 *
nic
, c⁄° 
nic_öô_c⁄fig_t
 *
c⁄fig
) {

361 i‡(!
nic
 || !
c⁄fig
) {

362  
ERROR_INVALID_PARAM
;

365 
	`LOG_DEBUG
("Inôülizög 3C509BáàI/O 0x%X wôhádv™˚d fótuªs", 
c⁄fig
->
io_ba£
);

368 
nic
->
›s
 = 
	`gë_3c509b_›s
();

369 i‡(!
nic
->
›s
) {

370  
ERROR_NOT_FOUND
;

374 
nic
->
mtu
 = 1514;

375 
nic
->
ˇ∑bûôõs
 = 
	`gë_nic_ˇ∑bûôõs_‰om_ty≥
(
NIC_TYPE_3C509B
);

376 
nic
->
•ìd
 = 10;

377 
nic
->
fuŒ_du∂ex
 = 
Ál£
;

382 
nic
->
tx_fifo_thªshﬁd
 = 512;

383 
nic
->
rx_fifo_thªshﬁd
 = 16;

386 
nic
->
medü_ty≥
 = 
NIC_MEDIA_AUTO
;

389 
nic
->
¥omiscuous_ˇ∑bÀ
 = 
åue
;

390 
nic
->
mu…iˇ°_ˇ∑bÀ
 = 
åue
;

393 i‡(
	`is_zîo_mac
(
nic
->
mac
)) {

394 
ªsu…
 = 
	`nic_ªad_mac_addªss_3c509b
(
c⁄fig
->
io_ba£
, 
nic
->
mac
);

395 i‡(
ªsu…
 !
SUCCESS
) {

396 
	`LOG_ERROR
("FailedÅoÑead MACáddress");

397  
ªsu…
;

399 
	`mem‹y_c›y
(
nic
->
≥rm_mac
,Çic->
mac
, 
ETH_ALEN
);

403 i‡(
nic
->
ˇ∑bûôõs
 & 
HW_CAP_PROMISCUOUS
) {

405 
nic
->
öãºu±_cﬂÀs˚_cou¡
 = 4;

406 
nic
->
öãºu±_cﬂÀs˚_timeout
 = 50;

407 
	`LOG_DEBUG
("3C509B interrupt mitigation configured");

411 i‡(
nic
->
›s
->
öô
) {

412 
ªsu…
 = 
nic
->
›s
->
	`öô
(nic);

413 i‡(
ªsu…
 !
SUCCESS
) {

414 
	`LOG_ERROR
("3C509B h¨dw¨êöôüliz©i⁄ faûed: %d", 
ªsu…
);

415  
ªsu…
;

419 
	`LOG_INFO
("3C509B initialized withádvanced features:Öromiscuous=%s, interrupt_mitigation=%s",

420 
nic
->
¥omiscuous_ˇ∑bÀ
 ? "yes" : "no",

421 (
nic
->
ˇ∑bûôõs
 & 
HW_CAP_PROMISCUOUS
) ? "yes" : "no");

423  
SUCCESS
;

424 
	}
}

426 
	$nic_öô_3c515
(
nic_öfo_t
 *
nic
, c⁄° 
nic_öô_c⁄fig_t
 *
c⁄fig
) {

427 i‡(!
nic
 || !
c⁄fig
) {

428  
ERROR_INVALID_PARAM
;

431 
	`LOG_DEBUG
("Inôülizög 3C515-TXáàI/O 0x%X wôh bu†ma°î sa„tyÅe°ög", 
c⁄fig
->
io_ba£
);

434 
nic
->
›s
 = 
	`gë_3c515_›s
();

435 i‡(!
nic
->
›s
) {

436  
ERROR_NOT_FOUND
;

440 
nic
->
mtu
 = 1514;

441 
nic
->
ˇ∑bûôõs
 = 
	`gë_nic_ˇ∑bûôõs_‰om_ty≥
(
NIC_TYPE_3C515_TX
);

442 
nic
->
•ìd
 = 100;

443 
nic
->
fuŒ_du∂ex
 = 
åue
;

449 
c⁄fig_t
 
g_c⁄fig
;

452 
nic
->
dma_ˇ∑bÀ
 = 
Ál£
;

453 
nic
->
bus_ma°î_ˇ∑bÀ
 = 
Ál£
;

454 
nic
->
sˇâî_g©hî_ˇ∑bÀ
 = 
Ál£
;

457 i‡(
g_c⁄fig
.
busma°î
 !
BUSMASTER_OFF
) {

458 
	`LOG_INFO
("3C515-TX: Performing bus master capabilityÅesting...");

461 
nic_c⁄ãxt_t
 
ã°_˘x
;

462 
	`mem£t
(&
ã°_˘x
, 0, (test_ctx));

463 
ã°_˘x
.
nic_öfo
 = 
nic
;

464 
ã°_˘x
.
io_ba£
 = 
c⁄fig
->io_base;

465 
ã°_˘x
.
úq
 = 
c⁄fig
->irq;

468 
boﬁ
 
quick_mode
 = (
g_c⁄fig
.
busma°î
 =
BUSMASTER_AUTO
);

469 
ã°_ªsu…
 = 
	`c⁄fig_≥rf‹m_busma°î_auto_ã°
(&
g_c⁄fig
, &
ã°_˘x
, 
quick_mode
);

471 i‡(
ã°_ªsu…
 =0 && 
g_c⁄fig
.
busma°î
 =
BUSMASTER_ON
) {

473 
nic
->
dma_ˇ∑bÀ
 = 
åue
;

474 
nic
->
bus_ma°î_ˇ∑bÀ
 = 
åue
;

475 
	`LOG_INFO
("3C515-TX: Bus masterÅesting PASSED - DMAÉnabled");

478 
nic
->
dma_ˇ∑bÀ
 = 
Ál£
;

479 
nic
->
bus_ma°î_ˇ∑bÀ
 = 
Ál£
;

480 
	`LOG_INFO
("3C515-TX: Using Programmed I/O mode (bus master %s)",

481 (
ã°_ªsu…
 != 0) ? "testing failed" : "disabled");

484 
	`LOG_INFO
("3C515-TX: Bus mastering disabled by configuration - using PIO mode");

488 
nic
->
tx_fifo_thªshﬁd
 = 1024;

489 
nic
->
rx_fifo_thªshﬁd
 = 32;

492 
nic
->
aut⁄eg_ˇ∑bÀ
 = 
åue
;

493 
nic
->
mii_ˇ∑bÀ
 = 
åue
;

494 
nic
->
phy_addªss
 = 0x18;

497 
nic
->
öãºu±_cﬂÀs˚_ˇ∑bÀ
 = 
åue
;

498 
nic
->
öãºu±_cﬂÀs˚_cou¡
 = 8;

499 
nic
->
öãºu±_cﬂÀs˚_timeout
 = 25;

502 
nic
->
zîo_c›y_ˇ∑bÀ
 = 
åue
;

503 
nic
->
des¸ùt‹_rögs_ˇ∑bÀ
 = 
åue
;

506 
nic
->
¥omiscuous_ˇ∑bÀ
 = 
åue
;

507 
nic
->
mu…iˇ°_ˇ∑bÀ
 = 
åue
;

508 
nic
->
¥omiscuous_dma_›timized
 = 
åue
;

511 i‡(
	`is_zîo_mac
(
nic
->
mac
)) {

512 
ªsu…
 = 
	`nic_ªad_mac_addªss_3c515
(
c⁄fig
->
io_ba£
, 
nic
->
mac
);

513 i‡(
ªsu…
 !
SUCCESS
) {

514 
	`LOG_ERROR
("FailedÅoÑead MACáddress");

515  
ªsu…
;

517 
	`mem‹y_c›y
(
nic
->
≥rm_mac
,Çic->
mac
, 
ETH_ALEN
);

521 i‡(
nic
->
dma_ˇ∑bÀ
) {

522 
ªsu…
 = 
	`nic_öô_3c515_dma_rögs
(
nic
);

523 i‡(
ªsu…
 !
SUCCESS
) {

524 
	`LOG_WARNING
("DMAÑög inôüliz©i⁄ faûed: %d, fÆlög backÅÿPIO", 
ªsu…
);

525 
nic
->
dma_ˇ∑bÀ
 = 
Ál£
;

527 
	`LOG_DEBUG
("3C515-TX DMAÑings initialized successfully");

532 i‡(
nic
->
mii_ˇ∑bÀ
) {

533 
ªsu…
 = 
	`nic_öô_3c515_mii
(
nic
);

534 i‡(
ªsu…
 !
SUCCESS
) {

535 
	`LOG_WARNING
("MII inôüliz©i⁄ faûed: %d, usög fixed medü", 
ªsu…
);

536 
nic
->
mii_ˇ∑bÀ
 = 
Ál£
;

537 
nic
->
aut⁄eg_ˇ∑bÀ
 = 
Ál£
;

539 
	`LOG_DEBUG
("3C515-TX MII interface initialized");

544 i‡(
nic
->
›s
->
öô
) {

545 
ªsu…
 = 
nic
->
›s
->
	`öô
(nic);

546 i‡(
ªsu…
 !
SUCCESS
) {

547 
	`LOG_ERROR
("3C515-TX h¨dw¨êöôüliz©i⁄ faûed: %d", 
ªsu…
);

548  
ªsu…
;

552 
	`LOG_INFO
("3C515-TX initialized withádvanced features: DMA=%s, MII=%s, AutoNeg=%s, ZeroCopy=%s",

553 
nic
->
dma_ˇ∑bÀ
 ? "yes" : "no",

554 
nic
->
mii_ˇ∑bÀ
 ? "yes" : "no",

555 
nic
->
aut⁄eg_ˇ∑bÀ
 ? "yes" : "no",

556 
nic
->
zîo_c›y_ˇ∑bÀ
 ? "yes" : "no");

558  
SUCCESS
;

559 
	}
}

563 
boﬁ
 
nic_¥obe_3c509b_©_addªss
(
uöt16_t
 
io_ba£
, 
nic_dëe˘_öfo_t
 *
öfo
);

564 
boﬁ
 
nic_¥obe_3c515_©_addªss
(
uöt16_t
 
io_ba£
, 
nic_dëe˘_öfo_t
 *
öfo
);

567 
	$nic_öô_c⁄fig_deÁu…s
(
nic_öô_c⁄fig_t
 *
c⁄fig
, 
nic_ty≥_t
 
ty≥
) {

568 i‡(!
c⁄fig
) {

572 
	`mem‹y_zîo
(
c⁄fig
, (
nic_öô_c⁄fig_t
));

574 
c⁄fig
->
nic_ty≥
 = 
ty≥
;

575 
c⁄fig
->
io_ba£
 = 0;

576 
c⁄fig
->
úq
 = 0;

577 
c⁄fig
->
dma_ch™√l
 = 0;

578 
c⁄fig
->
Êags
 = 
NIC_INIT_FLAG_AUTO_IRQ
 | 
NIC_INIT_FLAG_AUTO_IO
;

579 
c⁄fig
->
auto_dëe˘
 = 
åue
;

580 
c⁄fig
->
f‹˚_£âögs
 = 
Ál£
;

581 
	}
}

584 
	$nic_öô_buf„rs
(
nic_öfo_t
 *
nic
) {

585 
ªsu…
;

586 c⁄° * 
nic_«me
;

588 i‡(!
nic
) {

589  
ERROR_INVALID_PARAM
;

593 
nic_«me
 = (
nic
->
ty≥
 =
NIC_TYPE_3C509B
) ? "3C509B" :

594 (
nic
->
ty≥
 =
NIC_TYPE_3C515_TX
) ? "3C515-TX" : "Unknown";

596 
ªsu…
 = 
	`buf„r_ªgi°î_nic
(
nic
->
ödex
,Çic->
ty≥
, 
nic_«me
);

597 i‡(
ªsu…
 !
SUCCESS
) {

598 
	`LOG_WARNING
("FaûedÅÿªgi°î NIC %d f‹ buf„∏poﬁs: %d", 
nic
->
ödex
, 
ªsu…
);

603 #ifde‡
INCLUDE_FLOW_CONTROL


605 
	`Êow_c⁄åﬁ_öô_nic
(
nic_id_t
 
nic_id
, c⁄° * 
nic_«me
);

606 
ªsu…
 = 
	`Êow_c⁄åﬁ_öô_nic
(
nic
->
ödex
, 
nic_«me
);

607 i‡(
ªsu…
 !
SUCCESS
) {

608 
	`LOG_WARNING
("FaûedÅÿöôülizêÊow c⁄åﬁ f‹ NIC %d: %d", 
nic
->
ödex
, 
ªsu…
);

611 
	`LOG_DEBUG
("Flow c⁄åﬁ inôülized f‹ NIC %d (%s)", 
nic
->
ödex
, 
nic_«me
);

616 
nic
->
ty≥
) {

617 
NIC_TYPE_3C509B
:

619 
nic
->
tx_buf„r_size
 = 
_3C509B_BUFFER_SIZE
;

620 
nic
->
rx_buf„r_size
 = 
_3C509B_BUFFER_SIZE
;

621 
nic
->
tx_fifo_thªshﬁd
 = 512;

622 
nic
->
rx_fifo_thªshﬁd
 = 8;

625 
NIC_TYPE_3C515_TX
:

627 
nic
->
tx_buf„r_size
 = 
_3C515_TX_MAX_MTU
;

628 
nic
->
rx_buf„r_size
 = 
_3C515_TX_MAX_MTU
;

629 
nic
->
tx_fifo_thªshﬁd
 = 512;

630 
nic
->
rx_fifo_thªshﬁd
 = 8;

633 i‡(
nic
->
ˇ∑bûôõs
 & 
HW_CAP_DMA
) {

636 
	`LOG_DEBUG
("DMA descriptorÑings initialized for 3C515-TX");

641 
	`LOG_ERROR
("Unknow¿NICÅy≥ f‹ buf„∏öôüliz©i⁄: %d", 
nic
->
ty≥
);

642  
ERROR_NOT_SUPPORTED
;

645 
	`LOG_DEBUG
("Initialized buffers for NICát I/O 0x%X (TX: %d bytes, RX: %d bytes)",

646 
nic
->
io_ba£
,Çic->
tx_buf„r_size
,Çic->
rx_buf„r_size
);

648  
SUCCESS
;

649 
	}
}

652 
	$nic_run_£lf_ã°
(
nic_öfo_t
 *
nic
) {

653 i‡(!
nic
 || !nic->
›s
) {

654  
ERROR_INVALID_PARAM
;

657 
g_nic_öô_°©s
.
£lf_ã°s_run
++;

660 i‡(
nic
->
›s
->
£lf_ã°
) {

661 
ªsu…
 = 
nic
->
›s
->
	`£lf_ã°
(nic);

662 i‡(
ªsu…
 =
SUCCESS
) {

663 
g_nic_öô_°©s
.
£lf_ã°s_∑s£d
++;

665  
ªsu…
;

669 i‡(
	`nic_is_lök_up
(
nic
)) {

670 
g_nic_öô_°©s
.
£lf_ã°s_∑s£d
++;

671  
SUCCESS
;

674  
ERROR_HARDWARE
;

675 
	}
}

678 c⁄° * 
	$nic_medü_ty≥_to_°rög
(
nic_medü_ty≥_t
 
medü
) {

679 
medü
) {

680 
NIC_MEDIA_AUTO
:  "Auto";

681 
NIC_MEDIA_10BASE_T
:  "10BASE-T";

682 
NIC_MEDIA_10BASE_2
:  "10BASE-2";

683 
NIC_MEDIA_AUI
:  "AUI";

684 
NIC_MEDIA_100BASE_TX
:  "100BASE-TX";

685 
NIC_MEDIA_100BASE_FX
:  "100BASE-FX";

688 
	}
}

690 c⁄° * 
	$nic_öô_îr‹_to_°rög
(
îr‹_code
) {

691 
îr‹_code
) {

692 
SUCCESS
:  "Success";

693 
ERROR_INVALID_PARAM
:  "InvalidÖarameter";

694 
ERROR_NO_MEMORY
:  "Out of memory";

695 
ERROR_NOT_FOUND
:  "Not found";

696 
ERROR_HARDWARE
:  "HardwareÉrror";

697 
ERROR_TIMEOUT
:  "Timeout";

698 
ERROR_NOT_SUPPORTED
:  "Not supported";

701 
	}
}

704 
	$nic_öô_°©s_˛ór
() {

705 
	`mem‹y_zîo
(&
g_nic_öô_°©s
, (
nic_öô_°©s_t
));

706 
	}
}

708 c⁄° 
nic_öô_°©s_t
* 
	$nic_öô_gë_°©s
() {

709  &
g_nic_öô_°©s
;

710 
	}
}

713 
	$nic_ª£t_h¨dw¨e
(
nic_öfo_t
 *
nic
) {

714 i‡(!
nic
) {

715  
ERROR_INVALID_PARAM
;

718 
g_nic_öô_°©s
.
ª£ts_≥rf‹med
++;

721 i‡(
nic
->
›s
 &&Çic->›s->
ª£t
) {

722  
nic
->
›s
->
	`ª£t
(nic);

726 
nic
->
ty≥
) {

727 
NIC_TYPE_3C509B
:

729 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_TOTAL_RESET
);

730 
	`nic_dñay_mûli£c⁄ds
(10);

733 
i
 = 0; i < 100; i++) {

734 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

735 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

738 
	`nic_dñay_mûli£c⁄ds
(1);

742 
NIC_TYPE_3C515_TX
:

744 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_TOTAL_RESET
);

745 
	`nic_dñay_mûli£c⁄ds
(10);

748 
i
 = 0; i < 100; i++) {

749 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

750 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

753 
	`nic_dñay_mûli£c⁄ds
(1);

758 
	`LOG_WARNING
("Unknow¿NICÅy≥ f‹Ñe£t: %d", 
nic
->
ty≥
);

762 
	`nic_dñay_mûli£c⁄ds
(100);

764  
SUCCESS
;

765 
	}
}

767 
	$nic_waô_f‹_ªady
(
nic_öfo_t
 *
nic
, 
uöt32_t
 
timeout_ms
) {

768 i‡(!
nic
) {

769  
ERROR_INVALID_PARAM
;

773 
uöt32_t
 
°¨t_time
 = 
	`nic_gë_sy°em_tick_cou¡
();

775 (
	`nic_gë_sy°em_tick_cou¡
(Ë- 
°¨t_time
Ë< 
timeout_ms
) {

776 i‡(
nic
->
›s
 &&Çic->›s->
gë_lök_°©us
) {

778 i‡(
nic
->
›s
->
	`gë_lök_°©us
“icË!
ERROR_HARDWARE
) {

779  
SUCCESS
;

783 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + (“ic->
ty≥
 =
NIC_TYPE_3C509B
) ?

784 
_3C509B_STATUS_REG
 : 
_3C515_TX_STATUS_REG
));

785 i‡(
°©us
 != 0xFFFF && !(status & 0x1000)) {

786  
SUCCESS
;

789 
	`nic_dñay_mûli£c⁄ds
(10);

792  
ERROR_TIMEOUT
;

793 
	}
}

795 
	$nic_öô_upd©e_°©s
(
boﬁ
 
suc˚ss
, boﬁ 
dëe˘i⁄
) {

796 i‡(
dëe˘i⁄
) {

797 i‡(
suc˚ss
) {

798 
g_nic_öô_°©s
.
suc˚ssful_dëe˘i⁄s
++;

801 i‡(
suc˚ss
) {

802 
g_nic_öô_°©s
.
suc˚ssful_öôüliz©i⁄s
++;

804 
g_nic_öô_°©s
.
Áûed_öôüliz©i⁄s
++;

807 
	}
}

810 
boﬁ
 
	$is_zîo_mac
(c⁄° 
uöt8_t
 *
mac
) {

811 i‡(!
mac
Ë 
åue
;

812 
i
 = 0; i < 
ETH_ALEN
; i++) {

813 i‡(
mac
[
i
] !0Ë 
Ál£
;

815  
åue
;

816 
	}
}

819 
	$udñay
(
uöt32_t
 
mi¸o£c⁄ds
) {

821 vﬁ©ûê
uöt32_t
 
i
;

822 
i
 = 0; i < 
mi¸o£c⁄ds
 * 10; i++) {

825 
	}
}

827 
	$mdñay
(
uöt32_t
 
mûli£c⁄ds
) {

828 
uöt32_t
 
i
 = 0; i < 
mûli£c⁄ds
; i++) {

829 
	`udñay
(1000);

831 
	}
}

834 
	$nic_dñay_mi¸o£c⁄ds
(
uöt32_t
 
mi¸o£c⁄ds
) {

835 
	`udñay
(
mi¸o£c⁄ds
);

836 
	}
}

838 
	$nic_dñay_mûli£c⁄ds
(
uöt32_t
 
mûli£c⁄ds
) {

839 
	`mdñay
(
mûli£c⁄ds
);

840 
	}
}

842 
uöt32_t
 
	$nic_gë_sy°em_tick_cou¡
() {

844 
uöt32_t
 
tick_cou¡î
 = 0;

845  ++
tick_cou¡î
;

846 
	}
}

850 
boﬁ
 
	$nic_¥obe_3c509b_©_addªss
(
uöt16_t
 
io_ba£
, 
nic_dëe˘_öfo_t
 *
öfo
) {

851 i‡(!
öfo
) {

852  
Ál£
;

856 
	`mem£t
(
öfo
, 0, (
nic_dëe˘_öfo_t
));

857 
öfo
->
io_ba£
 = io_base;

858 
öfo
->
ty≥
 = 
NIC_TYPE_3C509B
;

864 
	`outb
(
_3C509B_ID_PORT
, 
_3C509B_ID_GLOBAL_RESET
);

865 
	`nic_dñay_mûli£c⁄ds
(10);

870 
uöt16_t
 
a˘iv©e_cmd
 = 
_3C509B_ACTIVATE_AND_SET_IO
 | ((
io_ba£
 >> 4) & 0x1F);

871 
	`outb
(
_3C509B_ID_PORT
, 
a˘iv©e_cmd
);

872 
	`nic_dñay_mûli£c⁄ds
(10);

875 
uöt16_t
 
ã°_ªad
 = 
	`öw
(
io_ba£
 + 
_3C509B_STATUS_REG
);

878 i‡(
ã°_ªad
 == 0xFFFF) {

879  
Ál£
;

883 
uöt16_t
 
°©us
 = 
	`öw
(
io_ba£
 + 
_3C509B_STATUS_REG
);

886 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 
_3C509B_WINDOW_0
);

887 
	`nic_dñay_mi¸o£c⁄ds
(100);

890 
	`outw
(
io_ba£
 + 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_READ
 | 3);

891 
	`nic_dñay_mi¸o£c⁄ds
(
_3C509B_EEPROM_READ_DELAY
);

892 
uöt16_t
 
¥odu˘_id
 = 
	`öw
(
io_ba£
 + 
_3C509B_EEPROM_DATA
);

895 i‡((
¥odu˘_id
 & 
_3C509B_PRODUCT_ID_MASK
Ë!
_3C509B_PRODUCT_ID
) {

896 
	`LOG_DEBUG
("Nÿ3C509BáàI/O 0x%X (¥odu˘ ID: 0x%X)", 
io_ba£
, 
¥odu˘_id
);

897  
Ál£
;

901 
i
 = 0; i < 3; i++) {

902 
	`outw
(
io_ba£
 + 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_READ
 | 
i
);

903 
	`nic_dñay_mi¸o£c⁄ds
(
_3C509B_EEPROM_READ_DELAY
);

904 
uöt16_t
 
mac_w‹d
 = 
	`öw
(
io_ba£
 + 
_3C509B_EEPROM_DATA
);

905 
öfo
->
mac
[
i
 * 2] = (
mac_w‹d
 >> 8) & 0xFF;

906 
öfo
->
mac
[
i
 * 2 + 1] = 
mac_w‹d
 & 0xFF;

910 
	`outw
(
io_ba£
 + 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_READ
 | 6);

911 
	`nic_dñay_mi¸o£c⁄ds
(
_3C509B_EEPROM_READ_DELAY
);

912 
uöt16_t
 
úq_w‹d
 = 
	`öw
(
io_ba£
 + 
_3C509B_EEPROM_DATA
);

916 
uöt8_t
 
úq_ícodög
 = (
úq_w‹d
 >> 12) & 0x0F;

917 c⁄° 
uöt8_t
 
úq_m≠
[] = {3, 5, 7, 9, 10, 11, 12, 15};

918 i‡(
úq_ícodög
 < 8) {

919 
öfo
->
úq
 = 
úq_m≠
[
úq_ícodög
];

921 
öfo
->
úq
 = 0;

925 
öfo
->
víd‹_id
 = 0x10B7;

926 
öfo
->
devi˚_id
 = 
¥odu˘_id
;

927 
öfo
->
ªvisi⁄
 = 
¥odu˘_id
 & 0x0F;

928 
öfo
->
ˇ∑bûôõs
 = 
	`gë_nic_ˇ∑bûôõs_‰om_ty≥
(
NIC_TYPE_3C509B
);

929 
öfo
->
≤p_ˇ∑bÀ
 = 
Ál£
;

930 
öfo
->
dëe˘ed
 = 
åue
;

932 
	`LOG_DEBUG
("3C509B detectedát I/O 0x%X, MAC %02X:%02X:%02X:%02X:%02X:%02X, IRQ %d",

933 
io_ba£
, 
öfo
->
mac
[0], info->mac[1], info->mac[2],

934 
öfo
->
mac
[3], info->mac[4], info->mac[5], info->
úq
);

936  
åue
;

937 
	}
}

939 
boﬁ
 
	$nic_¥obe_3c515_©_addªss
(
uöt16_t
 
io_ba£
, 
nic_dëe˘_öfo_t
 *
öfo
) {

940 i‡(!
öfo
) {

941  
Ál£
;

945 
	`mem£t
(
öfo
, 0, (
nic_dëe˘_öfo_t
));

946 
öfo
->
io_ba£
 = io_base;

947 
öfo
->
ty≥
 = 
NIC_TYPE_3C515_TX
;

950 
uöt16_t
 
ã°_ªad
 = 
	`öw
(
io_ba£
 + 
_3C515_TX_STATUS_REG
);

951 i‡(
ã°_ªad
 == 0xFFFF) {

952  
Ál£
;

956 
	`_3C515_TX_SELECT_WINDOW
(
io_ba£
, 
_3C515_TX_WINDOW_0
);

957 
	`nic_dñay_mi¸o£c⁄ds
(100);

960 
	`outw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_CMD
, 
_3C515_TX_EEPROM_READ
 | 3);

961 
	`nic_dñay_mi¸o£c⁄ds
(
_3C515_TX_EEPROM_READ_DELAY
);

962 
uöt16_t
 
¥odu˘_id
 = 
	`öw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_DATA
);

965 i‡((
¥odu˘_id
 & 
_3C515_TX_PRODUCT_ID_MASK
Ë!
_3C515_TX_PRODUCT_ID
) {

966 
	`LOG_DEBUG
("Nÿ3C515-TXáàI/O 0x%X (¥odu˘ ID: 0x%X)", 
io_ba£
, 
¥odu˘_id
);

967  
Ál£
;

971 
i
 = 0; i < 3; i++) {

972 
	`outw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_CMD
, 
_3C515_TX_EEPROM_READ
 | 
i
);

973 
	`nic_dñay_mi¸o£c⁄ds
(
_3C515_TX_EEPROM_READ_DELAY
);

974 
uöt16_t
 
mac_w‹d
 = 
	`öw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_DATA
);

975 
öfo
->
mac
[
i
 * 2] = (
mac_w‹d
 >> 8) & 0xFF;

976 
öfo
->
mac
[
i
 * 2 + 1] = 
mac_w‹d
 & 0xFF;

981 
	`_3C515_TX_SELECT_WINDOW
(
io_ba£
, 
_3C515_TX_WINDOW_3
);

982 
	`nic_dñay_mi¸o£c⁄ds
(100);

987 
öfo
->
úq
 = 0;

990 
öfo
->
víd‹_id
 = 0x10B7;

991 
öfo
->
devi˚_id
 = 
¥odu˘_id
;

992 
öfo
->
ªvisi⁄
 = 
¥odu˘_id
 & 0x0F;

993 
öfo
->
ˇ∑bûôõs
 = 
	`gë_nic_ˇ∑bûôõs_‰om_ty≥
(
NIC_TYPE_3C515_TX
);

994 
öfo
->
≤p_ˇ∑bÀ
 = 
Ál£
;

995 
öfo
->
dëe˘ed
 = 
åue
;

997 
	`LOG_DEBUG
("3C515-TX detectedát I/O 0x%X, MAC %02X:%02X:%02X:%02X:%02X:%02X",

998 
io_ba£
, 
öfo
->
mac
[0], info->mac[1], info->mac[2],

999 
öfo
->
mac
[3], info->mac[4], info->mac[5]);

1001  
åue
;

1002 
	}
}

1004 
	$nic_ªad_mac_addªss_3c509b
(
uöt16_t
 
io_ba£
, 
uöt8_t
 *
mac
) {

1005 i‡(!
mac
) {

1006  
ERROR_INVALID_PARAM
;

1010 
	`_3C509B_SELECT_WINDOW
(
io_ba£
, 
_3C509B_WINDOW_0
);

1011 
	`nic_dñay_mi¸o£c⁄ds
(100);

1014 
i
 = 0; i < 3; i++) {

1015 
	`outw
(
io_ba£
 + 
_3C509B_EEPROM_CMD
, 
_3C509B_EEPROM_READ
 | 
i
);

1016 
	`nic_dñay_mi¸o£c⁄ds
(
_3C509B_EEPROM_READ_DELAY
);

1017 
uöt16_t
 
mac_w‹d
 = 
	`öw
(
io_ba£
 + 
_3C509B_EEPROM_DATA
);

1018 
mac
[
i
 * 2] = (
mac_w‹d
 >> 8) & 0xFF;

1019 
mac
[
i
 * 2 + 1] = 
mac_w‹d
 & 0xFF;

1022  
SUCCESS
;

1023 
	}
}

1025 
	$nic_ªad_mac_addªss_3c515
(
uöt16_t
 
io_ba£
, 
uöt8_t
 *
mac
) {

1026 i‡(!
mac
) {

1027  
ERROR_INVALID_PARAM
;

1031 
	`_3C515_TX_SELECT_WINDOW
(
io_ba£
, 
_3C515_TX_WINDOW_0
);

1032 
	`nic_dñay_mi¸o£c⁄ds
(100);

1035 
i
 = 0; i < 3; i++) {

1036 
	`outw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_CMD
, 
_3C515_TX_EEPROM_READ
 | 
i
);

1037 
	`nic_dñay_mi¸o£c⁄ds
(
_3C515_TX_EEPROM_READ_DELAY
);

1038 
uöt16_t
 
mac_w‹d
 = 
	`öw
(
io_ba£
 + 
_3C515_TX_W0_EEPROM_DATA
);

1039 
mac
[
i
 * 2] = (
mac_w‹d
 >> 8) & 0xFF;

1040 
mac
[
i
 * 2 + 1] = 
mac_w‹d
 & 0xFF;

1043  
SUCCESS
;

1044 
	}
}

1047 
	$nic_˛ónup_sögÀ
(
nic_öfo_t
 *
nic
Ë{  
SUCCESS
; 
	}
}

1048 
	$nic_ª£t_sögÀ
(
nic_öfo_t
 *
nic
Ë{  
	`nic_ª£t_h¨dw¨e
“ic); 
	}
}

1050 
boﬁ
 
	$nic_is_¥e£¡_©_addªss
(
nic_ty≥_t
 
ty≥
, 
uöt16_t
 
io_ba£
) {

1051 
nic_dëe˘_öfo_t
 
öfo
;

1052 i‡(
ty≥
 =
NIC_TYPE_3C509B
) {

1053  
	`nic_¥obe_3c509b_©_addªss
(
io_ba£
, &
öfo
);

1054 } i‡(
ty≥
 =
NIC_TYPE_3C515_TX
) {

1055  
	`nic_¥obe_3c515_©_addªss
(
io_ba£
, &
öfo
);

1057  
Ál£
;

1058 
	}
}

1060 
	$nic_dëe˘_≤p_3c509b
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_cou¡
) {

1061 i‡(!
öfo_li°
 || 
max_cou¡
 <= 0) {

1062  
ERROR_INVALID_PARAM
;

1066 
	`≤p_dëe˘_nics
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_nics
);

1067 
	`≤p_fûãr_by_ty≥
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
cou¡
, 
nic_ty≥_t
 
ty≥
);

1070 
tŸÆ_dëe˘ed
 = 
	`≤p_dëe˘_nics
(
öfo_li°
, 
max_cou¡
);

1071 i‡(
tŸÆ_dëe˘ed
 <= 0) {

1072 
	`LOG_DEBUG
("No PnP devices detected for 3C509B");

1077 
fûãªd_cou¡
 = 
	`≤p_fûãr_by_ty≥
(
öfo_li°
, 
tŸÆ_dëe˘ed
, 
NIC_TYPE_3C509B
);

1079 
	`LOG_DEBUG
("PnP 3C509B dëe˘i⁄: %dÅŸÆ, %d 3C509B devi˚s", 
tŸÆ_dëe˘ed
, 
fûãªd_cou¡
);

1081  
fûãªd_cou¡
;

1082 
	}
}

1084 
	$nic_dëe˘_eiß_3c509b
(
nic_dëe˘_öfo_t
 *
öfo_li°
, 
max_cou¡
) {

1087 
	}
}

1089 
boﬁ
 
	$nic_is_≤p_ˇ∑bÀ
(
uöt16_t
 
io_ba£
) {

1091  
Ál£
;

1092 
	}
}

1094 
boﬁ
 
	$nic_is_lök_up
(
nic_öfo_t
 *
nic
) {

1095  
nic
 ?Çic->
lök_up
 : 
Ál£
;

1096 
	}
}

1098 
	$nic_˛ónup_buf„rs
(
nic_öfo_t
 *
nic
) {

1099  
SUCCESS
;

1100 
	}
}

1102 
	$nic_öô_¥öt_°©s
() {

1103 
	`LOG_INFO
("NIC Init Stats: Detections=%d/%d, Initializations=%d/%d, Self-tests=%d/%d",

1104 
g_nic_öô_°©s
.
suc˚ssful_dëe˘i⁄s
, g_nic_öô_°©s.
tŸÆ_dëe˘i⁄s
,

1105 
g_nic_öô_°©s
.
suc˚ssful_öôüliz©i⁄s
, g_nic_öô_°©s.
tŸÆ_öôüliz©i⁄s
,

1106 
g_nic_öô_°©s
.
£lf_ã°s_∑s£d
, g_nic_öô_°©s.
£lf_ã°s_run
);

1107 
	}
}

1109 
	$nic_¥öt_dëe˘i⁄_öfo
(c⁄° 
nic_dëe˘_öfo_t
 *
öfo
) {

1110 i‡(!
öfo
) ;

1111 
	`LOG_INFO
("NIC: Type=%s, I/O=0x%X, IRQ=%d, MAC=%02X:%02X:%02X:%02X:%02X:%02X",

1112 (
öfo
->
ty≥
 =
NIC_TYPE_3C509B
) ? "3C509B" :

1113 (
öfo
->
ty≥
 =
NIC_TYPE_3C515_TX
) ? "3C515-TX" : "Unknown",

1114 
öfo
->
io_ba£
, info->
úq
, info->
mac
[0], info->mac[1], info->mac[2],

1115 
öfo
->
mac
[3], info->mac[4], info->mac[5]);

1116 
	}
}

1118 
	$nic_¥öt_öôüliz©i⁄_°©us
(c⁄° 
nic_öfo_t
 *
nic
) {

1119 i‡(!
nic
) ;

1120 
	`LOG_INFO
("NIC Status: Type=%d, I/O=0x%X, Status=0x%X, Link=%s",

1121 
nic
->
ty≥
,Çic->
io_ba£
,Çic->
°©us
,Çic->
lök_up
 ? "Up" : "Down");

1122 
	}
}

1124 
	$nic_¥öt_ˇ∑bûôõs
(c⁄° 
nic_öfo_t
 *
nic
) {

1125 i‡(!
nic
) ;

1126 
	`LOG_INFO
("NIC Capabilities: DMA=%s, BusMaster=%s, Multicast=%s, FullDuplex=%s",

1127 (
nic
->
ˇ∑bûôõs
 & 
HW_CAP_DMA
) ? "Yes" : "No",

1128 (
nic
->
ˇ∑bûôõs
 & 
HW_CAP_BUS_MASTER
) ? "Yes" : "No",

1129 (
nic
->
ˇ∑bûôõs
 & 
HW_CAP_MULTICAST
) ? "Yes" : "No",

1130 (
nic
->
ˇ∑bûôõs
 & 
HW_CAP_FULL_DUPLEX
) ? "Yes" : "No");

1131 
	}
}

1138 
uöt32_t
 
	$gë_nic_ˇ∑bûôõs_‰om_ty≥
(
nic_ty≥_t
 
ty≥
) {

1140 
ty≥
) {

1141 
NIC_TYPE_3C509B
:

1143  
HW_CAP_MULTICAST
 | 
HW_CAP_PROMISCUOUS
;

1145 
NIC_TYPE_3C515_TX
:

1147  
HW_CAP_DMA
 | 
HW_CAP_BUS_MASTER
 | 
HW_CAP_MULTICAST
 |

1148 
HW_CAP_PROMISCUOUS
 | 
HW_CAP_FULL_DUPLEX
 | 
HW_CAP_AUTO_SPEED
;

1151 
	`LOG_WARNING
("Unknow¿NICÅy≥ %d, usög möimÆ c≠abûôõs", 
ty≥
);

1152  
HW_CAP_MULTICAST
 | 
HW_CAP_PROMISCUOUS
;

1154 
	}
}

1165 
	$nic_öô_ˇche_cohîícy_sy°em
() {

1166 i‡(
g_ˇche_cohîícy_öôülized
) {

1167 
	`LOG_DEBUG
("Cache coherency systemálready initialized");

1168  
SUCCESS
;

1171 
	`LOG_INFO
("Initializing system-wide cache coherency management...");

1174 
g_sy°em_cohîícy_™Æysis
 = 
	`≥rf‹m_com∂ëe_cohîícy_™Æysis
();

1177 
g_sy°em_chù£t_dëe˘i⁄
 = 
	`dëe˘_sy°em_chù£t
();

1180 
boﬁ
 
ˇche_öô_ªsu…
 = 
	`öôülize_ˇche_m™agemít
(
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
);

1181 i‡(!
ˇche_öô_ªsu…
) {

1182 
	`LOG_ERROR
("FailedÅo initialize global cache management system");

1183  
ERROR_HARDWARE
;

1187 
chù£t_d©aba£_c⁄fig_t
 
db_c⁄fig
 = {

1188 .
íabÀ_exp‹t
 = 
åue
,

1189 .
exp‹t_csv
 = 
åue
,

1190 .
exp‹t_js⁄
 = 
åue
,

1191 .
csv_fûíame
 = "chipset_test_results.csv",

1192 .
js⁄_fûíame
 = "chipset_test_results.json"

1195 
boﬁ
 
db_öô_ªsu…
 = 
	`öôülize_chù£t_d©aba£
(&
db_c⁄fig
);

1196 i‡(!
db_öô_ªsu…
) {

1197 
	`LOG_WARNING
("FailedÅo initialize chipset database - continuing withoutÉxport");

1201 
boﬁ
 
ªc‹d_ªsu…
 = 
	`ªc‹d_chù£t_ã°_ªsu…
(&
g_sy°em_cohîícy_™Æysis
, &
g_sy°em_chù£t_dëe˘i⁄
);

1202 i‡(!
ªc‹d_ªsu…
) {

1203 
	`LOG_WARNING
("FailedÅoÑecord initialÅestÑesults in chipset database");

1207 
boﬁ
 
≥rf_öô_ªsu…
 = 
	`öôülize_≥rf‹m™˚_íabÀr
(&
g_sy°em_cohîícy_™Æysis
);

1208 i‡(!
≥rf_öô_ªsu…
) {

1209 
	`LOG_WARNING
("FailedÅo initializeÖerformanceÉnabler - continuing without optimization guidance");

1212 
g_ˇche_cohîícy_öôülized
 = 
åue
;

1214 
	`LOG_INFO
("Cache coherency system initialized:Åier %d, confidence %d%%",

1215 
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
, g_sy°em_cohîícy_™Æysis.
c⁄fidí˚
);

1217  
SUCCESS
;

1218 
	}
}

1225 
	$nic_öô_≠∂y_cohîícy_to_nic
(
nic_öfo_t
 *
nic
) {

1226 i‡(!
nic
) {

1227 
	`LOG_ERROR
("Invalid NICÖointer for cache coherencyápplication");

1228  
ERROR_INVALID_PARAM
;

1231 i‡(!
g_ˇche_cohîícy_öôülized
) {

1232 
	`LOG_ERROR
("Cache coherency systemÇot initialized");

1233  
ERROR_NOT_INITIALIZED
;

1236 
	`LOG_DEBUG
("Aµlyög cachêcohîícy c⁄figuøti⁄ÅÿNICÅy≥ %d", 
nic
->
ty≥
);

1239 
nic
->
ˇche_cohîícy_tõr
 = 
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
;

1240 
nic
->
ˇche_m™agemít_avaûabÀ
 = 
åue
;

1243 
nic
->
ty≥
) {

1244 
NIC_TYPE_3C509B
:

1246 i‡(
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
 =
TIER_DISABLE_BUS_MASTER
) {

1247 
	`LOG_INFO
("3C509B: PIO-only operation optimal forÅhis system");

1248 
nic
->
°©us
 |
NIC_STATUS_CACHE_COHERENCY_OK
;

1250 
	`LOG_INFO
("3C509B: PIO operations with cache managementÉnabled");

1251 
nic
->
°©us
 |
NIC_STATUS_CACHE_COHERENCY_OK
;

1255 
NIC_TYPE_3C515_TX
:

1257 i‡(
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
 =
TIER_DISABLE_BUS_MASTER
) {

1258 
	`LOG_ERROR
("3C515-TXÑequires DMA operation - system incompatible");

1259  
ERROR_HARDWARE
;

1261 
	`LOG_INFO
("3C515-TX: DMA operations withÅier %d cache management",

1262 
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
);

1263 
nic
->
°©us
 |
NIC_STATUS_CACHE_COHERENCY_OK
;

1268 
	`LOG_WARNING
("Unknow¿NICÅy≥ %d f‹ cachêcohîícyáµliˇti⁄", 
nic
->
ty≥
);

1269 
nic
->
ˇche_m™agemít_avaûabÀ
 = 
Ál£
;

1273 
	`LOG_DEBUG
("Cache coherencyáppliedÅo NIC:Åier %d,ávailable %s",

1274 
nic
->
ˇche_cohîícy_tõr
,Çic->
ˇche_m™agemít_avaûabÀ
 ? "Yes" : "No");

1276  
SUCCESS
;

1277 
	}
}

1282 
	$nic_öô_di•œy_sy°em_™Æysis
() {

1283 i‡(!
g_ˇche_cohîícy_öôülized
) {

1287 
	`LOG_INFO
("=== SYSTEM CACHE COHERENCY ANALYSIS ===");

1288 
	`LOG_INFO
("CPU: %s, Model: %d, Speed: %d MHz",

1289 
	`gë_˝u_víd‹_°rög
(
g_sy°em_cohîícy_™Æysis
.
˝u
.
víd‹
),

1290 
g_sy°em_cohîícy_™Æysis
.
˝u
.
modñ
,

1291 
g_sy°em_cohîícy_™Æysis
.
˝u
.
•ìd_mhz
);

1292 
	`LOG_INFO
("Cache: %s, Size: %d KB, Line Size: %d bytes",

1293 
g_sy°em_cohîícy_™Æysis
.
wrôe_back_ˇche
 ? "Write-back" : "Write-through",

1294 
g_sy°em_cohîícy_™Æysis
.
˝u
.
ˇche_size
,

1295 
g_sy°em_cohîícy_™Æysis
.
˝u
.
ˇche_löe_size
);

1296 
	`LOG_INFO
("Chù£t: %s", 
g_sy°em_chù£t_dëe˘i⁄
.
chù£t
.
«me
);

1297 
	`LOG_INFO
("Detection Method: %s",

1298 
	`gë_chù£t_dëe˘i⁄_mëhod_des¸ùti⁄
(
g_sy°em_chù£t_dëe˘i⁄
.
dëe˘i⁄_mëhod
));

1299 
	`LOG_INFO
("Test Results: Bus Master=%s, Coherency=%s, Snooping=%s",

1300 
	`gë_bus_ma°î_ªsu…_des¸ùti⁄
(
g_sy°em_cohîícy_™Æysis
.
bus_ma°î
),

1301 
	`gë_cohîícy_ªsu…_des¸ùti⁄
(
g_sy°em_cohîícy_™Æysis
.
cohîícy
),

1302 
	`gë_¢o›ög_ªsu…_des¸ùti⁄
(
g_sy°em_cohîícy_™Æysis
.
¢o›ög
));

1303 
	`LOG_INFO
("Selected Tier: %d (%s)",

1304 
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
,

1305 
	`gë_ˇche_tõr_des¸ùti⁄
(
g_sy°em_cohîícy_™Æysis
.
£À˘ed_tõr
));

1306 
	`LOG_INFO
("C⁄fidí˚ Levñ: %d%%", 
g_sy°em_cohîícy_™Æysis
.
c⁄fidí˚
);

1307 
	`LOG_INFO
("=====================================");

1310 i‡(
	`should_of„r_≥rf‹m™˚_guid™˚
(&
g_sy°em_cohîícy_™Æysis
)) {

1311 
	`di•œy_≥rf‹m™˚_›p‹tunôy_™Æysis
();

1315 
chù£t_ã°_ªc‹d_t
 
ªc‹d
 = {

1316 .
submissi⁄_id
 = 
	`gíî©e_submissi⁄_id
(),

1317 .
chù£t_víd‹_id
 = 
g_sy°em_chù£t_dëe˘i⁄
.
chù£t
.
víd‹_id
,

1318 .
chù£t_devi˚_id
 = 
g_sy°em_chù£t_dëe˘i⁄
.
chù£t
.
devi˚_id
,

1319 .
£À˘ed_tõr
 = 
g_sy°em_cohîícy_™Æysis
.selected_tier,

1320 .
ã°_c⁄fidí˚
 = 
g_sy°em_cohîícy_™Æysis
.
c⁄fidí˚


1322 
	`°∫˝y
(
ªc‹d
.
chù£t_«me
, 
g_sy°em_chù£t_dëe˘i⁄
.
chù£t
.
«me
, (record.chipset_name) - 1);

1324 
	`di•œy_communôy_c⁄åibuti⁄_mesßge
(&
ªc‹d
);

1325 
	}
}

1335 c⁄° 
cohîícy_™Æysis_t
* 
	$nic_öô_gë_sy°em_cohîícy_™Æysis
() {

1336 i‡(!
g_ˇche_cohîícy_öôülized
) {

1337  
NULL
;

1339  &
g_sy°em_cohîícy_™Æysis
;

1340 
	}
}

1346 c⁄° 
chù£t_dëe˘i⁄_ªsu…_t
* 
	$nic_öô_gë_sy°em_chù£t_dëe˘i⁄
() {

1347 i‡(!
g_ˇche_cohîícy_öôülized
) {

1348  
NULL
;

1350  &
g_sy°em_chù£t_dëe˘i⁄
;

1351 
	}
}

1357 
boﬁ
 
	$nic_öô_is_ˇche_cohîícy_avaûabÀ
() {

1358  
g_ˇche_cohîícy_öôülized
;

1359 
	}
}

1370 
	$nic_öô_3c515_dma_rögs
(
nic_öfo_t
 *
nic
) {

1371 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C515_TX
) {

1372  
ERROR_INVALID_PARAM
;

1375 
	`LOG_DEBUG
("Initializing 3C515-TX DMA descriptorÑings");

1378 
nic
->
tx_des¸ùt‹_rög
 = 
	`mem‹y_Æloc_Æig√d
(16 * (
uöt32_t
) * 4, 16);

1379 i‡(!
nic
->
tx_des¸ùt‹_rög
) {

1380 
	`LOG_ERROR
("FailedÅoállocate TX descriptorÑing");

1381  
ERROR_NO_MEMORY
;

1385 
nic
->
rx_des¸ùt‹_rög
 = 
	`mem‹y_Æloc_Æig√d
(16 * (
uöt32_t
) * 4, 16);

1386 i‡(!
nic
->
rx_des¸ùt‹_rög
) {

1387 
	`LOG_ERROR
("FailedÅoállocate RX descriptorÑing");

1388 
	`mem‹y_‰ì
(
nic
->
tx_des¸ùt‹_rög
);

1389 
nic
->
tx_des¸ùt‹_rög
 = 
NULL
;

1390  
ERROR_NO_MEMORY
;

1394 
	`mem‹y_zîo
(
nic
->
tx_des¸ùt‹_rög
, 16 * (
uöt32_t
) * 4);

1395 
	`mem‹y_zîo
(
nic
->
rx_des¸ùt‹_rög
, 16 * (
uöt32_t
) * 4);

1398 
nic
->
tx_rög_hód
 = 0;

1399 
nic
->
tx_rög_èû
 = 0;

1400 
nic
->
rx_rög_hód
 = 0;

1401 
nic
->
rx_rög_èû
 = 0;

1405 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

1408 
uöt32_t
 
tx_rög_phys
 = 
	`dma_vút_to_phys
(
nic
->
tx_des¸ùt‹_rög
);

1409 
	`outw
(
nic
->
io_ba£
 + 0x00, 
tx_rög_phys
 & 0xFFFF);

1410 
	`outw
(
nic
->
io_ba£
 + 0x02, (
tx_rög_phys
 >> 16) & 0xFFFF);

1413 
uöt32_t
 
rx_rög_phys
 = 
	`dma_vút_to_phys
(
nic
->
rx_des¸ùt‹_rög
);

1414 
	`outw
(
nic
->
io_ba£
 + 0x04, 
rx_rög_phys
 & 0xFFFF);

1415 
	`outw
(
nic
->
io_ba£
 + 0x06, (
rx_rög_phys
 >> 16) & 0xFFFF);

1418 
	`outw
(
nic
->
io_ba£
 + 0x08, 0);

1419 
	`outw
(
nic
->
io_ba£
 + 0x0A, 0);

1421 
	`LOG_DEBUG
("DMAÑög†öôülized: TX=0x%08lX, RX=0x%08lX", 
tx_rög_phys
, 
rx_rög_phys
);

1423  
SUCCESS
;

1424 
	}
}

1431 
	$nic_öô_3c515_mii
(
nic_öfo_t
 *
nic
) {

1432 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C515_TX
) {

1433  
ERROR_INVALID_PARAM
;

1436 
	`LOG_DEBUG
("Initializing 3C515-TX MII interface");

1439 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_4
);

1442 
uöt16_t
 
phy_id1
 = 0, 
phy_id2
 = 0;

1448 
phy_id1
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_W4_PHY_ID_HIGH
);

1449 
phy_id2
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_W4_PHY_ID_LOW
);

1451 i‡(
phy_id1
 =0xFFFF || (phy_id1 =0 && 
phy_id2
 == 0)) {

1452 
	`LOG_WARNING
("MII PHYÇot detected orÇotÑesponding\");

1453  
ERROR_HARDWARE
;

1457 
nic
->
phy_id
 = (
phy_id1
 << 16Ë| 
phy_id2
;

1458 
nic
->
phy_addªss
 = 0x18;

1462 
nic
->
aut⁄eg_advîti£
 = 0x01E1;

1465 
nic
->
aut⁄eg_íabÀd
 = 
åue
;

1466 
nic
->
lök_°©us
 = 
NIC_LINK_DOWN
;

1468 
	`LOG_INFO
("MII i¡îÁ˚ inôülized: PHY_ID=0x%08lX, AutoNegÛ«bÀd", 
nic
->
phy_id
);

1470  
SUCCESS
;

1471 
	}
}

1477 
	$udñay
(
uöt32_t
 
mi¸o£c⁄ds
) {

1482 vﬁ©ûê
uöt32_t
 
i
, 
lo›s_≥r_us
 = 10;

1484 
i
 = 0; i < 
mi¸o£c⁄ds
 * 
lo›s_≥r_us
; i++) {

1486 
__asm__
 volatile ("nop");

1488 
	}
}

1496 * 
	$mem‹y_Æloc_Æig√d
(
size_t
 
size
, size_à
Æignmít
) {

1497 i‡(!
size
 || (
Æignmít
 & (alignment - 1)) != 0) {

1498  
NULL
;

1502 
size_t
 
tŸÆ_size
 = 
size
 + 
Æignmít
 - 1 + (*);

1503 *
±r
 = 
	`mem‹y_Æloc
(
tŸÆ_size
);

1504 i‡(!
±r
) {

1505  
NULL
;

1509 
uöçå_t
 
addr
 = (uöçå_t)
±r
 + (*);

1510 
addr
 = (add∏+ 
Æignmít
 - 1) & ~(alignment - 1);

1511 *
Æig√d_±r
 = (*)
addr
;

1514 *((**)
Æig√d_±r
 - 1Ë
±r
;

1516  
Æig√d_±r
;

1517 
	}
}

1523 
	$mem‹y_‰ì_Æig√d
(*
±r
) {

1524 i‡(!
±r
) {

1529 *
‹igöÆ_±r
 = *((**)
±r
 - 1);

1530 
	`mem‹y_‰ì
(
‹igöÆ_±r
);

1531 
	}
}

1538 
uöt32_t
 
	$dma_vút_to_phys
(*
vútuÆ_addr
) {

1540 
uöt16_t
 
£gmít
 = 
	`FP_SEG
(
vútuÆ_addr
);

1541 
uöt16_t
 
off£t
 = 
	`FP_OFF
(
vútuÆ_addr
);

1542  ((
uöt32_t
)
£gmít
 << 4Ë+ 
off£t
;

1543 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/packet_ops.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~"../ö˛ude/∑ckë_›s.h
"

14 
	~"../ö˛ude/h¨dw¨e.h
"

15 
	~"../ö˛ude/routög.h
"

16 
	~"../ö˛ude/°©ic_routög.h
"

17 
	~"../ö˛ude/¨p.h
"

18 
	~"../ö˛ude/buf„r_Æloc.h
"

19 
	~"../ö˛ude/loggög.h
"

20 
	~"../ö˛ude/°©s.h
"

21 
	~"../ö˛ude/≠i.h
"

22 
	~"../ö˛ude/Êow_c⁄åﬁ.h
"

23 
	~"../ö˛ude/¥odu˘i⁄.h
"

26 
	#MAX_BOTTOM_HALF_TICKS
 100

	)

27 
	#gë_timî_ticks
(Ë0

	)

30 
	#PACKET_ERR_NOT_INITIALIZED
 -11

	)

31 
	#PACKET_ERR_NO_MEMORY
 -12

	)

34 #i‚de‡
ERROR_NO_DATA


35 
	#ERROR_NO_DATA
 -10

	)

39 
	g∑ckë_›s_öôülized
 = 0;

40 
∑ckë_°©s_t
 
	g∑ckë_°©i°ics
 = {0};

44 
∑ckë_queue_t
 
	mtx_queues
[4];

45 
∑ckë_queue_t
 
	mrx_queue
;

46 
uöt32_t
 
	mqueue_fuŒ_evíts
;

47 
uöt32_t
 
	mback¥essuª_evíts
;

48 
uöt32_t
 
	m¥i‹ôy_dr›s
;

49 
uöt32_t
 
	mad≠tive_ªsizes
;

50 
boﬁ
 
	mÊow_c⁄åﬁ_a˘ive
;

51 
uöt32_t
 
	mœ°_queue_check
;

52 } 
	gg_queue_°©e
 = {0};

55 
	#TX_QUEUE_URGENT_SIZE
 32

	)

56 
	#TX_QUEUE_HIGH_SIZE
 64

	)

57 
	#TX_QUEUE_NORMAL_SIZE
 128

	)

58 
	#TX_QUEUE_LOW_SIZE
 64

	)

59 
	#RX_QUEUE_SIZE
 256

	)

60 
	#QUEUE_WATERMARK_HIGH
 80

	)

61 
	#QUEUE_WATERMARK_LOW
 20

	)

62 
	#FLOW_CONTROL_THRESHOLD
 90

	)

63 
	#QUEUE_CHECK_INTERVAL_MS
 100

	)

66 
rouã_∑ckë_to_öãrÁ˚
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
, uöt8_à
de°_nic
);

69 
∑ckë_queue_öô_Æl
();

70 
∑ckë_queue_˛ónup_Æl
();

71 
∑ckë_íqueue_wôh_¥i‹ôy
(
∑ckë_buf„r_t
 *
buf„r
, 
¥i‹ôy
);

72 
∑ckë_buf„r_t
* 
∑ckë_dequeue_by_¥i‹ôy
();

73 
∑ckë_check_queue_hó…h
();

74 
∑ckë_≠∂y_Êow_c⁄åﬁ
();

75 
∑ckë_ad≠tive_queue_ªsize
();

76 
∑ckë_h™dÀ_queue_ovîÊow
(
¥i‹ôy
);

77 
boﬁ
 
∑ckë_should_dr›_⁄_fuŒ
(
¥i‹ôy
, 
queue_ußge
);

78 
uöt32_t
 
∑ckë_ˇlcuœã_queue_ußge
(
∑ckë_queue_t
 *
queue
);

79 
∑ckë_upd©e_queue_°©s
();

80 
∑ckë_emîgícy_queue_døö
();

83 #¥agm®
code_£g
("COLD_TEXT", "CODE")

90 
	$∑ckë_›s_öô
(c⁄° 
c⁄fig_t
 *
c⁄fig
) {

91 
ªsu…
;

93 i‡(!
c⁄fig
) {

94 
	`log_îr‹
("packet_ops_init: NULL configÖarameter");

95  
PACKET_ERR_INVALID_PARAM
;

98 
	`log_öfo
("InitializingÖacket operations subsystem withÖroduction queue management");

101 
	`mem£t
(&
∑ckë_°©i°ics
, 0, (packet_statistics));

104 
ªsu…
 = 
	`∑ckë_queue_öô_Æl
();

105 i‡(
ªsu…
 != 0) {

106 
	`log_îr‹
("FaûedÅÿöôülizê¥odu˘i⁄ queuêm™agemít: %d", 
ªsu…
);

107  
ªsu…
;

111 
g_queue_°©e
.
Êow_c⁄åﬁ_a˘ive
 = 
Ál£
;

112 
g_queue_°©e
.
œ°_queue_check
 = 
	`°©s_gë_time°amp
();

115 
ªsu…
 = 
	`Êow_c⁄åﬁ_öô
();

116 i‡(
ªsu…
 != 0) {

117 
	`log_w¨nög
("802.3x Flow C⁄åﬁ inôüliz©i⁄ faûed: %d, c⁄töuög wôhouàÊow c⁄åﬁ", 
ªsu…
);

120 
	`log_debug
("802.3x Flow Control initialized with CPU-efficient state management");

123 
∑ckë_›s_öôülized
 = 1;

125 
	`log_öfo
("Packet operations subsystem initialized withÖroduction features");

127 
	}
}

138 
	$∑ckë_£nd_íh™˚d
(
uöt8_t
 
öãrÁ˚_num
, c⁄° uöt8_à*
∑ckë_d©a
,

139 
uöt16_t
 
Àngth
, c⁄° 
uöt8_t
 *
de°_addr
, uöt16_à
h™dÀ
) {

140 
nic_öfo_t
 *
nic
;

141 
buf„r_desc_t
 *
buf„r
;

142 
uöt8_t
 *
‰ame_buf„r
;

143 
ªsu…
;

144 
uöt16_t
 
‰ame_Àngth
;

145 
˝u_öfo_t
 
g_˝u_öfo
;

147 i‡(!
∑ckë_d©a
 || 
Àngth
 =0 || !
de°_addr
) {

148 
	`log_îr‹
("packet_send_enhanced: InvalidÖarameters");

149  
PACKET_ERR_INVALID_PARAM
;

152 i‡(!
∑ckë_›s_öôülized
) {

153 
	`log_îr‹
("Packet operationsÇot initialized");

154  
PACKET_ERR_NOT_INITIALIZED
;

157 
	`log_debug
("SendingÖacket: interface=%d,Üength=%d, handle=%04X",

158 
öãrÁ˚_num
, 
Àngth
, 
h™dÀ
);

161 i‡(
Àngth
 < 
ETH_MIN_DATA
 ||Üígth > 
ETH_MAX_DATA
) {

162 
	`log_îr‹
("InvalidÖacket data size: %d (must be %d-%d)",

163 
Àngth
, 
ETH_MIN_DATA
, 
ETH_MAX_DATA
);

164 
∑ckë_°©i°ics
.
tx_îr‹s
++;

165  
PACKET_ERR_INVALID_SIZE
;

169 
‰ame_Àngth
 = 
ETH_HEADER_LEN
 + 
Àngth
;

170 i‡(
‰ame_Àngth
 < 
ETH_MIN_FRAME
) {

171 
‰ame_Àngth
 = 
ETH_MIN_FRAME
;

175 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

176 i‡(!
nic
) {

177 
	`log_îr‹
("InvÆid i¡îÁ˚Çumbî: %d", 
öãrÁ˚_num
);

178 
∑ckë_°©i°ics
.
tx_îr‹s
++;

179  
PACKET_ERR_INVALID_NIC
;

183 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

184 
	`log_îr‹
("NIC %d i†nŸá˘ive", 
öãrÁ˚_num
);

185 
∑ckë_°©i°ics
.
tx_îr‹s
++;

186  
PACKET_ERR_INVALID_NIC
;

190 
buf„r
 = 
	`buf„r_Æloc_nic_aw¨e
(
nic
->
ödex
, 
BUFFER_TYPE_TX
, 
‰ame_Àngth
);

191 i‡(!
buf„r
) {

192 
	`log_îr‹
("FailedÅoállocateÅransmit buffer");

193 
∑ckë_°©i°ics
.
tx_îr‹s
++;

194  
PACKET_ERR_NO_BUFFERS
;

197 
‰ame_buf„r
 = (
uöt8_t
*)
	`buf„r_gë_d©a_±r
(
buf„r
);

198 i‡(!
‰ame_buf„r
) {

199 
	`buf„r_‰ì_nic_aw¨e
(
nic
->
ödex
, 
buf„r
);

200  
PACKET_ERR_NO_BUFFERS
;

204 
ªsu…
 = 
	`∑ckë_buûd_ëhî√t_‰ame_›timized
(
‰ame_buf„r
, 
‰ame_Àngth
,

205 
de°_addr
, 
nic
->
mac
,

207 
∑ckë_d©a
, 
Àngth
);

208 i‡(
ªsu…
 < 0) {

209 
	`log_îr‹
("FaûedÅÿbuûd Ethî√à‰ame: %d", 
ªsu…
);

210 
	`buf„r_‰ì_nic_aw¨e
(
nic
->
ödex
, 
buf„r
);

211 
∑ckë_°©i°ics
.
tx_îr‹s
++;

212  
ªsu…
;

216 i‡(
	`Êow_c⁄åﬁ_should_∑u£_å™smissi⁄
(
nic
->
ödex
)) {

217 
uöt32_t
 
∑u£_time
 = 
	`Êow_c⁄åﬁ_gë_∑u£_duøti⁄
(
nic
->
ödex
);

218 
	`log_debug
("Tønsmissi⁄Öau£d duêtÿ802.3x PAUSE føme, waôög %u ms", 
∑u£_time
);

221 
	`Êow_c⁄åﬁ_waô_f‹_ªsume
(
nic
->
ödex
, 
∑u£_time
);

225 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
‰ame_buf„r
, 
‰ame_Àngth
);

226 i‡(
ªsu…
 < 0) {

227 
	`log_îr‹
("H¨dw¨ê£nd faûed o¿öãrÁ˚ %d: %d", 
öãrÁ˚_num
, 
ªsu…
);

228 
	`buf„r_‰ì_nic_aw¨e
(
nic
->
ödex
, 
buf„r
);

229 
∑ckë_°©i°ics
.
tx_îr‹s
++;

230  
ªsu…
;

234 
∑ckë_°©i°ics
.
tx_∑ckës
++;

235 
∑ckë_°©i°ics
.
tx_byãs
 +
‰ame_Àngth
;

238 
	`buf„r_‰ì_nic_aw¨e
(
nic
->
ödex
, 
buf„r
);

240 
	`log_debug
("Packë síàsuc˚ssfuŒy vü i¡îÁ˚ %d (‰ame_size=%d)", 
öãrÁ˚_num
, 
‰ame_Àngth
);

242 
	}
}

245 #¥agm®
code_£g
()

248 #¥agm®
code_£g
("_TEXT", "CODE")

257 
	$∑ckë_£nd
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
uöt16_t
 
h™dÀ
) {

258 
nic_öfo_t
 *
nic
;

259 
ªsu…
;

261 i‡(!
∑ckë
 || 
Àngth
 == 0) {

262 
	`log_îr‹
("packet_send: InvalidÖarameters");

263  
PACKET_ERR_INVALID_PARAM
;

266 i‡(!
∑ckë_›s_öôülized
) {

267 
	`log_îr‹
("Packet operationsÇot initialized");

268  
PACKET_ERR_NOT_INITIALIZED
;

271 
	`log_debug
("SídögÖackë:Üígth=%d, h™dÀ=%04X", 
Àngth
, 
h™dÀ
);

274 i‡(
Àngth
 < 
PACKET_MIN_SIZE
 ||Üígth > 
PACKET_MAX_SIZE
) {

275 
	`log_îr‹
("InvÆidÖackë size: %d", 
Àngth
);

276 
∑ckë_°©i°ics
.
tx_îr‹s
++;

277  
PACKET_ERR_INVALID_SIZE
;

281 
nic
 = 
	`h¨dw¨e_gë_nic
(0);

282 i‡(!
nic
) {

283 
	`log_îr‹
("No suitable NIC found forÖacket");

284 
∑ckë_°©i°ics
.
tx_îr‹s
++;

285  
PACKET_ERR_INVALID_NIC
;

289 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
∑ckë
, 
Àngth
);

290 i‡(
ªsu…
 < 0) {

291 
	`log_îr‹
("H¨dw¨ê£nd faûed: %d", 
ªsu…
);

292 
∑ckë_°©i°ics
.
tx_îr‹s
++;

293  
ªsu…
;

297 
∑ckë_°©i°ics
.
tx_∑ckës
++;

298 
∑ckë_°©i°ics
.
tx_byãs
 +
Àngth
;

300 
	`log_debug
("Packë síàsuc˚ssfuŒy vü NIC %d", 
nic
->
ty≥
);

302 
	}
}

312 
	$∑ckë_ª˚ive
(
uöt8_t
 *
buf„r
, 
size_t
 
max_Àngth
, size_à*
a˘uÆ_Àngth
, 
nic_id
) {

313 
nic_öfo_t
 *
nic
;

314 
ªsu…
;

316 i‡(!
buf„r
 || !
a˘uÆ_Àngth
 || 
max_Àngth
 == 0) {

317 
	`log_îr‹
("packet_receive: InvalidÖarameters");

318  
PACKET_ERR_INVALID_PARAM
;

321 i‡(!
∑ckë_›s_öôülized
) {

322 
	`log_îr‹
("Packet operationsÇot initialized");

323  
PACKET_ERR_NOT_INITIALIZED
;

326 
	`log_debug
("Re˚ivögÖackë from NIC %d, max_Àngth=%d", 
nic_id
, 
max_Àngth
);

329 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_id
);

330 i‡(!
nic
) {

331 
	`log_îr‹
("InvÆid NIC ID: %d", 
nic_id
);

332  
PACKET_ERR_INVALID_NIC
;

336 
ªsu…
 = 
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
buf„r
, 
a˘uÆ_Àngth
);

337 i‡(
ªsu…
 < 0) {

338 i‡(
ªsu…
 !
PACKET_ERR_NO_PACKET
) {

339 
	`log_îr‹
("H¨dw¨êª˚ivêÁûed: %d", 
ªsu…
);

340 
∑ckë_°©i°ics
.
rx_îr‹s
++;

342  
ªsu…
;

346 i‡(*
a˘uÆ_Àngth
 < 
PACKET_MIN_SIZE
 || *a˘uÆ_Àngth > 
max_Àngth
) {

347 
	`log_îr‹
("InvÆidÑe˚ivedÖackë size: %d", *
a˘uÆ_Àngth
);

348 
∑ckë_°©i°ics
.
rx_îr‹s
++;

349  
PACKET_ERR_INVALID_SIZE
;

353 
∑ckë_°©i°ics
.
rx_∑ckës
++;

354 
∑ckë_°©i°ics
.
rx_byãs
 +*
a˘uÆ_Àngth
;

356 
	`log_debug
("PackëÑe˚ived:Üígth=%d", *
a˘uÆ_Àngth
);

359 
ªsu…
 = 
	`≠i_¥o˚ss_ª˚ived_∑ckë
(
buf„r
, *
a˘uÆ_Àngth
, 
nic_id
);

360 i‡(
ªsu…
 < 0) {

361 
	`log_debug
("No handlers forÑeceivedÖacket");

362 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

366 
	}
}

375 
	$∑ckë_ª˚ive_‰om_nic
(
nic_ödex
, 
uöt8_t
 *
buf„r
, 
size_t
 *
Àngth
) {

376 
nic_öfo_t
 *
nic
;

377 
buf„r_desc_t
 *
rx_buf„r
 = 
NULL
;

378 
ëh_hódî_t
 
ëh_hódî
;

379 
ªsu…
;

380 
size_t
 
‹igöÆ_buf„r_size
;

382 i‡(!
buf„r
 || !
Àngth
 || *length == 0) {

383 
	`log_îr‹
("packet_receive_from_nic: InvalidÖarameters");

384  
PACKET_ERR_INVALID_PARAM
;

387 i‡(!
∑ckë_›s_öôülized
) {

388 
	`log_îr‹
("Packet operationsÇot initialized");

389  
PACKET_ERR_NOT_INITIALIZED
;

392 
‹igöÆ_buf„r_size
 = *
Àngth
;

393 
	`log_debug
("Re˚ivögÖackë from NIC %d, max_Àngth=%zu", 
nic_ödex
, 
‹igöÆ_buf„r_size
);

396 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

397 i‡(!
nic
) {

398 
	`log_îr‹
("InvÆid NIC i¡îÁ˚: %d", 
nic_ödex
);

399 
∑ckë_°©i°ics
.
rx_îr‹s
++;

400  
PACKET_ERR_INVALID_NIC
;

404 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

405 
	`log_w¨nög
("NIC %d i†nŸá˘ivêf‹Ñe˚±i⁄", 
nic_ödex
);

406  
PACKET_ERR_INVALID_NIC
;

410 
rx_buf„r
 = 
	`rx_c›ybªak_Æloc
(
ETH_MAX_FRAME
);

411 i‡(!
rx_buf„r
) {

412 
	`log_îr‹
("FailedÅoállocate RX buffer forÖacketÑeception");

413 
∑ckë_°©i°ics
.
rx_îr‹s
++;

414  
PACKET_ERR_NO_BUFFERS
;

418 
size_t
 
∑ckë_Àngth
 = 
rx_buf„r
->
size
;

419 
ªsu…
 = 
nic
->
›s
->
	`ª˚ive_∑ckë
“ic, (
uöt8_t
*)
	`buf„r_gë_d©a_±r
(
rx_buf„r
), &
∑ckë_Àngth
);

421 i‡(
ªsu…
 < 0) {

422 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

423 i‡(
ªsu…
 =
ERROR_NO_DATA
) {

425 *
Àngth
 = 0;

426  
PACKET_ERR_NO_PACKET
;

428 
	`log_îr‹
("H¨dw¨êª˚ivêÁûed o¿NIC %d: %d", 
nic_ödex
, 
ªsu…
);

429 
∑ckë_°©i°ics
.
rx_îr‹s
++;

430  
ªsu…
;

435 i‡(
∑ckë_Àngth
 < 
ETH_MIN_FRAME
) {

436 
	`log_w¨nög
("Re˚ivedÑu¡ føme:Üígth=%zu", 
∑ckë_Àngth
);

437 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

438 
∑ckë_°©i°ics
.
rx_ru¡
++;

439  
PACKET_ERR_INVALID_SIZE
;

442 i‡(
∑ckë_Àngth
 > 
ETH_MAX_FRAME
) {

443 
	`log_w¨nög
("Re˚ived ovîsized føme:Üígth=%zu", 
∑ckë_Àngth
);

444 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

445 
∑ckë_°©i°ics
.
rx_ovîsize
++;

446  
PACKET_ERR_INVALID_SIZE
;

450 
uöt8_t
 *
∑ckë_d©a
 = (uöt8_t*)
	`buf„r_gë_d©a_±r
(
rx_buf„r
);

451 
ªsu…
 = 
	`∑ckë_∑r£_ëhî√t_hódî
(
∑ckë_d©a
, 
∑ckë_Àngth
, &
ëh_hódî
);

452 i‡(
ªsu…
 < 0) {

453 
	`log_w¨nög
("Invalid Ethernet header inÑeceivedÖacket");

454 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

455 
∑ckë_°©i°ics
.
rx_îr‹s
++;

456  
ªsu…
;

460 i‡(
ëh_hódî
.
ëhîty≥
 =
ETHERTYPE_FLOW_CONTROL
) {

461 
	`log_debug
("Processing 802.3x PAUSE frame");

462 
ªsu…
 = 
	`Êow_c⁄åﬁ_¥o˚ss_ª˚ived_∑ckë
(
nic_ödex
, 
∑ckë_d©a
, 
∑ckë_Àngth
);

463 i‡(
ªsu…
 > 0) {

464 
	`log_debug
("PAUSE fømê¥o˚s£d,Åønsmissi⁄ÅhrŸéed f‹ %d ms", 
ªsu…
);

466 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

467  
PACKET_ERR_NO_PACKET
;

472 
uöt32_t
 
buf„r_ußge
 = 
	`ˇlcuœã_buf„r_ußge_≥r˚¡age
(
nic_ödex
);

473 
	`Êow_c⁄åﬁ_upd©e_buf„r_°©us
(
nic_ödex
, 
buf„r_ußge
);

476 i‡(!
	`∑ckë_is_f‹_us
(
∑ckë_d©a
, 
nic
->
mac
) &&

477 !
	`∑ckë_is_brﬂdˇ°
(
∑ckë_d©a
) &&

478 !
	`∑ckë_is_mu…iˇ°
(
∑ckë_d©a
)) {

480 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_PROMISCUOUS
)) {

481 
	`log_debug
("PacketÇotáddressedÅo us, dropping");

482 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

483 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

484  
PACKET_ERR_NO_PACKET
;

489 i‡(
∑ckë_Àngth
 > 
‹igöÆ_buf„r_size
) {

490 
	`log_îr‹
("Re˚ivedÖackëÅoÿœrgêf‹ buf„r:Çìd %zu, havê%zu", 
∑ckë_Àngth
, 
‹igöÆ_buf„r_size
);

491 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

492 *
Àngth
 = 
∑ckë_Àngth
;

493  
PACKET_ERR_INVALID_SIZE
;

497 
	`mem˝y
(
buf„r
, 
∑ckë_d©a
, 
∑ckë_Àngth
);

498 *
Àngth
 = 
∑ckë_Àngth
;

501 
∑ckë_°©i°ics
.
rx_∑ckës
++;

502 
∑ckë_°©i°ics
.
rx_byãs
 +
∑ckë_Àngth
;

505 
	`∑ckë_upd©e_dëaûed_°©s
(
nic_ödex
, 1, 
∑ckë_Àngth
, 0);

507 
	`log_debug
("SuccessfullyÑeceived %zu byteÖacket from NIC %d (EtherType=0x%04X)",

508 
∑ckë_Àngth
, 
nic_ödex
, 
	`¡ohs
(
ëh_hódî
.
ëhîty≥
));

511 
ªsu…
 = 
	`∑ckë_ª˚ive_¥o˚ss
(
∑ckë_d©a
, 
∑ckë_Àngth
, 
nic_ödex
);

512 i‡(
ªsu…
 < 0) {

513 
	`log_debug
("PackëÖro˚ssögÑëu∫ed %d -Öackë dñivîedÅÿu£∏buànŸÖro˚s£dÜoˇŒy", 
ªsu…
);

517 
	`rx_c›ybªak_‰ì
(
rx_buf„r
);

520 
	}
}

527 
xms_buf„r_poﬁ_t
 
g_xms_poﬁ
;

528 
•sc_queue_t
 
g_de„ºed_queue
;

532 vﬁ©ûê
boﬁ
 
	mxms_íabÀd
;

533 vﬁ©ûê
boﬁ
 
	mbŸtom_hÆf_a˘ive
;

534 
uöt16_t
 
	mxms_thªshﬁd
;

536 
uöt16_t
 
	m∑ckës_de„ºed
;

537 
uöt16_t
 
	m∑ckës_¥o˚s£d
;

538 
uöt16_t
 
	mxms_c›õs
;

539 
uöt16_t
 
	m°agög_exhau°ed
;

540 
uöt16_t
 
	mqueue_fuŒ_dr›s
;

541 
uöt16_t
 
	movîsize_dr›s
;

542 
uöt16_t
 
	mxms_Æloc_Áûuªs
;

543 
uöt16_t
 
	mxms_move_Áûuªs
;

544 } 
	gg_bŸtom_hÆf_°©e
 = {0};

553 
	$∑ckë_bŸtom_hÆf_öô
(
boﬁ
 
íabÀ_xms
, 
uöt32_t
 
°agög_cou¡
, uöt32_à
xms_cou¡
) {

554 
ªsu…
;

556 
	`log_öfo
("Initializing bottom-halfÖrocessing: xms=%s, staging=%u, xms_buffers=%u",

557 
íabÀ_xms
 ? "íabÀd" : "dißbÀd", 
°agög_cou¡
, 
xms_cou¡
);

560 
ªsu…
 = 
	`°agög_buf„r_öô
(
°agög_cou¡
, 
ETH_MAX_FRAME
);

561 i‡(
ªsu…
 !
SUCCESS
) {

562 
	`log_îr‹
("FaûedÅÿöôülizê°agög buf„rs: %d", 
ªsu…
);

563  
ªsu…
;

567 
ªsu…
 = 
	`•sc_queue_öô
(&
g_de„ºed_queue
);

568 i‡(
ªsu…
 !
SUCCESS
) {

569 
	`log_îr‹
("FaûedÅÿöôülizêSPSC queue: %d", 
ªsu…
);

570 
	`°agög_buf„r_˛ónup
();

571  
ªsu…
;

575 i‡(
íabÀ_xms
 && 
xms_cou¡
 > 0) {

576 
ªsu…
 = 
	`xms_buf„r_poﬁ_öô
(&
g_xms_poﬁ
, 
ETH_MAX_FRAME
, 
xms_cou¡
);

577 i‡(
ªsu…
 =
SUCCESS
) {

578 
g_bŸtom_hÆf_°©e
.
xms_íabÀd
 = 
åue
;

579 
g_bŸtom_hÆf_°©e
.
xms_thªshﬁd
 = 
RX_COPYBREAK_THRESHOLD
;

580 
	`log_öfo
("XMS buf„∏poﬁ inôülized wôh %u buf„rs", 
xms_cou¡
);

582 
	`log_w¨nög
("XMSÖoﬁ inô faûed (%d), usög c⁄víti⁄Æ mem‹y o∆y", 
ªsu…
);

583 
g_bŸtom_hÆf_°©e
.
xms_íabÀd
 = 
Ál£
;

588 
g_bŸtom_hÆf_°©e
.
∑ckës_de„ºed
 = 0;

589 
g_bŸtom_hÆf_°©e
.
∑ckës_¥o˚s£d
 = 0;

590 
g_bŸtom_hÆf_°©e
.
xms_c›õs
 = 0;

591 
g_bŸtom_hÆf_°©e
.
°agög_exhau°ed
 = 0;

592 
g_bŸtom_hÆf_°©e
.
queue_fuŒ_dr›s
 = 0;

593 
g_bŸtom_hÆf_°©e
.
ovîsize_dr›s
 = 0;

594 
g_bŸtom_hÆf_°©e
.
xms_Æloc_Áûuªs
 = 0;

595 
g_bŸtom_hÆf_°©e
.
xms_move_Áûuªs
 = 0;

596 
g_bŸtom_hÆf_°©e
.
bŸtom_hÆf_a˘ive
 = 
åue
;

598  
SUCCESS
;

599 
	}
}

604 
	$∑ckë_bŸtom_hÆf_˛ónup
() {

605 
	`log_öfo
("Bottom-half statistics:");

606 
	`log_öfo
(" Packets: deferred=%u,Örocessed=%u",

607 ()
g_bŸtom_hÆf_°©e
.
∑ckës_de„ºed
,

608 ()
g_bŸtom_hÆf_°©e
.
∑ckës_¥o˚s£d
);

609 
	`log_öfo
(" Drops: staging=%u, queue_full=%u, oversize=%u",

610 ()
g_bŸtom_hÆf_°©e
.
°agög_exhau°ed
,

611 ()
g_bŸtom_hÆf_°©e
.
queue_fuŒ_dr›s
,

612 ()
g_bŸtom_hÆf_°©e
.
ovîsize_dr›s
);

613 
	`log_öfo
(" XMS: copies=%u,álloc_fail=%u, move_fail=%u",

614 ()
g_bŸtom_hÆf_°©e
.
xms_c›õs
,

615 ()
g_bŸtom_hÆf_°©e
.
xms_Æloc_Áûuªs
,

616 ()
g_bŸtom_hÆf_°©e
.
xms_move_Áûuªs
);

619 i‡(
g_bŸtom_hÆf_°©e
.
xms_íabÀd
) {

620 
	`xms_buf„r_poﬁ_˛ónup
(&
g_xms_poﬁ
);

624 
	`•sc_queue_˛ónup
(&
g_de„ºed_queue
);

627 
	`°agög_buf„r_˛ónup
();

630 
	`mem‹y_zîo
(&
g_bŸtom_hÆf_°©e
, (g_bottom_half_state));

631 
	}
}

643 
	$∑ckë_i§_ª˚ive
(
uöt8_t
 *
∑ckë_d©a
, 
uöt16_t
 
∑ckë_size
, uöt8_à
nic_ödex
) {

644 
°agög_buf„r_t
 *
°agög
;

645 
ªsu…
;

648 i‡(!
g_bŸtom_hÆf_°©e
.
bŸtom_hÆf_a˘ive
) {

650 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

651  
PACKET_ERR_NOT_INITIALIZED
;

655 
°agög
 = 
	`°agög_buf„r_Æloc
();

656 i‡(!
°agög
) {

657 
g_bŸtom_hÆf_°©e
.
°agög_exhau°ed
++;

658 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

659  
PACKET_ERR_NO_BUFFER
;

663 i‡(
∑ckë_size
 > 
°agög
->
size
) {

664 
g_bŸtom_hÆf_°©e
.
ovîsize_dr›s
++;

665 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

666 
	`°agög_buf„r_‰ì
(
°agög
);

667  
PACKET_ERR_INVALID_SIZE
;

671 
	`mem‹y_c›y_›timized
(
°agög
->
d©a
, 
∑ckë_d©a
, 
∑ckë_size
);

672 
°agög
->
∑ckë_size
 =Öacket_size;

673 
°agög
->
u£d
 = 
∑ckë_size
;

674 
°agög
->
nic_ödex
 =Çic_index;

677 
	`compûî_b¨rõr
();

680 
ªsu…
 = 
	`•sc_queue_íqueue
(&
g_de„ºed_queue
, 
°agög
);

681 i‡(
ªsu…
 !
SUCCESS
) {

682 
g_bŸtom_hÆf_°©e
.
queue_fuŒ_dr›s
++;

683 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

684 
	`°agög_buf„r_‰ì
(
°agög
);

685  
ªsu…
;

688 
g_bŸtom_hÆf_°©e
.
∑ckës_de„ºed
++;

689  
SUCCESS
;

690 
	}
}

698 
	$¥o˚ss_de„ºed_∑ckës
() {

699 
°agög_buf„r_t
 *
°agög
;

700 
uöt32_t
 
xms_off£t
;

701 
xms_∑ckë_desc_t
 
xms_desc
;

702 
buf„r_desc_t
 *
c⁄v_buf„r
;

703 
ªsu…
;

704 
uöt32_t
 
¥o˚s£d
 = 0;

705 
uöt32_t
 
¥o˚ss_°¨t_time
 = 
	`gë_timî_ticks
();

708 !
	`•sc_queue_is_em±y
(&
g_de„ºed_queue
)) {

709 
°agög
 = 
	`•sc_queue_dequeue
(&
g_de„ºed_queue
);

710 i‡(!
°agög
) {

715 i‡(
g_bŸtom_hÆf_°©e
.
xms_íabÀd
 &&

716 
°agög
->
∑ckë_size
 >
g_bŸtom_hÆf_°©e
.
xms_thªshﬁd
) {

719 
ªsu…
 = 
	`xms_buf„r_Æloc
(&
g_xms_poﬁ
, &
xms_off£t
);

720 i‡(
ªsu…
 =
SUCCESS
) {

722 
ªsu…
 = 
	`xms_c›y_to_buf„r
(&
g_xms_poﬁ
, 
xms_off£t
,

723 
°agög
->
d©a
, sègög->
∑ckë_size
);

724 i‡(
ªsu…
 =
SUCCESS
) {

726 
xms_desc
.
xms_h™dÀ
 = 
g_xms_poﬁ
.xms_handle;

727 
xms_desc
.
xms_off£t
 = xms_offset;

728 
xms_desc
.
∑ckë_size
 = 
°agög
->packet_size;

729 
xms_desc
.
nic_ödex
 = 
°agög
->nic_index;

732 
	`°agög_buf„r_‰ì
(
°agög
);

733 
°agög
 = 
NULL
;

735 
g_bŸtom_hÆf_°©e
.
xms_c›õs
++;

738 
	`∑ckë_¥o˚ss_‰om_xms
(&
xms_desc
);

741 
	`xms_buf„r_‰ì
(&
g_xms_poﬁ
, 
xms_off£t
);

744 
g_bŸtom_hÆf_°©e
.
xms_move_Áûuªs
++;

745 
	`xms_buf„r_‰ì
(&
g_xms_poﬁ
, 
xms_off£t
);

748 
	`∑ckë_ª˚ive_¥o˚ss
(
°agög
->
d©a
, sègög->
∑ckë_size
,

749 
°agög
->
nic_ödex
);

750 
	`°agög_buf„r_‰ì
(
°agög
);

754 
g_bŸtom_hÆf_°©e
.
xms_Æloc_Áûuªs
++;

757 
	`∑ckë_ª˚ive_¥o˚ss
(
°agög
->
d©a
, sègög->
∑ckë_size
,

758 
°agög
->
nic_ödex
);

759 
	`°agög_buf„r_‰ì
(
°agög
);

763 
c⁄v_buf„r
 = 
	`rx_c›ybªak_Æloc
(
°agög
->
∑ckë_size
);

764 i‡(
c⁄v_buf„r
) {

766 
	`mem‹y_c›y_›timized
(
c⁄v_buf„r
->
d©a
, 
°agög
->d©a, sègög->
∑ckë_size
);

767 
c⁄v_buf„r
->
u£d
 = 
°agög
->
∑ckë_size
;

770 
uöt8_t
 
ßved_nic
 = 
°agög
->
nic_ödex
;

771 
	`°agög_buf„r_‰ì
(
°agög
);

774 
	`∑ckë_ª˚ive_¥o˚ss
(
c⁄v_buf„r
->
d©a
, c⁄v_buf„r->
u£d
, 
ßved_nic
);

777 
	`rx_c›ybªak_‰ì
(
c⁄v_buf„r
);

778 
	`rx_c›ybªak_ªc‹d_c›y
();

781 
	`∑ckë_ª˚ive_¥o˚ss
(
°agög
->
d©a
, sègög->
∑ckë_size
,

782 
°agög
->
nic_ödex
);

783 
	`°agög_buf„r_‰ì
(
°agög
);

787 
¥o˚s£d
++;

788 
g_bŸtom_hÆf_°©e
.
∑ckës_¥o˚s£d
++;

791 i‡(
	`gë_timî_ticks
(Ë- 
¥o˚ss_°¨t_time
 > 
MAX_BOTTOM_HALF_TICKS
) {

795 
	}
}

803 
	$∑ckë_¢≠shŸ_°©s
(*
°©s
, 
size_t
 
size
) {

804 
uöt16_t
 
Êags
;

806 i‡(!
°©s
 || 
size
 !(
g_bŸtom_hÆf_°©e
)) {

811 
__asm__
 
	`__vﬁ©ûe__
(

815 : "Ù"(
Êags
) :: "memory"

819 
	`mem‹y_c›y_›timized
(
°©s
, &
g_bŸtom_hÆf_°©e
, 
size
);

822 
__asm__
 
	`__vﬁ©ûe__
(

825 :: "r"(
Êags
) : "memory"

827 
	}
}

836 
	$∑ckë_¥o˚ss_‰om_xms
(
xms_∑ckë_desc_t
 *
desc
) {

837 
uöt8_t
 *
ãmp_buf„r
;

838 
ªsu…
;

840 i‡(!
desc
) {

841  
PACKET_ERR_INVALID_PARAM
;

845 
ãmp_buf„r
 = (
uöt8_t
*)
	`mem‹y_Æloˇã
(
desc
->
∑ckë_size
, 
MEMORY_FLAG_ZERO
);

846 i‡(!
ãmp_buf„r
) {

847  
PACKET_ERR_NO_MEMORY
;

851 
ªsu…
 = 
	`xms_c›y_‰om_buf„r
(&
g_xms_poﬁ
, 
ãmp_buf„r
,

852 
desc
->
xms_off£t
, desc->
∑ckë_size
);

853 i‡(
ªsu…
 !
SUCCESS
) {

854 
	`mem‹y_‰ì
(
ãmp_buf„r
);

855  
ªsu…
;

859 
ªsu…
 = 
	`∑ckë_ª˚ive_¥o˚ss
(
ãmp_buf„r
, 
desc
->
∑ckë_size
, desc->
nic_ödex
);

862 
	`mem‹y_‰ì
(
ãmp_buf„r
);

864  
ªsu…
;

865 
	}
}

874 
	$∑ckë_ª˚ive_¥o˚ss
(
uöt8_t
 *
øw_d©a
, 
uöt16_t
 
Àngth
, uöt8_à
nic_ödex
) {

875 
ëh_hódî_t
 
ëh_hódî
;

876 
uöt8_t
 *
∑ylﬂd_d©a
;

877 
uöt16_t
 
∑ylﬂd_Àngth
;

878 
nic_öfo_t
 *
nic
;

879 
ªsu…
;

881 i‡(!
øw_d©a
 || 
Àngth
 == 0) {

882  
PACKET_ERR_INVALID_PARAM
;

885 
	`log_debug
("Pro˚ssögÑe˚ivedÖackë:Üígth=%d,Çic=%d", 
Àngth
, 
nic_ödex
);

888 i‡(
Àngth
 < 
ETH_MIN_FRAME
) {

889 
	`log_w¨nög
("Re˚ivedÑu¡ føme:Üígth=%d", 
Àngth
);

890 
∑ckë_°©i°ics
.
rx_ru¡
++;

891  
PACKET_ERR_INVALID_SIZE
;

894 i‡(
Àngth
 > 
ETH_MAX_FRAME
) {

895 
	`log_w¨nög
("Re˚ived ovîsized føme:Üígth=%d", 
Àngth
);

896 
∑ckë_°©i°ics
.
rx_ovîsize
++;

897  
PACKET_ERR_INVALID_SIZE
;

901 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

902 i‡(!
nic
) {

903 
	`log_îr‹
("InvÆid NIC index: %d", 
nic_ödex
);

904  
PACKET_ERR_INVALID_NIC
;

908 
ªsu…
 = 
	`∑ckë_∑r£_ëhî√t_hódî
(
øw_d©a
, 
Àngth
, &
ëh_hódî
);

909 i‡(
ªsu…
 < 0) {

910 
	`log_w¨nög
("Invalid Ethernet header inÑeceivedÖacket");

911 
∑ckë_°©i°ics
.
rx_îr‹s
++;

912  
ªsu…
;

916 i‡(!
	`∑ckë_is_f‹_us
(
øw_d©a
, 
nic
->
mac
) &&

917 !
	`∑ckë_is_brﬂdˇ°
(
øw_d©a
) &&

918 !
	`∑ckë_is_mu…iˇ°
(
øw_d©a
)) {

920 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_PROMISCUOUS
)) {

921 
	`log_debug
("PacketÇotáddressedÅo us, dropping");

922 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

928 
∑ylﬂd_d©a
 = 
øw_d©a
 + 
ETH_HEADER_LEN
;

929 
∑ylﬂd_Àngth
 = 
Àngth
 - 
ETH_HEADER_LEN
;

932 i‡(
∑ylﬂd_Àngth
 < 
ETH_MIN_DATA
) {

934 i‡(
∑ylﬂd_Àngth
 > 0) {

935 
	`log_debug
("Re˚ivedÖadded føme,Öaylﬂd=%d", 
∑ylﬂd_Àngth
);

940 
∑ckë_°©i°ics
.
rx_∑ckës
++;

941 
∑ckë_°©i°ics
.
rx_byãs
 +
Àngth
;

944 
uöt16_t
 
ëhîty≥
 = 
	`¡ohs
(
ëh_hódî
.ethertype);

946 
ëhîty≥
) {

947 
ETH_P_ARP
:

949 i‡(
	`¨p_is_íabÀd
()) {

950 
	`log_debug
("Processing ARPÖacket");

951 
ªsu…
 = 
	`¨p_¥o˚ss_ª˚ived_∑ckë
(
øw_d©a
, 
Àngth
, 
nic_ödex
);

952 i‡(
ªsu…
 < 0) {

953 
	`log_w¨nög
("ARPÖro˚ssög faûed: %d", 
ªsu…
);

954 
∑ckë_°©i°ics
.
rx_îr‹s
++;

960 
ETH_P_IP
:

962 i‡(
	`°©ic_routög_is_íabÀd
()) {

963 
uöt8_t
 
de°_nic
;

964 
ªsu…
 = 
	`°©ic_routög_¥o˚ss_ù_∑ckë
(
∑ylﬂd_d©a
, 
∑ylﬂd_Àngth
,

965 
nic_ödex
, &
de°_nic
);

966 i‡(
ªsu…
 =
SUCCESS
 && 
de°_nic
 !
nic_ödex
) {

968 
	`log_debug
("Routög IPÖackë from NIC %dÅÿNIC %d", 
nic_ödex
, 
de°_nic
);

969 
ªsu…
 = 
	`rouã_∑ckë_to_öãrÁ˚
(
øw_d©a
, 
Àngth
, 
de°_nic
);

970 i‡(
ªsu…
 =
SUCCESS
) {

971 
∑ckë_°©i°ics
.
rouãd_∑ckës
++;

973 
∑ckë_°©i°ics
.
rx_îr‹s
++;

986 
ªsu…
 = 
	`routög_¥o˚ss_∑ckë
(
øw_d©a
, 
Àngth
, 
nic_ödex
);

987 i‡(
ªsu…
 > 0) {

989 
	`log_debug
("Packë bridgedÅÿöãrÁ˚ %d", 
ªsu…
);

990 
∑ckë_°©i°ics
.
rouãd_∑ckës
++;

995 
ªsu…
 = 
	`≠i_¥o˚ss_ª˚ived_∑ckë
(
øw_d©a
, 
Àngth
, 
nic_ödex
);

996 i‡(
ªsu…
 < 0) {

997 
	`log_debug
("Nÿloˇ»h™dÀr†f‹Éthîty≥ 0x%04X", 
ëhîty≥
);

998 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

1002 
	}
}

1011 
	$∑ckë_¥o˚ss_ª˚ived
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
nic_id
) {

1012 
ªsu…
;

1014 i‡(!
∑ckë
 || 
Àngth
 == 0) {

1015  
PACKET_ERR_INVALID_PARAM
;

1018 
	`log_debug
("Pro˚ssögÑe˚ivedÖackë:Üígth=%d,Çic=%d", 
Àngth
, 
nic_id
);

1021 i‡(
Àngth
 < 
PACKET_MIN_SIZE
) {

1022 
	`log_w¨nög
("Re˚ivedÑu¡Öackë:Üígth=%d", 
Àngth
);

1023 
∑ckë_°©i°ics
.
rx_ru¡
++;

1024  
PACKET_ERR_INVALID_SIZE
;

1027 i‡(
Àngth
 > 
PACKET_MAX_SIZE
) {

1028 
	`log_w¨nög
("Re˚ived ovîsizedÖackë:Üígth=%d", 
Àngth
);

1029 
∑ckë_°©i°ics
.
rx_ovîsize
++;

1030  
PACKET_ERR_INVALID_SIZE
;

1034 
ªsu…
 = 
	`routög_¥o˚ss_∑ckë
(
∑ckë
, 
Àngth
, 
nic_id
);

1035 i‡(
ªsu…
 > 0) {

1037 
	`log_debug
("PackëÑouãdÅÿöãrÁ˚ %d", 
ªsu…
);

1038 
∑ckë_°©i°ics
.
rouãd_∑ckës
++;

1043 
ªsu…
 = 
	`≠i_¥o˚ss_ª˚ived_∑ckë
(
∑ckë
, 
Àngth
, 
nic_id
);

1044 i‡(
ªsu…
 < 0) {

1045 
	`log_debug
("NoÜocal handlers forÖacket");

1046 
∑ckë_°©i°ics
.
rx_dr›≥d
++;

1050 
	}
}

1061 
	$∑ckë_£nd_wôh_ªåy
(c⁄° 
uöt8_t
 *
∑ckë_d©a
, 
uöt16_t
 
Àngth
,

1062 c⁄° 
uöt8_t
 *
de°_addr
, 
uöt16_t
 
h™dÀ
,

1063 
max_ªåõs
) {

1064 
ªsu…
;

1065 
ªåy_cou¡
 = 0;

1066 
backoff_dñay
 = 1;

1068 i‡(!
∑ckë_d©a
 || !
de°_addr
 || 
Àngth
 == 0) {

1069  
PACKET_ERR_INVALID_PARAM
;

1072 i‡(
max_ªåõs
 < 0 || max_retries > 10) {

1073 
max_ªåõs
 = 3;

1076 
ªåy_cou¡
 <
max_ªåõs
) {

1078 
nic_ödex
 = 
	`∑ckë_gë_›timÆ_nic
(
∑ckë_d©a
, 
Àngth
);

1079 i‡(
nic_ödex
 < 0) {

1081 
ªsu…
 = 
	`∑ckë_£nd_mu…i_nic
(
∑ckë_d©a
, 
Àngth
, 
de°_addr
, 
h™dÀ
);

1084 
ªsu…
 = 
	`∑ckë_£nd_íh™˚d
(
nic_ödex
, 
∑ckë_d©a
, 
Àngth
, 
de°_addr
, 
h™dÀ
);

1088 i‡(
ªsu…
 == 0) {

1089 i‡(
ªåy_cou¡
 > 0) {

1090 
	`log_öfo
("Packë síàsuc˚ssfuŒyá·î %dÑërõs", 
ªåy_cou¡
);

1096 
ªsu…
) {

1097 
PACKET_ERR_NO_BUFFERS
:

1099 
	`log_w¨nög
("BufferÉxhaustion,Ñetryingáfter delay");

1100 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1103 
PACKET_ERR_INVALID_NIC
:

1105 
	`log_w¨nög
("NIC failure detected,áttempting failover");

1106 i‡(
nic_ödex
 >= 0) {

1107 
	`∑ckë_h™dÀ_nic_Áûovî
(
nic_ödex
);

1109 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1112 
PACKET_ERR_INVALID_SIZE
:

1114 
	`log_îr‹
("InvalidÖacket size,ábortingÅransmission");

1115  
ªsu…
;

1118 
	`log_w¨nög
("Transmission failed withÉrror %d,Ñetry %d/%d",

1119 
ªsu…
, 
ªåy_cou¡
, 
max_ªåõs
);

1120 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1125 i‡(
ªåy_cou¡
 >
max_ªåõs
) {

1126 
	`log_îr‹
("MaximumÑërõ†(%dËex˚eded f‹ÖackëÅønsmissi⁄", 
max_ªåõs
);

1132 
	`log_debug
("Waôög %dm†bef‹êªåy %d", 
backoff_dñay
, 
ªåy_cou¡
 + 1);

1135 vﬁ©ûê
i
 = 0; i < 
backoff_dñay
 * 1000; i++) {

1139 
ªåy_cou¡
++;

1140 
backoff_dñay
 = (backoff_delay < 16) ? backoff_delay * 2 : 16;

1143  
ªsu…
;

1144 
	}
}

1155 
	$∑ckë_ª˚ive_wôh_ªcovîy
(
uöt8_t
 *
buf„r
, 
size_t
 
max_Àngth
,

1156 
size_t
 *
a˘uÆ_Àngth
, 
nic_id
,

1157 
uöt32_t
 
timeout_ms
) {

1158 
uöt32_t
 
°¨t_time
;

1159 
ªsu…
;

1160 
nic_öfo_t
 *
nic
;

1162 i‡(!
buf„r
 || !
a˘uÆ_Àngth
 || 
max_Àngth
 == 0) {

1163  
PACKET_ERR_INVALID_PARAM
;

1166 i‡(!
∑ckë_›s_öôülized
) {

1167  
PACKET_ERR_NOT_INITIALIZED
;

1171 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_id
);

1172 i‡(!
nic
) {

1173 
	`log_îr‹
("InvÆid NIC ID: %d", 
nic_id
);

1174  
PACKET_ERR_INVALID_NIC
;

1178 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1179 
	`log_w¨nög
("NIC %d i†nŸá˘ive", 
nic_id
);

1180  
PACKET_ERR_INVALID_NIC
;

1183 
°¨t_time
 = 
	`°©s_gë_time°amp
();

1187 
ªsu…
 = 
	`h¨dw¨e_ª˚ive_∑ckë
(
nic
, 
buf„r
, 
a˘uÆ_Àngth
);

1190 i‡(
ªsu…
 == 0) {

1192 i‡(*
a˘uÆ_Àngth
 < 
PACKET_MIN_SIZE
 || *a˘uÆ_Àngth > 
max_Àngth
) {

1193 
	`log_w¨nög
("Re˚ived invÆidÖackë size: %d", *
a˘uÆ_Àngth
);

1194 
∑ckë_°©i°ics
.
rx_îr‹s
++;

1199 
∑ckë_°©i°ics
.
rx_∑ckës
++;

1200 
∑ckë_°©i°ics
.
rx_byãs
 +*
a˘uÆ_Àngth
;

1202 
	`log_debug
("PackëÑe˚ived suc˚ssfuŒy:Üígth=%d", *
a˘uÆ_Àngth
);

1207 
ªsu…
) {

1208 
PACKET_ERR_NO_PACKET
:

1212 
PACKET_ERR_INVALID_SIZE
:

1213 
	`log_w¨nög
("ReceivedÖacket with invalid size, discarding");

1214 
∑ckë_°©i°ics
.
rx_îr‹s
++;

1218 
	`log_w¨nög
("H¨dw¨êª˚ivêîr‹: %d", 
ªsu…
);

1219 
∑ckë_°©i°ics
.
rx_îr‹s
++;

1222 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1223 
	`log_îr‹
("NIC %d beˇmêöa˘ivêdurögÑe˚ive", 
nic_id
);

1224  
PACKET_ERR_INVALID_NIC
;

1230 i‡(
timeout_ms
 > 0) {

1231 
uöt32_t
 
ñ≠£d
 = 
	`°©s_gë_time°amp
(Ë- 
°¨t_time
;

1232 i‡(
ñ≠£d
 >
timeout_ms
) {

1233 
	`log_debug
("Re˚ivêtimeouàa·î %lu ms", 
ñ≠£d
);

1234  
PACKET_ERR_NO_PACKET
;

1239 vﬁ©ûê
i
 = 0; i < 100; i++) {

1243 
	}
}

1253 
	$∑ckë_queue_tx
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
¥i‹ôy
, 
uöt16_t
 
h™dÀ
) {

1254 
∑ckë_buf„r_t
 *
buf„r
;

1256 i‡(!
∑ckë
 || 
Àngth
 == 0) {

1257  
PACKET_ERR_INVALID_PARAM
;

1261 
	`log_debug
("QueuingÖacket forÅransmission:Üength=%d,Öriority=%d, handle=%04X",

1262 
Àngth
, 
¥i‹ôy
, 
h™dÀ
);

1265 
∑ckë_queue_t
 *
queue
 = &
g_∑ckë_queues
[
¥i‹ôy
 % 
MAX_PRIORITY_LEVELS
];

1266 i‡(
queue
->
cou¡
 >queue->
max_size
) {

1267 
	`log_w¨nög
("Pri‹ôy %d queuêfuŒ, dr›pögÖackë", 
¥i‹ôy
);

1268  
PACKET_ERR_QUEUE_FULL
;

1272 
buf„r
 = 
	`buf„r_Æloc_∑ckë_buf„r
(
Àngth
);

1273 i‡(!
buf„r
) {

1274 
	`log_îr‹
("FailedÅoállocateÖacket buffer");

1275 
∑ckë_°©i°ics
.
tx_buf„r_fuŒ
++;

1276  
PACKET_ERR_NO_BUFFERS
;

1280 
	`mem˝y
(
buf„r
->
d©a
, 
∑ckë
, 
Àngth
);

1281 
buf„r
->
Àngth
 =Üength;

1282 
buf„r
->
¥i‹ôy
 =Öriority;

1283 
buf„r
->
h™dÀ
 = handle;

1284 
buf„r
->
time°amp
 = 
	`°©s_gë_time°amp
();

1288 
ªsu…
 = 
	`∑ckë_£nd
(
buf„r
->
d©a
, buf„r->
Àngth
, 
h™dÀ
);

1291 
	`buf„r_‰ì_∑ckë_buf„r
(
buf„r
);

1293  
ªsu…
;

1294 
	}
}

1300 
	$∑ckë_Êush_tx_queue
() {

1302 
	`log_debug
("FlushingÅransmission queue");

1304 
∑ckës_£¡
 = 0;

1307 
¥i‹ôy
 = 
MAX_PRIORITY_LEVELS
 - 1;Öriority >= 0;Öriority--) {

1308 
∑ckë_queue_t
 *
queue
 = &
g_∑ckë_queues
[
¥i‹ôy
];

1310 
queue
->
cou¡
 > 0 && queue->
hód
) {

1311 
∑ckë_buf„r_t
 *
buf„r
 = 
queue
->
hód
;

1314 
ªsu…
 = 
	`∑ckë_£nd_immedüã
(
buf„r
->
d©a
, buf„r->
Àngth
, 0);

1315 i‡(
ªsu…
 !
SUCCESS
) {

1321 
__asm__
 
	`__vﬁ©ûe__
("cli");

1322 
queue
->
hód
 = 
buf„r
->
√xt
;

1323 i‡(!
queue
->
hód
) {

1324 
queue
->
èû
 = 
NULL
;

1326 
queue
->
cou¡
--;

1327 
__asm__
 
	`__vﬁ©ûe__
("sti");

1330 
	`buf„r_‰ì_∑ckë_buf„r
(
buf„r
);

1331 
∑ckës_£¡
++;

1335 
	`log_debug
("Flushed %dÖackë†‰omÅønsmissi⁄ queues", 
∑ckës_£¡
);

1336  
∑ckës_£¡
;

1337 
	}
}

1344 
	$∑ckë_gë_°©i°ics
(
∑ckë_°©s_t
 *
°©s
) {

1345 i‡(!
°©s
) {

1346  
PACKET_ERR_INVALID_PARAM
;

1349 *
°©s
 = 
∑ckë_°©i°ics
;

1351 
	}
}

1360 
	$∑ckë_upd©e_dëaûed_°©s
(
nic_ödex
, 
∑ckë_ty≥
, 
uöt16_t
 
Àngth
, 
ªsu…
) {

1361 
nic_öfo_t
 *
nic
;

1364 i‡(
∑ckë_ty≥
 == 0) {

1365 i‡(
ªsu…
 == 0) {

1366 
∑ckë_°©i°ics
.
tx_∑ckës
++;

1367 
∑ckë_°©i°ics
.
tx_byãs
 +
Àngth
;

1369 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1372 i‡(
ªsu…
 == 0) {

1373 
∑ckë_°©i°ics
.
rx_∑ckës
++;

1374 
∑ckë_°©i°ics
.
rx_byãs
 +
Àngth
;

1376 
∑ckë_°©i°ics
.
rx_îr‹s
++;

1381 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

1382 i‡(
nic
) {

1383 i‡(
∑ckë_ty≥
 == 0) {

1384 i‡(
ªsu…
 == 0) {

1385 
nic
->
tx_∑ckës
++;

1386 
nic
->
tx_byãs
 +
Àngth
;

1388 
nic
->
tx_îr‹s
++;

1391 i‡(
ªsu…
 == 0) {

1392 
nic
->
rx_∑ckës
++;

1393 
nic
->
rx_byãs
 +
Àngth
;

1395 
nic
->
rx_îr‹s
++;

1399 
	}
}

1406 
	$∑ckë_gë_≥rf‹m™˚_mërics
(
∑ckë_≥rf‹m™˚_mërics_t
 *
mërics
) {

1407 
tŸÆ_nics
;

1408 
nic_öfo_t
 *
nic
;

1409 
uöt32_t
 
tŸÆ_tx_∑ckës
 = 0;

1410 
uöt32_t
 
tŸÆ_rx_∑ckës
 = 0;

1411 
uöt32_t
 
tŸÆ_îr‹s
 = 0;

1413 i‡(!
mërics
) {

1414  
PACKET_ERR_INVALID_PARAM
;

1417 
	`mem£t
(
mërics
, 0, (
∑ckë_≥rf‹m™˚_mërics_t
));

1420 
mërics
->
tx_∑ckës
 = 
∑ckë_°©i°ics
.tx_packets;

1421 
mërics
->
rx_∑ckës
 = 
∑ckë_°©i°ics
.rx_packets;

1422 
mërics
->
tx_byãs
 = 
∑ckë_°©i°ics
.tx_bytes;

1423 
mërics
->
rx_byãs
 = 
∑ckë_°©i°ics
.rx_bytes;

1424 
mërics
->
tx_îr‹s
 = 
∑ckë_°©i°ics
.tx_errors;

1425 
mërics
->
rx_îr‹s
 = 
∑ckë_°©i°ics
.rx_errors;

1426 
mërics
->
rx_dr›≥d
 = 
∑ckë_°©i°ics
.rx_dropped;

1429 
tŸÆ_tx_∑ckës
 = 
∑ckë_°©i°ics
.
tx_∑ckës
;

1430 
tŸÆ_rx_∑ckës
 = 
∑ckë_°©i°ics
.
rx_∑ckës
;

1431 
tŸÆ_îr‹s
 = 
∑ckë_°©i°ics
.
tx_îr‹s
 +Öackë_°©i°ics.
rx_îr‹s
;

1433 i‡(
tŸÆ_tx_∑ckës
 > 0) {

1434 
mërics
->
tx_îr‹_øã
 = (
∑ckë_°©i°ics
.
tx_îr‹s
 * 100Ë/ 
tŸÆ_tx_∑ckës
;

1437 i‡(
tŸÆ_rx_∑ckës
 > 0) {

1438 
mërics
->
rx_îr‹_øã
 = (
∑ckë_°©i°ics
.
rx_îr‹s
 * 100Ë/ 
tŸÆ_rx_∑ckës
;

1439 
mërics
->
rx_dr›_øã
 = (
∑ckë_°©i°ics
.
rx_dr›≥d
 * 100Ë/ 
tŸÆ_rx_∑ckës
;

1444 
mërics
->
tx_throughput
 = 
tŸÆ_tx_∑ckës
;

1445 
mërics
->
rx_throughput
 = 
tŸÆ_rx_∑ckës
;

1448 
tŸÆ_nics
 = 
	`h¨dw¨e_gë_nic_cou¡
();

1449 
i
 = 0; i < 
tŸÆ_nics
 && i < 
MAX_NICS
; i++) {

1450 
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

1451 i‡(
nic
) {

1452 
mërics
->
nic_°©s
[
i
].
a˘ive
 = (
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
) ? 1 : 0;

1453 
mërics
->
nic_°©s
[
i
].
lök_up
 = (
nic
->
°©us
 & 
NIC_STATUS_LINK_UP
) ? 1 : 0;

1454 
mërics
->
nic_°©s
[
i
].
•ìd
 = (
nic
->
°©us
 & 
NIC_STATUS_100MBPS
) ? 100 : 10;

1455 
mërics
->
nic_°©s
[
i
].
fuŒ_du∂ex
 = (
nic
->
°©us
 & 
NIC_STATUS_FULL_DUPLEX
) ? 1 : 0;

1456 
mërics
->
nic_°©s
[
i
].
tx_∑ckës
 = 
nic
->tx_packets;

1457 
mërics
->
nic_°©s
[
i
].
rx_∑ckës
 = 
nic
->rx_packets;

1458 
mërics
->
nic_°©s
[
i
].
tx_îr‹s
 = 
nic
->tx_errors;

1459 
mërics
->
nic_°©s
[
i
].
rx_îr‹s
 = 
nic
->rx_errors;

1463 
mërics
->
a˘ive_nics
 = 
tŸÆ_nics
;

1464 
mërics
->
cﬁÀ˘i⁄_time
 = 
	`°©s_gë_time°amp
();

1467 
	}
}

1473 
	$∑ckë_m⁄ô‹_hó…h
() {

1474 
hó…h_sc‹e
 = 0;

1475 
tŸÆ_nics
;

1476 
nic_öfo_t
 *
nic
;

1477 
uöt32_t
 
tŸÆ_∑ckës
;

1478 
uöt32_t
 
tŸÆ_îr‹s
;

1481 i‡(!
∑ckë_›s_öôülized
) {

1482 
	`log_w¨nög
("Packet operationsÇot initialized");

1487 
tŸÆ_nics
 = 
	`h¨dw¨e_gë_nic_cou¡
();

1488 i‡(
tŸÆ_nics
 == 0) {

1489 
	`log_îr‹
("No NICsávailable");

1493 
a˘ive_nics
 = 0;

1494 
i
 = 0; i < 
tŸÆ_nics
; i++) {

1495 
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

1496 i‡(
nic
 && (nic->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1497 
a˘ive_nics
++;

1500 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_LINK_UP
)) {

1501 
	`log_w¨nög
("NIC %dÜök i†down", 
i
);

1502 
hó…h_sc‹e
 += 5;

1506 i‡(
nic
->
tx_∑ckës
 > 0) {

1507 
uöt32_t
 
tx_îr‹_øã
 = (
nic
->
tx_îr‹s
 * 100Ë/Çic->
tx_∑ckës
;

1508 i‡(
tx_îr‹_øã
 > 10) {

1509 
	`log_w¨nög
("NIC %d high TXÉº‹Ñ©e: %lu%%", 
i
, 
tx_îr‹_øã
);

1510 
hó…h_sc‹e
 += 10;

1511 } i‡(
tx_îr‹_øã
 > 5) {

1512 
hó…h_sc‹e
 += 5;

1516 i‡(
nic
->
rx_∑ckës
 > 0) {

1517 
uöt32_t
 
rx_îr‹_øã
 = (
nic
->
rx_îr‹s
 * 100Ë/Çic->
rx_∑ckës
;

1518 i‡(
rx_îr‹_øã
 > 10) {

1519 
	`log_w¨nög
("NIC %d high RXÉº‹Ñ©e: %lu%%", 
i
, 
rx_îr‹_øã
);

1520 
hó…h_sc‹e
 += 10;

1521 } i‡(
rx_îr‹_øã
 > 5) {

1522 
hó…h_sc‹e
 += 5;

1528 i‡(
a˘ive_nics
 == 0) {

1529 
	`log_îr‹
("Noáctive NICsávailable");

1534 
tŸÆ_∑ckës
 = 
∑ckë_°©i°ics
.
tx_∑ckës
 +Öackë_°©i°ics.
rx_∑ckës
;

1535 
tŸÆ_îr‹s
 = 
∑ckë_°©i°ics
.
tx_îr‹s
 +Öackë_°©i°ics.
rx_îr‹s
;

1537 i‡(
tŸÆ_∑ckës
 > 0) {

1538 
uöt32_t
 
globÆ_îr‹_øã
 = (
tŸÆ_îr‹s
 * 100Ë/ 
tŸÆ_∑ckës
;

1539 i‡(
globÆ_îr‹_øã
 > 15) {

1540 
	`log_w¨nög
("High globÆÉº‹Ñ©e: %lu%%", 
globÆ_îr‹_øã
);

1541 
hó…h_sc‹e
 += 15;

1542 } i‡(
globÆ_îr‹_øã
 > 10) {

1543 
hó…h_sc‹e
 += 10;

1544 } i‡(
globÆ_îr‹_øã
 > 5) {

1545 
hó…h_sc‹e
 += 5;

1550 i‡(
∑ckë_°©i°ics
.
tx_buf„r_fuŒ
 > 0) {

1551 
	`log_w¨nög
("TX buf„∏exhau°i⁄Évíts: %lu", 
∑ckë_°©i°ics
.
tx_buf„r_fuŒ
);

1552 
hó…h_sc‹e
 += 5;

1556 i‡(
hó…h_sc‹e
 == 0) {

1557 
	`log_debug
("Packet driver health: EXCELLENT");

1558 } i‡(
hó…h_sc‹e
 < 10) {

1559 
	`log_öfo
("Packë drivî hó…h: GOOD (sc‹e: %d)", 
hó…h_sc‹e
);

1560 } i‡(
hó…h_sc‹e
 < 25) {

1561 
	`log_w¨nög
("Packë drivî hó…h: FAIR (sc‹e: %d)", 
hó…h_sc‹e
);

1563 
	`log_w¨nög
("Packë drivî hó…h: POOR (sc‹e: %d)", 
hó…h_sc‹e
);

1566  
hó…h_sc‹e
;

1567 
	}
}

1572 
	$∑ckë_¥öt_dëaûed_°©s
() {

1573 
tŸÆ_nics
;

1574 
nic_öfo_t
 *
nic
;

1576 
	`log_öfo
("=== Packet Driver Statistics ===");

1577 
	`log_öfo
("Global Counters:");

1578 
	`log_öfo
(" TX: %luÖackets, %lu bytes, %luÉrrors",

1579 
∑ckë_°©i°ics
.
tx_∑ckës
,

1580 
∑ckë_°©i°ics
.
tx_byãs
,

1581 
∑ckë_°©i°ics
.
tx_îr‹s
);

1582 
	`log_öfo
(" RX: %luÖackets, %lu bytes, %luÉrrors, %lu dropped",

1583 
∑ckë_°©i°ics
.
rx_∑ckës
,

1584 
∑ckë_°©i°ics
.
rx_byãs
,

1585 
∑ckë_°©i°ics
.
rx_îr‹s
,

1586 
∑ckë_°©i°ics
.
rx_dr›≥d
);

1587 
	`log_öfo
(" Rouãd: %luÖackës", 
∑ckë_°©i°ics
.
rouãd_∑ckës
);

1588 
	`log_öfo
(" Buf„∏evíts: %lu TX fuŒ", 
∑ckë_°©i°ics
.
tx_buf„r_fuŒ
);

1591 
tŸÆ_nics
 = 
	`h¨dw¨e_gë_nic_cou¡
();

1592 
i
 = 0; i < 
tŸÆ_nics
; i++) {

1593 
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

1594 i‡(
nic
) {

1595 
	`log_öfo
("NIC %d (%s):", 
i
,

1596 (
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
) ? "ACTIVE" : "INACTIVE");

1597 
	`log_öfo
(" Status: Link=%s, Speed=%dMbps, Duplex=%s",

1598 (
nic
->
°©us
 & 
NIC_STATUS_LINK_UP
) ? "UP" : "DOWN",

1599 (
nic
->
°©us
 & 
NIC_STATUS_100MBPS
) ? 100 : 10,

1600 (
nic
->
°©us
 & 
NIC_STATUS_FULL_DUPLEX
) ? "FULL" : "HALF");

1601 
	`log_öfo
(" TX: %luÖackets, %lu bytes, %luÉrrors",

1602 
nic
->
tx_∑ckës
,Çic->
tx_byãs
,Çic->
tx_îr‹s
);

1603 
	`log_öfo
(" RX: %luÖackets, %lu bytes, %luÉrrors",

1604 
nic
->
rx_∑ckës
,Çic->
rx_byãs
,Çic->
rx_îr‹s
);

1608 
	`log_öfo
("=== End Statistics ===");

1609 
	}
}

1615 
	$∑ckë_ª£t_°©i°ics
() {

1616 
tŸÆ_nics
;

1617 
nic_öfo_t
 *
nic
;

1619 
	`log_öfo
("ResettingÖacket statistics");

1620 
	`mem£t
(&
∑ckë_°©i°ics
, 0, (packet_statistics));

1623 
tŸÆ_nics
 = 
	`h¨dw¨e_gë_nic_cou¡
();

1624 
i
 = 0; i < 
tŸÆ_nics
; i++) {

1625 
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

1626 i‡(
nic
) {

1627 
nic
->
tx_∑ckës
 = 0;

1628 
nic
->
rx_∑ckës
 = 0;

1629 
nic
->
tx_byãs
 = 0;

1630 
nic
->
rx_byãs
 = 0;

1631 
nic
->
tx_îr‹s
 = 0;

1632 
nic
->
rx_îr‹s
 = 0;

1633 
nic
->
tx_dr›≥d
 = 0;

1634 
nic
->
rx_dr›≥d
 = 0;

1639 
	}
}"

1645 
	$∑ckë_›s_is_öôülized
() {

1646  
∑ckë_›s_öôülized
;

1647 
	}
}

1659 
	$∑ckë_£nd_dúe˘_pio_3c509b
(
uöt8_t
 
öãrÁ˚_num
, c⁄° uöt8_à*
de°_addr
,

1660 
uöt16_t
 
ëhîty≥
, c⁄° * 
∑ylﬂd
, uöt16_à
∑ylﬂd_Àn
) {

1661 
nic_öfo_t
 *
nic
;

1662 
ªsu…
;

1665 i‡(!
de°_addr
 || !
∑ylﬂd
 || 
∑ylﬂd_Àn
 =0 ||Öaylﬂd_À¿> 
ETH_MAX_DATA
) {

1666 
	`log_îr‹
("InvalidÖarameters for direct PIO send");

1667 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1668  
PACKET_ERR_INVALID_PARAM
;

1672 
nic
 = 
	`h¨dw¨e_gë_nic
(
öãrÁ˚_num
);

1673 i‡(!
nic
) {

1674 
	`log_îr‹
("InvÆid i¡îÁ˚Çumbî: %d", 
öãrÁ˚_num
);

1675 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1676  
PACKET_ERR_INVALID_NIC
;

1680 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1681 
	`log_îr‹
("NIC %d i†nŸá˘ive", 
öãrÁ˚_num
);

1682 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1683  
PACKET_ERR_INVALID_NIC
;

1687 i‡(
nic
->
ty≥
 !
NIC_TYPE_3C509B
) {

1688 
	`log_debug
("Direct PIO optimization onlyávailable for 3c509B, NIC %d isÅype %d",

1689 
öãrÁ˚_num
, 
nic
->
ty≥
);

1690 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1691  
PACKET_ERR_NOT_SUPPORTED
;

1695 
ªsu…
 = 
	`£nd_∑ckë_dúe˘_pio_wôh_hódî
(
nic
, 
de°_addr
, 
ëhîty≥
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1696 i‡(
ªsu…
 !
SUCCESS
) {

1697 
	`log_îr‹
("Dúe˘ PIOÅønsmissi⁄ faûed o¿öãrÁ˚ %d: %d", 
öãrÁ˚_num
, 
ªsu…
);

1698 
∑ckë_°©i°ics
.
tx_îr‹s
++;

1699  
ªsu…
;

1703 
∑ckë_°©i°ics
.
tx_∑ckës
++;

1704 
∑ckë_°©i°ics
.
tx_byãs
 +
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
;

1706 
	`log_debug
("Successfully sentÖacket via direct PIO on interface %d: %d bytes",

1707 
öãrÁ˚_num
, 
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
);

1709  
SUCCESS
;

1710 
	}
}

1727 
	$∑ckë_buûd_ëhî√t_‰ame
(
uöt8_t
 *
‰ame_buf„r
, 
uöt16_t
 
‰ame_size
,

1728 c⁄° 
uöt8_t
 *
de°_mac
, c⁄° uöt8_à*
§c_mac
,

1729 
uöt16_t
 
ëhîty≥
, c⁄° 
uöt8_t
 *
∑ylﬂd
,

1730 
uöt16_t
 
∑ylﬂd_Àn
) {

1731 
uöt16_t
 
‰ame_Àn
;

1733 i‡(!
‰ame_buf„r
 || !
de°_mac
 || !
§c_mac
 || !
∑ylﬂd
) {

1734  
PACKET_ERR_INVALID_PARAM
;

1738 
‰ame_Àn
 = 
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
;

1739 i‡(
‰ame_Àn
 > 
‰ame_size
) {

1740  
PACKET_ERR_INVALID_SIZE
;

1744 
	`mem˝y
(
‰ame_buf„r
, 
de°_mac
, 
ETH_ALEN
);

1745 
	`mem˝y
(
‰ame_buf„r
 + 
ETH_ALEN
, 
§c_mac
, ETH_ALEN);

1746 *(
uöt16_t
*)(
‰ame_buf„r
 + 2 * 
ETH_ALEN
Ë
	`ht⁄s
(
ëhîty≥
);

1749 
	`mem˝y
(
‰ame_buf„r
 + 
ETH_HEADER_LEN
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1752 i‡(
‰ame_Àn
 < 
ETH_MIN_FRAME
) {

1753 
	`mem£t
(
‰ame_buf„r
 + 
‰ame_Àn
, 0, 
ETH_MIN_FRAME
 - frame_len);

1754 
‰ame_Àn
 = 
ETH_MIN_FRAME
;

1757 
	`log_debug
("BuûàEthî√à‰ame:Üí=%d,Åy≥=0x%04X", 
‰ame_Àn
, 
ëhîty≥
);

1758  
‰ame_Àn
;

1759 
	}
}

1772 
	$∑ckë_buûd_ëhî√t_‰ame_›timized
(
uöt8_t
 *
‰ame_buf„r
, 
uöt16_t
 
‰ame_size
,

1773 c⁄° 
uöt8_t
 *
de°_mac
, c⁄° uöt8_à*
§c_mac
,

1774 
uöt16_t
 
ëhîty≥
, c⁄° 
uöt8_t
 *
∑ylﬂd
,

1775 
uöt16_t
 
∑ylﬂd_Àn
) {

1776 
uöt16_t
 
‰ame_Àn
;

1777 
˝u_öfo_t
 
g_˝u_öfo
;

1779 i‡(!
‰ame_buf„r
 || !
de°_mac
 || !
§c_mac
 || !
∑ylﬂd
) {

1780  
PACKET_ERR_INVALID_PARAM
;

1784 
‰ame_Àn
 = 
ETH_HEADER_LEN
 + 
∑ylﬂd_Àn
;

1785 i‡(
‰ame_Àn
 > 
‰ame_size
) {

1786  
PACKET_ERR_INVALID_SIZE
;

1790 
	`mem‹y_c›y_›timized
(
‰ame_buf„r
, 
de°_mac
, 
ETH_ALEN
);

1791 
	`mem‹y_c›y_›timized
(
‰ame_buf„r
 + 
ETH_ALEN
, 
§c_mac
, ETH_ALEN);

1792 *(
uöt16_t
*)(
‰ame_buf„r
 + 2 * 
ETH_ALEN
Ë
	`ht⁄s
(
ëhîty≥
);

1795 i‡(
∑ylﬂd_Àn
 <64 && 
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80286
) {

1797 
	`∑ckë_c›y_smÆl_∑ylﬂd
(
‰ame_buf„r
 + 
ETH_HEADER_LEN
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1798 } i‡(
∑ylﬂd_Àn
 <512 && 
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1800 
	`mem‹y_c›y_›timized
(
‰ame_buf„r
 + 
ETH_HEADER_LEN
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1803 
	`mem‹y_c›y_›timized
(
‰ame_buf„r
 + 
ETH_HEADER_LEN
, 
∑ylﬂd
, 
∑ylﬂd_Àn
);

1807 i‡(
‰ame_Àn
 < 
ETH_MIN_FRAME
) {

1808 
uöt16_t
 
∑d_Àn
 = 
ETH_MIN_FRAME
 - 
‰ame_Àn
;

1809 
	`mem‹y_£t_›timized
(
‰ame_buf„r
 + 
‰ame_Àn
, 0, 
∑d_Àn
);

1810 
‰ame_Àn
 = 
ETH_MIN_FRAME
;

1813 
	`log_debug
("Built optimized Ethernet frame:Üen=%d,Åype=0x%04X, CPU=%s",

1814 
‰ame_Àn
, 
ëhîty≥
, 
	`˝u_ty≥_to_°rög
(
g_˝u_öfo
.
ty≥
));

1815  
‰ame_Àn
;

1816 
	}
}

1824 
	$∑ckë_c›y_smÆl_∑ylﬂd
(
uöt8_t
 *
de°
, c⁄° uöt8_à*
§c
, 
uöt16_t
 
Àn
) {

1825 
˝u_öfo_t
 
g_˝u_öfo
;

1827 i‡(
Àn
 <64 && 
g_˝u_öfo
.
ty≥
 >
CPU_TYPE_80386
) {

1830 i‡(
Àn
 == 64) {

1833 
	`mem‹y_c›y_›timized
(
de°
, 
§c
, 
Àn
);

1836 
	`mem‹y_c›y_›timized
(
de°
, 
§c
, 
Àn
);

1840 
	`mem‹y_c›y_›timized
(
de°
, 
§c
, 
Àn
);

1842 
	}
}

1851 
	$∑ckë_∑r£_ëhî√t_hódî
(c⁄° 
uöt8_t
 *
‰ame_d©a
, 
uöt16_t
 
‰ame_Àn
,

1852 
ëh_hódî_t
 *
hódî
) {

1853 i‡(!
‰ame_d©a
 || !
hódî
 || 
‰ame_Àn
 < 
ETH_HEADER_LEN
) {

1854  
PACKET_ERR_INVALID_PARAM
;

1858 
	`mem˝y
(
hódî
->
de°_mac
, 
‰ame_d©a
, 
ETH_ALEN
);

1859 
	`mem˝y
(
hódî
->
§c_mac
, 
‰ame_d©a
 + 
ETH_ALEN
, ETH_ALEN);

1860 
hódî
->
ëhîty≥
 = 
	`¡ohs
(*(
uöt16_t
*)(
‰ame_d©a
 + 2 * 
ETH_ALEN
));

1862 
	`log_debug
("P¨£d Ethî√àhódî:Åy≥=0x%04X", 
hódî
->
ëhîty≥
);

1864 
	}
}

1872 
boﬁ
 
	$∑ckë_is_f‹_us
(c⁄° 
uöt8_t
 *
‰ame_d©a
, c⁄° uöt8_à*
our_mac
) {

1873 i‡(!
‰ame_d©a
 || !
our_mac
) {

1874  
Ál£
;

1877  
	`memcmp
(
‰ame_d©a
, 
our_mac
, 
ETH_ALEN
) == 0;

1878 
	}
}

1885 
boﬁ
 
	$∑ckë_is_brﬂdˇ°
(c⁄° 
uöt8_t
 *
‰ame_d©a
) {

1886 c⁄° 
uöt8_t
 
brﬂdˇ°_mac
[
ETH_ALEN
] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

1888 i‡(!
‰ame_d©a
) {

1889  
Ál£
;

1892  
	`memcmp
(
‰ame_d©a
, 
brﬂdˇ°_mac
, 
ETH_ALEN
) == 0;

1893 
	}
}

1900 
boﬁ
 
	$∑ckë_is_mu…iˇ°
(c⁄° 
uöt8_t
 *
‰ame_d©a
) {

1901 i‡(!
‰ame_d©a
) {

1902  
Ál£
;

1906  (
‰ame_d©a
[0] & 0x01) != 0;

1907 
	}
}

1914 
uöt16_t
 
	$∑ckë_gë_ëhîty≥
(c⁄° 
uöt8_t
 *
‰ame_d©a
) {

1915 i‡(!
‰ame_d©a
) {

1919  
	`¡ohs
(*(
uöt16_t
*)(
‰ame_d©a
 + 2 * 
ETH_ALEN
));

1920 
	}
}

1922  \
nöt
 
	$∑ckë_rouã_mu…i_nic
(c⁄° 
uöt8_t
 *
∑ckë_d©a
, 
uöt16_t
 
Àngth
, 
§c_nic_ödex
Ë{\
n
 
ëh_hódî_t
 
ëh_hódî
;\¿
tŸÆ_nics
;\¿
èrgë_nic
 = -1;\¿\¿i‡(!∑ckë_d©®||Üígth < 
ETH_HEADER_LEN
Ë{\¿ -1;\¿}\¿\¿ \¿i‡(
	`∑ckë_∑r£_ëhî√t_hódî
’ackë_d©a,Üígth, &ëh_hódîË< 0Ë{\¿ -1;\¿}\¿\¿ \¿tŸÆ_nic†
	`h¨dw¨e_gë_nic_cou¡
();\¿i‡—ŸÆ_nic†<1Ë{\¿ \¿ -1;\¿}\¿\¿ \¿i‡(
	`∑ckë_is_brﬂdˇ°
’ackë_d©a)Ë{\¿
	`log_debug
(\"BroadcastÖacket - would forwardÅoáll NICsÉxcept source %d\", src_nic_index);\n /* ForÇow, deliverÜocally. Full implementation would queueÅoáll other NICs */\nÑeturn -1;\n }\n \n /* Check if destination is oná different segment */\n /* This isá simplifiedÑouting -Ñeal implementation would useÑoutingÅable */\n for (int i = 0; i <Åotal_nics; i++) {\nÇic_info_t *nic = hardware_get_nic(i);\n if (!nic || i == src_nic_index) {\n continue;\n }\n \n /* Check if destination MAC matchesÅhis NIC's subnet */\n /* ForÇow, use simpleÉven/odd MACáddressÑoutingásÉxample */\n if ((eth_header.dest_mac[5] & 1) == (i & 1)) {\nÅarget_nic = i;\nÜog_debug(\"RoutingÖacketÅo NIC %d based on MACáddress\",Åarget_nic);\n break;\n }\n }\n \nÑeturnÅarget_nic;\n}\n\n/**\n * @brief CoordinateÖacket sendingácross multiple NICs withÜoad balancing\n * @paramÖacket_data Packet data\n * @paramÜength PacketÜength\n * @param dest_addr Destination MACáddress\n * @param handle Sender handle\n * @return 0 on success,Çegative onÉrror\n */\nintÖacket_send_multi_nic(const uint8_t *packet_data, uint16_tÜength,\n const uint8_t *dest_addr, uint16_t handle) {\n static intÇext_nic_index = 0; /* SimpleÑound-robin counter */\n intÅotal_nics;\n int selected_nic;\n intÑesult;\nÇic_info_t *nic;\n \n if (!packet_data || !dest_addr ||Üength == 0) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \nÅotal_nics = hardware_get_nic_count();\n if (total_nics == 0) {\nÜog_error(\"No NICsávailable forÅransmission\");\nÑeturn PACKET_ERR_INVALID_NIC;\n }\n \n /* For broadcastÖackets, send onÖrimary NIC */\n if (packet_is_broadcast(packet_data)) {\n selected_nic = 0;\nÜog_debug(\"BroadcastÖacket - usingÖrimary NIC 0\");\n }\n /* For unicast, useÜoad balancing orÑoutingÅable */\nÉlse {\n /* SimpleÑound-robinÜoad balancing forÇow */\n /* Real implementation would useÑoutingÅableÜookup */\n selected_nic =Çext_nic_index %Åotal_nics;\nÇext_nic_index = (next_nic_index + 1) %Åotal_nics;\n \n /* Skip inactive NICs */\n for (intáttempts = 0;áttempts <Åotal_nics;áttempts++) {\nÇic = hardware_get_nic(selected_nic);\n if (nic && (nic->status & NIC_STATUS_ACTIVE)) {\n break;\n }\n selected_nic = (selected_nic + 1) %Åotal_nics;\n }\n \nÜog_debug(\"Load balancing: selected NIC %d forÅransmission\", selected_nic);\n }\n \n /* Send usingÅheÉnhancedÖacket send function */\nÑesult =Öacket_send_enhanced(selected_nic,Öacket_data,Üength, dest_addr, handle);\n if (result < 0) {\nÜog_error(\"FailedÅo sendÖacket via NIC %d: %d\", selected_nic,Ñesult);\nÑeturnÑesult;\n }\n \nÑeturn 0;\n}\n\n/**\n * @brief Checkánd handle NIC failover\n * @param failed_nic_index Index of failed NIC\n * @return 0 on successful failover,Çegative onÉrror\n */\nintÖacket_handle_nic_failover(int failed_nic_index) {\n intÅotal_nics;\n intáctive_nics = 0;\nÇic_info_t *nic;\n \nÜog_warning(\"Handling failover for failed NIC %d\", failed_nic_index);\n \nÅotal_nics = hardware_get_nic_count();\n \n /* Countáctive NICs */\n for (int i = 0; i <Åotal_nics; i++) {\nÇic = hardware_get_nic(i);\n if (nic && (nic->status & NIC_STATUS_ACTIVE) && i != failed_nic_index) {\náctive_nics++;\n }\n }\n \n if (active_nics == 0) {\nÜog_error(\"Noáctive NICsávailableáfter failover\");\nÑeturn PACKET_ERR_INVALID_NIC;\n }\n \nÜog_info(\"Failover completed: %dáctive NICsÑemaining\",áctive_nics);\n \n /* UpdateÑoutingÅoávoid failed NIC */\n /* Real implementation would updateÑoutingÅable */\n \nÑeturn 0;\n}\n\n/**\n * @brief Get optimal NIC forÖacketÅransmission based onÜoadándÜink status\n * @paramÖacket_data Packet data forÑouting decisions\n * @paramÜength PacketÜength\n * @return NIC index, orÇegative onÉrror\n */\nintÖacket_get_optimal_nic(const uint8_t *packet_data, uint16_tÜength) {\n intÅotal_nics;\n int best_nic = -1;\n uint32_t best_score = 0;\nÇic_info_t *nic;\n \nÅotal_nics = hardware_get_nic_count();\n \n for (int i = 0; i <Åotal_nics; i++) {\nÇic = hardware_get_nic(i);\n if (!nic || !(nic->status & NIC_STATUS_ACTIVE)) {\n continue;\n }\n \n /* Calculate score based on multiple factors */\n uint32_t score = 100; /* Base score */\n \n /* Link quality factor */\n if (nic->status & NIC_STATUS_LINK_UP) {\n score += 50;\n }\n \n /* Speed factor */\n if (nic->status & NIC_STATUS_100MBPS) {\n score += 30;\n }\n \n /* Load factor (inverse ofÉrrorÑate) */\n if (nic->tx_packets > 0) {\n uint32_tÉrror_rate = (nic->tx_errors * 100) /Çic->tx_packets;\n score += (100 -Érror_rate);\n }\n \n /* Duplex factor */\n if (nic->status & NIC_STATUS_FULL_DUPLEX) {\n score += 20;\n }\n \n if (score > best_score) {\n best_score = score;\n best_nic = i;\n }\n }\n \n if (best_nic >= 0) {\nÜog_debug(\"Selected optimal NIC %d (score=%lu)\", best_nic, best_score);\n }\n \nÑeturn best_nic;\n}\n\n/**

1923 * @
brõf
 
Com¥ehísive
 
lo›back
 
ã°ög
 
suôe


1924 * 
This
 
im∂emíts
 
öã∫Æ
, 
exã∫Æ
, 
™d
 
¸oss
-
NIC
 
lo›back
 
ã°ög


1934 
	`∑ckë_ã°_öã∫Æ_lo›back
(
nic_ödex
, c⁄° 
uöt8_t
 *
ã°_∑âîn
, 
uöt16_t
 
∑âîn_size
) {

1935 
nic_öfo_t
 *
nic
;

1936 
uöt8_t
 
ã°_‰ame
[
ETH_MAX_FRAME
];

1937 
uöt8_t
 
rx_buf„r
[
ETH_MAX_FRAME
];

1938 
uöt16_t
 
‰ame_Àngth
;

1939 
size_t
 
rx_Àngth
;

1940 
ªsu…
;

1941 
uöt32_t
 
timeout_ms
 = 1000;

1942 
uöt32_t
 
°¨t_time
;

1944 i‡(!
ã°_∑âîn
 || 
∑âîn_size
 =0 ||Ö©ã∫_sizê> 
ETH_MAX_DATA
) {

1945 
	`log_îr‹
("InvalidÜoopbackÅestÖarameters");

1946  
PACKET_ERR_INVALID_PARAM
;

1949 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_ödex
);

1950 i‡(!
nic
) {

1951 
	`log_îr‹
("InvÆid NIC index f‹Üo›backÅe°: %d", 
nic_ödex
);

1952  
PACKET_ERR_INVALID_NIC
;

1955 i‡(!(
nic
->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1956 
	`log_îr‹
("NIC %dÇŸá˘ivêf‹Üo›backÅe°", 
nic_ödex
);

1957  
PACKET_ERR_INVALID_NIC
;

1960 
	`log_öfo
("Sèπög i¡î«»lo›backÅe° o¿NIC %d", 
nic_ödex
);

1963 
uöt8_t
 
brﬂdˇ°_mac
[
ETH_ALEN
] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};\
n
 
‰ame_Àngth
 = 
	`∑ckë_buûd_ëhî√t_‰ame
(
ã°_‰ame
, —e°_‰ame),\¿brﬂdˇ°_mac, 
nic
->
mac
,\¿0x0800, \¿
ã°_∑âîn
, 
∑âîn_size
);\¿\¿i‡(‰ame_Àngth < 0Ë{\¿
	`log_îr‹
(\"FailedÅo buildÜoopbackÅest frame\");\nÑeturn frame_length;\n }\n \n /* Enable internalÜoopback mode */\nÑesult =Öacket_enable_loopback_mode(nic, LOOPBACK_INTERNAL);\n if (result != 0) {\nÜog_error(\"FailedÅoÉnable internalÜoopback mode: %d\",Ñesult);\nÑeturnÑesult;\n }\n \n /* ClearányÖending RXÖackets */\nÑx_length = sizeof(rx_buffer);\n while (packet_receive_from_nic(nic_index,Ñx_buffer, &rx_length) == 0) {\nÑx_length = sizeof(rx_buffer);\n }\n \n /* SendÅest frame */\nÑesult =Öacket_send_enhanced(nic_index,Åest_pattern,Öattern_size, broadcast_mac, 0x1234);\n if (result != 0) {\nÜog_error(\"FailedÅo sendÜoopbackÅest frame: %d\",Ñesult);\nÖacket_disable_loopback_mode(nic);\nÑeturnÑesult;\n }\n \nÜog_debug(\"LoopbackÅest frame sent, waiting forÑeception...\");\n \n /* Wait forÜoopbackÑeception */\n start_time = stats_get_timestamp();\nÑx_length = sizeof(rx_buffer);\n \n while ((stats_get_timestamp() - start_time) <Åimeout_ms) {\nÑesult =Öacket_receive_from_nic(nic_index,Ñx_buffer, &rx_length);\n \n if (result == 0) {\n /* VerifyÑeceived frame */\n if (rx_length >= ETH_HEADER_LEN +Öattern_size) {\n /* ExtractÖayload fromÑeceived frame */\n uint8_t *rx_payload =Ñx_buffer + ETH_HEADER_LEN;\n \n if (memcmp(rx_payload,Åest_pattern,Öattern_size) == 0) {\nÜog_info(\"InternalÜoopbackÅest PASSED on NIC %d\",Çic_index);\nÖacket_disable_loopback_mode(nic);\nÑeturn 0;\n }Élse {\nÜog_error(\"Loopback data mismatch on NIC %d\",Çic_index);\nÖacket_disable_loopback_mode(nic);\nÑeturn PACKET_ERR_INVALID_DATA;\n }\n }\n }\n \n /* Brief delay beforeÑetry */\n for (volatile int i = 0; i < 1000; i++);\nÑx_length = sizeof(rx_buffer);\n }\n \nÜog_error(\"InternalÜoopbackÅest TIMEOUT on NIC %d\",Çic_index);\nÖacket_disable_loopback_mode(nic);\nÑeturn PACKET_ERR_TIMEOUT;\n}\n\n/**\n * @brief TestÉxternalÜoopback withÖhysical connector\n * @paramÇic_index NICÅoÅest\n * @paramÅest_patterns Array ofÅestÖatterns\n * @paramÇum_patterns Number ofÅestÖatterns\n * @return 0 on success,Çegative onÉrror\n */\nintÖacket_test_external_loopback(intÇic_index, constÜoopback_test_pattern_t *test_patterns, intÇum_patterns) {\nÇic_info_t *nic;\n intÖassed_tests = 0;\n int failed_tests = 0;\n \n if (!test_patterns ||Çum_patterns <= 0) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \nÇic = hardware_get_nic(nic_index);\n if (!nic) {\nÑeturn PACKET_ERR_INVALID_NIC;\n }\n \nÜog_info(\"StartingÉxternalÜoopbackÅest on NIC %d (%dÖatterns)\",Çic_index,Çum_patterns);\n \n /* Disable internalÜoopback,ÉnableÉxternal */\n intÑesult =Öacket_enable_loopback_mode(nic, LOOPBACK_EXTERNAL);\n if (result != 0) {\nÜog_error(\"FailedÅoÉnableÉxternalÜoopback mode: %d\",Ñesult);\nÑeturnÑesult;\n }\n \n /* TestÉachÖattern */\n for (int i = 0; i <Çum_patterns; i++) {\nÜog_debug(\"TestingÉxternalÜoopbackÖattern %d: %s\", i,Åest_patterns[i].name);\n \nÑesult =Öacket_test_single_loopback_pattern(nic_index, &test_patterns[i]);\n if (result == 0) {\nÖassed_tests++;\nÜog_debug(\"Pattern %d PASSED\", i);\n }Élse {\n failed_tests++;\nÜog_warning(\"Pattern %d FAILED: %d\", i,Ñesult);\n }\n }\n \nÖacket_disable_loopback_mode(nic);\n \nÜog_info(\"ExternalÜoopbackÅest completed: %dÖassed, %d failed\",Öassed_tests, failed_tests);\n \nÑeturn (failed_tests == 0) ? 0 : PACKET_ERR_LOOPBACK_FAILED;\n}\n\n/**\n * @brief Test cross-NICÜoopback for multi-NIC validation\n * @param src_nic_index Source NIC\n * @param dest_nic_index Destination NIC \n * @paramÅest_data Test dataÅo send\n * @param data_size Size ofÅest data\n * @return 0 on success,Çegative onÉrror\n */\nintÖacket_test_cross_nic_loopback(int src_nic_index, int dest_nic_index, \n const uint8_t *test_data, uint16_t data_size) {\nÇic_info_t *src_nic, *dest_nic;\n uint8_tÅest_frame[ETH_MAX_FRAME];\n uint8_tÑx_buffer[ETH_MAX_FRAME];\n uint16_t frame_length;\n size_tÑx_length;\n intÑesult;\n uint32_tÅimeout_ms = 2000; /* LongerÅimeout for cross-NIC */\n uint32_t start_time;\n \n if (!test_data || data_size == 0 || src_nic_index == dest_nic_index) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \n src_nic = hardware_get_nic(src_nic_index);\n dest_nic = hardware_get_nic(dest_nic_index);\n \n if (!src_nic || !dest_nic) {\nÜog_error(\"Invalid NIC indices for cross-NICÅest: src=%d, dest=%d\", \n src_nic_index, dest_nic_index);\nÑeturn PACKET_ERR_INVALID_NIC;\n }\n \n if (!(src_nic->status & NIC_STATUS_ACTIVE) || !(dest_nic->status & NIC_STATUS_ACTIVE)) {\nÜog_error(\"NICsÇotáctive for cross-NICÅest\");\nÑeturn PACKET_ERR_INVALID_NIC;\n }\n \nÜog_info(\"Starting cross-NICÜoopbackÅest: NIC %d -> NIC %d\", src_nic_index, dest_nic_index);\n \n /* BuildÅest frameáddressedÅo destination NIC */\n frame_length =Öacket_build_ethernet_frame(test_frame, sizeof(test_frame),\n dest_nic->mac, src_nic->mac,\n 0x0800, /* IPÉthertype */\nÅest_data, data_size);\n \n if (frame_length < 0) {\nÜog_error(\"FailedÅo build cross-NICÅest frame\");\nÑeturn frame_length;\n }\n \n /* EnableÖromiscuous mode on destination NICÅoÑeceiveállÖackets */\nÑesult = hardware_set_promiscuous_mode(dest_nic,Årue);\n if (result != 0) {\nÜog_warning(\"FailedÅoÉnableÖromiscuous mode on dest NIC %d\", dest_nic_index);\n }\n \n /* ClearányÖendingÖackets on destination NIC */\nÑx_length = sizeof(rx_buffer);\n while (packet_receive_from_nic(dest_nic_index,Ñx_buffer, &rx_length) == 0) {\nÑx_length = sizeof(rx_buffer);\n }\n \n /* SendÖacket from source NIC */\nÑesult =Öacket_send_enhanced(src_nic_index,Åest_data, data_size, dest_nic->mac, 0x5678);\n if (result != 0) {\nÜog_error(\"FailedÅo send cross-NICÅestÖacket: %d\",Ñesult);\n hardware_set_promiscuous_mode(dest_nic, false);\nÑeturnÑesult;\n }\n \nÜog_debug(\"Cross-NICÖacket sent, waiting forÑeception on NIC %d...\", dest_nic_index);\n \n /* Wait forÖacket on destination NIC */\n start_time = stats_get_timestamp();\nÑx_length = sizeof(rx_buffer);\n \n while ((stats_get_timestamp() - start_time) <Åimeout_ms) {\nÑesult =Öacket_receive_from_nic(dest_nic_index,Ñx_buffer, &rx_length);\n \n if (result == 0) {\n /* VerifyÑeceived frame */\nÉth_header_tÉth_header;\nÑesult =Öacket_parse_ethernet_header(rx_buffer,Ñx_length, &eth_header);\n \n if (result == 0) {\n /* Check ifÅhis is ourÅestÖacket */\n if (memcmp(eth_header.dest_mac, dest_nic->mac, ETH_ALEN) == 0 &&\n memcmp(eth_header.src_mac, src_nic->mac, ETH_ALEN) == 0) {\n \n /* VerifyÖayload */\n uint8_t *rx_payload =Ñx_buffer + ETH_HEADER_LEN;\n uint16_tÖayload_length =Ñx_length - ETH_HEADER_LEN;\n \n if (payload_length >= data_size && \n memcmp(rx_payload,Åest_data, data_size) == 0) {\nÜog_info(\"Cross-NICÜoopbackÅest PASSED: NIC %d -> NIC %d\", \n src_nic_index, dest_nic_index);\n hardware_set_promiscuous_mode(dest_nic, false);\nÑeturn 0;\n }Élse {\nÜog_error(\"Cross-NICÖayload mismatch\");\n hardware_set_promiscuous_mode(dest_nic, false);\nÑeturn PACKET_ERR_INVALID_DATA;\n }\n }\n }\n }\n \n /* Brief delay beforeÑetry */\n for (volatile int i = 0; i < 1000; i++);\nÑx_length = sizeof(rx_buffer);\n }\n \nÜog_error(\"Cross-NICÜoopbackÅest TIMEOUT: NIC %d -> NIC %d\", src_nic_index, dest_nic_index);\n hardware_set_promiscuous_mode(dest_nic, false);\nÑeturn PACKET_ERR_TIMEOUT;\n}\n\n/**\n * @brief ComprehensiveÖacket integrity verification duringÜoopback\n * @param original_data OriginalÖacket data\n * @paramÑeceived_data ReceivedÖacket data\n * @param data_length Length of dataÅo compare\n * @param integrity_result PointerÅo store detailed integrityÑesult\n * @return 0 if integrity checkÖassed,Çegative onÉrror\n */\nintÖacket_verify_loopback_integrity(const uint8_t *original_data, const uint8_t *received_data,\n uint16_t data_length,Öacket_integrity_result_t *integrity_result) {\n if (!original_data || !received_data || !integrity_result || data_length == 0) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \n memset(integrity_result, 0, sizeof(packet_integrity_result_t));\n integrity_result->bytes_compared = data_length;\n \n /* Byte-by-byte comparison */\n for (uint16_t i = 0; i < data_length; i++) {\n if (original_data[i] !=Ñeceived_data[i]) {\n integrity_result->mismatch_count++;\n \n /* Store first few mismatches for debugging */\n if (integrity_result->mismatch_count <= MAX_MISMATCH_DETAILS) {\nÖacket_mismatch_detail_t *detail = \n &integrity_result->mismatch_details[integrity_result->mismatch_count - 1];\n detail->offset = i;\n detail->expected = original_data[i];\n detail->actual =Ñeceived_data[i];\n }\n }\n }\n \n /* CalculateÉrror statistics */\n if (integrity_result->mismatch_count > 0) {\n integrity_result->error_rate_percent = \n (integrity_result->mismatch_count * 100) / data_length;\n \n /* AnalyzeÉrrorÖatterns */\nÖacket_analyze_error_patterns(integrity_result);\n \nÜog_error(\"Packet integrity check FAILED: %d mismatches out of %d bytes (%.2f%%)\",\n integrity_result->mismatch_count, data_length, \n (float)integrity_result->error_rate_percent);\n \nÑeturn PACKET_ERR_INTEGRITY_FAILED;\n }\n \nÜog_debug(\"Packet integrity check PASSED: %d bytes verified\", data_length);\nÑeturn 0;\n}\n\n/**\n * @brief EnableÜoopback mode oná NIC\n * @paramÇic NICÅo configure\n * @paramÜoopback_type Type ofÜoopbackÅoÉnable\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_enable_loopback_mode(nic_info_t *nic,Üoopback_type_tÜoopback_type) {\n if (!nic) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \nÜog_debug(\"EnablingÜoopback mode %d on NIC %d\",Üoopback_type,Çic->index);\n \n if (nic->type == NIC_TYPE_3C509B) {\nÑeturnÖacket_enable_3c509b_loopback(nic,Üoopback_type);\n }Élse if (nic->type == NIC_TYPE_3C515_TX) {\nÑeturnÖacket_enable_3c515_loopback(nic,Üoopback_type);\n }\n \nÑeturn PACKET_ERR_NOT_SUPPORTED;\n}\n\n/**\n * @brief DisableÜoopback mode oná NIC\n * @paramÇic NICÅo configure\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_disable_loopback_mode(nic_info_t *nic) {\n if (!nic) {\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \nÜog_debug(\"DisablingÜoopback mode on NIC %d\",Çic->index);\n \n if (nic->type == NIC_TYPE_3C509B) {\nÑeturnÖacket_disable_3c509b_loopback(nic);\n }Élse if (nic->type == NIC_TYPE_3C515_TX) {\nÑeturnÖacket_disable_3c515_loopback(nic);\n }\n \nÑeturn PACKET_ERR_NOT_SUPPORTED;\n}\n\n/**\n * @brief Enable 3C509BÜoopback mode\n * @paramÇic NICÅo configure\n * @paramÜoopback_type Type ofÜoopback\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_enable_3c509b_loopback(nic_info_t *nic,Üoopback_type_tÜoopback_type) {\n uint16_tÑx_filter = 0x01; /* Individualáddress */\n \n _3C509B_SELECT_WINDOW(nic->io_base, _3C509B_WINDOW_0);\n \n switch (loopback_type) {\n case LOOPBACK_INTERNAL:\n /* Set internalÜoopback in RX filter */\nÑx_filter |= 0x08; /* Loopback mode */\n break;\n \n case LOOPBACK_EXTERNAL:\n /* ExternalÜoopbackÑequiresÖhysical connector */\n /* No specialÑegister settingsÇeeded */\n break;\n \n default:\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \n /* Apply RX filter settings */\n outw(nic->io_base + _3C509B_COMMAND_REG, _3C509B_CMD_SET_RX_FILTER |Ñx_filter);\n \n /* Enable TXánd RX */\n outw(nic->io_base + _3C509B_COMMAND_REG, _3C509B_CMD_TX_ENABLE);\n outw(nic->io_base + _3C509B_COMMAND_REG, _3C509B_CMD_RX_ENABLE);\n \nÑeturn 0;\n}\n\n/**\n * @brief Enable 3C515-TXÜoopback mode\n * @paramÇic NICÅo configure\n * @paramÜoopback_type Type ofÜoopback\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_enable_3c515_loopback(nic_info_t *nic,Üoopback_type_tÜoopback_type) {\n _3C515_TX_SELECT_WINDOW(nic->io_base, _3C515_TX_WINDOW_4);\n \n uint16_t media_options = inw(nic->io_base + _3C515_TX_MEDIA_OPTIONS_REG);\n \n switch (loopback_type) {\n case LOOPBACK_INTERNAL:\n /* Enable internalÜoopback */\n media_options |= 0x0008; /* InternalÜoopback bit */\n break;\n \n case LOOPBACK_EXTERNAL:\n /* Disable internalÜoopback forÉxternalÅesting */\n media_options &= ~0x0008;\n break;\n \n default:\nÑeturn PACKET_ERR_INVALID_PARAM;\n }\n \n outw(nic->io_base + _3C515_TX_MEDIA_OPTIONS_REG, media_options);\n \n /* Enable TXánd RX */\n _3C515_TX_SELECT_WINDOW(nic->io_base, _3C515_TX_WINDOW_1);\n outw(nic->io_base + _3C515_TX_COMMAND_REG, _3C515_TX_CMD_TX_ENABLE);\n outw(nic->io_base + _3C515_TX_COMMAND_REG, _3C515_TX_CMD_RX_ENABLE);\n \nÑeturn 0;\n}\n\n/**\n * @brief Disable 3C509BÜoopback mode\n * @paramÇic NICÅo configure\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_disable_3c509b_loopback(nic_info_t *nic) {\n _3C509B_SELECT_WINDOW(nic->io_base, _3C509B_WINDOW_0);\n \n /* ResetÅoÇormal RX filter (individual + broadcast) */\n uint16_tÑx_filter = 0x01 | 0x02; /* Individual + broadcast */\n outw(nic->io_base + _3C509B_COMMAND_REG, _3C509B_CMD_SET_RX_FILTER |Ñx_filter);\n \nÑeturn 0;\n}\n\n/**\n * @brief Disable 3C515-TXÜoopback mode\n * @paramÇic NICÅo configure\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_disable_3c515_loopback(nic_info_t *nic) {\n _3C515_TX_SELECT_WINDOW(nic->io_base, _3C515_TX_WINDOW_4);\n \n /* Disable internalÜoopback */\n uint16_t media_options = inw(nic->io_base + _3C515_TX_MEDIA_OPTIONS_REG);\n media_options &= ~0x0008; /* Clear internalÜoopback bit */\n outw(nic->io_base + _3C515_TX_MEDIA_OPTIONS_REG, media_options);\n \nÑeturn 0;\n}\n\n/**\n * @brief Testá singleÜoopbackÖattern\n * @paramÇic_index NICÅoÅest\n * @paramÖattern TestÖatternÅo use\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÖacket_test_single_loopback_pattern(intÇic_index, constÜoopback_test_pattern_t *pattern) {\n uint8_tÑx_buffer[ETH_MAX_FRAME];\n size_tÑx_length;\nÖacket_integrity_result_t integrity_result;\n intÑesult;\n uint32_tÅimeout_ms =Öattern->timeout_ms ?Öattern->timeout_ms : 1000;\n uint32_t start_time;\n \n /* SendÅestÖattern */\nÑesult =Öacket_test_internal_loopback(nic_index,Öattern->data,Öattern->size);\n if (result != 0) {\nÑeturnÑesult;\n }\n \nÑeturn 0; /* Success if internalÜoopbackÖassed */\n}\n\n/**\n * @brief AnalyzeÉrrorÖatterns inÑeceived data\n * @param integrity_result IntegrityÑesultÅoánalyze\n */\nstatic voidÖacket_analyze_error_patterns(packet_integrity_result_t *integrity_result) {\n if (!integrity_result || integrity_result->mismatch_count == 0) {\nÑeturn;\n }\n \n /* Look for commonÉrrorÖatterns */\n int bit_errors = 0;\n int byte_shifts = 0;\n int burst_errors = 0;\n \n for (int i = 0; i < integrity_result->mismatch_count && i < MAX_MISMATCH_DETAILS; i++) {\nÖacket_mismatch_detail_t *detail = &integrity_result->mismatch_details[i];\n uint8_t xor_result = detail->expected ^ detail->actual;\n \n /* Count bitÉrrors */\n int bits_different = 0;\n for (int bit = 0; bit < 8; bit++) {\n if (xor_result & (1 << bit)) {\n bits_different++;\n }\n }\n \n if (bits_different == 1) {\n bit_errors++;\n }\n \n /* Check for byte shiftÖatterns */\n if (i > 0) {\nÖacket_mismatch_detail_t *prev = &integrity_result->mismatch_details[i - 1];\n if (detail->offset ==Örev->offset + 1) {\n burst_errors++;\n }\n }\n }\n \n /* StoreÖatternánalysisÑesults */\n integrity_result->single_bit_errors = bit_errors;\n integrity_result->burst_errors = burst_errors;\n \n /* DetermineÜikelyÉrror cause */\n if (bit_errors > burst_errors) {\n strcpy(integrity_result->error_pattern_description, \"Single-bitÉrrors (electricalÇoise)\");\n }Élse if (burst_errors > 0) {\n strcpy(integrity_result->error_pattern_description, \"BurstÉrrors (synchronization issue)\");\n }Élse {\n strcpy(integrity_result->error_pattern_description, \"Random data corruption\");\n }\n}\n\n/**\n * @brief RouteÖacketÅoánother interface\n * @paramÖacket Packet data\n * @paramÜength PacketÜength\n * @param dest_nic Destination NIC index\n * @return 0 on success,Çegative onÉrror\n */\nstatic intÑoute_packet_to_interface(const uint8_t *packet, uint16_tÜength, uint8_t dest_nic) {

1964 
nic_öfo_t
 *
nic
;

1965 
ù_addr_t
 
de°_ù
;

1966 
uöt8_t
 
de°_mac
[
ETH_ALEN
];

1967 
uöt8_t
 
nic_ödex
;

1968 
ªsu…
;

1970 i‡(!
∑ckë
 || 
Àngth
 == 0) {

1971  
ERROR_INVALID_PARAM
;

1975 
nic
 = 
	`h¨dw¨e_gë_nic
(
de°_nic
);

1976 i‡(!
nic
 || !“ic->
°©us
 & 
NIC_STATUS_ACTIVE
)) {

1977 
	`log_îr‹
("De°ö©i⁄ NIC %dÇŸá˘ive", 
de°_nic
);

1978  
ERROR_INVALID_PARAM
;

1982 i‡(
	`∑ckë_gë_ëhîty≥
(
∑ckë
Ë=
ETH_P_IP
) {

1984 c⁄° 
uöt8_t
 *
ù_hódî
 = 
∑ckë
 + 
ETH_HEADER_LEN
;

1985 
	`mem‹y_c›y
(
de°_ù
.
addr
, 
ù_hódî
 + 16, 4);

1988 i‡(
	`¨p_is_íabÀd
()) {

1989 
ªsu…
 = 
	`¨p_ªsﬁve
(&
de°_ù
, 
de°_mac
, &
nic_ödex
);

1990 i‡(
ªsu…
 =
SUCCESS
) {

1992 
uöt8_t
 *
muèbÀ_∑ckë
 = (uöt8_t*)
∑ckë
;

1993 
	`mem‹y_c›y
(
muèbÀ_∑ckë
, 
de°_mac
, 
ETH_ALEN
);

1996 
	`mem‹y_c›y
(
muèbÀ_∑ckë
 + 
ETH_ALEN
, 
nic
->
mac
, ETH_ALEN);

1997 } i‡(
ªsu…
 =
ERROR_BUSY
) {

1999 
	`log_debug
("ARPÑesolutionÖending forÑouting, droppingÖacket");

2000  
ERROR_BUSY
;

2003 
	`log_w¨nög
("ARPÑesolution failed forÑouting, droppingÖacket");

2004  
ERROR_NOT_FOUND
;

2010 
ªsu…
 = 
	`h¨dw¨e_£nd_∑ckë
(
nic
, 
∑ckë
, 
Àngth
);

2011 i‡(
ªsu…
 < 0) {

2012 
	`log_îr‹
("FaûedÅÿ£ndÑouãdÖackë o¿NIC %d: %d", 
de°_nic
, 
ªsu…
);

2013  
ªsu…
;

2016 
	`log_debug
("Suc˚ssfuŒyÑouãdÖackëÅÿNIC %d", 
de°_nic
);

2017  
SUCCESS
;

2020 
	`∑ckë_›s_˛ónup
() {

2021 i‡(!
∑ckë_›s_öôülized
) {

2025 
	`log_öfo
("Cleaning upÖacket operations subsystem");

2028 
	`∑ckë_queue_˛ónup_Æl
();

2031 
	`log_öfo
("FinalÖacket statistics:");

2032 
	`log_öfo
(" TX: %luÖackets, %lu bytes, %luÉrrors",

2033 
∑ckë_°©i°ics
.
tx_∑ckës
,

2034 
∑ckë_°©i°ics
.
tx_byãs
,

2035 
∑ckë_°©i°ics
.
tx_îr‹s
);

2036 
	`log_öfo
(" RX: %luÖackets, %lu bytes, %luÉrrors, %lu dropped",

2037 
∑ckë_°©i°ics
.
rx_∑ckës
,

2038 
∑ckë_°©i°ics
.
rx_byãs
,

2039 
∑ckë_°©i°ics
.
rx_îr‹s
,

2040 
∑ckë_°©i°ics
.
rx_dr›≥d
);

2043 
	`log_öfo
("Queue Statistics:");

2044 
	`log_öfo
(" QueuêfuŒÉvíts: %lu", 
g_queue_°©e
.
queue_fuŒ_evíts
);

2045 
	`log_öfo
(" Back¥essuªÉvíts: %lu", 
g_queue_°©e
.
back¥essuª_evíts
);

2046 
	`log_öfo
(" Pri‹ôy dr›s: %lu", 
g_queue_°©e
.
¥i‹ôy_dr›s
);

2047 
	`log_öfo
(" Ad≠tivêªsizes: %lu", 
g_queue_°©e
.
ad≠tive_ªsizes
);

2049 
∑ckë_›s_öôülized
 = 0;

2051 
	`log_öfo
("Packet operations cleanup completed");

2059 
	`∑ckë_queue_öô_Æl
() {

2060 
ªsu…
;

2062 
	`log_öfo
("InitializingÖroductionÖacket queues");

2065 
ªsu…
 = 
	`∑ckë_queue_öô
(&
g_queue_°©e
.
tx_queues
[
PACKET_PRIORITY_URGENT
],

2066 
TX_QUEUE_URGENT_SIZE
, TX_QUEUE_URGENT_SIZE * 1514);

2067 i‡(
ªsu…
 != 0) {

2068 
	`log_îr‹
("FailedÅo initialize urgent TX queue");

2069  
ªsu…
;

2072 
ªsu…
 = 
	`∑ckë_queue_öô
(&
g_queue_°©e
.
tx_queues
[
PACKET_PRIORITY_HIGH
],

2073 
TX_QUEUE_HIGH_SIZE
, TX_QUEUE_HIGH_SIZE * 1514);

2074 i‡(
ªsu…
 != 0) {

2075 
	`log_îr‹
("FailedÅo initialize highÖriority TX queue");

2076  
ªsu…
;

2079 
ªsu…
 = 
	`∑ckë_queue_öô
(&
g_queue_°©e
.
tx_queues
[
PACKET_PRIORITY_NORMAL
],

2080 
TX_QUEUE_NORMAL_SIZE
, TX_QUEUE_NORMAL_SIZE * 1514);

2081 i‡(
ªsu…
 != 0) {

2082 
	`log_îr‹
("FailedÅo initializeÇormalÖriority TX queue");

2083  
ªsu…
;

2086 
ªsu…
 = 
	`∑ckë_queue_öô
(&
g_queue_°©e
.
tx_queues
[
PACKET_PRIORITY_LOW
],

2087 
TX_QUEUE_LOW_SIZE
, TX_QUEUE_LOW_SIZE * 1514);

2088 i‡(
ªsu…
 != 0) {

2089 
	`log_îr‹
("FailedÅo initializeÜowÖriority TX queue");

2090  
ªsu…
;

2094 
ªsu…
 = 
	`∑ckë_queue_öô
(&
g_queue_°©e
.
rx_queue
,

2095 
RX_QUEUE_SIZE
, RX_QUEUE_SIZE * 1514);

2096 i‡(
ªsu…
 != 0) {

2097 
	`log_îr‹
("FailedÅo initialize RX queue");

2098  
ªsu…
;

2101 
	`log_öfo
("ProductionÖacket queues initialized successfully");

2108 
	`∑ckë_queue_˛ónup_Æl
() {

2109 
	`log_öfo
("Cleaning upÖroductionÖacket queues");

2112 
	`∑ckë_emîgícy_queue_døö
();

2115 
i
 = 0; i < 4; i++) {

2116 
	`∑ckë_queue_˛ónup
(&
g_queue_°©e
.
tx_queues
[
i
]);

2120 
	`∑ckë_queue_˛ónup
(&
g_queue_°©e
.
rx_queue
);

2122 
	`log_öfo
("ProductionÖacket queues cleaned up");

2131 
	`∑ckë_íqueue_wôh_¥i‹ôy
(
∑ckë_buf„r_t
 *
buf„r
, 
¥i‹ôy
) {

2132 
∑ckë_queue_t
 *
queue
;

2133 
ªsu…
;

2134 
uöt32_t
 
queue_ußge
;

2136 i‡(!
buf„r
 || 
¥i‹ôy
 < 0 ||Öriority > 3) {

2137  
PACKET_ERR_INVALID_PARAM
;

2140 
queue
 = &
g_queue_°©e
.
tx_queues
[
¥i‹ôy
];

2141 
queue_ußge
 = 
	`∑ckë_ˇlcuœã_queue_ußge
(
queue
);

2144 i‡(
	`∑ckë_queue_is_fuŒ
(
queue
)) {

2145 
	`log_debug
("Queuê%d fuŒ, checkög dr›Öﬁicy", 
¥i‹ôy
);

2147 i‡(
	`∑ckë_should_dr›_⁄_fuŒ
(
¥i‹ôy
, 
queue_ußge
)) {

2149 
	`∑ckë_h™dÀ_queue_ovîÊow
(
¥i‹ôy
);

2152 i‡(
	`∑ckë_queue_is_fuŒ
(
queue
)) {

2153 
g_queue_°©e
.
queue_fuŒ_evíts
++;

2154 
g_queue_°©e
.
¥i‹ôy_dr›s
++;

2155 
	`log_w¨nög
("Dr›pögÖackë duêtÿqueuê%d ovîÊow", 
¥i‹ôy
);

2156  
PACKET_ERR_NO_BUFFERS
;

2159 
g_queue_°©e
.
queue_fuŒ_evíts
++;

2160  
PACKET_ERR_NO_BUFFERS
;

2165 i‡(
queue_ußge
 > 
FLOW_CONTROL_THRESHOLD
) {

2166 i‡(!
g_queue_°©e
.
Êow_c⁄åﬁ_a˘ive
) {

2167 
	`log_öfo
("A˘iv©ög flow c⁄åﬁ - queuêußgê%d%%", 
queue_ußge
);

2168 
g_queue_°©e
.
Êow_c⁄åﬁ_a˘ive
 = 
åue
;

2169 
g_queue_°©e
.
back¥essuª_evíts
++;

2171 
	`∑ckë_≠∂y_Êow_c⁄åﬁ
();

2175 
__asm__
 
	`__vﬁ©ûe__
("cli");

2176 
ªsu…
 = 
	`∑ckë_queue_íqueue
(
queue
, 
buf„r
);

2177 
__asm__
 
	`__vﬁ©ûe__
("sti");

2178 i‡(
ªsu…
 != 0) {

2179 
	`log_îr‹
("FaûedÅÿíqueuê∑ckëÅÿ¥i‹ôy queuê%d", 
¥i‹ôy
);

2180  
ªsu…
;

2183 
	`log_åa˚
("EnqueuedÖackëÅÿ¥i‹ôy %d queuê(ußge: %d%%)", 
¥i‹ôy
, 
queue_ußge
);

2191 
∑ckë_buf„r_t
* 
	`∑ckë_dequeue_by_¥i‹ôy
() {

2192 
∑ckë_buf„r_t
 *
buf„r
 = 
NULL
;

2195 
¥i‹ôy
 = 
PACKET_PRIORITY_URGENT
;Öri‹ôy >
PACKET_PRIORITY_LOW
;Öriority--) {

2196 i‡(!
	`∑ckë_queue_is_em±y
(&
g_queue_°©e
.
tx_queues
[
¥i‹ôy
])) {

2198 
__asm__
 
	`__vﬁ©ûe__
("cli");

2199 
buf„r
 = 
	`∑ckë_queue_dequeue
(&
g_queue_°©e
.
tx_queues
[
¥i‹ôy
]);

2200 
__asm__
 
	`__vﬁ©ûe__
("sti");

2201 i‡(
buf„r
) {

2202 
	`log_åa˚
("DequeuedÖackë fromÖri‹ôy %d queue", 
¥i‹ôy
);

2205 
uöt32_t
 
tŸÆ_ußge
 = 0;

2206 
i
 = 0; i < 4; i++) {

2207 
tŸÆ_ußge
 +
	`∑ckë_ˇlcuœã_queue_ußge
(&
g_queue_°©e
.
tx_queues
[
i
]);

2210 i‡(
g_queue_°©e
.
Êow_c⁄åﬁ_a˘ive
 && 
tŸÆ_ußge
 < 
QUEUE_WATERMARK_LOW
) {

2211 
	`log_öfo
("Dó˘iv©ög flow c⁄åﬁ -ÅŸÆ ußgê%d%%", 
tŸÆ_ußge
 / 4);

2212 
g_queue_°©e
.
Êow_c⁄åﬁ_a˘ive
 = 
Ál£
;

2215  
buf„r
;

2220  
NULL
;

2227 
	`∑ckë_check_queue_hó…h
() {

2228 
uöt32_t
 
cuºít_time
 = 
	`°©s_gë_time°amp
();

2229 
boﬁ
 
hó…h_issues
 = 
Ál£
;

2232 i‡(
cuºít_time
 - 
g_queue_°©e
.
œ°_queue_check
 < 
QUEUE_CHECK_INTERVAL_MS
) {

2236 
g_queue_°©e
.
œ°_queue_check
 = 
cuºít_time
;

2239 
i
 = 0; i < 4; i++) {

2240 
∑ckë_queue_t
 *
queue
 = &
g_queue_°©e
.
tx_queues
[
i
];

2241 
uöt32_t
 
ußge
 = 
	`∑ckë_ˇlcuœã_queue_ußge
(
queue
);

2243 i‡(
ußge
 > 
QUEUE_WATERMARK_HIGH
) {

2244 
	`log_w¨nög
("Queuê%d ußgêhigh: %d%%", 
i
, 
ußge
);

2245 
hó…h_issues
 = 
åue
;

2249 i‡(
queue
->
cou¡
 > 0) {

2250 
∑ckë_buf„r_t
 *
hód
 = 
	`∑ckë_queue_≥ek
(
queue
);

2251 i‡(
hód
 && hód->
time°amp
 > 0) {

2252 
uöt32_t
 
age
 = 
cuºít_time
 - 
hód
->
time°amp
;

2253 i‡(
age
 > 5000) {

2254 
	`log_w¨nög
("SèÀÖackë†dëe˘ed i¿queuê%d (age: %dms)", 
i
, 
age
);

2255 
hó…h_issues
 = 
åue
;

2262 
uöt32_t
 
rx_ußge
 = 
	`∑ckë_ˇlcuœã_queue_ußge
(&
g_queue_°©e
.
rx_queue
);

2263 i‡(
rx_ußge
 > 
QUEUE_WATERMARK_HIGH
) {

2264 
	`log_w¨nög
("RX queuêußgêhigh: %d%%", 
rx_ußge
);

2265 
hó…h_issues
 = 
åue
;

2269 i‡(
hó…h_issues
) {

2270 
	`∑ckë_ad≠tive_queue_ªsize
();

2273  
hó…h_issues
 ? 1 : 0;

2279 
	`∑ckë_≠∂y_Êow_c⁄åﬁ
() {

2287 
	`log_debug
("Applying flow control backpressure");

2290 vﬁ©ûê
i
 = 0; i < 100; i++) {

2298 
	`∑ckë_ad≠tive_queue_ªsize
() {

2299 
uöt32_t
 
œ°_ªsize
 = 0;

2300 
uöt32_t
 
cuºít_time
 = 
	`°©s_gë_time°amp
();

2303 i‡(
cuºít_time
 - 
œ°_ªsize
 < 10000) {

2307 
œ°_ªsize
 = 
cuºít_time
;

2309 
	`log_öfo
("Performingádaptive queueÑesizeánalysis");

2312 
i
 = 0; i < 4; i++) {

2313 
∑ckë_queue_t
 *
queue
 = &
g_queue_°©e
.
tx_queues
[
i
];

2314 
uöt32_t
 
ußge
 = 
	`∑ckë_ˇlcuœã_queue_ußge
(
queue
);

2316 i‡(
ußge
 > 90 && 
queue
->
max_cou¡
 < 512) {

2318 
	`log_öfo
("Queuê%d c⁄si°íéy fuŒ (%d%%), wouldÉx∑nd i‡possibÀ", 
i
, 
ußge
);

2320 
g_queue_°©e
.
ad≠tive_ªsizes
++;

2321 } i‡(
ußge
 < 10 && 
queue
->
max_cou¡
 > 32) {

2323 
	`log_öfo
("Queuê%d undîutûized (%d%%), would shrök i‡possibÀ", 
i
, 
ußge
);

2324 
g_queue_°©e
.
ad≠tive_ªsizes
++;

2333 
	`∑ckë_h™dÀ_queue_ovîÊow
(
¥i‹ôy
) {

2334 
dr›≥d
 = 0;

2337 
lowî_¥i‹ôy
 = 
PACKET_PRIORITY_LOW
;Üowî_¥i‹ôy < 
¥i‹ôy
;Üower_priority++) {

2338 
∑ckë_queue_t
 *
lowî_queue
 = &
g_queue_°©e
.
tx_queues
[
lowî_¥i‹ôy
];

2340 !
	`∑ckë_queue_is_em±y
(
lowî_queue
Ë&& 
dr›≥d
 < 5) {

2341 
∑ckë_buf„r_t
 *
dr›≥d_buf„r
 = 
	`∑ckë_queue_dequeue
(
lowî_queue
);

2342 i‡(
dr›≥d_buf„r
) {

2343 
	`∑ckë_buf„r_‰ì
(
dr›≥d_buf„r
);

2344 
dr›≥d
++;

2345 
g_queue_°©e
.
¥i‹ôy_dr›s
++;

2349 i‡(
dr›≥d
 >= 5) ;

2352 i‡(
dr›≥d
 > 0) {

2353 
	`log_öfo
("Dr›≥d %dÜowîÖri‹ôyÖackë†tÿmakêroom f‹Öri‹ôy %d", 
dr›≥d
, 
¥i‹ôy
);

2363 
boﬁ
 
	`∑ckë_should_dr›_⁄_fuŒ
(
¥i‹ôy
, 
queue_ußge
) {

2365 
¥i‹ôy
) {

2366 
PACKET_PRIORITY_URGENT
:

2367  
åue
;

2368 
PACKET_PRIORITY_HIGH
:

2369  
queue_ußge
 > 95;

2370 
PACKET_PRIORITY_NORMAL
:

2371  
queue_ußge
 > 90;

2372 
PACKET_PRIORITY_LOW
:

2373  
Ál£
;

2375  
Ál£
;

2384 
uöt32_t
 
	`∑ckë_ˇlcuœã_queue_ußge
(
∑ckë_queue_t
 *
queue
) {

2385 i‡(!
queue
 || queue->
max_cou¡
 == 0) {

2389  (
queue
->
cou¡
 * 100Ë/ queue->
max_cou¡
;

2395 
	`∑ckë_upd©e_queue_°©s
() {

2404 
	`∑ckë_emîgícy_queue_døö
() {

2405 
tŸÆ_døöed
 = 0;

2407 
	`log_w¨nög
("Emergency drainingállÖacket queues");

2410 
i
 = 0; i < 4; i++) {

2411 
∑ckë_queue_t
 *
queue
 = &
g_queue_°©e
.
tx_queues
[
i
];

2412 
døöed
 = 0;

2414 !
	`∑ckë_queue_is_em±y
(
queue
)) {

2415 
∑ckë_buf„r_t
 *
buf„r
 = 
	`∑ckë_queue_dequeue
(
queue
);

2416 i‡(
buf„r
) {

2417 
	`∑ckë_buf„r_‰ì
(
buf„r
);

2418 
døöed
++;

2422 i‡(
døöed
 > 0) {

2423 
	`log_öfo
("Døöed %dÖackë†‰om TX queuê%d", 
døöed
, 
i
);

2424 
tŸÆ_døöed
 +
døöed
;

2429 
rx_døöed
 = 0;

2430 !
	`∑ckë_queue_is_em±y
(&
g_queue_°©e
.
rx_queue
)) {

2431 
∑ckë_buf„r_t
 *
buf„r
 = 
	`∑ckë_queue_dequeue
(&
g_queue_°©e
.
rx_queue
);

2432 i‡(
buf„r
) {

2433 
	`∑ckë_buf„r_‰ì
(
buf„r
);

2434 
rx_døöed
++;

2438 i‡(
rx_døöed
 > 0) {

2439 
	`log_öfo
("Døöed %dÖackë†‰om RX queue", 
rx_døöed
);

2440 
tŸÆ_døöed
 +
rx_døöed
;

2443 
	`log_öfo
("Emîgícy døö com∂ëed: %dÅŸÆÖackë†døöed", 
tŸÆ_døöed
);

2444  
tŸÆ_døöed
;

2455 
	`∑ckë_queue_tx_íh™˚d
(c⁄° 
uöt8_t
 *
∑ckë
, 
size_t
 
Àngth
, 
¥i‹ôy
, 
uöt16_t
 
h™dÀ
) {

2456 
∑ckë_buf„r_t
 *
buf„r
;

2457 
ªsu…
;

2459 i‡(!
∑ckë
 || 
Àngth
 =0 || 
¥i‹ôy
 < 0 ||Öriority > 3) {

2460  
PACKET_ERR_INVALID_PARAM
;

2463 i‡(!
∑ckë_›s_öôülized
) {

2464  
PACKET_ERR_NOT_INITIALIZED
;

2468 
	`∑ckë_check_queue_hó…h
();

2471 
buf„r
 = 
	`∑ckë_buf„r_Æloc
(
Àngth
);

2472 i‡(!
buf„r
) {

2473 
	`log_îr‹
("FailedÅoállocateÖacket buffer for queuing");

2474  
PACKET_ERR_NO_BUFFERS
;

2478 
ªsu…
 = 
	`∑ckë_£t_d©a
(
buf„r
, 
∑ckë
, 
Àngth
);

2479 i‡(
ªsu…
 != 0) {

2480 
	`∑ckë_buf„r_‰ì
(
buf„r
);

2481  
ªsu…
;

2484 
buf„r
->
¥i‹ôy
 =Öriority;

2485 
buf„r
->
h™dÀ
 = handle;

2486 
buf„r
->
time°amp
 = 
	`°©s_gë_time°amp
();

2489 
ªsu…
 = 
	`∑ckë_íqueue_wôh_¥i‹ôy
(
buf„r
, 
¥i‹ôy
);

2490 i‡(
ªsu…
 != 0) {

2491 
	`∑ckë_buf„r_‰ì
(
buf„r
);

2492  
ªsu…
;

2495 
	`log_debug
("QueuedÖacket forÅransmission:Öriority=%d,Üength=%zu, handle=%04X",

2496 
¥i‹ôy
, 
Àngth
, 
h™dÀ
);

2505 
	`∑ckë_Êush_tx_queue_íh™˚d
() {

2506 
∑ckës_£¡
 = 0;

2507 
max_∑ckës
 = 32;

2508 
∑ckë_buf„r_t
 *
buf„r
;

2509 
ªsu…
;

2511 i‡(!
∑ckë_›s_öôülized
) {

2512  
PACKET_ERR_NOT_INITIALIZED
;

2516 
∑ckës_£¡
 < 
max_∑ckës
) {

2517 
buf„r
 = 
	`∑ckë_dequeue_by_¥i‹ôy
();

2518 i‡(!
buf„r
) {

2523 
ªsu…
 = 
	`∑ckë_£nd_wôh_ªåy
(
buf„r
->
d©a
, buf„r->
Àngth
,

2524 
NULL
, 
buf„r
->
h™dÀ
, 3);

2526 i‡(
ªsu…
 == 0) {

2527 
∑ckës_£¡
++;

2528 
	`log_åa˚
("Suc˚ssfuŒy síàqueuedÖackë (h™dÀ=%04X)", 
buf„r
->
h™dÀ
);

2530 
	`log_w¨nög
("FaûedÅÿ£nd queuedÖackë: %d", 
ªsu…
);

2535 
	`∑ckë_buf„r_‰ì
(
buf„r
);

2538 i‡(
∑ckës_£¡
 > 0) {

2539 
	`log_debug
("Flushed %dÖackë†‰om TX queues", 
∑ckës_£¡
);

2542  
∑ckës_£¡
;

2550 
	`∑ckë_gë_queue_°©s
(
∑ckë_queue_m™agemít_°©s_t
 *
°©s
) {

2551 i‡(!
°©s
) {

2552  
PACKET_ERR_INVALID_PARAM
;

2555 
	`mem£t
(
°©s
, 0, (
∑ckë_queue_m™agemít_°©s_t
));

2558 
i
 = 0; i < 4; i++) {

2559 
°©s
->
tx_queue_cou¡s
[
i
] = 
g_queue_°©e
.
tx_queues
[i].
cou¡
;

2560 
°©s
->
tx_queue_max
[
i
] = 
g_queue_°©e
.
tx_queues
[i].
max_cou¡
;

2561 
°©s
->
tx_queue_ußge
[
i
] = 
	`∑ckë_ˇlcuœã_queue_ußge
(&
g_queue_°©e
.
tx_queues
[i]);

2562 
°©s
->
tx_queue_dr›≥d
[
i
] = 
g_queue_°©e
.
tx_queues
[i].
dr›≥d_∑ckës
;

2565 
°©s
->
rx_queue_cou¡
 = 
g_queue_°©e
.
rx_queue
.
cou¡
;

2566 
°©s
->
rx_queue_max
 = 
g_queue_°©e
.
rx_queue
.
max_cou¡
;

2567 
°©s
->
rx_queue_ußge
 = 
	`∑ckë_ˇlcuœã_queue_ußge
(&
g_queue_°©e
.
rx_queue
);

2568 
°©s
->
rx_queue_dr›≥d
 = 
g_queue_°©e
.
rx_queue
.
dr›≥d_∑ckës
;

2571 
°©s
->
queue_fuŒ_evíts
 = 
g_queue_°©e
.queue_full_events;

2572 
°©s
->
back¥essuª_evíts
 = 
g_queue_°©e
.backpressure_events;

2573 
°©s
->
¥i‹ôy_dr›s
 = 
g_queue_°©e
.priority_drops;

2574 
°©s
->
ad≠tive_ªsizes
 = 
g_queue_°©e
.adaptive_resizes;

2575 
°©s
->
Êow_c⁄åﬁ_a˘ive
 = 
g_queue_°©e
.flow_control_active;

2581 #¥agm®
	`code_£g
()

	@/Users/jvindahl/Development/3com-packet-driver/src/c/promisc.c

11 
	~"../ö˛ude/¥omisc.h
"

12 
	~"../ö˛ude/3c509b.h
"

13 
	~"../ö˛ude/3c515.h
"

14 
	~"../ö˛ude/loggög.h
"

15 
	~"../ö˛ude/mem‹y.h
"

16 
	~"../ö˛ude/dügno°ics.h
"

17 
	~"../ö˛ude/routög.h
"

18 
	~"../ö˛ude/≠i.h
"

19 
	~<°rög.h
>

22 
¥omisc_c⁄fig_t
 
	gg_¥omisc_c⁄fig
;

23 
¥omiscuous_°©s_t
 
	gg_¥omisc_°©s
;

24 
¥omisc_∑ckë_buf„r_t
 
	gg_¥omisc_buf„rs
[
PROMISC_BUFFER_COUNT
];

25 
¥omisc_fûãr_t
 
	gg_¥omisc_fûãrs
[
PROMISC_MAX_FILTERS
];

26 
¥omisc_≠p_h™dÀ_t
 
	gg_¥omisc_≠ps
[
PROMISC_MAX_APPLICATIONS
];

27 vﬁ©ûê
uöt32_t
 
	gg_¥omisc_buf„r_hód
 = 0;

28 vﬁ©ûê
uöt32_t
 
	gg_¥omisc_buf„r_èû
 = 0;

31 
boﬁ
 
	gg_¥omisc_öôülized
 = 
Ál£
;

32 
uöt16_t
 
	gg_√xt_h™dÀ_id
 = 1;

33 
uöt32_t
 
	gg_∑ckë_cou¡î
 = 0;

36 
uöt32_t
 
¥omisc_gë_time°amp
();

37 
boﬁ
 
¥omisc_buf„r_is_fuŒ
();

38 
boﬁ
 
¥omisc_buf„r_is_em±y
();

39 
uöt32_t
 
¥omisc_adv™˚_buf„r_ödex
(uöt32_à
ödex
);

40 
¥omisc_add_buf„r_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
,

41 
uöt8_t
 
nic_ödex
, uöt8_à
fûãr_m©ched
);

42 
boﬁ
 
¥omisc_check_fûãr_m©ch
(c⁄° 
¥omisc_fûãr_t
 *
fûãr
,

43 c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
);

44 
¥omisc_˛assify_™d_upd©e_°©s
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
);

47 
	$¥omisc_öô
() {

48 i‡(
g_¥omisc_öôülized
) {

49  
SUCCESS
;

52 
	`LOG_INFO
("InitializingÖromiscuous mode system");

55 
	`mem£t
(&
g_¥omisc_c⁄fig
, 0, (
¥omisc_c⁄fig_t
));

56 
g_¥omisc_c⁄fig
.
Àvñ
 = 
PROMISC_LEVEL_OFF
;

57 
g_¥omisc_c⁄fig
.
íabÀd
 = 
Ál£
;

58 
g_¥omisc_c⁄fig
.
buf„r_cou¡
 = 
PROMISC_BUFFER_COUNT
;

59 
g_¥omisc_c⁄fig
.
ˇ±uª_timeout_ms
 = 5000;

60 
g_¥omisc_c⁄fig
.
À¨nög_mode
 = 
åue
;

61 
g_¥omisc_c⁄fig
.
öãgøti⁄_mode
 = 
åue
;

64 
	`¥omisc_˛ór_°©s
();

67 
	`mem£t
(
g_¥omisc_buf„rs
, 0, (g_promisc_buffers));

68 
g_¥omisc_buf„r_hód
 = 0;

69 
g_¥omisc_buf„r_èû
 = 0;

72 
	`mem£t
(
g_¥omisc_fûãrs
, 0, (g_promisc_filters));

75 
	`mem£t
(
g_¥omisc_≠ps
, 0, (g_promisc_apps));

77 
g_¥omisc_öôülized
 = 
åue
;

79 
	`LOG_INFO
("Promiscuous mode system initialized successfully");

81  
SUCCESS
;

82 
	}
}

84 
	$¥omisc_˛ónup
() {

85 i‡(!
g_¥omisc_öôülized
) {

89 
	`LOG_INFO
("Cleaning upÖromiscuous mode system");

92 
i
 = 0; i < 
	`h¨dw¨e_gë_nic_cou¡
(); i++) {

93 
nic_öfo_t
 *
nic
 = 
	`h¨dw¨e_gë_nic
(
i
);

94 i‡(
nic
 && 
	`¥omisc_is_íabÀd
(nic)) {

95 
	`¥omisc_dißbÀ
(
nic
);

100 
	`¥omisc_˛ór_fûãrs
();

102 
i
 = 0; i < 
PROMISC_MAX_APPLICATIONS
; i++) {

103 i‡(
g_¥omisc_≠ps
[
i
].
a˘ive
) {

104 
	`¥omisc_uƒegi°î_≠∂iˇti⁄
(
g_¥omisc_≠ps
[
i
].
h™dÀ_id
);

108 
g_¥omisc_öôülized
 = 
Ál£
;

110 
	`LOG_INFO
("Promiscuous mode system cleaned up");

111 
	}
}

113 
	$¥omisc_íabÀ
(
nic_öfo_t
 *
nic
, 
¥omisc_Àvñ_t
 
Àvñ
) {

114 i‡(!
g_¥omisc_öôülized
 || !
nic
) {

115  
ERROR_INVALID_PARAM
;

118 
	`LOG_INFO
("E«blögÖromiscuou†modêÀvñ %d o¿NIC %d", 
Àvñ
, 
nic
->
ödex
);

121 i‡(!(
nic
->
ˇ∑bûôõs
 & 
HW_CAP_PROMISCUOUS
)) {

122 
	`LOG_ERROR
("NIC %d d€†nŸ suµ‹à¥omiscuou†mode", 
nic
->
ödex
);

123  
ERROR_NOT_SUPPORTED
;

126 
ªsu…
 = 
ERROR_NOT_SUPPORTED
;

129 
nic
->
ty≥
) {

130 
NIC_TYPE_3C509B
:

131 
ªsu…
 = 
	`¥omisc_íabÀ_3c509b
(
nic
, 
Àvñ
);

133 
NIC_TYPE_3C515_TX
:

134 
ªsu…
 = 
	`¥omisc_íabÀ_3c515
(
nic
, 
Àvñ
);

137 
	`LOG_ERROR
("Unsuµ‹ãd NICÅy≥ %d f‹Öromiscuou†mode", 
nic
->
ty≥
);

138  
ERROR_NOT_SUPPORTED
;

141 i‡(
ªsu…
 =
SUCCESS
) {

143 
nic
->
°©us
 |
NIC_STATUS_PROMISCUOUS
;

146 
g_¥omisc_c⁄fig
.
íabÀd
 = 
åue
;

147 
g_¥omisc_c⁄fig
.
Àvñ
 =Üevel;

148 
g_¥omisc_c⁄fig
.
a˘ive_nic_mask
 |(1 << 
nic
->
ödex
);

151 i‡(
g_¥omisc_c⁄fig
.
öãgøti⁄_mode
) {

152 
	`¥omisc_öãgøã_routög
();

153 
	`¥omisc_öãgøã_≠i
();

154 
	`¥omisc_öãgøã_dügno°ics
();

157 
	`LOG_INFO
("Promiscuou†modêíabÀd suc˚ssfuŒy o¿NIC %d", 
nic
->
ödex
);

159 
	`LOG_ERROR
("FaûedÅÿíabÀÖromiscuou†modê⁄ NIC %d: %d", 
nic
->
ödex
, 
ªsu…
);

162  
ªsu…
;

163 
	}
}

165 
	$¥omisc_dißbÀ
(
nic_öfo_t
 *
nic
) {

166 i‡(!
g_¥omisc_öôülized
 || !
nic
) {

167  
ERROR_INVALID_PARAM
;

170 
	`LOG_INFO
("DißblögÖromiscuou†modê⁄ NIC %d", 
nic
->
ödex
);

172 
ªsu…
 = 
ERROR_NOT_SUPPORTED
;

175 
nic
->
ty≥
) {

176 
NIC_TYPE_3C509B
:

177 
ªsu…
 = 
	`¥omisc_dißbÀ_3c509b
(
nic
);

179 
NIC_TYPE_3C515_TX
:

180 
ªsu…
 = 
	`¥omisc_dißbÀ_3c515
(
nic
);

183 
	`LOG_ERROR
("Unsuµ‹ãd NICÅy≥ %d f‹Öromiscuou†mode", 
nic
->
ty≥
);

184  
ERROR_NOT_SUPPORTED
;

187 i‡(
ªsu…
 =
SUCCESS
) {

189 
nic
->
°©us
 &~
NIC_STATUS_PROMISCUOUS
;

192 
g_¥omisc_c⁄fig
.
a˘ive_nic_mask
 &~(1 << 
nic
->
ödex
);

195 i‡(
g_¥omisc_c⁄fig
.
a˘ive_nic_mask
 == 0) {

196 
g_¥omisc_c⁄fig
.
íabÀd
 = 
Ál£
;

197 
g_¥omisc_c⁄fig
.
Àvñ
 = 
PROMISC_LEVEL_OFF
;

200 
	`LOG_INFO
("Promiscuou†modêdißbÀd suc˚ssfuŒy o¿NIC %d", 
nic
->
ödex
);

202 
	`LOG_ERROR
("FaûedÅÿdißbÀÖromiscuou†modê⁄ NIC %d: %d", 
nic
->
ödex
, 
ªsu…
);

205  
ªsu…
;

206 
	}
}

208 
boﬁ
 
	$¥omisc_is_íabÀd
(
nic_öfo_t
 *
nic
) {

209 i‡(!
nic
) {

210  
Ál£
;

213  (
nic
->
°©us
 & 
NIC_STATUS_PROMISCUOUS
) != 0;

214 
	}
}

217 
	$¥omisc_ˇ±uª_∑ckë
(
nic_öfo_t
 *
nic
, c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

218 i‡(!
g_¥omisc_öôülized
 || !
nic
 || !
∑ckë
 || 
Àngth
 == 0) {

219  
ERROR_INVALID_PARAM
;

223 i‡(!
	`¥omisc_is_íabÀd
(
nic
)) {

224  
ERROR_NOT_ENABLED
;

228 i‡(
	`¥omisc_buf„r_is_fuŒ
()) {

229 
g_¥omisc_°©s
.
buf„r_ovîÊows
++;

230 
g_¥omisc_°©s
.
dr›≥d_∑ckës
++;

231  
ERROR_BUFFER_FULL
;

235 
uöt8_t
 
fûãr_m©ched
 = 0;

236 
boﬁ
 
m©ches_fûãrs
 = 
Ál£
;

238 i‡(
g_¥omisc_c⁄fig
.
fûãr_cou¡
 > 0) {

239 
m©ches_fûãrs
 = 
	`¥omisc_∑ckë_m©ches_fûãrs
(
∑ckë
, 
Àngth
);

240 i‡(
m©ches_fûãrs
) {

242 
i
 = 0; i < 
PROMISC_MAX_FILTERS
; i++) {

243 i‡(
g_¥omisc_fûãrs
[
i
].
íabÀd
 &&

244 
	`¥omisc_check_fûãr_m©ch
(&
g_¥omisc_fûãrs
[
i
], 
∑ckë
, 
Àngth
)) {

245 
fûãr_m©ched
 = 
i
 + 1;

252 
m©ches_fûãrs
 = 
åue
;

256 i‡(
m©ches_fûãrs
 || 
g_¥omisc_c⁄fig
.
Àvñ
 =
PROMISC_LEVEL_FULL
) {

257 
	`¥omisc_add_buf„r_∑ckë
(
∑ckë
, 
Àngth
, 
nic
->
ödex
, 
fûãr_m©ched
);

260 
	`¥omisc_˛assify_™d_upd©e_°©s
(
∑ckë
, 
Àngth
);

261 
	`¥omisc_upd©e_°©s
(
∑ckë
, 
Àngth
, 
m©ches_fûãrs
);

264 
¥omisc_∑ckë_buf„r_t
 *
buf„r
 = &
g_¥omisc_buf„rs
[
g_¥omisc_buf„r_èû
];

265 
	`¥omisc_dñivî_to_≠∂iˇti⁄s
(
buf„r
);

267  
SUCCESS
;

270  
ERROR_FILTERED
;

271 
	}
}

273 
	$¥omisc_gë_∑ckë
(
¥omisc_∑ckë_buf„r_t
 *
buf„r
) {

274 i‡(!
g_¥omisc_öôülized
 || !
buf„r
) {

275  
ERROR_INVALID_PARAM
;

278 i‡(
	`¥omisc_buf„r_is_em±y
()) {

279  
ERROR_NO_DATA
;

283 
	`mem˝y
(
buf„r
, &
g_¥omisc_buf„rs
[
g_¥omisc_buf„r_hód
], (
¥omisc_∑ckë_buf„r_t
));

286 
g_¥omisc_buf„r_hód
 = 
	`¥omisc_adv™˚_buf„r_ödex
(g_promisc_buffer_head);

288  
SUCCESS
;

289 
	}
}

291 
	$¥omisc_≥ek_∑ckë
(
¥omisc_∑ckë_buf„r_t
 *
buf„r
) {

292 i‡(!
g_¥omisc_öôülized
 || !
buf„r
) {

293  
ERROR_INVALID_PARAM
;

296 i‡(
	`¥omisc_buf„r_is_em±y
()) {

297  
ERROR_NO_DATA
;

301 
	`mem˝y
(
buf„r
, &
g_¥omisc_buf„rs
[
g_¥omisc_buf„r_hód
], (
¥omisc_∑ckë_buf„r_t
));

303  
SUCCESS
;

304 
	}
}

306 
	$¥omisc_¥o˚ss_ˇ±uªd_∑ckës
() {

307 i‡(!
g_¥omisc_öôülized
) {

311 
¥omisc_∑ckë_buf„r_t
 
∑ckë
;

314 
	`¥omisc_gë_∑ckë
(&
∑ckë
Ë=
SUCCESS
) {

318 i‡(
g_¥omisc_c⁄fig
.
Àvñ
 =
PROMISC_LEVEL_FULL
) {

319 
	`LOG_DEBUG
("ProcessedÖacket:Üength=%d,Åype=%d, from NIC %d",

320 
∑ckë
.
Àngth
,Öackë.
∑ckë_ty≥
,Öackë.
nic_ödex
);

323 
	}
}

326 
	$¥omisc_add_fûãr
(c⁄° 
¥omisc_fûãr_t
 *
fûãr
) {

327 i‡(!
g_¥omisc_öôülized
 || !
fûãr
) {

328  
ERROR_INVALID_PARAM
;

332 
i
 = 0; i < 
PROMISC_MAX_FILTERS
; i++) {

333 i‡(!
g_¥omisc_fûãrs
[
i
].
íabÀd
) {

334 
	`mem˝y
(&
g_¥omisc_fûãrs
[
i
], 
fûãr
, (
¥omisc_fûãr_t
));

335 
g_¥omisc_fûãrs
[
i
].
íabÀd
 = 
åue
;

336 
g_¥omisc_c⁄fig
.
fûãr_cou¡
++;

338 
	`LOG_DEBUG
("Added fûã∏%d o‡ty≥ %d", 
i
, 
fûãr
->
ty≥
);

339  
i
;

343  
ERROR_NO_RESOURCES
;

344 
	}
}

346 
	$¥omisc_ªmove_fûãr
(
fûãr_id
) {

347 i‡(!
g_¥omisc_öôülized
 || 
fûãr_id
 < 0 || fûãr_id >
PROMISC_MAX_FILTERS
) {

348  
ERROR_INVALID_PARAM
;

351 i‡(
g_¥omisc_fûãrs
[
fûãr_id
].
íabÀd
) {

352 
	`mem£t
(&
g_¥omisc_fûãrs
[
fûãr_id
], 0, (
¥omisc_fûãr_t
));

353 
g_¥omisc_c⁄fig
.
fûãr_cou¡
--;

355 
	`LOG_DEBUG
("Removed fûã∏%d", 
fûãr_id
);

356  
SUCCESS
;

359  
ERROR_NOT_FOUND
;

360 
	}
}

362 
	$¥omisc_˛ór_fûãrs
() {

363 i‡(!
g_¥omisc_öôülized
) {

364  
ERROR_INVALID_PARAM
;

367 
	`mem£t
(
g_¥omisc_fûãrs
, 0, (g_promisc_filters));

368 
g_¥omisc_c⁄fig
.
fûãr_cou¡
 = 0;

370 
	`LOG_INFO
("ClearedállÖromiscuous mode filters");

372  
SUCCESS
;

373 
	}
}

375 
boﬁ
 
	$¥omisc_∑ckë_m©ches_fûãrs
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

376 i‡(!
∑ckë
 || 
Àngth
 == 0) {

377  
Ál£
;

381 i‡(
g_¥omisc_c⁄fig
.
fûãr_cou¡
 == 0) {

382  
åue
;

386 
i
 = 0; i < 
PROMISC_MAX_FILTERS
; i++) {

387 i‡(
g_¥omisc_fûãrs
[
i
].
íabÀd
 &&

388 
	`¥omisc_check_fûãr_m©ch
(&
g_¥omisc_fûãrs
[
i
], 
∑ckë
, 
Àngth
)) {

389 
g_¥omisc_°©s
.
fûãr_m©ches
++;

390  
åue
;

394  
Ál£
;

395 
	}
}

397 
	$¥omisc_gë_fûãr_cou¡
() {

398  
g_¥omisc_c⁄fig
.
fûãr_cou¡
;

399 
	}
}

402 
	$¥omisc_ªgi°î_≠∂iˇti⁄
(
uöt32_t
 
pid
, 
¥omisc_Àvñ_t
 
Àvñ
, 
Ár
 *
ˇŒback
) {

403 i‡(!
g_¥omisc_öôülized
) {

404  
ERROR_INVALID_PARAM
;

408 
i
 = 0; i < 
PROMISC_MAX_APPLICATIONS
; i++) {

409 i‡(!
g_¥omisc_≠ps
[
i
].
a˘ive
) {

410 
g_¥omisc_≠ps
[
i
].
h™dÀ_id
 = 
g_√xt_h™dÀ_id
++;

411 
g_¥omisc_≠ps
[
i
].
pid
 =Öid;

412 
g_¥omisc_≠ps
[
i
].
Àvñ
 =Üevel;

413 
g_¥omisc_≠ps
[
i
].
ˇŒback
 = callback;

414 
g_¥omisc_≠ps
[
i
].
fûãr_mask
 = 0;

415 
g_¥omisc_≠ps
[
i
].
∑ckës_dñivîed
 = 0;

416 
g_¥omisc_≠ps
[
i
].
∑ckës_dr›≥d
 = 0;

417 
g_¥omisc_≠ps
[
i
].
a˘ive
 = 
åue
;

419 
g_¥omisc_c⁄fig
.
≠p_cou¡
++;

421 
	`LOG_INFO
("RegisteredÖromiscuous modeápplication: handle=%d,Öid=%lu,Üevel=%d",

422 
g_¥omisc_≠ps
[
i
].
h™dÀ_id
, 
pid
, 
Àvñ
);

424  
g_¥omisc_≠ps
[
i
].
h™dÀ_id
;

428  
ERROR_NO_RESOURCES
;

429 
	}
}

431 
	$¥omisc_uƒegi°î_≠∂iˇti⁄
(
uöt16_t
 
h™dÀ
) {

432 i‡(!
g_¥omisc_öôülized
) {

433  
ERROR_INVALID_PARAM
;

437 
i
 = 0; i < 
PROMISC_MAX_APPLICATIONS
; i++) {

438 i‡(
g_¥omisc_≠ps
[
i
].
a˘ive
 && g_¥omisc_≠ps[i].
h™dÀ_id
 =
h™dÀ
) {

439 
	`LOG_INFO
("Uƒegi°îögÖromiscuou†modê≠∂iˇti⁄: h™dÀ=%d", 
h™dÀ
);

441 
	`mem£t
(&
g_¥omisc_≠ps
[
i
], 0, (
¥omisc_≠p_h™dÀ_t
));

442 
g_¥omisc_c⁄fig
.
≠p_cou¡
--;

444  
SUCCESS
;

448  
ERROR_NOT_FOUND
;

449 
	}
}

451 
	$¥omisc_dñivî_to_≠∂iˇti⁄s
(c⁄° 
¥omisc_∑ckë_buf„r_t
 *
∑ckë
) {

452 i‡(!
g_¥omisc_öôülized
 || !
∑ckë
) {

453  
ERROR_INVALID_PARAM
;

456 
dñivîed
 = 0;

459 
i
 = 0; i < 
PROMISC_MAX_APPLICATIONS
; i++) {

460 i‡(
g_¥omisc_≠ps
[
i
].
a˘ive
) {

462 
boﬁ
 
should_dñivî
 = 
Ál£
;

464 
g_¥omisc_≠ps
[
i
].
Àvñ
) {

465 
PROMISC_LEVEL_FULL
:

466 
should_dñivî
 = 
åue
;

468 
PROMISC_LEVEL_BASIC
:

469 
should_dñivî
 = (
∑ckë
->
fûãr_m©ched
 > 0);

471 
PROMISC_LEVEL_SELECTIVE
:

472 
should_dñivî
 = (
∑ckë
->
fûãr_m©ched
 > 0 &&

473 (
g_¥omisc_≠ps
[
i
].
fûãr_mask
 & (1 << 
∑ckë
->
fûãr_m©ched
)));

476 
should_dñivî
 = 
Ál£
;

480 i‡(
should_dñivî
 && 
g_¥omisc_≠ps
[
i
].
ˇŒback
) {

482 
	`Ár
 (*
ˇŒback
)(c⁄° 
¥omisc_∑ckë_buf„r_t
 
Ár
 *Ë
g_¥omisc_≠ps
[
i
].callback;

483 
	`ˇŒback
(
∑ckë
);

485 
g_¥omisc_≠ps
[
i
].
∑ckës_dñivîed
++;

486 
dñivîed
++;

488 
g_¥omisc_≠ps
[
i
].
∑ckës_dr›≥d
++;

493  
dñivîed
;

494 
	}
}

496 
	$¥omisc_gë_≠∂iˇti⁄_cou¡
() {

497  
g_¥omisc_c⁄fig
.
≠p_cou¡
;

498 
	}
}

501 c⁄° 
¥omiscuous_°©s_t
* 
	$¥omisc_gë_°©s
() {

502  &
g_¥omisc_°©s
;

503 
	}
}

505 
	$¥omisc_˛ór_°©s
() {

506 
	`mem£t
(&
g_¥omisc_°©s
, 0, (
¥omiscuous_°©s_t
));

507 
	`LOG_DEBUG
("ClearedÖromiscuous mode statistics");

508 
	}
}

510 
	$¥omisc_upd©e_°©s
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
, 
boﬁ
 
fûãªd
) {

511 i‡(!
∑ckë
 || 
Àngth
 == 0) {

515 
g_¥omisc_°©s
.
tŸÆ_∑ckës
++;

516 
g_¥omisc_°©s
.
byãs_ˇ±uªd
 +
Àngth
;

518 i‡(
fûãªd
) {

519 
g_¥omisc_°©s
.
fûãªd_∑ckës
++;

523 i‡(
	`¥omisc_is_brﬂdˇ°_∑ckë
(
∑ckë
)) {

524 
g_¥omisc_°©s
.
brﬂdˇ°_∑ckës
++;

525 } i‡(
	`¥omisc_is_mu…iˇ°_∑ckë
(
∑ckë
)) {

526 
g_¥omisc_°©s
.
mu…iˇ°_∑ckës
++;

528 
g_¥omisc_°©s
.
uniˇ°_∑ckës
++;

532 i‡(
Àngth
 < 64) {

533 
g_¥omisc_°©s
.
undîsized_∑ckës
++;

534 } i‡(
Àngth
 > 1514) {

535 
g_¥omisc_°©s
.
ovîsized_∑ckës
++;

537 
	}
}

539 
	$¥omisc_¥öt_°©s
() {

540 
	`LOG_INFO
("Promiscuous Mode Statistics:");

541 
	`LOG_INFO
(" TŸÆÖackës: %lu", 
g_¥omisc_°©s
.
tŸÆ_∑ckës
);

542 
	`LOG_INFO
(" FûãªdÖackës: %lu", 
g_¥omisc_°©s
.
fûãªd_∑ckës
);

543 
	`LOG_INFO
(" Dr›≥dÖackës: %lu", 
g_¥omisc_°©s
.
dr›≥d_∑ckës
);

544 
	`LOG_INFO
(" Broadcast: %lu, Multicast: %lu, Unicast: %lu",

545 
g_¥omisc_°©s
.
brﬂdˇ°_∑ckës
,

546 
g_¥omisc_°©s
.
mu…iˇ°_∑ckës
,

547 
g_¥omisc_°©s
.
uniˇ°_∑ckës
);

548 
	`LOG_INFO
(" Buf„∏ovîÊows: %lu", 
g_¥omisc_°©s
.
buf„r_ovîÊows
);

549 
	`LOG_INFO
(" Byã†ˇ±uªd: %lu", 
g_¥omisc_°©s
.
byãs_ˇ±uªd
);

550 
	}
}

553 
	$¥omisc_£t_c⁄fig
(c⁄° 
¥omisc_c⁄fig_t
 *
c⁄fig
) {

554 i‡(!
g_¥omisc_öôülized
 || !
c⁄fig
) {

555  
ERROR_INVALID_PARAM
;

558 
	`mem˝y
(&
g_¥omisc_c⁄fig
, 
c⁄fig
, (
¥omisc_c⁄fig_t
));

560 
	`LOG_INFO
("UpdatedÖromiscuous mode configuration");

562  
SUCCESS
;

563 
	}
}

565 c⁄° 
¥omisc_c⁄fig_t
* 
	$¥omisc_gë_c⁄fig
() {

566  &
g_¥omisc_c⁄fig
;

567 
	}
}

569 
	$¥omisc_£t_Àvñ
(
¥omisc_Àvñ_t
 
Àvñ
) {

570 i‡(!
g_¥omisc_öôülized
) {

571  
ERROR_INVALID_PARAM
;

574 
g_¥omisc_c⁄fig
.
Àvñ
 =Üevel;

576 
	`LOG_INFO
("SëÖromiscuou†modêÀvñÅÿ%d", 
Àvñ
);

578  
SUCCESS
;

579 
	}
}

581 
¥omisc_Àvñ_t
 
	$¥omisc_gë_Àvñ
() {

582  
g_¥omisc_c⁄fig
.
Àvñ
;

583 
	}
}

586 
	$¥omisc_öãgøã_routög
() {

588 
	`LOG_DEBUG
("IntegratingÖromiscuous mode withÑouting system");

593  
SUCCESS
;

594 
	}
}

596 
	$¥omisc_öãgøã_≠i
() {

598 
	`LOG_DEBUG
("IntegratingÖromiscuous mode withÉxtended API system");

603  
SUCCESS
;

604 
	}
}

606 
	$¥omisc_öãgøã_dügno°ics
() {

608 
	`LOG_DEBUG
("IntegratingÖromiscuous mode with diagnostics system");

613  
SUCCESS
;

614 
	}
}

617 
	$¥omisc_íabÀ_3c509b
(
nic_öfo_t
 *
nic
, 
¥omisc_Àvñ_t
 
Àvñ
) {

618 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C509B
) {

619  
ERROR_INVALID_PARAM
;

622 
	`LOG_DEBUG
("E«blög 3C509BÖromiscuou†modê©Üevñ %d", 
Àvñ
);

627 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_RX_DISABLE
);

630 
i
 = 0; i < 100; i++) {

631 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

632 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

635 
	`udñay
(10);

639 
	`_3C509B_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C509B_WINDOW_1
);

642 
uöt16_t
 
fûãr
 = 
_3C509B_RX_FILTER_STATION
 | 
_3C509B_RX_FILTER_BROADCAST
;

644 
Àvñ
) {

645 
PROMISC_LEVEL_BASIC
:

646 
fûãr
 |
_3C509B_RX_FILTER_MULTICAST
;

648 
PROMISC_LEVEL_FULL
:

649 
fûãr
 |
_3C509B_RX_FILTER_MULTICAST
 | 
_3C509B_RX_FILTER_PROM
;

651 
PROMISC_LEVEL_SELECTIVE
:

652 
fûãr
 |
_3C509B_RX_FILTER_MULTICAST
 | 
_3C509B_RX_FILTER_PROM
;

656 
	`LOG_ERROR
("InvÆidÖromiscuou†Àvñ %d f‹ 3C509B", 
Àvñ
);

657  
ERROR_INVALID_PARAM
;

661 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_RX_FILTER
 | 
fûãr
);

664 
i
 = 0; i < 100; i++) {

665 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

666 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

669 
	`udñay
(10);

673 i‡(
Àvñ
 >
PROMISC_LEVEL_FULL
) {

675 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_RX_THRESHOLD
 | 8);

676 
	`udñay
(100);

679 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_TX_THRESHOLD
 | 1024);

680 
	`udñay
(100);

684 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_RX_ENABLE
);

687 
i
 = 0; i < 100; i++) {

688 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C509B_STATUS_REG
);

689 i‡(!(
°©us
 & 
_3C509B_STATUS_CMD_BUSY
)) {

692 
	`udñay
(10);

696 i‡(
Àvñ
 >
PROMISC_LEVEL_FULL
) {

698 
uöt16_t
 
öt_mask
 = 
_3C509B_IMASK_RX_COMPLETE
 | 
_3C509B_IMASK_TX_COMPLETE
 |

699 
_3C509B_IMASK_ADAPTER_FAILURE
;

700 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_INTR_ENB
 | 
öt_mask
);

703 
	`LOG_DEBUG
("3C509BÖromiscuou†modêíabÀd: fûãr=0x%X,Üevñ=%d", 
fûãr
, 
Àvñ
);

705  
SUCCESS
;

706 
	}
}

708 
	$¥omisc_dißbÀ_3c509b
(
nic_öfo_t
 *
nic
) {

709 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C509B
) {

710  
ERROR_INVALID_PARAM
;

713 
	`LOG_DEBUG
("Disabling 3C509BÖromiscuous mode");

716 
	`_3C509B_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C509B_WINDOW_1
);

719 
uöt16_t
 
fûãr
 = 
_3C509B_RX_FILTER_STATION
 | 
_3C509B_RX_FILTER_BROADCAST
;

720 
	`outw
(
nic
->
io_ba£
 + 
_3C509B_COMMAND_REG
, 
_3C509B_CMD_SET_RX_FILTER
 | 
fûãr
);

722 
	`LOG_DEBUG
("3C509BÖromiscuous mode disabled");

724  
SUCCESS
;

725 
	}
}

727 
	$¥omisc_íabÀ_3c515
(
nic_öfo_t
 *
nic
, 
¥omisc_Àvñ_t
 
Àvñ
) {

728 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C515_TX
) {

729  
ERROR_INVALID_PARAM
;

732 
	`LOG_DEBUG
("E«blög 3C515-TXÖromiscuou†modê©Üevñ %d", 
Àvñ
);

737 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_UP_STALL
);

740 
i
 = 0; i < 1000; i++) {

741 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

742 i‡(!(
°©us
 & 
_3C515_TX_STATUS_DMA_IN_PROGRESS
)) {

745 
	`udñay
(10);

749 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_DISABLE
);

752 
i
 = 0; i < 100; i++) {

753 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

754 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

757 
	`udñay
(10);

761 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

764 
uöt16_t
 
fûãr
 = 
_3C515_TX_RX_FILTER_STATION
 | 
_3C515_TX_RX_FILTER_BROADCAST
;

766 
Àvñ
) {

767 
PROMISC_LEVEL_BASIC
:

768 
fûãr
 |
_3C515_TX_RX_FILTER_MULTICAST
;

770 
PROMISC_LEVEL_FULL
:

771 
fûãr
 |
_3C515_TX_RX_FILTER_MULTICAST
 | 
_3C515_TX_RX_FILTER_PROM
;

773 
PROMISC_LEVEL_SELECTIVE
:

774 
fûãr
 |
_3C515_TX_RX_FILTER_MULTICAST
 | 
_3C515_TX_RX_FILTER_PROM
;

777 
	`LOG_ERROR
("InvÆidÖromiscuou†Àvñ %d f‹ 3C515-TX", 
Àvñ
);

779 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_UP_UNSTALL
);

780  
ERROR_INVALID_PARAM
;

784 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SET_RX_FILTER
 | 
fûãr
);

787 
i
 = 0; i < 100; i++) {

788 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

789 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

792 
	`udñay
(10);

796 i‡(
Àvñ
 >
PROMISC_LEVEL_FULL
) {

798 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_7
);

801 
	`outw
(
nic
->
io_ba£
 + 0x08, 0x0020);

802 
	`udñay
(10);

805 
	`outw
(
nic
->
io_ba£
 + 0x0A, 0x0008);

806 
	`udñay
(10);

809 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

813 i‡(
Àvñ
 >
PROMISC_LEVEL_FULL
) {

814 
uöt16_t
 
öt_mask
 = 
_3C515_TX_IMASK_RX_COMPLETE
 | 
_3C515_TX_IMASK_UP_COMPLETE
 |

815 
_3C515_TX_IMASK_TX_COMPLETE
 | 
_3C515_TX_IMASK_ADAPTER_FAILURE
;

816 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SET_INTR_ENB
 | 
öt_mask
);

820 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_RX_ENABLE
);

823 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_UP_UNSTALL
);

826 
i
 = 0; i < 100; i++) {

827 
uöt16_t
 
°©us
 = 
	`öw
(
nic
->
io_ba£
 + 
_3C515_TX_STATUS_REG
);

828 i‡(!(
°©us
 & 
_3C515_TX_STATUS_CMD_IN_PROGRESS
)) {

831 
	`udñay
(10);

834 
	`LOG_DEBUG
("3C515-TXÖromiscuous modeÉnabled: filter=0x%X,Üevel=%d, DMA optimized",

835 
fûãr
, 
Àvñ
);

837  
SUCCESS
;

838 
	}
}

840 
	$¥omisc_dißbÀ_3c515
(
nic_öfo_t
 *
nic
) {

841 i‡(!
nic
 ||Çic->
ty≥
 !
NIC_TYPE_3C515_TX
) {

842  
ERROR_INVALID_PARAM
;

845 
	`LOG_DEBUG
("Disabling 3C515-TXÖromiscuous mode");

848 
	`_3C515_TX_SELECT_WINDOW
(
nic
->
io_ba£
, 
_3C515_TX_WINDOW_1
);

851 
uöt16_t
 
fûãr
 = 
_3C515_TX_RX_FILTER_STATION
 | 
_3C515_TX_RX_FILTER_BROADCAST
;

852 
	`outw
(
nic
->
io_ba£
 + 
_3C515_TX_COMMAND_REG
, 
_3C515_TX_CMD_SET_RX_FILTER
 | 
fûãr
);

854 
	`LOG_DEBUG
("3C515-TXÖromiscuous mode disabled");

856  
SUCCESS
;

857 
	}
}

860 c⁄° * 
	$¥omisc_Àvñ_to_°rög
(
¥omisc_Àvñ_t
 
Àvñ
) {

861 
Àvñ
) {

862 
PROMISC_LEVEL_OFF
:  "Off";

863 
PROMISC_LEVEL_BASIC
:  "Basic";

864 
PROMISC_LEVEL_FULL
:  "Full";

865 
PROMISC_LEVEL_SELECTIVE
:  "Selective";

868 
	}
}

870 c⁄° * 
	$¥omisc_fûãr_ty≥_to_°rög
(
¥omisc_fûãr_ty≥_t
 
ty≥
) {

871 
ty≥
) {

872 
PROMISC_FILTER_ALL
:  "All";

873 
PROMISC_FILTER_PROTOCOL
:  "Protocol";

874 
PROMISC_FILTER_MAC_SRC
:  "Source MAC";

875 
PROMISC_FILTER_MAC_DST
:  "Destination MAC";

876 
PROMISC_FILTER_LENGTH
:  "Length";

877 
PROMISC_FILTER_CONTENT
:  "Content";

880 
	}
}

882 
boﬁ
 
	$¥omisc_is_brﬂdˇ°_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
) {

883 i‡(!
∑ckë
) {

884  
Ál£
;

888 
i
 = 0; i < 
ETH_ALEN
; i++) {

889 i‡(
∑ckë
[
i
] != 0xFF) {

890  
Ál£
;

894  
åue
;

895 
	}
}

897 
boﬁ
 
	$¥omisc_is_mu…iˇ°_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
) {

898 i‡(!
∑ckë
) {

899  
Ál£
;

903  (
∑ckë
[0] & 0x01) != 0;

904 
	}
}

906 
uöt16_t
 
	$¥omisc_˛assify_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

907 i‡(!
∑ckë
 || 
Àngth
 < 14) {

912 
uöt16_t
 
ëhîty≥
 = (
∑ckë
[12] << 8) |Öacket[13];

915  
ëhîty≥
;

916 
	}
}

919 
uöt32_t
 
	$¥omisc_gë_time°amp
() {

922  ++
g_∑ckë_cou¡î
;

923 
	}
}

925 
boﬁ
 
	$¥omisc_buf„r_is_fuŒ
() {

926  ((
g_¥omisc_buf„r_èû
 + 1Ë% 
PROMISC_BUFFER_COUNT
Ë=
g_¥omisc_buf„r_hód
;

927 
	}
}

929 
boﬁ
 
	$¥omisc_buf„r_is_em±y
() {

930  
g_¥omisc_buf„r_hód
 =
g_¥omisc_buf„r_èû
;

931 
	}
}

933 
uöt32_t
 
	$¥omisc_adv™˚_buf„r_ödex
(
uöt32_t
 
ödex
) {

934  (
ödex
 + 1Ë% 
PROMISC_BUFFER_COUNT
;

935 
	}
}

937 
	$¥omisc_add_buf„r_∑ckë
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
,

938 
uöt8_t
 
nic_ödex
, uöt8_à
fûãr_m©ched
) {

939 
¥omisc_∑ckë_buf„r_t
 *
buf„r
 = &
g_¥omisc_buf„rs
[
g_¥omisc_buf„r_èû
];

941 
buf„r
->
time°amp
 = 
	`¥omisc_gë_time°amp
();

942 
buf„r
->
Àngth
 =Üength;

943 
buf„r
->
°©us
 = 0;

944 
buf„r
->
nic_ödex
 =Çic_index;

945 
buf„r
->
fûãr_m©ched
 = filter_matched;

946 
buf„r
->
∑ckë_ty≥
 = 
	`¥omisc_˛assify_∑ckë
(
∑ckë
, 
Àngth
);

947 
buf„r
->
ª£rved
 = 0;

950 
uöt16_t
 
c›y_Àngth
 = (
Àngth
 > 
PROMISC_BUFFER_SIZE
) ? PROMISC_BUFFER_SIZE :Üength;

951 
	`mem˝y
(
buf„r
->
d©a
, 
∑ckë
, 
c›y_Àngth
);

954 
g_¥omisc_buf„r_èû
 = 
	`¥omisc_adv™˚_buf„r_ödex
(g_promisc_buffer_tail);

955 
	}
}

957 
boﬁ
 
	$¥omisc_check_fûãr_m©ch
(c⁄° 
¥omisc_fûãr_t
 *
fûãr
,

958 c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

959 i‡(!
fûãr
 || !fûãr->
íabÀd
 || !
∑ckë
) {

960  
Ál£
;

963 
fûãr
->
ty≥
) {

964 
PROMISC_FILTER_ALL
:

965  
åue
;

967 
PROMISC_FILTER_PROTOCOL
: {

968 i‡(
Àngth
 < 14Ë 
Ál£
;

969 
uöt16_t
 
ëhîty≥
 = (
∑ckë
[12] << 8) |Öacket[13];

970  (
ëhîty≥
 & 
fûãr
->
mask
Ë=(fûãr->
m©ch_vÆue
 & filter->mask);

973 
PROMISC_FILTER_MAC_SRC
:

974 i‡(
Àngth
 < 12Ë 
Ál£
;

975  
	`memcmp
(
∑ckë
 + 6, 
fûãr
->
mac_addr
, 
ETH_ALEN
) == 0;

977 
PROMISC_FILTER_MAC_DST
:

978 i‡(
Àngth
 < 6Ë 
Ál£
;

979  
	`memcmp
(
∑ckë
, 
fûãr
->
mac_addr
, 
ETH_ALEN
) == 0;

981 
PROMISC_FILTER_LENGTH
:

982  (
Àngth
 >
fûãr
->
mö_Àngth
 &&Üígth <fûãr->
max_Àngth
);

984 
PROMISC_FILTER_CONTENT
:

985 i‡(
Àngth
 < 
fûãr
->
∑âîn_Àngth
Ë 
Ál£
;

986 
i
 = 0; i <
Àngth
 - 
fûãr
->
∑âîn_Àngth
; i++) {

987 i‡(
	`memcmp
(
∑ckë
 + 
i
, 
fûãr
->
c⁄ã¡_∑âîn
, fûãr->
∑âîn_Àngth
) == 0) {

988  
åue
;

991  
Ál£
;

994  
Ál£
;

996 
	}
}

998 
	$¥omisc_˛assify_™d_upd©e_°©s
(c⁄° 
uöt8_t
 *
∑ckë
, 
uöt16_t
 
Àngth
) {

1000 i‡(
Àngth
 < 64) {

1001 
g_¥omisc_°©s
.
undîsized_∑ckës
++;

1002 } i‡(
Àngth
 > 1514) {

1003 
g_¥omisc_°©s
.
ovîsized_∑ckës
++;

1007 i‡(
Àngth
 < 14) {

1008 
g_¥omisc_°©s
.
îr‹_∑ckës
++;

1010 
	}
}

	@/Users/jvindahl/Development/3com-packet-driver/src/c/stats.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<dos.h
>

14 
	~"../ö˛ude/°©s.h
"

15 
	~"../ö˛ude/loggög.h
"

16 
	~"../ö˛ude/h¨dw¨e.h
"

17 
	~"../ö˛ude/comm⁄.h
"

20 
drivî_°©s_t
 
	gglobÆ_°©s
 = {0};

21 
nic_°©s_t
 
	gnic_°©s
[
MAX_NICS
] = {0};

22 
	g°©s_öôülized
 = 0;

23 
uöt32_t
 
	g°©s_°¨t_time
 = 0;

28 
uöt32_t
 
	mªgi°î_ªad_cou¡
;

29 
uöt32_t
 
	mªgi°î_ªad_îr‹s
;

30 
uöt32_t
 
	mªgi°î_c‹ru±i⁄_evíts
;

33 
uöt32_t
 
	mmërics_cﬁÀ˘i⁄_cou¡
;

34 
uöt32_t
 
	mmërics_cﬁÀ˘i⁄_îr‹s
;

35 
uöt32_t
 
	mœ°_mërics_time
;

38 
uöt32_t
 
	mîr‹_∑âîns
[
MAX_NICS
][16];

39 
uöt32_t
 
	mîr‹_bur°_evíts
;

40 
uöt32_t
 
	mîr‹_åíd_ch™ges
;

43 
uöt32_t
 
	m≥ak_mem‹y_ußge
;

44 
uöt32_t
 
	mcuºít_mem‹y_ußge
;

45 
uöt32_t
 
	mmem‹y_Àak_evíts
;

48 
uöt32_t
 
	mhó…h_checks_≥rf‹med
;

49 
uöt32_t
 
	mhó…h_w¨nögs_issued
;

50 
uöt32_t
 
	mhó…h_¸ôiˇl_evíts
;

53 
uöt32_t
 
	m¥edi˘i⁄_ˇlcuœti⁄s
;

54 
uöt32_t
 
	m¥edi˘i⁄_accuøcy
;

55 
uöt32_t
 
	móæy_w¨nögs_issued
;

56 } 
	gg_¥odu˘i⁄_°©s
 = {0};

62 
uöt32_t
 
	$°©s_gë_time°amp
() {

64  
	`gë_sy°em_time°amp_ms
();

65 
	}
}

72 
	$°©s_subsy°em_öô
(c⁄° 
c⁄fig_t
 *
c⁄fig
) {

73 i‡(!
c⁄fig
) {

74 
	`log_îr‹
("stats_subsystem_init: NULL configÖarameter");

75  
STATS_ERR_INVALID_PARAM
;

78 
	`log_öfo
("Initializing statistics subsystem withÖroduction features");

81 
	`mem£t
(&
globÆ_°©s
, 0, (global_stats));

82 
	`mem£t
(
nic_°©s
, 0, (nic_stats));

83 
	`mem£t
(&
g_¥odu˘i⁄_°©s
, 0, (g_production_stats));

86 
°©s_°¨t_time
 = 
	`°©s_gë_time°amp
();

87 
globÆ_°©s
.
°¨t_time
 = 
°©s_°¨t_time
;

88 
g_¥odu˘i⁄_°©s
.
œ°_mërics_time
 = 
°©s_°¨t_time
;

90 
°©s_öôülized
 = 1;

92 
	`log_öfo
("Statistics subsystem initialized withÖroduction monitoring");

94 
	}
}

99 
	$°©s_ö¸emít_tx_∑ckës
() {

100 i‡(
°©s_öôülized
) {

101 
globÆ_°©s
.
tx_∑ckës
++;

103 
	}
}

109 
	$°©s_add_tx_byãs
(
uöt32_t
 
byãs
) {

110 i‡(
°©s_öôülized
) {

111 
globÆ_°©s
.
tx_byãs
 +
byãs
;

113 
	}
}

118 
	$°©s_ö¸emít_tx_îr‹s
() {

119 i‡(
°©s_öôülized
) {

120 
globÆ_°©s
.
tx_îr‹s
++;

122 
	}
}

127 
	$°©s_ö¸emít_rx_∑ckës
() {

128 i‡(
°©s_öôülized
) {

129 
globÆ_°©s
.
rx_∑ckës
++;

131 
	}
}

137 
	$°©s_add_rx_byãs
(
uöt32_t
 
byãs
) {

138 i‡(
°©s_öôülized
) {

139 
globÆ_°©s
.
rx_byãs
 +
byãs
;

141 
	}
}

146 
	$°©s_ö¸emít_rx_îr‹s
() {

147 i‡(
°©s_öôülized
) {

148 
globÆ_°©s
.
rx_îr‹s
++;

150 
	}
}

155 
	$°©s_ö¸emít_dr›≥d_∑ckës
() {

156 i‡(
°©s_öôülized
) {

157 
globÆ_°©s
.
dr›≥d_∑ckës
++;

159 
	}
}

168 
	$°©s_upd©e_nic
(
nic_id
, 
°©_ty≥
, 
uöt32_t
 
vÆue
) {

169 i‡(!
°©s_öôülized
) {

170  
STATS_ERR_NOT_INITIALIZED
;

173 i‡(
nic_id
 < 0 ||Çic_id >
MAX_NICS
) {

174  
STATS_ERR_INVALID_NIC
;

178 
°©_ty≥
) {

179 
STAT_TYPE_TX_PACKETS
:

180 
nic_°©s
[
nic_id
].
tx_∑ckës
 +
vÆue
;

182 
STAT_TYPE_TX_BYTES
:

183 
nic_°©s
[
nic_id
].
tx_byãs
 +
vÆue
;

185 
STAT_TYPE_TX_ERRORS
:

186 
nic_°©s
[
nic_id
].
tx_îr‹s
 +
vÆue
;

188 
STAT_TYPE_RX_PACKETS
:

189 
nic_°©s
[
nic_id
].
rx_∑ckës
 +
vÆue
;

191 
STAT_TYPE_RX_BYTES
:

192 
nic_°©s
[
nic_id
].
rx_byãs
 +
vÆue
;

194 
STAT_TYPE_RX_ERRORS
:

195 
nic_°©s
[
nic_id
].
rx_îr‹s
 +
vÆue
;

197 
STAT_TYPE_COLLISIONS
:

198 
nic_°©s
[
nic_id
].
cﬁlisi⁄s
 +
vÆue
;

200 
STAT_TYPE_CRC_ERRORS
:

201 
nic_°©s
[
nic_id
].
¸c_îr‹s
 +
vÆue
;

204 
	`log_w¨nög
("Unknow¿°©i°i¯ty≥: %d", 
°©_ty≥
);

205  
STATS_ERR_INVALID_TYPE
;

209 
nic_°©s
[
nic_id
].
œ°_a˘ivôy
 = 
	`°©s_gë_time°amp
();

212 
	}
}

219 
	$°©s_gë_globÆ
(
drivî_°©s_t
 *
°©s
) {

220 i‡(!
°©s
) {

221  
STATS_ERR_INVALID_PARAM
;

224 i‡(!
°©s_öôülized
) {

225  
STATS_ERR_NOT_INITIALIZED
;

229 
globÆ_°©s
.
u±ime
 = 
	`°©s_gë_time°amp
(Ë- 
°©s_°¨t_time
;

231 *
°©s
 = 
globÆ_°©s
;

233 
	}
}

241 
	$°©s_gë_nic
(
nic_id
, 
nic_°©s_t
 *
°©s
) {

242 i‡(!
°©s
) {

243  
STATS_ERR_INVALID_PARAM
;

246 i‡(!
°©s_öôülized
) {

247  
STATS_ERR_NOT_INITIALIZED
;

250 i‡(
nic_id
 < 0 ||Çic_id >
MAX_NICS
) {

251  
STATS_ERR_INVALID_NIC
;

254 *
°©s
 = 
nic_°©s
[
nic_id
];

256 
	}
}

262 
	$°©s_ª£t_Æl
() {

263 i‡(!
°©s_öôülized
) {

264  
STATS_ERR_NOT_INITIALIZED
;

267 
	`log_öfo
("Resettingáll statistics");

270 
uöt32_t
 
°¨t_time
 = 
globÆ_°©s
.start_time;

271 
	`mem£t
(&
globÆ_°©s
, 0, (global_stats));

272 
globÆ_°©s
.
°¨t_time
 = start_time;

275 
	`mem£t
(
nic_°©s
, 0, (nic_stats));

278 
	}
}

285 
	$°©s_ª£t_nic
(
nic_id
) {

286 i‡(!
°©s_öôülized
) {

287  
STATS_ERR_NOT_INITIALIZED
;

290 i‡(
nic_id
 < 0 ||Çic_id >
MAX_NICS
) {

291  
STATS_ERR_INVALID_NIC
;

294 
	`log_debug
("Re£âög sèti°ic†f‹ NIC %d", 
nic_id
);

295 
	`mem£t
(&
nic_°©s
[
nic_id
], 0, (nic_stats[nic_id]));

298 
	}
}

303 
	$°©s_¥öt_globÆ
() {

304 
drivî_°©s_t
 
°©s
;

305 
uöt32_t
 
u±ime_£c⁄ds
;

307 i‡(
	`°©s_gë_globÆ
(&
°©s
) < 0) {

308 
	`log_îr‹
("FailedÅo get global statistics");

312 
u±ime_£c⁄ds
 = 
°©s
.
u±ime
 / 18;

314 
	`log_öfo
("=== Global Driver Statistics ===");

315 
	`log_öfo
("U±ime: %lu sec⁄ds", 
u±ime_£c⁄ds
);

316 
	`log_öfo
("TX: %luÖackets, %lu bytes, %luÉrrors",

317 
°©s
.
tx_∑ckës
, sèts.
tx_byãs
, sèts.
tx_îr‹s
);

318 
	`log_öfo
("RX: %luÖackets, %lu bytes, %luÉrrors",

319 
°©s
.
rx_∑ckës
, sèts.
rx_byãs
, sèts.
rx_îr‹s
);

320 
	`log_öfo
("Dr›≥d: %luÖackës", 
°©s
.
dr›≥d_∑ckës
);

321 
	`log_öfo
("I¡îru±s: %lu", 
°©s
.
öãºu±s_h™dÀd
);

322 
	`log_öfo
("Mem‹yáŒoˇãd: %lu byãs", 
°©s
.
mem‹y_Æloˇãd
);

323 
	}
}

329 
	$°©s_¥öt_nic
(
nic_id
) {

330 
nic_°©s_t
 
°©s
;

332 i‡(
	`°©s_gë_nic
(
nic_id
, &
°©s
) < 0) {

333 
	`log_îr‹
("FaûedÅÿgë sèti°ic†f‹ NIC %d", 
nic_id
);

337 
	`log_öfo
("==NIC %d Sèti°ic†===", 
nic_id
);

338 
	`log_öfo
("TX: %luÖackets, %lu bytes, %luÉrrors",

339 
°©s
.
tx_∑ckës
, sèts.
tx_byãs
, sèts.
tx_îr‹s
);

340 
	`log_öfo
("RX: %luÖackets, %lu bytes, %luÉrrors",

341 
°©s
.
rx_∑ckës
, sèts.
rx_byãs
, sèts.
rx_îr‹s
);

342 
	`log_öfo
("Collisions: %lu, CRCÉrrors: %lu",

343 
°©s
.
cﬁlisi⁄s
, sèts.
¸c_îr‹s
);

344 
	`log_öfo
("FrameÉrrors: %lu, Overruns: %lu",

345 
°©s
.
‰ame_îr‹s
, sèts.
ovîrun_îr‹s
);

346 
	`log_öfo
("La°á˘ivôy: %lu", 
°©s
.
œ°_a˘ivôy
);

347 
	}
}

352 
	$°©s_¥öt_Æl
() {

353 
i
, 
num_nics
;

355 i‡(!
°©s_öôülized
) {

356 
	`log_îr‹
("StatisticsÇot initialized");

361 
	`°©s_¥öt_globÆ
();

364 
num_nics
 = 
	`h¨dw¨e_gë_nic_cou¡
();

365 
i
 = 0; i < 
num_nics
 && i < 
MAX_NICS
; i++) {

366 
	`°©s_¥öt_nic
(
i
);

368 
	}
}

374 
	$°©s_is_öôülized
() {

375  
°©s_öôülized
;

376 
	}
}

381 
	$°©s_ö¸emít_öãºu±s
() {

382 i‡(
°©s_öôülized
) {

383 
globÆ_°©s
.
öãºu±s_h™dÀd
++;

385 
	}
}

391 
	$°©s_upd©e_mem‹y
(
öt32_t
 
byãs
) {

392 i‡(
°©s_öôülized
) {

393 i‡(
byãs
 > 0) {

394 
globÆ_°©s
.
mem‹y_Æloˇãd
 +
byãs
;

395 } i‡(
byãs
 < 0 && 
globÆ_°©s
.
mem‹y_Æloˇãd
 >(
uöt32_t
)(-bytes)) {

396 
globÆ_°©s
.
mem‹y_Æloˇãd
 -(
uöt32_t
)(-
byãs
);

399 
	}
}

405 
	$°©s_˛ónup
() {

406 i‡(!
°©s_öôülized
) {

411 
	`log_öfo
("Cleaning up statistics subsystem");

414 
	`°©s_¥öt_Æl
();

416 
°©s_öôülized
 = 0;

418 
	`log_öfo
("Statistics cleanup completed");

420 
	}
}

428 
	$°©s_ªad_h¨dw¨e_ªgi°îs
(
nic_id
, 
h¨dw¨e_ªgi°î_°©s_t
 *
ªg_°©s
) {

429 
nic_öfo_t
 *
nic
;

430 
uöt32_t
 
ªgi°îs
[32];

431 
ªg_cou¡
 = 0;

433 i‡(!
ªg_°©s
 || 
nic_id
 < 0 ||Çic_id >
MAX_NICS
) {

434  
STATS_ERR_INVALID_PARAM
;

437 
nic
 = 
	`h¨dw¨e_gë_nic
(
nic_id
);

438 i‡(!
nic
 || !“ic->
°©us
 & 
NIC_STATUS_PRESENT
)) {

439  
STATS_ERR_INVALID_NIC
;

442 
g_¥odu˘i⁄_°©s
.
ªgi°î_ªad_cou¡
++;

444 
	`mem£t
(
ªg_°©s
, 0, (
h¨dw¨e_ªgi°î_°©s_t
));

447 
nic
->
ty≥
) {

448 
NIC_TYPE_3C509B
:

450 i‡(
nic
->
›s
 &&Çic->
io_ba£
) {

452 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x0E);

453 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x0C);

454 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x08);

455 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x04);

458 
	`outw
(
nic
->
io_ba£
 + 0x0C, 0x0800 | 1);

459 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x0A);

460 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x0B);

463 
	`outw
(
nic
->
io_ba£
 + 0x0C, 0x0800 | 6);

464 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x00);

465 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x01);

466 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x02);

467 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x03);

468 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x04);

469 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x05);

470 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x06);

471 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x07);

472 
ªgi°îs
[
ªg_cou¡
++] = 
	`öb
(
nic
->
io_ba£
 + 0x08);

475 
	`outw
(
nic
->
io_ba£
 + 0x0C, 0x0800 | 1);

479 
NIC_TYPE_3C515_TX
:

481 i‡(
nic
->
›s
 &&Çic->
io_ba£
) {

482 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x0E);

483 
ªgi°îs
[
ªg_cou¡
++] = 
	`öl
(
nic
->
io_ba£
 + 0x24);

484 
ªgi°îs
[
ªg_cou¡
++] = 
	`öl
(
nic
->
io_ba£
 + 0x38);

485 
ªgi°îs
[
ªg_cou¡
++] = 
	`öw
(
nic
->
io_ba£
 + 0x20);

490 
	`log_w¨nög
("Unknow¿NICÅy≥ f‹Ñegi°îÑódög: %d", 
nic
->
ty≥
);

491 
g_¥odu˘i⁄_°©s
.
ªgi°î_ªad_îr‹s
++;

492  
STATS_ERR_INVALID_NIC
;

496 i‡(!
	`°©s_vÆid©e_ªgi°î_d©a
(
ªgi°îs
, 
ªg_cou¡
)) {

497 
g_¥odu˘i⁄_°©s
.
ªgi°î_c‹ru±i⁄_evíts
++;

498 
g_¥odu˘i⁄_°©s
.
ªgi°î_ªad_îr‹s
++;

499 
	`log_w¨nög
("Regi°î c‹ru±i⁄ dëe˘ed o¿NIC %d", 
nic_id
);

500  
STATS_ERR_INVALID_PARAM
;

504 
ªg_°©s
->
nic_id
 =Çic_id;

505 
ªg_°©s
->
time°amp
 = 
	`°©s_gë_time°amp
();

506 
ªg_°©s
->
ªgi°î_cou¡
 = 
ªg_cou¡
;

509 
c›y_cou¡
 = (
ªg_cou¡
 < 32Ë?Ñeg_cou¡ : 32;\
n
 
i
 = 0; i < c›y_cou¡; i++Ë{\¿
ªg_°©s
->
ªgi°î_vÆues
[i] = 
ªgi°îs
[i];\¿}\¿\¿ \¿ªg_°©s->
tx_a˘ive
 = (ªgi°îs[0] & 0x1000Ë!0; \¿ªg_°©s->
rx_a˘ive
 = (ªgi°îs[0] & 0x2000Ë!0; \¿ªg_°©s->
îr‹_Êags
 =Ñegi°îs[0] & 0x00FF; \¿\¿i‡‘eg_cou¡ >5Ë{\¿ªg_°©s->
tx_byãs_ok
 =Ñegi°îs[4];\¿ªg_°©s->
rx_byãs_ok
 =Ñegi°îs[5];\¿}\¿\¿
	`log_åa˚
(\"Read %d hardwareÑegisters from NIC %d\",Ñeg_count,Çic_id);\nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief CollectÑeal-timeÖerformance metrics\n * @paramÇic_id NIC identifier\n * @param metrics PointerÅo storeÖerformance metrics\n * @return 0 on success,Çegative onÉrror\n */\nstatic int stats_collect_realtime_metrics(intÇic_id,Ñealtime_performance_metrics_t *metrics) {\nÇic_info_t *nic;\n uint32_t current_time;\n hardware_register_stats_tÑeg_stats;\n intÑesult;\n \n if (!metrics ||Çic_id < 0 ||Çic_id >= MAX_NICS) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \nÇic = hardware_get_nic(nic_id);\n if (!nic) {\nÑeturn STATS_ERR_INVALID_NIC;\n }\n \n current_time = stats_get_timestamp();\n g_production_stats.metrics_collection_count++;\n \n memset(metrics, 0, sizeof(realtime_performance_metrics_t));\n \n /* Read hardwareÑegisters first */\nÑesult = stats_read_hardware_registers(nic_id, &reg_stats);\n if (result != STATS_SUCCESS) {\n g_production_stats.metrics_collection_errors++;\nÜog_warning(\"FailedÅoÑead hardwareÑegisters for metrics collection\");\nÑeturnÑesult;\n }\n \n /* Fill basic information */\n metrics->nic_id =Çic_id;\n metrics->timestamp = current_time;\n metrics->collection_interval = current_time - g_production_stats.last_metrics_time;\n \n /* CalculateÅhroughput metrics */\n if (nic->tx_packets > 0) {\n uint32_t uptime = current_time - stats_start_time;\n if (uptime > 0) {\n metrics->tx_packets_per_sec = (nic->tx_packets * 1000) / uptime;\n metrics->rx_packets_per_sec = (nic->rx_packets * 1000) / uptime;\n metrics->tx_bytes_per_sec = (nic->tx_bytes * 1000) / uptime;\n metrics->rx_bytes_per_sec = (nic->rx_bytes * 1000) / uptime;\n }\n }\n \n /* CalculateÉrrorÑates */\n if (nic->tx_packets > 0) {\n metrics->tx_error_rate = (nic->tx_errors * 10000) /Çic->tx_packets; /* Per 10k */\n }\n if (nic->rx_packets > 0) {\n metrics->rx_error_rate = (nic->rx_errors * 10000) /Çic->rx_packets;\n }\n \n /* Network utilizationÉstimate */\n uint32_tÅotal_bits = (nic->tx_bytes +Çic->rx_bytes) * 8;\n uint32_t uptime_sec = (current_time - stats_start_time) / 1000;\n if (uptime_sec > 0) {\n uint32_t max_bits = (nic->speed * 1000000UL) * uptime_sec;\n if (max_bits > 0) {\n metrics->network_utilization = (total_bits * 100) / max_bits;\n }\n }\n \n /* Link qualityássessment */\n metrics->link_quality = 100; /* Start withÖerfect */\n if (!nic->link_up) {\n metrics->link_quality = 0;\n }Élse {\n /* Deduct forÉrrors */\n if (metrics->tx_error_rate > 100) metrics->link_quality -= 20;\n if (metrics->rx_error_rate > 100) metrics->link_quality -= 20;\n if (nic->interrupts > 1000) metrics->link_quality -= 10; /* High interruptÜoad */\n }\n \n /* Memory usage from hardwareÑegisters */\n if (reg_stats.register_count >= 3) {\n metrics->memory_usage =Ñeg_stats.register_values[2]; /* TX FreeÑegister */\n }\n \n /* TemperatureÉstimation (simplified) */\n metrics->temperature_estimate = 25 + (nic->error_count / 100); /* RoughÉstimate */\n \n /* Power consumptionÉstimate */\n metrics->power_consumption = 500; /* Base 500mW */\n if (nic->link_up) metrics->power_consumption += 200;\n if (nic->status & NIC_STATUS_100MBPS) metrics->power_consumption += 300;\n \n g_production_stats.last_metrics_time = current_time;\n \nÜog_debug(\"CollectedÑeal-time metrics for NIC %d: util=%d%%, quality=%d%%\",\nÇic_id, metrics->network_utilization, metrics->link_quality);\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief AnalyzeÉrrorÖatterns forÖredictive maintenance\n * @paramÇic_id NIC identifier\n * @paramánalysis PointerÅo storeÉrroránalysis\n * @return 0 on success,Çegative onÉrror\n */\nstatic int stats_analyze_error_patterns(intÇic_id,Érror_pattern_analysis_t *analysis) {\nÇic_info_t *nic;\n uint32_t *patterns;\n uint32_t current_time;\n \n if (!analysis ||Çic_id < 0 ||Çic_id >= MAX_NICS) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \nÇic = hardware_get_nic(nic_id);\n if (!nic) {\nÑeturn STATS_ERR_INVALID_NIC;\n }\n \n current_time = stats_get_timestamp();\nÖatterns = g_production_stats.error_patterns[nic_id];\n \n memset(analysis, 0, sizeof(error_pattern_analysis_t));\n \nánalysis->nic_id =Çic_id;\nánalysis->timestamp = current_time;\n \n /* AnalyzeÉrrorÅrends */\nánalysis->total_errors =Çic->tx_errors +Çic->rx_errors +Çic->error_count;\n \n /* Check forÉrror bursts */\nánalysis->error_burst_detected = stats_detect_error_burst(nic_id);\n if (analysis->error_burst_detected) {\n g_production_stats.error_burst_events++;\nÜog_warning(\"Error burst detected on NIC %d\",Çic_id);\n }\n \n /* CalculateÉrrorÅrend */\nánalysis->error_trend = stats_calculate_trend(patterns, 16);\n \n /* FailureÖrobabilityássessment */\nánalysis->failure_probability = 0;\n if (analysis->total_errors > 1000)ánalysis->failure_probability += 20;\n if (analysis->error_burst_detected)ánalysis->failure_probability += 30;\n if (!nic->link_up)ánalysis->failure_probability += 40;\n if (nic->error_count > 50)ánalysis->failure_probability += 25;\n \n /* Capát 100% */\n if (analysis->failure_probability > 100) {\nánalysis->failure_probability = 100;\n }\n \n /* TimeÅoÇext failureÉstimate (hours) */\n if (analysis->failure_probability > 80) {\nánalysis->time_to_failure_hours = 1;\n }Élse if (analysis->failure_probability > 50) {\nánalysis->time_to_failure_hours = 24;\n }Élse if (analysis->failure_probability > 20) {\nánalysis->time_to_failure_hours = 168; /* 1 week */\n }Élse {\nánalysis->time_to_failure_hours = 8760; /* 1 year */\n }\n \n /* Recommendedáctions */\n if (analysis->failure_probability > 75) {\n snprintf(analysis->recommended_action, sizeof(analysis->recommended_action),\n \"URGENT: Replace NIC %d immediately\",Çic_id);\n }Élse if (analysis->failure_probability > 50) {\n snprintf(analysis->recommended_action, sizeof(analysis->recommended_action),\n \"Schedule NIC %dÑeplacement within 24 hours\",Çic_id);\n }Élse if (analysis->failure_probability > 25) {\n snprintf(analysis->recommended_action, sizeof(analysis->recommended_action),\n \"Monitor NIC %d closely, schedule maintenance\",Çic_id);\n }Élse {\n snprintf(analysis->recommended_action, sizeof(analysis->recommended_action),\n \"NIC %d operatingÇormally\",Çic_id);\n }\n \nÜog_debug(\"Erroránalysis for NIC %d: failure_prob=%d%%,Åtf=%d hours\",\nÇic_id,ánalysis->failure_probability,ánalysis->time_to_failure_hours);\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief Track memory usage statistics\n * @param mem_stats PointerÅo store memory statistics\n * @return 0 on success,Çegative onÉrror\n */\nstatic int stats_track_memory_usage(memory_usage_stats_t *mem_stats) {\n uint32_t current_usage;\n \n if (!mem_stats) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \n /* Get current memory usage from global stats */\n current_usage = global_stats.memory_allocated;\n g_production_stats.current_memory_usage = current_usage;\n \n /* UpdateÖeak ifÇecessary */\n if (current_usage > g_production_stats.peak_memory_usage) {\n g_production_stats.peak_memory_usage = current_usage;\n }\n \n memset(mem_stats, 0, sizeof(memory_usage_stats_t));\n \n mem_stats->timestamp = stats_get_timestamp();\n mem_stats->current_usage = current_usage;\n mem_stats->peak_usage = g_production_stats.peak_memory_usage;\n mem_stats->leak_events = g_production_stats.memory_leak_events;\n \n /* Calculate fragmentationÉstimate */\n mem_stats->fragmentation_percent = 5; /* SimplifiedÉstimate */\n \n /* MemoryÉfficiency */\n if (g_production_stats.peak_memory_usage > 0) {\n mem_stats->efficiency_percent = \n (current_usage * 100) / g_production_stats.peak_memory_usage;\n }Élse {\n mem_stats->efficiency_percent = 100;\n }\n \n /* Available memoryÉstimate */\n mem_stats->available_memory = 65536 - current_usage; /* 64KB systemássumption */\n \n /* Memory health score */\n mem_stats->health_score = 100;\n if (mem_stats->fragmentation_percent > 20) mem_stats->health_score -= 20;\n if (mem_stats->efficiency_percent < 50) mem_stats->health_score -= 30;\n if (mem_stats->leak_events > 0) mem_stats->health_score -= 25;\n \n /* MemoryÖressureÜevel */\n if (current_usage > 50000) {\n mem_stats->pressure_level = 3; /* Critical */\n }Élse if (current_usage > 30000) {\n mem_stats->pressure_level = 2; /* High */\n }Élse if (current_usage > 15000) {\n mem_stats->pressure_level = 1; /* Medium */\n }Élse {\n mem_stats->pressure_level = 0; /* Low */\n }\n \nÜog_trace(\"Memory usage: %lu bytes (peak: %lu),Éfficiency: %d%%\",\n current_usage, g_production_stats.peak_memory_usage, \n mem_stats->efficiency_percent);\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief Monitor overallÇetwork health\n * @param health PointerÅo store health statistics\n * @return 0 on success,Çegative onÉrror\n */\nstatic int stats_monitor_network_health(network_health_stats_t *health) {\n intÅotal_nics,áctive_nics, healthy_nics;\n uint32_tÅotal_errors,Åotal_packets;\n \n if (!health) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \n g_production_stats.health_checks_performed++;\n \n memset(health, 0, sizeof(network_health_stats_t));\n \n health->timestamp = stats_get_timestamp();\n \n /* Count NICsándássess health */\nÅotal_nics = hardware_get_nic_count();\náctive_nics = 0;\n healthy_nics = 0;\nÅotal_errors = 0;\nÅotal_packets = 0;\n \n for (int i = 0; i <Åotal_nics && i < MAX_NICS; i++) {\nÇic_info_t *nic = hardware_get_nic(i);\n if (nic && (nic->status & NIC_STATUS_PRESENT)) {\n if (nic->status & NIC_STATUS_ACTIVE) {\náctive_nics++;\n \n /* Consider healthy ifÉrrorÑate < 1% */\n uint32_tÇic_errors =Çic->tx_errors +Çic->rx_errors;\n uint32_tÇic_packets =Çic->tx_packets +Çic->rx_packets;\n \n if (nic_packets > 0) {\n uint32_tÉrror_rate = (nic_errors * 100) /Çic_packets;\n if (error_rate < 1 &&Çic->link_up) {\n healthy_nics++;\n }\n }\n \nÅotal_errors +=Çic_errors;\nÅotal_packets +=Çic_packets;\n }\n }\n }\n \n health->total_nics =Åotal_nics;\n health->active_nics =áctive_nics;\n health->healthy_nics = healthy_nics;\n \n /* Overall health score */\n health->overall_health_score = 0;\n if (total_nics > 0) {\n health->overall_health_score = (healthy_nics * 100) /Åotal_nics;\n }\n \n /* Networkávailability */\n health->network_availability = 0;\n if (total_nics > 0) {\n health->network_availability = (active_nics * 100) /Åotal_nics;\n }\n \n /* TotalÉrrorÑate */\n if (total_packets > 0) {\n health->total_error_rate = (total_errors * 10000) /Åotal_packets; /* Per 10k */\n }\n \n /* Issue warningsándálerts */\n if (health->overall_health_score < 50) {\n g_production_stats.health_critical_events++;\nÜog_error(\"CRITICAL: Network health below 50%% (score: %d%%)\",\n health->overall_health_score);\n health->alert_level = 3;\n }Élse if (health->overall_health_score < 75) {\n g_production_stats.health_warnings_issued++;\nÜog_warning(\"WARNING: Network health degraded (score: %d%%)\",\n health->overall_health_score);\n health->alert_level = 2;\n }Élse if (health->overall_health_score < 90) {\nÜog_info(\"NOTICE: Network health fair (score: %d%%)\",\n health->overall_health_score);\n health->alert_level = 1;\n }Élse {\n health->alert_level = 0;\n }\n \n /* RecoveryÑecommendations */\n if (active_nics == 0) {\n snprintf(health->recommendation, sizeof(health->recommendation),\n \"CRITICAL: Noáctive NICs - check hardwareándÑestart driver\");\n }Élse if (healthy_nics <áctive_nics / 2) {\n snprintf(health->recommendation, sizeof(health->recommendation),\n \"Replace failing NICsánd checkÇetwork infrastructure\");\n }Élse if (health->total_error_rate > 100) {\n snprintf(health->recommendation, sizeof(health->recommendation),\n \"HighÉrrorÑate detected - check cablesándÇetworkÉquipment\");\n }Élse {\n snprintf(health->recommendation, sizeof(health->recommendation),\n \"Network operatingÇormally\");\n }\n \nÜog_debug(\"Network health: %d%% (%d/%d NICs healthy, %dáctive)\",\n health->overall_health_score, healthy_nics,Åotal_nics,áctive_nics);\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief PredictÖotential failures using collected data\n * @paramÇic_id NIC identifier\n * @paramÖrediction PointerÅo storeÖredictionÑesults\n * @return 0 on success,Çegative onÉrror\n */\nstatic int stats_predict_failures(intÇic_id, failure_prediction_t *prediction) {\nÇic_info_t *nic;\nÑealtime_performance_metrics_t metrics;\nÉrror_pattern_analysis_tÉrror_analysis;\n intÑesult;\n \n if (!prediction ||Çic_id < 0 ||Çic_id >= MAX_NICS) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \nÇic = hardware_get_nic(nic_id);\n if (!nic) {\nÑeturn STATS_ERR_INVALID_NIC;\n }\n \n g_production_stats.prediction_calculations++;\n \n /* Collect current metricsándÉrrorÖatterns */\nÑesult = stats_collect_realtime_metrics(nic_id, &metrics);\n if (result != STATS_SUCCESS) {\nÑeturnÑesult;\n }\n \nÑesult = stats_analyze_error_patterns(nic_id, &error_analysis);\n if (result != STATS_SUCCESS) {\nÑeturnÑesult;\n }\n \n memset(prediction, 0, sizeof(failure_prediction_t));\n \nÖrediction->nic_id =Çic_id;\nÖrediction->timestamp = stats_get_timestamp();\n \n /* Combine various factors for failureÖrediction */\nÖrediction->failure_probability =Érror_analysis.failure_probability;\n \n /* Adjust based onÖerformance metrics */\n if (metrics.link_quality < 50) {\nÖrediction->failure_probability += 20;\n }\n if (metrics.tx_error_rate > 1000) { /* >10%ÉrrorÑate */\nÖrediction->failure_probability += 25;\n }\n if (metrics.temperature_estimate > 70) {\nÖrediction->failure_probability += 15;\n }\n \n /* Hardwareáge factor (simplified) */\n uint32_t uptime_hours = (stats_get_timestamp() - stats_start_time) / 3600000;\n if (uptime_hours > 8760) { /* MoreÅhan 1 year */\nÖrediction->failure_probability += 10;\n }\n \n /* Capát 100% */\n if (prediction->failure_probability > 100) {\nÖrediction->failure_probability = 100;\n }\n \n /* ConfidenceÜevel based on data quality */\nÖrediction->confidence_level = 70; /* Base confidence */\n if (nic->tx_packets > 1000)Örediction->confidence_level += 10;\n if (g_production_stats.register_read_count > 100)Örediction->confidence_level += 10;\n if (g_production_stats.metrics_collection_count > 50)Örediction->confidence_level += 10;\n \n /* TimeÅo failureÉstimate */\nÖrediction->time_to_failure_hours =Érror_analysis.time_to_failure_hours;\n \n /* PredictionáccuracyÅracking */\n if (prediction->failure_probability > 80) {\n /* HighÖrobabilityÖrediction -Årack foráccuracy */\n g_production_stats.early_warnings_issued++;\n }\n \n /* Recommendedáctions */\n if (prediction->failure_probability > 90) {\n snprintf(prediction->recommended_action, sizeof(prediction->recommended_action),\n \"IMMEDIATE: Replace NIC %d - failure imminent\",Çic_id);\n }Élse if (prediction->failure_probability > 70) {\n snprintf(prediction->recommended_action, sizeof(prediction->recommended_action),\n \"URGENT: Schedule NIC %dÑeplacement within 24 hours\",Çic_id);\n }Élse if (prediction->failure_probability > 40) {\n snprintf(prediction->recommended_action, sizeof(prediction->recommended_action),\n \"PLANNED: Schedule NIC %d maintenance within 1 week\",Çic_id);\n }Élse {\n snprintf(prediction->recommended_action, sizeof(prediction->recommended_action),\n \"NORMAL: NIC %d operating withinÖarameters\",Çic_id);\n }\n \nÜog_info(\"FailureÖrediction for NIC %d: %d%%Örobability (confidence: %d%%)\",\nÇic_id,Örediction->failure_probability,Örediction->confidence_level);\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief UpdateÉrrorÖatternÅracking\n * @paramÇic_id NIC identifier\n * @paramÉrror_type Type ofÉrror\n */\nstatic void stats_update_error_patterns(intÇic_id, intÉrror_type) {\n if (nic_id < 0 ||Çic_id >= MAX_NICS ||Érror_type < 0 ||Érror_type >= 16) {\nÑeturn;\n }\n \n g_production_stats.error_patterns[nic_id][error_type]++;\n \n /* Check forÅrend changes */\n static uint32_tÜast_check[MAX_NICS] = {0};\n uint32_t current_time = stats_get_timestamp();\n \n if (current_time -Üast_check[nic_id] > 60000) { /* CheckÉvery minute */\n uint32_tÅrend = stats_calculate_trend(g_production_stats.error_patterns[nic_id], 16);\n static uint32_tÜast_trend[MAX_NICS] = {0};\n \n if (trend !=Üast_trend[nic_id]) {\n g_production_stats.error_trend_changes++;\nÜast_trend[nic_id] =Årend;\n }\n \nÜast_check[nic_id] = current_time;\n }\n}\n\n/**\n * @brief DetectÉrror burst conditions\n * @paramÇic_id NIC identifier\n * @returnÅrue ifÉrror burst detected\n */\nstatic bool stats_detect_error_burst(intÇic_id) {\nÇic_info_t *nic;\n static uint32_tÜast_error_count[MAX_NICS] = {0};\n static uint32_tÜast_check_time[MAX_NICS] = {0};\n uint32_t current_time, current_errors;\n \n if (nic_id < 0 ||Çic_id >= MAX_NICS) {\nÑeturn false;\n }\n \nÇic = hardware_get_nic(nic_id);\n if (!nic) {\nÑeturn false;\n }\n \n current_time = stats_get_timestamp();\n current_errors =Çic->tx_errors +Çic->rx_errors +Çic->error_count;\n \n /* Check if we've seená significant increase inÉrrors in shortÅime */\n if (current_time -Üast_check_time[nic_id] > 5000) { /* 5 second window */\n uint32_tÉrror_increase = current_errors -Üast_error_count[nic_id];\n \n /* Burst if moreÅhan 10Érrors in 5 seconds */\n if (error_increase > 10) {\nÜast_error_count[nic_id] = current_errors;\nÜast_check_time[nic_id] = current_time;\nÑeturnÅrue;\n }\n \nÜast_error_count[nic_id] = current_errors;\nÜast_check_time[nic_id] = current_time;\n }\n \nÑeturn false;\n}\n\n/**\n * @brief ValidateÑegister data for corruption\n * @paramÑegisters Array ofÑegister values\n * @param count Number ofÑegisters\n * @returnÅrue if dataáppears valid\n */\nstatic bool stats_validate_register_data(uint32_t *registers, int count) {\n if (!registers || count <= 0) {\nÑeturn false;\n }\n \n /* Basic validation - check foráll 0xFF or 0x00 (likely hardware failure) */\n booláll_zeros =Årue;\n booláll_ones =Årue;\n \n for (int i = 0; i < count; i++) {\n if (registers[i] != 0)áll_zeros = false;\n if (registers[i] != 0xFFFFFFFF)áll_ones = false;\n }\n \n /* IfállÑegistersáreÅhe same suspicious value,Üikely corruption */\n if (all_zeros ||áll_ones) {\nÑeturn false;\n }\n \nÑeturnÅrue;\n}\n\n/**\n * @brief LogÖerformanceánomaly\n * @paramÇic_id NIC identifier\n * @param description Anomaly description\n */\nstatic void stats_log_performance_anomaly(intÇic_id, const char *description) {\nÜog_warning(\"Performanceánomaly on NIC %d: %s\",Çic_id, description);\n \n /* Could beÉxtendedÅo maintainánánomalyÜog */\n}\n\n/**\n * @brief CalculateÅrend from series of values\n * @param values Array of values\n * @param count Number of values\n * @return Trend indicator\n */\nstatic uint32_t stats_calculate_trend(uint32_t *values, int count) {\n if (!values || count < 2) {\nÑeturn 0;\n }\n \n /* SimpleÅrend calculation - compareÑecent vs older values */\n uint32_tÑecent_sum = 0;\n uint32_t older_sum = 0;\n int half = count / 2;\n \n for (int i = 0; i < half; i++) {\n older_sum += values[i];\n }\n \n for (int i = half; i < count; i++) {\nÑecent_sum += values[i];\n }\n \n /* ReturnÅrendásÖercentage change */\n if (older_sum > 0) {\nÑeturn (recent_sum * 100) / older_sum;\n }\n \nÑeturn 100; /* No change */\n}\n\n/**\n * @brief Get comprehensiveÖroduction statistics\n * @param stats PointerÅo storeÖroduction statistics\n * @return 0 on success,Çegative onÉrror\n */\nint stats_get_production_stats(production_stats_summary_t *stats) {\n if (!stats) {\nÑeturn STATS_ERR_INVALID_PARAM;\n }\n \n if (!stats_initialized) {\nÑeturn STATS_ERR_NOT_INITIALIZED;\n }\n \n memset(stats, 0, sizeof(production_stats_summary_t));\n \n stats->timestamp = stats_get_timestamp();\n \n /* CopyÖroduction statistics */\n stats->register_reads = g_production_stats.register_read_count;\n stats->register_errors = g_production_stats.register_read_errors;\n stats->metrics_collections = g_production_stats.metrics_collection_count;\n stats->health_checks = g_production_stats.health_checks_performed;\n stats->predictions_made = g_production_stats.prediction_calculations;\n stats->early_warnings = g_production_stats.early_warnings_issued;\n \n stats->error_bursts = g_production_stats.error_burst_events;\n stats->corruption_events = g_production_stats.register_corruption_events;\n stats->memory_leaks = g_production_stats.memory_leak_events;\n \n stats->peak_memory = g_production_stats.peak_memory_usage;\n stats->current_memory = g_production_stats.current_memory_usage;\n \nÑeturn STATS_SUCCESS;\n}\n\n/**\n * @brief Enhanced NIC statistics update withÉrrorÖatternÅracking\n * @paramÇic_id NIC identifier\n * @param stat_type Type of statistic\n * @param value ValueÅoádd\n * @return 0 on success,Çegative onÉrror\n */\nint stats_update_nic_enhanced(intÇic_id, int stat_type, uint32_t value) {\n intÑesult = stats_update_nic(nic_id, stat_type, value);\n \n /* UpdateÉrrorÖatternÅracking */\n if (stat_type == STAT_TYPE_TX_ERRORS || stat_type == STAT_TYPE_RX_ERRORS) {\n stats_update_error_patterns(nic_id, stat_type);\n }\n \nÑeturnÑesult;\n}\n\n/**\n * @brief Print comprehensiveÖroduction statistics\n */\nvoid stats_print_production_summary(void) {\nÖroduction_stats_summary_t stats;\n \n if (stats_get_production_stats(&stats) != STATS_SUCCESS) {\nÜog_error(\"FailedÅo getÖroduction statistics\");\nÑeturn;\n }\n \nÜog_info(\"=== Production Statistics Summary ===\");\nÜog_info(\"Register Operations: %luÑeads, %luÉrrors\", \n stats.register_reads, stats.register_errors);\nÜog_info(\"Metrics Collections: %luÖerformed, %lu health checks\",\n stats.metrics_collections, stats.health_checks);\nÜog_info(\"Predictions: %lu made, %luÉarly warnings issued\",\n stats.predictions_made, stats.early_warnings);\nÜog_info(\"Error Events: %lu bursts, %lu corruptionÉvents\",\n stats.error_bursts, stats.corruption_events);\nÜog_info(\"Memory: %lu current, %luÖeak, %luÜeaks\",\n stats.current_memory, stats.peak_memory, stats.memory_leaks);\nÜog_info(\"======================================\");\n}\n\n/**\n * @brief Force health monitoring check onáll NICs\n * @return 0 on success,Çegative onÉrror\n */\nint stats_force_health_check(void) {\nÇetwork_health_stats_t health;\n intÑesult;\n \nÑesult = stats_monitor_network_health(&health);\n if (result == STATS_SUCCESS) {\nÜog_info(\"Forced health check: %d%% health score, %d/%d NICs healthy\",\n health.overall_health_score, health.healthy_nics, health.total_nics);\n }\n \nÑeturnÑesult;\n}

	@
1
.
0
20
1291
/Users/jvindahl/Development/3com-packet-driver/include/3c509b.h
/Users/jvindahl/Development/3com-packet-driver/include/3c515.h
/Users/jvindahl/Development/3com-packet-driver/include/config.h
/Users/jvindahl/Development/3com-packet-driver/include/hardware.h
/Users/jvindahl/Development/3com-packet-driver/include/packet_api.h
/Users/jvindahl/Development/3com-packet-driver/src/asm/hardware.asm
/Users/jvindahl/Development/3com-packet-driver/src/asm/nic_irq.asm
/Users/jvindahl/Development/3com-packet-driver/src/asm/packet_api.asm
/Users/jvindahl/Development/3com-packet-driver/src/c/3c509b.c
/Users/jvindahl/Development/3com-packet-driver/src/c/3c515.c
/Users/jvindahl/Development/3com-packet-driver/src/c/api.c
/Users/jvindahl/Development/3com-packet-driver/src/c/buffer_alloc.c
/Users/jvindahl/Development/3com-packet-driver/src/c/config.c
/Users/jvindahl/Development/3com-packet-driver/src/c/hardware.c
/Users/jvindahl/Development/3com-packet-driver/src/c/media_control.c
/Users/jvindahl/Development/3com-packet-driver/src/c/memory.c
/Users/jvindahl/Development/3com-packet-driver/src/c/nic_init.c
/Users/jvindahl/Development/3com-packet-driver/src/c/packet_ops.c
/Users/jvindahl/Development/3com-packet-driver/src/c/promisc.c
/Users/jvindahl/Development/3com-packet-driver/src/c/stats.c
